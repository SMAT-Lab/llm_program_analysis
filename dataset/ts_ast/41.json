{
  "type": "SourceFile",
  "label": "import photoAccessHelper from '@ohos.file.photoAccessHelper';\nimport { Log } from '../utils/Log';\nimport { Constants } from '../constants/Constants';\nimport { userFileModel } from '../base/UserFileModel';\nimport { screenManager } from './ScreenManager';\nimport { MediaConstants } from '../constants/MediaConstants';\nimport { UserFileDataItem } from '../base/UserFileDataItem';\nimport { FavorUserFileDataItem } from '../base/FavorUserFileDataItem';\nimport { userFileDataItemCache } from '../base/UserFileDataItemCache';\nimport { trashUserFileDataItemCache } from '../base/TrashUserFileDataItemCache';\nimport { TrashUserFileDataItem } from '../base/TrashUserFileDataItem';\nimport dataSharePredicates from '@ohos.data.dataSharePredicates';\n\n\nconst TAG = 'GroupDataImpl';\n\nexport class GroupDataImpl {\n  private selectType: number = MediaConstants.SELECT_TYPE_ALL;\n  private albumId: string = '';\n  private deviceId: string = '';\n  private albumType: number = -1;\n  private albumSubType: number = -1;\n  private albumName: string = '';\n\n  setSelectType(selectType: number): void {\n    this.selectType = selectType;\n  }\n\n  setAlbumId(id: string): void {\n    Log.info(TAG, 'setAlbumId: ' + id);\n    this.albumId = id;\n  }\n\n  setDeviceId(id: string): void {\n    Log.info(TAG, 'setDeviceId: ' + id);\n    this.deviceId = id;\n  }\n\n  setAlbumType(albumType: number): void {\n    Log.info(TAG, 'setAlbumType: ' + albumType);\n    this.albumType = albumType;\n  }\n\n  setAlbumSubtype(albumSubType: number): void {\n    Log.info(TAG, 'setAlbumSubtype: ' + albumSubType);\n    this.albumSubType = albumSubType;\n  }\n\n  setAlbumName(name: string): void {\n    Log.info(TAG, 'setAlbumName: ' + name);\n    this.albumName = name;\n  }\n\n  async reloadGroupItemData(isGrid: boolean): Promise<UserFileDataItem[]> {\n    if (isGrid) {\n      return this.reloadGridGroupItemData();\n    } else {\n      return this.reloadBrowserGroupItemData();\n    }\n  }\n\n  async reloadBrowserGroupItemData(): Promise<UserFileDataItem[]> {\n    Log.info(TAG, 'reloadBrowserGroupItemData');\n    let groupDataItem: UserFileDataItem[] = [];\n    let mediaFileAssets = await this.getMediaItemFileAssets(this.albumName, this.albumType, this.albumSubType);\n    if (this.albumId === MediaConstants.ALBUM_ID_FAVOR) {\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let favorMediaItem = new FavorUserFileDataItem('', [], i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          favorMediaItem.favouriteStatus = userFileDataItemCache.get(mediaFileAssets[i].uri).favouriteStatus;\n          favorMediaItem.orientation = userFileDataItemCache.get(mediaFileAssets[i].uri).orientation;\n        }\n        favorMediaItem.update(mediaFileAssets[i]);\n        groupDataItem.push(favorMediaItem);\n      }\n    } else if (this.albumId === MediaConstants.ALBUM_ID_RECYCLE) {\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let trashMediaItem = new TrashUserFileDataItem('', [], i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          trashMediaItem.favouriteStatus = userFileDataItemCache.get(mediaFileAssets[i].uri).favouriteStatus;\n          trashMediaItem.orientation = userFileDataItemCache.get(mediaFileAssets[i].uri).orientation;\n        }\n        trashMediaItem.update(mediaFileAssets[i]);\n        groupDataItem.push(trashMediaItem);\n      }\n    } else {\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let mediaItem: UserFileDataItem = new UserFileDataItem('', [], this.deviceId, i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          mediaItem = userFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          userFileDataItemCache.set(mediaFileAssets[i].uri, mediaItem);\n        }\n        mediaItem.update(mediaFileAssets[i]);\n        groupDataItem.push(mediaItem);\n      }\n    }\n    Log.info(TAG, 'reload finish');\n    return groupDataItem;\n  }\n\n  async reloadGridGroupItemData(): Promise<UserFileDataItem[]> {\n    Log.info(TAG, 'reloadGridGroupItemData');\n    let groupDataItem: UserFileDataItem[] = [];\n    let mediaFileAssets = await this.getMediaItemFileAssets(this.albumName, this.albumType, this.albumSubType);\n    if (this.albumId === MediaConstants.ALBUM_ID_FAVOR) {\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let item = new FavorUserFileDataItem('', [], i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          Log.info(TAG, 'hasKey');\n          item = userFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          userFileDataItemCache.set(mediaFileAssets[i].uri, item);\n        }\n        item.update(mediaFileAssets[i]);\n        groupDataItem.push(item);\n      }\n    } else if (this.albumId === MediaConstants.ALBUM_ID_RECYCLE) {\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let item = new TrashUserFileDataItem('', [], i);\n        if (trashUserFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          item = trashUserFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          trashUserFileDataItemCache.set(mediaFileAssets[i].uri, item);\n        }\n        item.update(mediaFileAssets[i]);\n        groupDataItem.push(item);\n      }\n    } else {\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let item = new UserFileDataItem('', [], this.deviceId, i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          item = userFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          userFileDataItemCache.set(mediaFileAssets[i].uri, item);\n        }\n        item.update(mediaFileAssets[i]);\n        groupDataItem.push(item);\n      }\n    }\n    Log.info(TAG, 'reload finish');\n    return groupDataItem;\n  }\n\n  private async getMediaItemFileAssets(albumName: string, albumType: number, albumSubType: number): Promise<photoAccessHelper.PhotoAsset[]> {\n    let predicates = new dataSharePredicates.DataSharePredicates();\n    predicates.equalTo(photoAccessHelper.AlbumKeys.ALBUM_NAME, albumName)\n    let fetchOption = {\n      fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n      predicates: predicates\n    };\n    Log.info(TAG, 'albumName:' + albumName);\n    if (albumType === MediaConstants.ALBUM_TYPE_ALL) {\n      return await userFileModel.getAllMediaItems();\n    } else if (albumType === MediaConstants.ABSTRACT_ALBUM_TYPE_MOVING_PHOTO) {\n      return await userFileModel.getAllMovingPhotoItems();\n    }\n    let emptyPredicates = new dataSharePredicates.DataSharePredicates();\n    emptyPredicates.orderByDesc(photoAccessHelper.PhotoKeys.DATE_ADDED);\n    let emptyFetchOption = {\n      fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n      predicates: emptyPredicates\n    };\n    return await userFileModel.getAllMediaItemsByType(albumType, albumSubType, fetchOption, emptyFetchOption);\n  }\n\n  private getCount(): number {\n    let contentWidth = screenManager.getWinWidth();\n    let maxThumbWidth = px2vp(Constants.GRID_IMAGE_SIZE) * Constants.GRID_MAX_SIZE_RATIO;\n    let columns = Math.max(Constants.GRID_MIN_COUNT, Math.ceil((contentWidth + Constants.GRID_GUTTER) / (maxThumbWidth + Constants.GRID_GUTTER)));\n    let contentHeight = screenManager.getWinHeight() - Constants.ACTION_BAR_HEIGHT - screenManager.getNaviBarHeight();\n    let rows = Math.ceil((contentHeight + Constants.GRID_GUTTER) / (maxThumbWidth + Constants.GRID_GUTTER)) + 4;\n    return columns * rows;\n  }\n}\n",
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import photoAccessHelper from '@ohos.file.photoAccessHelper';",
      "children": [
        {
          "type": "ImportClause",
          "label": "photoAccessHelper",
          "children": [
            {
              "type": "Identifier",
              "label": "photoAccessHelper",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.file.photoAccessHelper'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { Log } from '../utils/Log';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ Log }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ Log }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "Log",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Log",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../utils/Log'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { Constants } from '../constants/Constants';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ Constants }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ Constants }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "Constants",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Constants",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../constants/Constants'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { userFileModel } from '../base/UserFileModel';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ userFileModel }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ userFileModel }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "userFileModel",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "userFileModel",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../base/UserFileModel'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { screenManager } from './ScreenManager';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ screenManager }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ screenManager }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "screenManager",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "screenManager",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./ScreenManager'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { MediaConstants } from '../constants/MediaConstants';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ MediaConstants }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ MediaConstants }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "MediaConstants",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "MediaConstants",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../constants/MediaConstants'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { UserFileDataItem } from '../base/UserFileDataItem';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ UserFileDataItem }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ UserFileDataItem }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "UserFileDataItem",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "UserFileDataItem",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../base/UserFileDataItem'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { FavorUserFileDataItem } from '../base/FavorUserFileDataItem';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ FavorUserFileDataItem }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ FavorUserFileDataItem }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "FavorUserFileDataItem",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "FavorUserFileDataItem",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../base/FavorUserFileDataItem'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { userFileDataItemCache } from '../base/UserFileDataItemCache';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ userFileDataItemCache }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ userFileDataItemCache }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "userFileDataItemCache",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "userFileDataItemCache",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../base/UserFileDataItemCache'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { trashUserFileDataItemCache } from '../base/TrashUserFileDataItemCache';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ trashUserFileDataItemCache }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ trashUserFileDataItemCache }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "trashUserFileDataItemCache",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "trashUserFileDataItemCache",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../base/TrashUserFileDataItemCache'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { TrashUserFileDataItem } from '../base/TrashUserFileDataItem';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ TrashUserFileDataItem }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ TrashUserFileDataItem }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "TrashUserFileDataItem",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "TrashUserFileDataItem",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../base/TrashUserFileDataItem'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import dataSharePredicates from '@ohos.data.dataSharePredicates';",
      "children": [
        {
          "type": "ImportClause",
          "label": "dataSharePredicates",
          "children": [
            {
              "type": "Identifier",
              "label": "dataSharePredicates",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.data.dataSharePredicates'",
          "children": []
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "const TAG = 'GroupDataImpl';",
      "children": [
        {
          "type": "VariableDeclarationList",
          "label": "const TAG = 'GroupDataImpl'",
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "TAG = 'GroupDataImpl'",
              "children": [
                {
                  "type": "Identifier",
                  "label": "TAG",
                  "children": []
                },
                {
                  "type": "StringLiteral",
                  "label": "'GroupDataImpl'",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export class GroupDataImpl {\n  private selectType: number = MediaConstants.SELECT_TYPE_ALL;\n  private albumId: string = '';\n  private deviceId: string = '';\n  private albumType: number = -1;\n  private albumSubType: number = -1;\n  private albumName: string = '';\n\n  setSelectType(selectType: number): void {\n    this.selectType = selectType;\n  }\n\n  setAlbumId(id: string): void {\n    Log.info(TAG, 'setAlbumId: ' + id);\n    this.albumId = id;\n  }\n\n  setDeviceId(id: string): void {\n    Log.info(TAG, 'setDeviceId: ' + id);\n    this.deviceId = id;\n  }\n\n  setAlbumType(albumType: number): void {\n    Log.info(TAG, 'setAlbumType: ' + albumType);\n    this.albumType = albumType;\n  }\n\n  setAlbumSubtype(albumSubType: number): void {\n    Log.info(TAG, 'setAlbumSubtype: ' + albumSubType);\n    this.albumSubType = albumSubType;\n  }\n\n  setAlbumName(name: string): void {\n    Log.info(TAG, 'setAlbumName: ' + name);\n    this.albumName = name;\n  }\n\n  async reloadGroupItemData(isGrid: boolean): Promise<UserFileDataItem[]> {\n    if (isGrid) {\n      return this.reloadGridGroupItemData();\n    } else {\n      return this.reloadBrowserGroupItemData();\n    }\n  }\n\n  async reloadBrowserGroupItemData(): Promise<UserFileDataItem[]> {\n    Log.info(TAG, 'reloadBrowserGroupItemData');\n    let groupDataItem: UserFileDataItem[] = [];\n    let mediaFileAssets = await this.getMediaItemFileAssets(this.albumName, this.albumType, this.albumSubType);\n    if (this.albumId === MediaConstants.ALBUM_ID_FAVOR) {\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let favorMediaItem = new FavorUserFileDataItem('', [], i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          favorMediaItem.favouriteStatus = userFileDataItemCache.get(mediaFileAssets[i].uri).favouriteStatus;\n          favorMediaItem.orientation = userFileDataItemCache.get(mediaFileAssets[i].uri).orientation;\n        }\n        favorMediaItem.update(mediaFileAssets[i]);\n        groupDataItem.push(favorMediaItem);\n      }\n    } else if (this.albumId === MediaConstants.ALBUM_ID_RECYCLE) {\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let trashMediaItem = new TrashUserFileDataItem('', [], i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          trashMediaItem.favouriteStatus = userFileDataItemCache.get(mediaFileAssets[i].uri).favouriteStatus;\n          trashMediaItem.orientation = userFileDataItemCache.get(mediaFileAssets[i].uri).orientation;\n        }\n        trashMediaItem.update(mediaFileAssets[i]);\n        groupDataItem.push(trashMediaItem);\n      }\n    } else {\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let mediaItem: UserFileDataItem = new UserFileDataItem('', [], this.deviceId, i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          mediaItem = userFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          userFileDataItemCache.set(mediaFileAssets[i].uri, mediaItem);\n        }\n        mediaItem.update(mediaFileAssets[i]);\n        groupDataItem.push(mediaItem);\n      }\n    }\n    Log.info(TAG, 'reload finish');\n    return groupDataItem;\n  }\n\n  async reloadGridGroupItemData(): Promise<UserFileDataItem[]> {\n    Log.info(TAG, 'reloadGridGroupItemData');\n    let groupDataItem: UserFileDataItem[] = [];\n    let mediaFileAssets = await this.getMediaItemFileAssets(this.albumName, this.albumType, this.albumSubType);\n    if (this.albumId === MediaConstants.ALBUM_ID_FAVOR) {\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let item = new FavorUserFileDataItem('', [], i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          Log.info(TAG, 'hasKey');\n          item = userFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          userFileDataItemCache.set(mediaFileAssets[i].uri, item);\n        }\n        item.update(mediaFileAssets[i]);\n        groupDataItem.push(item);\n      }\n    } else if (this.albumId === MediaConstants.ALBUM_ID_RECYCLE) {\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let item = new TrashUserFileDataItem('', [], i);\n        if (trashUserFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          item = trashUserFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          trashUserFileDataItemCache.set(mediaFileAssets[i].uri, item);\n        }\n        item.update(mediaFileAssets[i]);\n        groupDataItem.push(item);\n      }\n    } else {\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let item = new UserFileDataItem('', [], this.deviceId, i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          item = userFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          userFileDataItemCache.set(mediaFileAssets[i].uri, item);\n        }\n        item.update(mediaFileAssets[i]);\n        groupDataItem.push(item);\n      }\n    }\n    Log.info(TAG, 'reload finish');\n    return groupDataItem;\n  }\n\n  private async getMediaItemFileAssets(albumName: string, albumType: number, albumSubType: number): Promise<photoAccessHelper.PhotoAsset[]> {\n    let predicates = new dataSharePredicates.DataSharePredicates();\n    predicates.equalTo(photoAccessHelper.AlbumKeys.ALBUM_NAME, albumName)\n    let fetchOption = {\n      fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n      predicates: predicates\n    };\n    Log.info(TAG, 'albumName:' + albumName);\n    if (albumType === MediaConstants.ALBUM_TYPE_ALL) {\n      return await userFileModel.getAllMediaItems();\n    } else if (albumType === MediaConstants.ABSTRACT_ALBUM_TYPE_MOVING_PHOTO) {\n      return await userFileModel.getAllMovingPhotoItems();\n    }\n    let emptyPredicates = new dataSharePredicates.DataSharePredicates();\n    emptyPredicates.orderByDesc(photoAccessHelper.PhotoKeys.DATE_ADDED);\n    let emptyFetchOption = {\n      fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n      predicates: emptyPredicates\n    };\n    return await userFileModel.getAllMediaItemsByType(albumType, albumSubType, fetchOption, emptyFetchOption);\n  }\n\n  private getCount(): number {\n    let contentWidth = screenManager.getWinWidth();\n    let maxThumbWidth = px2vp(Constants.GRID_IMAGE_SIZE) * Constants.GRID_MAX_SIZE_RATIO;\n    let columns = Math.max(Constants.GRID_MIN_COUNT, Math.ceil((contentWidth + Constants.GRID_GUTTER) / (maxThumbWidth + Constants.GRID_GUTTER)));\n    let contentHeight = screenManager.getWinHeight() - Constants.ACTION_BAR_HEIGHT - screenManager.getNaviBarHeight();\n    let rows = Math.ceil((contentHeight + Constants.GRID_GUTTER) / (maxThumbWidth + Constants.GRID_GUTTER)) + 4;\n    return columns * rows;\n  }\n}",
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "children": []
        },
        {
          "type": "Identifier",
          "label": "GroupDataImpl",
          "children": []
        },
        {
          "type": "PropertyDeclaration",
          "label": "private selectType: number = MediaConstants.SELECT_TYPE_ALL;",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "selectType",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            },
            {
              "type": "PropertyAccessExpression",
              "label": "MediaConstants.SELECT_TYPE_ALL",
              "children": [
                {
                  "type": "Identifier",
                  "label": "MediaConstants",
                  "children": []
                },
                {
                  "type": "Identifier",
                  "label": "SELECT_TYPE_ALL",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private albumId: string = '';",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "albumId",
              "children": []
            },
            {
              "type": "StringKeyword",
              "label": "string",
              "children": []
            },
            {
              "type": "StringLiteral",
              "label": "''",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private deviceId: string = '';",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "deviceId",
              "children": []
            },
            {
              "type": "StringKeyword",
              "label": "string",
              "children": []
            },
            {
              "type": "StringLiteral",
              "label": "''",
              "children": []
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private albumType: number = -1;",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "albumType",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            },
            {
              "type": "PrefixUnaryExpression",
              "label": "-1",
              "children": [
                {
                  "type": "FirstLiteralToken",
                  "label": "1",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private albumSubType: number = -1;",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "albumSubType",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            },
            {
              "type": "PrefixUnaryExpression",
              "label": "-1",
              "children": [
                {
                  "type": "FirstLiteralToken",
                  "label": "1",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "private albumName: string = '';",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "albumName",
              "children": []
            },
            {
              "type": "StringKeyword",
              "label": "string",
              "children": []
            },
            {
              "type": "StringLiteral",
              "label": "''",
              "children": []
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "setSelectType(selectType: number): void {\n    this.selectType = selectType;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "setSelectType",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "selectType: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "selectType",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    this.selectType = selectType;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.selectType = selectType;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.selectType = selectType",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.selectType",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "selectType",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "selectType",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "setAlbumId(id: string): void {\n    Log.info(TAG, 'setAlbumId: ' + id);\n    this.albumId = id;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "setAlbumId",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "id: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "id",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'setAlbumId: ' + id);\n    this.albumId = id;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'setAlbumId: ' + id);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'setAlbumId: ' + id)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'setAlbumId: ' + id",
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'setAlbumId: '",
                              "children": []
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "id",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.albumId = id;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.albumId = id",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.albumId",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "albumId",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "id",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "setDeviceId(id: string): void {\n    Log.info(TAG, 'setDeviceId: ' + id);\n    this.deviceId = id;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "setDeviceId",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "id: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "id",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'setDeviceId: ' + id);\n    this.deviceId = id;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'setDeviceId: ' + id);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'setDeviceId: ' + id)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'setDeviceId: ' + id",
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'setDeviceId: '",
                              "children": []
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "id",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.deviceId = id;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.deviceId = id",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.deviceId",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "deviceId",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "id",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "setAlbumType(albumType: number): void {\n    Log.info(TAG, 'setAlbumType: ' + albumType);\n    this.albumType = albumType;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "setAlbumType",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "albumType: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "albumType",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'setAlbumType: ' + albumType);\n    this.albumType = albumType;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'setAlbumType: ' + albumType);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'setAlbumType: ' + albumType)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'setAlbumType: ' + albumType",
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'setAlbumType: '",
                              "children": []
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "albumType",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.albumType = albumType;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.albumType = albumType",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.albumType",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "albumType",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "albumType",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "setAlbumSubtype(albumSubType: number): void {\n    Log.info(TAG, 'setAlbumSubtype: ' + albumSubType);\n    this.albumSubType = albumSubType;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "setAlbumSubtype",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "albumSubType: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "albumSubType",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'setAlbumSubtype: ' + albumSubType);\n    this.albumSubType = albumSubType;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'setAlbumSubtype: ' + albumSubType);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'setAlbumSubtype: ' + albumSubType)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'setAlbumSubtype: ' + albumSubType",
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'setAlbumSubtype: '",
                              "children": []
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "albumSubType",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.albumSubType = albumSubType;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.albumSubType = albumSubType",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.albumSubType",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "albumSubType",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "albumSubType",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "setAlbumName(name: string): void {\n    Log.info(TAG, 'setAlbumName: ' + name);\n    this.albumName = name;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "setAlbumName",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "name: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "name",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'setAlbumName: ' + name);\n    this.albumName = name;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'setAlbumName: ' + name);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'setAlbumName: ' + name)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'setAlbumName: ' + name",
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'setAlbumName: '",
                              "children": []
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "name",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.albumName = name;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.albumName = name",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.albumName",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "albumName",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "name",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async reloadGroupItemData(isGrid: boolean): Promise<UserFileDataItem[]> {\n    if (isGrid) {\n      return this.reloadGridGroupItemData();\n    } else {\n      return this.reloadBrowserGroupItemData();\n    }\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "reloadGroupItemData",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "isGrid: boolean",
              "children": [
                {
                  "type": "Identifier",
                  "label": "isGrid",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<UserFileDataItem[]>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "ArrayType",
                  "label": "UserFileDataItem[]",
                  "children": [
                    {
                      "type": "TypeReference",
                      "label": "UserFileDataItem",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "UserFileDataItem",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    if (isGrid) {\n      return this.reloadGridGroupItemData();\n    } else {\n      return this.reloadBrowserGroupItemData();\n    }\n  }",
              "children": [
                {
                  "type": "IfStatement",
                  "label": "if (isGrid) {\n      return this.reloadGridGroupItemData();\n    } else {\n      return this.reloadBrowserGroupItemData();\n    }",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "isGrid",
                      "children": []
                    },
                    {
                      "type": "Block",
                      "label": "{\n      return this.reloadGridGroupItemData();\n    }",
                      "children": [
                        {
                          "type": "ReturnStatement",
                          "label": "return this.reloadGridGroupItemData();",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.reloadGridGroupItemData()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.reloadGridGroupItemData",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "reloadGridGroupItemData",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      return this.reloadBrowserGroupItemData();\n    }",
                      "children": [
                        {
                          "type": "ReturnStatement",
                          "label": "return this.reloadBrowserGroupItemData();",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.reloadBrowserGroupItemData()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.reloadBrowserGroupItemData",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "reloadBrowserGroupItemData",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async reloadBrowserGroupItemData(): Promise<UserFileDataItem[]> {\n    Log.info(TAG, 'reloadBrowserGroupItemData');\n    let groupDataItem: UserFileDataItem[] = [];\n    let mediaFileAssets = await this.getMediaItemFileAssets(this.albumName, this.albumType, this.albumSubType);\n    if (this.albumId === MediaConstants.ALBUM_ID_FAVOR) {\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let favorMediaItem = new FavorUserFileDataItem('', [], i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          favorMediaItem.favouriteStatus = userFileDataItemCache.get(mediaFileAssets[i].uri).favouriteStatus;\n          favorMediaItem.orientation = userFileDataItemCache.get(mediaFileAssets[i].uri).orientation;\n        }\n        favorMediaItem.update(mediaFileAssets[i]);\n        groupDataItem.push(favorMediaItem);\n      }\n    } else if (this.albumId === MediaConstants.ALBUM_ID_RECYCLE) {\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let trashMediaItem = new TrashUserFileDataItem('', [], i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          trashMediaItem.favouriteStatus = userFileDataItemCache.get(mediaFileAssets[i].uri).favouriteStatus;\n          trashMediaItem.orientation = userFileDataItemCache.get(mediaFileAssets[i].uri).orientation;\n        }\n        trashMediaItem.update(mediaFileAssets[i]);\n        groupDataItem.push(trashMediaItem);\n      }\n    } else {\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let mediaItem: UserFileDataItem = new UserFileDataItem('', [], this.deviceId, i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          mediaItem = userFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          userFileDataItemCache.set(mediaFileAssets[i].uri, mediaItem);\n        }\n        mediaItem.update(mediaFileAssets[i]);\n        groupDataItem.push(mediaItem);\n      }\n    }\n    Log.info(TAG, 'reload finish');\n    return groupDataItem;\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "reloadBrowserGroupItemData",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "Promise<UserFileDataItem[]>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "ArrayType",
                  "label": "UserFileDataItem[]",
                  "children": [
                    {
                      "type": "TypeReference",
                      "label": "UserFileDataItem",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "UserFileDataItem",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'reloadBrowserGroupItemData');\n    let groupDataItem: UserFileDataItem[] = [];\n    let mediaFileAssets = await this.getMediaItemFileAssets(this.albumName, this.albumType, this.albumSubType);\n    if (this.albumId === MediaConstants.ALBUM_ID_FAVOR) {\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let favorMediaItem = new FavorUserFileDataItem('', [], i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          favorMediaItem.favouriteStatus = userFileDataItemCache.get(mediaFileAssets[i].uri).favouriteStatus;\n          favorMediaItem.orientation = userFileDataItemCache.get(mediaFileAssets[i].uri).orientation;\n        }\n        favorMediaItem.update(mediaFileAssets[i]);\n        groupDataItem.push(favorMediaItem);\n      }\n    } else if (this.albumId === MediaConstants.ALBUM_ID_RECYCLE) {\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let trashMediaItem = new TrashUserFileDataItem('', [], i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          trashMediaItem.favouriteStatus = userFileDataItemCache.get(mediaFileAssets[i].uri).favouriteStatus;\n          trashMediaItem.orientation = userFileDataItemCache.get(mediaFileAssets[i].uri).orientation;\n        }\n        trashMediaItem.update(mediaFileAssets[i]);\n        groupDataItem.push(trashMediaItem);\n      }\n    } else {\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let mediaItem: UserFileDataItem = new UserFileDataItem('', [], this.deviceId, i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          mediaItem = userFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          userFileDataItemCache.set(mediaFileAssets[i].uri, mediaItem);\n        }\n        mediaItem.update(mediaFileAssets[i]);\n        groupDataItem.push(mediaItem);\n      }\n    }\n    Log.info(TAG, 'reload finish');\n    return groupDataItem;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'reloadBrowserGroupItemData');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'reloadBrowserGroupItemData')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'reloadBrowserGroupItemData'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let groupDataItem: UserFileDataItem[] = [];",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let groupDataItem: UserFileDataItem[] = []",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "groupDataItem: UserFileDataItem[] = []",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "groupDataItem",
                              "children": []
                            },
                            {
                              "type": "ArrayType",
                              "label": "UserFileDataItem[]",
                              "children": [
                                {
                                  "type": "TypeReference",
                                  "label": "UserFileDataItem",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "UserFileDataItem",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ArrayLiteralExpression",
                              "label": "[]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let mediaFileAssets = await this.getMediaItemFileAssets(this.albumName, this.albumType, this.albumSubType);",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let mediaFileAssets = await this.getMediaItemFileAssets(this.albumName, this.albumType, this.albumSubType)",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "mediaFileAssets = await this.getMediaItemFileAssets(this.albumName, this.albumType, this.albumSubType)",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "mediaFileAssets",
                              "children": []
                            },
                            {
                              "type": "AwaitExpression",
                              "label": "await this.getMediaItemFileAssets(this.albumName, this.albumType, this.albumSubType)",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "this.getMediaItemFileAssets(this.albumName, this.albumType, this.albumSubType)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.getMediaItemFileAssets",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "getMediaItemFileAssets",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.albumName",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "albumName",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.albumType",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "albumType",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.albumSubType",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "albumSubType",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (this.albumId === MediaConstants.ALBUM_ID_FAVOR) {\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let favorMediaItem = new FavorUserFileDataItem('', [], i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          favorMediaItem.favouriteStatus = userFileDataItemCache.get(mediaFileAssets[i].uri).favouriteStatus;\n          favorMediaItem.orientation = userFileDataItemCache.get(mediaFileAssets[i].uri).orientation;\n        }\n        favorMediaItem.update(mediaFileAssets[i]);\n        groupDataItem.push(favorMediaItem);\n      }\n    } else if (this.albumId === MediaConstants.ALBUM_ID_RECYCLE) {\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let trashMediaItem = new TrashUserFileDataItem('', [], i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          trashMediaItem.favouriteStatus = userFileDataItemCache.get(mediaFileAssets[i].uri).favouriteStatus;\n          trashMediaItem.orientation = userFileDataItemCache.get(mediaFileAssets[i].uri).orientation;\n        }\n        trashMediaItem.update(mediaFileAssets[i]);\n        groupDataItem.push(trashMediaItem);\n      }\n    } else {\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let mediaItem: UserFileDataItem = new UserFileDataItem('', [], this.deviceId, i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          mediaItem = userFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          userFileDataItemCache.set(mediaFileAssets[i].uri, mediaItem);\n        }\n        mediaItem.update(mediaFileAssets[i]);\n        groupDataItem.push(mediaItem);\n      }\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.albumId === MediaConstants.ALBUM_ID_FAVOR",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.albumId",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "albumId",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "EqualsEqualsEqualsToken",
                          "label": "===",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "MediaConstants.ALBUM_ID_FAVOR",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "MediaConstants",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "ALBUM_ID_FAVOR",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let favorMediaItem = new FavorUserFileDataItem('', [], i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          favorMediaItem.favouriteStatus = userFileDataItemCache.get(mediaFileAssets[i].uri).favouriteStatus;\n          favorMediaItem.orientation = userFileDataItemCache.get(mediaFileAssets[i].uri).orientation;\n        }\n        favorMediaItem.update(mediaFileAssets[i]);\n        groupDataItem.push(favorMediaItem);\n      }\n    }",
                      "children": [
                        {
                          "type": "ForStatement",
                          "label": "for (let i = 0;i < mediaFileAssets.length; i++) {\n        let favorMediaItem = new FavorUserFileDataItem('', [], i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          favorMediaItem.favouriteStatus = userFileDataItemCache.get(mediaFileAssets[i].uri).favouriteStatus;\n          favorMediaItem.orientation = userFileDataItemCache.get(mediaFileAssets[i].uri).orientation;\n        }\n        favorMediaItem.update(mediaFileAssets[i]);\n        groupDataItem.push(favorMediaItem);\n      }",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let i = 0",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "i = 0",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "i < mediaFileAssets.length",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "i",
                                  "children": []
                                },
                                {
                                  "type": "FirstBinaryOperator",
                                  "label": "<",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "mediaFileAssets.length",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "mediaFileAssets",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "length",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "PostfixUnaryExpression",
                              "label": "i++",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "i",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        let favorMediaItem = new FavorUserFileDataItem('', [], i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          favorMediaItem.favouriteStatus = userFileDataItemCache.get(mediaFileAssets[i].uri).favouriteStatus;\n          favorMediaItem.orientation = userFileDataItemCache.get(mediaFileAssets[i].uri).orientation;\n        }\n        favorMediaItem.update(mediaFileAssets[i]);\n        groupDataItem.push(favorMediaItem);\n      }",
                              "children": [
                                {
                                  "type": "FirstStatement",
                                  "label": "let favorMediaItem = new FavorUserFileDataItem('', [], i);",
                                  "children": [
                                    {
                                      "type": "VariableDeclarationList",
                                      "label": "let favorMediaItem = new FavorUserFileDataItem('', [], i)",
                                      "children": [
                                        {
                                          "type": "VariableDeclaration",
                                          "label": "favorMediaItem = new FavorUserFileDataItem('', [], i)",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "favorMediaItem",
                                              "children": []
                                            },
                                            {
                                              "type": "NewExpression",
                                              "label": "new FavorUserFileDataItem('', [], i)",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "FavorUserFileDataItem",
                                                  "children": []
                                                },
                                                {
                                                  "type": "StringLiteral",
                                                  "label": "''",
                                                  "children": []
                                                },
                                                {
                                                  "type": "ArrayLiteralExpression",
                                                  "label": "[]",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "i",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "IfStatement",
                                  "label": "if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          favorMediaItem.favouriteStatus = userFileDataItemCache.get(mediaFileAssets[i].uri).favouriteStatus;\n          favorMediaItem.orientation = userFileDataItemCache.get(mediaFileAssets[i].uri).orientation;\n        }",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "userFileDataItemCache.hasKey(mediaFileAssets[i].uri)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "userFileDataItemCache.hasKey",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "userFileDataItemCache",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "hasKey",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "mediaFileAssets[i].uri",
                                          "children": [
                                            {
                                              "type": "ElementAccessExpression",
                                              "label": "mediaFileAssets[i]",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "mediaFileAssets",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "i",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "uri",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Block",
                                      "label": "{\n          favorMediaItem.favouriteStatus = userFileDataItemCache.get(mediaFileAssets[i].uri).favouriteStatus;\n          favorMediaItem.orientation = userFileDataItemCache.get(mediaFileAssets[i].uri).orientation;\n        }",
                                      "children": [
                                        {
                                          "type": "ExpressionStatement",
                                          "label": "favorMediaItem.favouriteStatus = userFileDataItemCache.get(mediaFileAssets[i].uri).favouriteStatus;",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "favorMediaItem.favouriteStatus = userFileDataItemCache.get(mediaFileAssets[i].uri).favouriteStatus",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "favorMediaItem.favouriteStatus",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "favorMediaItem",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "favouriteStatus",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "FirstAssignment",
                                                  "label": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "userFileDataItemCache.get(mediaFileAssets[i].uri).favouriteStatus",
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "userFileDataItemCache.get(mediaFileAssets[i].uri)",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "userFileDataItemCache.get",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "userFileDataItemCache",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "get",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "mediaFileAssets[i].uri",
                                                          "children": [
                                                            {
                                                              "type": "ElementAccessExpression",
                                                              "label": "mediaFileAssets[i]",
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "mediaFileAssets",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "i",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "uri",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "favouriteStatus",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "label": "favorMediaItem.orientation = userFileDataItemCache.get(mediaFileAssets[i].uri).orientation;",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "favorMediaItem.orientation = userFileDataItemCache.get(mediaFileAssets[i].uri).orientation",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "favorMediaItem.orientation",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "favorMediaItem",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "orientation",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "FirstAssignment",
                                                  "label": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "userFileDataItemCache.get(mediaFileAssets[i].uri).orientation",
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "userFileDataItemCache.get(mediaFileAssets[i].uri)",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "userFileDataItemCache.get",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "userFileDataItemCache",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "get",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "mediaFileAssets[i].uri",
                                                          "children": [
                                                            {
                                                              "type": "ElementAccessExpression",
                                                              "label": "mediaFileAssets[i]",
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "mediaFileAssets",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "i",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "uri",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "orientation",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "favorMediaItem.update(mediaFileAssets[i]);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "favorMediaItem.update(mediaFileAssets[i])",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "favorMediaItem.update",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "favorMediaItem",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "update",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ElementAccessExpression",
                                          "label": "mediaFileAssets[i]",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "mediaFileAssets",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "i",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "groupDataItem.push(favorMediaItem);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "groupDataItem.push(favorMediaItem)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "groupDataItem.push",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "groupDataItem",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "push",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "favorMediaItem",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "IfStatement",
                      "label": "if (this.albumId === MediaConstants.ALBUM_ID_RECYCLE) {\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let trashMediaItem = new TrashUserFileDataItem('', [], i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          trashMediaItem.favouriteStatus = userFileDataItemCache.get(mediaFileAssets[i].uri).favouriteStatus;\n          trashMediaItem.orientation = userFileDataItemCache.get(mediaFileAssets[i].uri).orientation;\n        }\n        trashMediaItem.update(mediaFileAssets[i]);\n        groupDataItem.push(trashMediaItem);\n      }\n    } else {\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let mediaItem: UserFileDataItem = new UserFileDataItem('', [], this.deviceId, i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          mediaItem = userFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          userFileDataItemCache.set(mediaFileAssets[i].uri, mediaItem);\n        }\n        mediaItem.update(mediaFileAssets[i]);\n        groupDataItem.push(mediaItem);\n      }\n    }",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "this.albumId === MediaConstants.ALBUM_ID_RECYCLE",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.albumId",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "albumId",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "EqualsEqualsEqualsToken",
                              "label": "===",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "MediaConstants.ALBUM_ID_RECYCLE",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "MediaConstants",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "ALBUM_ID_RECYCLE",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let trashMediaItem = new TrashUserFileDataItem('', [], i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          trashMediaItem.favouriteStatus = userFileDataItemCache.get(mediaFileAssets[i].uri).favouriteStatus;\n          trashMediaItem.orientation = userFileDataItemCache.get(mediaFileAssets[i].uri).orientation;\n        }\n        trashMediaItem.update(mediaFileAssets[i]);\n        groupDataItem.push(trashMediaItem);\n      }\n    }",
                          "children": [
                            {
                              "type": "ForStatement",
                              "label": "for (let i = 0;i < mediaFileAssets.length; i++) {\n        let trashMediaItem = new TrashUserFileDataItem('', [], i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          trashMediaItem.favouriteStatus = userFileDataItemCache.get(mediaFileAssets[i].uri).favouriteStatus;\n          trashMediaItem.orientation = userFileDataItemCache.get(mediaFileAssets[i].uri).orientation;\n        }\n        trashMediaItem.update(mediaFileAssets[i]);\n        groupDataItem.push(trashMediaItem);\n      }",
                              "children": [
                                {
                                  "type": "VariableDeclarationList",
                                  "label": "let i = 0",
                                  "children": [
                                    {
                                      "type": "VariableDeclaration",
                                      "label": "i = 0",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "0",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "i < mediaFileAssets.length",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstBinaryOperator",
                                      "label": "<",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "mediaFileAssets.length",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "mediaFileAssets",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "length",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "PostfixUnaryExpression",
                                  "label": "i++",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "i",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Block",
                                  "label": "{\n        let trashMediaItem = new TrashUserFileDataItem('', [], i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          trashMediaItem.favouriteStatus = userFileDataItemCache.get(mediaFileAssets[i].uri).favouriteStatus;\n          trashMediaItem.orientation = userFileDataItemCache.get(mediaFileAssets[i].uri).orientation;\n        }\n        trashMediaItem.update(mediaFileAssets[i]);\n        groupDataItem.push(trashMediaItem);\n      }",
                                  "children": [
                                    {
                                      "type": "FirstStatement",
                                      "label": "let trashMediaItem = new TrashUserFileDataItem('', [], i);",
                                      "children": [
                                        {
                                          "type": "VariableDeclarationList",
                                          "label": "let trashMediaItem = new TrashUserFileDataItem('', [], i)",
                                          "children": [
                                            {
                                              "type": "VariableDeclaration",
                                              "label": "trashMediaItem = new TrashUserFileDataItem('', [], i)",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "trashMediaItem",
                                                  "children": []
                                                },
                                                {
                                                  "type": "NewExpression",
                                                  "label": "new TrashUserFileDataItem('', [], i)",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "TrashUserFileDataItem",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "StringLiteral",
                                                      "label": "''",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "ArrayLiteralExpression",
                                                      "label": "[]",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "i",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "IfStatement",
                                      "label": "if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          trashMediaItem.favouriteStatus = userFileDataItemCache.get(mediaFileAssets[i].uri).favouriteStatus;\n          trashMediaItem.orientation = userFileDataItemCache.get(mediaFileAssets[i].uri).orientation;\n        }",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "userFileDataItemCache.hasKey(mediaFileAssets[i].uri)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "userFileDataItemCache.hasKey",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "userFileDataItemCache",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "hasKey",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "mediaFileAssets[i].uri",
                                              "children": [
                                                {
                                                  "type": "ElementAccessExpression",
                                                  "label": "mediaFileAssets[i]",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "mediaFileAssets",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "i",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "uri",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Block",
                                          "label": "{\n          trashMediaItem.favouriteStatus = userFileDataItemCache.get(mediaFileAssets[i].uri).favouriteStatus;\n          trashMediaItem.orientation = userFileDataItemCache.get(mediaFileAssets[i].uri).orientation;\n        }",
                                          "children": [
                                            {
                                              "type": "ExpressionStatement",
                                              "label": "trashMediaItem.favouriteStatus = userFileDataItemCache.get(mediaFileAssets[i].uri).favouriteStatus;",
                                              "children": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "trashMediaItem.favouriteStatus = userFileDataItemCache.get(mediaFileAssets[i].uri).favouriteStatus",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "trashMediaItem.favouriteStatus",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "trashMediaItem",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "favouriteStatus",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "FirstAssignment",
                                                      "label": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "userFileDataItemCache.get(mediaFileAssets[i].uri).favouriteStatus",
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "userFileDataItemCache.get(mediaFileAssets[i].uri)",
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "userFileDataItemCache.get",
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "userFileDataItemCache",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "get",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "mediaFileAssets[i].uri",
                                                              "children": [
                                                                {
                                                                  "type": "ElementAccessExpression",
                                                                  "label": "mediaFileAssets[i]",
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "mediaFileAssets",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "i",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "uri",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "favouriteStatus",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "label": "trashMediaItem.orientation = userFileDataItemCache.get(mediaFileAssets[i].uri).orientation;",
                                              "children": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "trashMediaItem.orientation = userFileDataItemCache.get(mediaFileAssets[i].uri).orientation",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "trashMediaItem.orientation",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "trashMediaItem",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "orientation",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "FirstAssignment",
                                                      "label": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "userFileDataItemCache.get(mediaFileAssets[i].uri).orientation",
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "userFileDataItemCache.get(mediaFileAssets[i].uri)",
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "userFileDataItemCache.get",
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "userFileDataItemCache",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "get",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "mediaFileAssets[i].uri",
                                                              "children": [
                                                                {
                                                                  "type": "ElementAccessExpression",
                                                                  "label": "mediaFileAssets[i]",
                                                                  "children": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "mediaFileAssets",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "label": "i",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "uri",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "orientation",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "trashMediaItem.update(mediaFileAssets[i]);",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "trashMediaItem.update(mediaFileAssets[i])",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "trashMediaItem.update",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "trashMediaItem",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "update",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ElementAccessExpression",
                                              "label": "mediaFileAssets[i]",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "mediaFileAssets",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "i",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "groupDataItem.push(trashMediaItem);",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "groupDataItem.push(trashMediaItem)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "groupDataItem.push",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "groupDataItem",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "push",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "trashMediaItem",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let mediaItem: UserFileDataItem = new UserFileDataItem('', [], this.deviceId, i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          mediaItem = userFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          userFileDataItemCache.set(mediaFileAssets[i].uri, mediaItem);\n        }\n        mediaItem.update(mediaFileAssets[i]);\n        groupDataItem.push(mediaItem);\n      }\n    }",
                          "children": [
                            {
                              "type": "ForStatement",
                              "label": "for (let i = 0;i < mediaFileAssets.length; i++) {\n        let mediaItem: UserFileDataItem = new UserFileDataItem('', [], this.deviceId, i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          mediaItem = userFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          userFileDataItemCache.set(mediaFileAssets[i].uri, mediaItem);\n        }\n        mediaItem.update(mediaFileAssets[i]);\n        groupDataItem.push(mediaItem);\n      }",
                              "children": [
                                {
                                  "type": "VariableDeclarationList",
                                  "label": "let i = 0",
                                  "children": [
                                    {
                                      "type": "VariableDeclaration",
                                      "label": "i = 0",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "0",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "i < mediaFileAssets.length",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstBinaryOperator",
                                      "label": "<",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "mediaFileAssets.length",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "mediaFileAssets",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "length",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "PostfixUnaryExpression",
                                  "label": "i++",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "i",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Block",
                                  "label": "{\n        let mediaItem: UserFileDataItem = new UserFileDataItem('', [], this.deviceId, i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          mediaItem = userFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          userFileDataItemCache.set(mediaFileAssets[i].uri, mediaItem);\n        }\n        mediaItem.update(mediaFileAssets[i]);\n        groupDataItem.push(mediaItem);\n      }",
                                  "children": [
                                    {
                                      "type": "FirstStatement",
                                      "label": "let mediaItem: UserFileDataItem = new UserFileDataItem('', [], this.deviceId, i);",
                                      "children": [
                                        {
                                          "type": "VariableDeclarationList",
                                          "label": "let mediaItem: UserFileDataItem = new UserFileDataItem('', [], this.deviceId, i)",
                                          "children": [
                                            {
                                              "type": "VariableDeclaration",
                                              "label": "mediaItem: UserFileDataItem = new UserFileDataItem('', [], this.deviceId, i)",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "mediaItem",
                                                  "children": []
                                                },
                                                {
                                                  "type": "TypeReference",
                                                  "label": "UserFileDataItem",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "UserFileDataItem",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "NewExpression",
                                                  "label": "new UserFileDataItem('', [], this.deviceId, i)",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "UserFileDataItem",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "StringLiteral",
                                                      "label": "''",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "ArrayLiteralExpression",
                                                      "label": "[]",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "this.deviceId",
                                                      "children": [
                                                        {
                                                          "type": "ThisKeyword",
                                                          "label": "this",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "deviceId",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "i",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "IfStatement",
                                      "label": "if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          mediaItem = userFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          userFileDataItemCache.set(mediaFileAssets[i].uri, mediaItem);\n        }",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "userFileDataItemCache.hasKey(mediaFileAssets[i].uri)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "userFileDataItemCache.hasKey",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "userFileDataItemCache",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "hasKey",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "mediaFileAssets[i].uri",
                                              "children": [
                                                {
                                                  "type": "ElementAccessExpression",
                                                  "label": "mediaFileAssets[i]",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "mediaFileAssets",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "i",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "uri",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Block",
                                          "label": "{\n          mediaItem = userFileDataItemCache.get(mediaFileAssets[i].uri);\n        }",
                                          "children": [
                                            {
                                              "type": "ExpressionStatement",
                                              "label": "mediaItem = userFileDataItemCache.get(mediaFileAssets[i].uri);",
                                              "children": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "mediaItem = userFileDataItemCache.get(mediaFileAssets[i].uri)",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "mediaItem",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "FirstAssignment",
                                                      "label": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "userFileDataItemCache.get(mediaFileAssets[i].uri)",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "userFileDataItemCache.get",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "userFileDataItemCache",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "get",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "mediaFileAssets[i].uri",
                                                          "children": [
                                                            {
                                                              "type": "ElementAccessExpression",
                                                              "label": "mediaFileAssets[i]",
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "mediaFileAssets",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "i",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "uri",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Block",
                                          "label": "{\n          userFileDataItemCache.set(mediaFileAssets[i].uri, mediaItem);\n        }",
                                          "children": [
                                            {
                                              "type": "ExpressionStatement",
                                              "label": "userFileDataItemCache.set(mediaFileAssets[i].uri, mediaItem);",
                                              "children": [
                                                {
                                                  "type": "CallExpression",
                                                  "label": "userFileDataItemCache.set(mediaFileAssets[i].uri, mediaItem)",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "userFileDataItemCache.set",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "userFileDataItemCache",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "set",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "mediaFileAssets[i].uri",
                                                      "children": [
                                                        {
                                                          "type": "ElementAccessExpression",
                                                          "label": "mediaFileAssets[i]",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "mediaFileAssets",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "i",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "uri",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "mediaItem",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "mediaItem.update(mediaFileAssets[i]);",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "mediaItem.update(mediaFileAssets[i])",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "mediaItem.update",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "mediaItem",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "update",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ElementAccessExpression",
                                              "label": "mediaFileAssets[i]",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "mediaFileAssets",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "i",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "groupDataItem.push(mediaItem);",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "groupDataItem.push(mediaItem)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "groupDataItem.push",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "groupDataItem",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "push",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "mediaItem",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'reload finish');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'reload finish')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'reload finish'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return groupDataItem;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "groupDataItem",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "async reloadGridGroupItemData(): Promise<UserFileDataItem[]> {\n    Log.info(TAG, 'reloadGridGroupItemData');\n    let groupDataItem: UserFileDataItem[] = [];\n    let mediaFileAssets = await this.getMediaItemFileAssets(this.albumName, this.albumType, this.albumSubType);\n    if (this.albumId === MediaConstants.ALBUM_ID_FAVOR) {\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let item = new FavorUserFileDataItem('', [], i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          Log.info(TAG, 'hasKey');\n          item = userFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          userFileDataItemCache.set(mediaFileAssets[i].uri, item);\n        }\n        item.update(mediaFileAssets[i]);\n        groupDataItem.push(item);\n      }\n    } else if (this.albumId === MediaConstants.ALBUM_ID_RECYCLE) {\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let item = new TrashUserFileDataItem('', [], i);\n        if (trashUserFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          item = trashUserFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          trashUserFileDataItemCache.set(mediaFileAssets[i].uri, item);\n        }\n        item.update(mediaFileAssets[i]);\n        groupDataItem.push(item);\n      }\n    } else {\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let item = new UserFileDataItem('', [], this.deviceId, i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          item = userFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          userFileDataItemCache.set(mediaFileAssets[i].uri, item);\n        }\n        item.update(mediaFileAssets[i]);\n        groupDataItem.push(item);\n      }\n    }\n    Log.info(TAG, 'reload finish');\n    return groupDataItem;\n  }",
          "children": [
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "reloadGridGroupItemData",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "Promise<UserFileDataItem[]>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "ArrayType",
                  "label": "UserFileDataItem[]",
                  "children": [
                    {
                      "type": "TypeReference",
                      "label": "UserFileDataItem",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "UserFileDataItem",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'reloadGridGroupItemData');\n    let groupDataItem: UserFileDataItem[] = [];\n    let mediaFileAssets = await this.getMediaItemFileAssets(this.albumName, this.albumType, this.albumSubType);\n    if (this.albumId === MediaConstants.ALBUM_ID_FAVOR) {\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let item = new FavorUserFileDataItem('', [], i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          Log.info(TAG, 'hasKey');\n          item = userFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          userFileDataItemCache.set(mediaFileAssets[i].uri, item);\n        }\n        item.update(mediaFileAssets[i]);\n        groupDataItem.push(item);\n      }\n    } else if (this.albumId === MediaConstants.ALBUM_ID_RECYCLE) {\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let item = new TrashUserFileDataItem('', [], i);\n        if (trashUserFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          item = trashUserFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          trashUserFileDataItemCache.set(mediaFileAssets[i].uri, item);\n        }\n        item.update(mediaFileAssets[i]);\n        groupDataItem.push(item);\n      }\n    } else {\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let item = new UserFileDataItem('', [], this.deviceId, i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          item = userFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          userFileDataItemCache.set(mediaFileAssets[i].uri, item);\n        }\n        item.update(mediaFileAssets[i]);\n        groupDataItem.push(item);\n      }\n    }\n    Log.info(TAG, 'reload finish');\n    return groupDataItem;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'reloadGridGroupItemData');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'reloadGridGroupItemData')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'reloadGridGroupItemData'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let groupDataItem: UserFileDataItem[] = [];",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let groupDataItem: UserFileDataItem[] = []",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "groupDataItem: UserFileDataItem[] = []",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "groupDataItem",
                              "children": []
                            },
                            {
                              "type": "ArrayType",
                              "label": "UserFileDataItem[]",
                              "children": [
                                {
                                  "type": "TypeReference",
                                  "label": "UserFileDataItem",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "UserFileDataItem",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ArrayLiteralExpression",
                              "label": "[]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let mediaFileAssets = await this.getMediaItemFileAssets(this.albumName, this.albumType, this.albumSubType);",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let mediaFileAssets = await this.getMediaItemFileAssets(this.albumName, this.albumType, this.albumSubType)",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "mediaFileAssets = await this.getMediaItemFileAssets(this.albumName, this.albumType, this.albumSubType)",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "mediaFileAssets",
                              "children": []
                            },
                            {
                              "type": "AwaitExpression",
                              "label": "await this.getMediaItemFileAssets(this.albumName, this.albumType, this.albumSubType)",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "this.getMediaItemFileAssets(this.albumName, this.albumType, this.albumSubType)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.getMediaItemFileAssets",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "getMediaItemFileAssets",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.albumName",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "albumName",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.albumType",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "albumType",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.albumSubType",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "albumSubType",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (this.albumId === MediaConstants.ALBUM_ID_FAVOR) {\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let item = new FavorUserFileDataItem('', [], i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          Log.info(TAG, 'hasKey');\n          item = userFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          userFileDataItemCache.set(mediaFileAssets[i].uri, item);\n        }\n        item.update(mediaFileAssets[i]);\n        groupDataItem.push(item);\n      }\n    } else if (this.albumId === MediaConstants.ALBUM_ID_RECYCLE) {\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let item = new TrashUserFileDataItem('', [], i);\n        if (trashUserFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          item = trashUserFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          trashUserFileDataItemCache.set(mediaFileAssets[i].uri, item);\n        }\n        item.update(mediaFileAssets[i]);\n        groupDataItem.push(item);\n      }\n    } else {\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let item = new UserFileDataItem('', [], this.deviceId, i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          item = userFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          userFileDataItemCache.set(mediaFileAssets[i].uri, item);\n        }\n        item.update(mediaFileAssets[i]);\n        groupDataItem.push(item);\n      }\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.albumId === MediaConstants.ALBUM_ID_FAVOR",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.albumId",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "albumId",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "EqualsEqualsEqualsToken",
                          "label": "===",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "MediaConstants.ALBUM_ID_FAVOR",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "MediaConstants",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "ALBUM_ID_FAVOR",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let item = new FavorUserFileDataItem('', [], i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          Log.info(TAG, 'hasKey');\n          item = userFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          userFileDataItemCache.set(mediaFileAssets[i].uri, item);\n        }\n        item.update(mediaFileAssets[i]);\n        groupDataItem.push(item);\n      }\n    }",
                      "children": [
                        {
                          "type": "ForStatement",
                          "label": "for (let i = 0;i < mediaFileAssets.length; i++) {\n        let item = new FavorUserFileDataItem('', [], i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          Log.info(TAG, 'hasKey');\n          item = userFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          userFileDataItemCache.set(mediaFileAssets[i].uri, item);\n        }\n        item.update(mediaFileAssets[i]);\n        groupDataItem.push(item);\n      }",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let i = 0",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "i = 0",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "i < mediaFileAssets.length",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "i",
                                  "children": []
                                },
                                {
                                  "type": "FirstBinaryOperator",
                                  "label": "<",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "mediaFileAssets.length",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "mediaFileAssets",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "length",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "PostfixUnaryExpression",
                              "label": "i++",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "i",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        let item = new FavorUserFileDataItem('', [], i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          Log.info(TAG, 'hasKey');\n          item = userFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          userFileDataItemCache.set(mediaFileAssets[i].uri, item);\n        }\n        item.update(mediaFileAssets[i]);\n        groupDataItem.push(item);\n      }",
                              "children": [
                                {
                                  "type": "FirstStatement",
                                  "label": "let item = new FavorUserFileDataItem('', [], i);",
                                  "children": [
                                    {
                                      "type": "VariableDeclarationList",
                                      "label": "let item = new FavorUserFileDataItem('', [], i)",
                                      "children": [
                                        {
                                          "type": "VariableDeclaration",
                                          "label": "item = new FavorUserFileDataItem('', [], i)",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "item",
                                              "children": []
                                            },
                                            {
                                              "type": "NewExpression",
                                              "label": "new FavorUserFileDataItem('', [], i)",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "FavorUserFileDataItem",
                                                  "children": []
                                                },
                                                {
                                                  "type": "StringLiteral",
                                                  "label": "''",
                                                  "children": []
                                                },
                                                {
                                                  "type": "ArrayLiteralExpression",
                                                  "label": "[]",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "i",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "IfStatement",
                                  "label": "if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          Log.info(TAG, 'hasKey');\n          item = userFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          userFileDataItemCache.set(mediaFileAssets[i].uri, item);\n        }",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "userFileDataItemCache.hasKey(mediaFileAssets[i].uri)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "userFileDataItemCache.hasKey",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "userFileDataItemCache",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "hasKey",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "mediaFileAssets[i].uri",
                                          "children": [
                                            {
                                              "type": "ElementAccessExpression",
                                              "label": "mediaFileAssets[i]",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "mediaFileAssets",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "i",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "uri",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Block",
                                      "label": "{\n          Log.info(TAG, 'hasKey');\n          item = userFileDataItemCache.get(mediaFileAssets[i].uri);\n        }",
                                      "children": [
                                        {
                                          "type": "ExpressionStatement",
                                          "label": "Log.info(TAG, 'hasKey');",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "Log.info(TAG, 'hasKey')",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "Log.info",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "Log",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "info",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "TAG",
                                                  "children": []
                                                },
                                                {
                                                  "type": "StringLiteral",
                                                  "label": "'hasKey'",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "label": "item = userFileDataItemCache.get(mediaFileAssets[i].uri);",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "item = userFileDataItemCache.get(mediaFileAssets[i].uri)",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "item",
                                                  "children": []
                                                },
                                                {
                                                  "type": "FirstAssignment",
                                                  "label": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "CallExpression",
                                                  "label": "userFileDataItemCache.get(mediaFileAssets[i].uri)",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "userFileDataItemCache.get",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "userFileDataItemCache",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "get",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "mediaFileAssets[i].uri",
                                                      "children": [
                                                        {
                                                          "type": "ElementAccessExpression",
                                                          "label": "mediaFileAssets[i]",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "mediaFileAssets",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "i",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "uri",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Block",
                                      "label": "{\n          userFileDataItemCache.set(mediaFileAssets[i].uri, item);\n        }",
                                      "children": [
                                        {
                                          "type": "ExpressionStatement",
                                          "label": "userFileDataItemCache.set(mediaFileAssets[i].uri, item);",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "userFileDataItemCache.set(mediaFileAssets[i].uri, item)",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "userFileDataItemCache.set",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "userFileDataItemCache",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "set",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "mediaFileAssets[i].uri",
                                                  "children": [
                                                    {
                                                      "type": "ElementAccessExpression",
                                                      "label": "mediaFileAssets[i]",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "mediaFileAssets",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "i",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "uri",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "item",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "item.update(mediaFileAssets[i]);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "item.update(mediaFileAssets[i])",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "item.update",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "item",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "update",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ElementAccessExpression",
                                          "label": "mediaFileAssets[i]",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "mediaFileAssets",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "i",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "groupDataItem.push(item);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "groupDataItem.push(item)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "groupDataItem.push",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "groupDataItem",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "push",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "item",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "IfStatement",
                      "label": "if (this.albumId === MediaConstants.ALBUM_ID_RECYCLE) {\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let item = new TrashUserFileDataItem('', [], i);\n        if (trashUserFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          item = trashUserFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          trashUserFileDataItemCache.set(mediaFileAssets[i].uri, item);\n        }\n        item.update(mediaFileAssets[i]);\n        groupDataItem.push(item);\n      }\n    } else {\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let item = new UserFileDataItem('', [], this.deviceId, i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          item = userFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          userFileDataItemCache.set(mediaFileAssets[i].uri, item);\n        }\n        item.update(mediaFileAssets[i]);\n        groupDataItem.push(item);\n      }\n    }",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "this.albumId === MediaConstants.ALBUM_ID_RECYCLE",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.albumId",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "albumId",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "EqualsEqualsEqualsToken",
                              "label": "===",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "MediaConstants.ALBUM_ID_RECYCLE",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "MediaConstants",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "ALBUM_ID_RECYCLE",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let item = new TrashUserFileDataItem('', [], i);\n        if (trashUserFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          item = trashUserFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          trashUserFileDataItemCache.set(mediaFileAssets[i].uri, item);\n        }\n        item.update(mediaFileAssets[i]);\n        groupDataItem.push(item);\n      }\n    }",
                          "children": [
                            {
                              "type": "ForStatement",
                              "label": "for (let i = 0;i < mediaFileAssets.length; i++) {\n        let item = new TrashUserFileDataItem('', [], i);\n        if (trashUserFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          item = trashUserFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          trashUserFileDataItemCache.set(mediaFileAssets[i].uri, item);\n        }\n        item.update(mediaFileAssets[i]);\n        groupDataItem.push(item);\n      }",
                              "children": [
                                {
                                  "type": "VariableDeclarationList",
                                  "label": "let i = 0",
                                  "children": [
                                    {
                                      "type": "VariableDeclaration",
                                      "label": "i = 0",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "0",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "i < mediaFileAssets.length",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstBinaryOperator",
                                      "label": "<",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "mediaFileAssets.length",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "mediaFileAssets",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "length",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "PostfixUnaryExpression",
                                  "label": "i++",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "i",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Block",
                                  "label": "{\n        let item = new TrashUserFileDataItem('', [], i);\n        if (trashUserFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          item = trashUserFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          trashUserFileDataItemCache.set(mediaFileAssets[i].uri, item);\n        }\n        item.update(mediaFileAssets[i]);\n        groupDataItem.push(item);\n      }",
                                  "children": [
                                    {
                                      "type": "FirstStatement",
                                      "label": "let item = new TrashUserFileDataItem('', [], i);",
                                      "children": [
                                        {
                                          "type": "VariableDeclarationList",
                                          "label": "let item = new TrashUserFileDataItem('', [], i)",
                                          "children": [
                                            {
                                              "type": "VariableDeclaration",
                                              "label": "item = new TrashUserFileDataItem('', [], i)",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "item",
                                                  "children": []
                                                },
                                                {
                                                  "type": "NewExpression",
                                                  "label": "new TrashUserFileDataItem('', [], i)",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "TrashUserFileDataItem",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "StringLiteral",
                                                      "label": "''",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "ArrayLiteralExpression",
                                                      "label": "[]",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "i",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "IfStatement",
                                      "label": "if (trashUserFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          item = trashUserFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          trashUserFileDataItemCache.set(mediaFileAssets[i].uri, item);\n        }",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "trashUserFileDataItemCache.hasKey(mediaFileAssets[i].uri)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "trashUserFileDataItemCache.hasKey",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "trashUserFileDataItemCache",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "hasKey",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "mediaFileAssets[i].uri",
                                              "children": [
                                                {
                                                  "type": "ElementAccessExpression",
                                                  "label": "mediaFileAssets[i]",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "mediaFileAssets",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "i",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "uri",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Block",
                                          "label": "{\n          item = trashUserFileDataItemCache.get(mediaFileAssets[i].uri);\n        }",
                                          "children": [
                                            {
                                              "type": "ExpressionStatement",
                                              "label": "item = trashUserFileDataItemCache.get(mediaFileAssets[i].uri);",
                                              "children": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "item = trashUserFileDataItemCache.get(mediaFileAssets[i].uri)",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "item",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "FirstAssignment",
                                                      "label": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "trashUserFileDataItemCache.get(mediaFileAssets[i].uri)",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "trashUserFileDataItemCache.get",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "trashUserFileDataItemCache",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "get",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "mediaFileAssets[i].uri",
                                                          "children": [
                                                            {
                                                              "type": "ElementAccessExpression",
                                                              "label": "mediaFileAssets[i]",
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "mediaFileAssets",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "i",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "uri",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Block",
                                          "label": "{\n          trashUserFileDataItemCache.set(mediaFileAssets[i].uri, item);\n        }",
                                          "children": [
                                            {
                                              "type": "ExpressionStatement",
                                              "label": "trashUserFileDataItemCache.set(mediaFileAssets[i].uri, item);",
                                              "children": [
                                                {
                                                  "type": "CallExpression",
                                                  "label": "trashUserFileDataItemCache.set(mediaFileAssets[i].uri, item)",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "trashUserFileDataItemCache.set",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "trashUserFileDataItemCache",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "set",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "mediaFileAssets[i].uri",
                                                      "children": [
                                                        {
                                                          "type": "ElementAccessExpression",
                                                          "label": "mediaFileAssets[i]",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "mediaFileAssets",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "i",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "uri",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "item",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "item.update(mediaFileAssets[i]);",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "item.update(mediaFileAssets[i])",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "item.update",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "item",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "update",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ElementAccessExpression",
                                              "label": "mediaFileAssets[i]",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "mediaFileAssets",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "i",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "groupDataItem.push(item);",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "groupDataItem.push(item)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "groupDataItem.push",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "groupDataItem",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "push",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "item",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      for (let i = 0;i < mediaFileAssets.length; i++) {\n        let item = new UserFileDataItem('', [], this.deviceId, i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          item = userFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          userFileDataItemCache.set(mediaFileAssets[i].uri, item);\n        }\n        item.update(mediaFileAssets[i]);\n        groupDataItem.push(item);\n      }\n    }",
                          "children": [
                            {
                              "type": "ForStatement",
                              "label": "for (let i = 0;i < mediaFileAssets.length; i++) {\n        let item = new UserFileDataItem('', [], this.deviceId, i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          item = userFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          userFileDataItemCache.set(mediaFileAssets[i].uri, item);\n        }\n        item.update(mediaFileAssets[i]);\n        groupDataItem.push(item);\n      }",
                              "children": [
                                {
                                  "type": "VariableDeclarationList",
                                  "label": "let i = 0",
                                  "children": [
                                    {
                                      "type": "VariableDeclaration",
                                      "label": "i = 0",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "i",
                                          "children": []
                                        },
                                        {
                                          "type": "FirstLiteralToken",
                                          "label": "0",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "i < mediaFileAssets.length",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "i",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstBinaryOperator",
                                      "label": "<",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "mediaFileAssets.length",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "mediaFileAssets",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "length",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "PostfixUnaryExpression",
                                  "label": "i++",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "i",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Block",
                                  "label": "{\n        let item = new UserFileDataItem('', [], this.deviceId, i);\n        if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          item = userFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          userFileDataItemCache.set(mediaFileAssets[i].uri, item);\n        }\n        item.update(mediaFileAssets[i]);\n        groupDataItem.push(item);\n      }",
                                  "children": [
                                    {
                                      "type": "FirstStatement",
                                      "label": "let item = new UserFileDataItem('', [], this.deviceId, i);",
                                      "children": [
                                        {
                                          "type": "VariableDeclarationList",
                                          "label": "let item = new UserFileDataItem('', [], this.deviceId, i)",
                                          "children": [
                                            {
                                              "type": "VariableDeclaration",
                                              "label": "item = new UserFileDataItem('', [], this.deviceId, i)",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "item",
                                                  "children": []
                                                },
                                                {
                                                  "type": "NewExpression",
                                                  "label": "new UserFileDataItem('', [], this.deviceId, i)",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "UserFileDataItem",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "StringLiteral",
                                                      "label": "''",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "ArrayLiteralExpression",
                                                      "label": "[]",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "this.deviceId",
                                                      "children": [
                                                        {
                                                          "type": "ThisKeyword",
                                                          "label": "this",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "deviceId",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "i",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "IfStatement",
                                      "label": "if (userFileDataItemCache.hasKey(mediaFileAssets[i].uri)) {\n          item = userFileDataItemCache.get(mediaFileAssets[i].uri);\n        } else {\n          userFileDataItemCache.set(mediaFileAssets[i].uri, item);\n        }",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "userFileDataItemCache.hasKey(mediaFileAssets[i].uri)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "userFileDataItemCache.hasKey",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "userFileDataItemCache",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "hasKey",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "mediaFileAssets[i].uri",
                                              "children": [
                                                {
                                                  "type": "ElementAccessExpression",
                                                  "label": "mediaFileAssets[i]",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "mediaFileAssets",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "i",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "uri",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Block",
                                          "label": "{\n          item = userFileDataItemCache.get(mediaFileAssets[i].uri);\n        }",
                                          "children": [
                                            {
                                              "type": "ExpressionStatement",
                                              "label": "item = userFileDataItemCache.get(mediaFileAssets[i].uri);",
                                              "children": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "item = userFileDataItemCache.get(mediaFileAssets[i].uri)",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "item",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "FirstAssignment",
                                                      "label": "=",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "userFileDataItemCache.get(mediaFileAssets[i].uri)",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "userFileDataItemCache.get",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "userFileDataItemCache",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "get",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "mediaFileAssets[i].uri",
                                                          "children": [
                                                            {
                                                              "type": "ElementAccessExpression",
                                                              "label": "mediaFileAssets[i]",
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "mediaFileAssets",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "i",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "uri",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Block",
                                          "label": "{\n          userFileDataItemCache.set(mediaFileAssets[i].uri, item);\n        }",
                                          "children": [
                                            {
                                              "type": "ExpressionStatement",
                                              "label": "userFileDataItemCache.set(mediaFileAssets[i].uri, item);",
                                              "children": [
                                                {
                                                  "type": "CallExpression",
                                                  "label": "userFileDataItemCache.set(mediaFileAssets[i].uri, item)",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "userFileDataItemCache.set",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "userFileDataItemCache",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "set",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "mediaFileAssets[i].uri",
                                                      "children": [
                                                        {
                                                          "type": "ElementAccessExpression",
                                                          "label": "mediaFileAssets[i]",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "mediaFileAssets",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "i",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "uri",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "item",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "item.update(mediaFileAssets[i]);",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "item.update(mediaFileAssets[i])",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "item.update",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "item",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "update",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ElementAccessExpression",
                                              "label": "mediaFileAssets[i]",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "mediaFileAssets",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "i",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "groupDataItem.push(item);",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "groupDataItem.push(item)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "groupDataItem.push",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "groupDataItem",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "push",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "item",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'reload finish');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'reload finish')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'reload finish'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return groupDataItem;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "groupDataItem",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "private async getMediaItemFileAssets(albumName: string, albumType: number, albumSubType: number): Promise<photoAccessHelper.PhotoAsset[]> {\n    let predicates = new dataSharePredicates.DataSharePredicates();\n    predicates.equalTo(photoAccessHelper.AlbumKeys.ALBUM_NAME, albumName)\n    let fetchOption = {\n      fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n      predicates: predicates\n    };\n    Log.info(TAG, 'albumName:' + albumName);\n    if (albumType === MediaConstants.ALBUM_TYPE_ALL) {\n      return await userFileModel.getAllMediaItems();\n    } else if (albumType === MediaConstants.ABSTRACT_ALBUM_TYPE_MOVING_PHOTO) {\n      return await userFileModel.getAllMovingPhotoItems();\n    }\n    let emptyPredicates = new dataSharePredicates.DataSharePredicates();\n    emptyPredicates.orderByDesc(photoAccessHelper.PhotoKeys.DATE_ADDED);\n    let emptyFetchOption = {\n      fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n      predicates: emptyPredicates\n    };\n    return await userFileModel.getAllMediaItemsByType(albumType, albumSubType, fetchOption, emptyFetchOption);\n  }",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "getMediaItemFileAssets",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "albumName: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "albumName",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "albumType: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "albumType",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "albumSubType: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "albumSubType",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "Promise<photoAccessHelper.PhotoAsset[]>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "ArrayType",
                  "label": "photoAccessHelper.PhotoAsset[]",
                  "children": [
                    {
                      "type": "TypeReference",
                      "label": "photoAccessHelper.PhotoAsset",
                      "children": [
                        {
                          "type": "FirstNode",
                          "label": "photoAccessHelper.PhotoAsset",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "photoAccessHelper",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "PhotoAsset",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    let predicates = new dataSharePredicates.DataSharePredicates();\n    predicates.equalTo(photoAccessHelper.AlbumKeys.ALBUM_NAME, albumName)\n    let fetchOption = {\n      fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n      predicates: predicates\n    };\n    Log.info(TAG, 'albumName:' + albumName);\n    if (albumType === MediaConstants.ALBUM_TYPE_ALL) {\n      return await userFileModel.getAllMediaItems();\n    } else if (albumType === MediaConstants.ABSTRACT_ALBUM_TYPE_MOVING_PHOTO) {\n      return await userFileModel.getAllMovingPhotoItems();\n    }\n    let emptyPredicates = new dataSharePredicates.DataSharePredicates();\n    emptyPredicates.orderByDesc(photoAccessHelper.PhotoKeys.DATE_ADDED);\n    let emptyFetchOption = {\n      fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n      predicates: emptyPredicates\n    };\n    return await userFileModel.getAllMediaItemsByType(albumType, albumSubType, fetchOption, emptyFetchOption);\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let predicates = new dataSharePredicates.DataSharePredicates();",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let predicates = new dataSharePredicates.DataSharePredicates()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "predicates = new dataSharePredicates.DataSharePredicates()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "predicates",
                              "children": []
                            },
                            {
                              "type": "NewExpression",
                              "label": "new dataSharePredicates.DataSharePredicates()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "dataSharePredicates.DataSharePredicates",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "dataSharePredicates",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "DataSharePredicates",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "predicates.equalTo(photoAccessHelper.AlbumKeys.ALBUM_NAME, albumName)",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "predicates.equalTo(photoAccessHelper.AlbumKeys.ALBUM_NAME, albumName)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "predicates.equalTo",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "predicates",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "equalTo",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "photoAccessHelper.AlbumKeys.ALBUM_NAME",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "photoAccessHelper.AlbumKeys",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "photoAccessHelper",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "AlbumKeys",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "ALBUM_NAME",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "albumName",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let fetchOption = {\n      fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n      predicates: predicates\n    };",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let fetchOption = {\n      fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n      predicates: predicates\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "fetchOption = {\n      fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n      predicates: predicates\n    }",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "fetchOption",
                              "children": []
                            },
                            {
                              "type": "ObjectLiteralExpression",
                              "label": "{\n      fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS,\n      predicates: predicates\n    }",
                              "children": [
                                {
                                  "type": "PropertyAssignment",
                                  "label": "fetchColumns: MediaConstants.EMPTY_FETCH_COLUMNS",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "fetchColumns",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "MediaConstants.EMPTY_FETCH_COLUMNS",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "MediaConstants",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "EMPTY_FETCH_COLUMNS",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAssignment",
                                  "label": "predicates: predicates",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "predicates",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "predicates",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'albumName:' + albumName);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'albumName:' + albumName)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "BinaryExpression",
                          "label": "'albumName:' + albumName",
                          "children": [
                            {
                              "type": "StringLiteral",
                              "label": "'albumName:'",
                              "children": []
                            },
                            {
                              "type": "PlusToken",
                              "label": "+",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "albumName",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (albumType === MediaConstants.ALBUM_TYPE_ALL) {\n      return await userFileModel.getAllMediaItems();\n    } else if (albumType === MediaConstants.ABSTRACT_ALBUM_TYPE_MOVING_PHOTO) {\n      return await userFileModel.getAllMovingPhotoItems();\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "albumType === MediaConstants.ALBUM_TYPE_ALL",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "albumType",
                          "children": []
                        },
                        {
                          "type": "EqualsEqualsEqualsToken",
                          "label": "===",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "MediaConstants.ALBUM_TYPE_ALL",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "MediaConstants",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "ALBUM_TYPE_ALL",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      return await userFileModel.getAllMediaItems();\n    }",
                      "children": [
                        {
                          "type": "ReturnStatement",
                          "label": "return await userFileModel.getAllMediaItems();",
                          "children": [
                            {
                              "type": "AwaitExpression",
                              "label": "await userFileModel.getAllMediaItems()",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "userFileModel.getAllMediaItems()",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "userFileModel.getAllMediaItems",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "userFileModel",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "getAllMediaItems",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "IfStatement",
                      "label": "if (albumType === MediaConstants.ABSTRACT_ALBUM_TYPE_MOVING_PHOTO) {\n      return await userFileModel.getAllMovingPhotoItems();\n    }",
                      "children": [
                        {
                          "type": "BinaryExpression",
                          "label": "albumType === MediaConstants.ABSTRACT_ALBUM_TYPE_MOVING_PHOTO",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "albumType",
                              "children": []
                            },
                            {
                              "type": "EqualsEqualsEqualsToken",
                              "label": "===",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "MediaConstants.ABSTRACT_ALBUM_TYPE_MOVING_PHOTO",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "MediaConstants",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "ABSTRACT_ALBUM_TYPE_MOVING_PHOTO",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      return await userFileModel.getAllMovingPhotoItems();\n    }",
                          "children": [
                            {
                              "type": "ReturnStatement",
                              "label": "return await userFileModel.getAllMovingPhotoItems();",
                              "children": [
                                {
                                  "type": "AwaitExpression",
                                  "label": "await userFileModel.getAllMovingPhotoItems()",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "userFileModel.getAllMovingPhotoItems()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "userFileModel.getAllMovingPhotoItems",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "userFileModel",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getAllMovingPhotoItems",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let emptyPredicates = new dataSharePredicates.DataSharePredicates();",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let emptyPredicates = new dataSharePredicates.DataSharePredicates()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "emptyPredicates = new dataSharePredicates.DataSharePredicates()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "emptyPredicates",
                              "children": []
                            },
                            {
                              "type": "NewExpression",
                              "label": "new dataSharePredicates.DataSharePredicates()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "dataSharePredicates.DataSharePredicates",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "dataSharePredicates",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "DataSharePredicates",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "emptyPredicates.orderByDesc(photoAccessHelper.PhotoKeys.DATE_ADDED);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "emptyPredicates.orderByDesc(photoAccessHelper.PhotoKeys.DATE_ADDED)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "emptyPredicates.orderByDesc",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "emptyPredicates",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "orderByDesc",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "photoAccessHelper.PhotoKeys.DATE_ADDED",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "photoAccessHelper.PhotoKeys",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "photoAccessHelper",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "PhotoKeys",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "DATE_ADDED",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let emptyFetchOption = {\n      fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n      predicates: emptyPredicates\n    };",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let emptyFetchOption = {\n      fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n      predicates: emptyPredicates\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "emptyFetchOption = {\n      fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n      predicates: emptyPredicates\n    }",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "emptyFetchOption",
                              "children": []
                            },
                            {
                              "type": "ObjectLiteralExpression",
                              "label": "{\n      fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS,\n      predicates: emptyPredicates\n    }",
                              "children": [
                                {
                                  "type": "PropertyAssignment",
                                  "label": "fetchColumns: MediaConstants.FILE_ASSET_FETCH_COLUMNS",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "fetchColumns",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "MediaConstants.FILE_ASSET_FETCH_COLUMNS",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "MediaConstants",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "FILE_ASSET_FETCH_COLUMNS",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAssignment",
                                  "label": "predicates: emptyPredicates",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "predicates",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "emptyPredicates",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return await userFileModel.getAllMediaItemsByType(albumType, albumSubType, fetchOption, emptyFetchOption);",
                  "children": [
                    {
                      "type": "AwaitExpression",
                      "label": "await userFileModel.getAllMediaItemsByType(albumType, albumSubType, fetchOption, emptyFetchOption)",
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "userFileModel.getAllMediaItemsByType(albumType, albumSubType, fetchOption, emptyFetchOption)",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "userFileModel.getAllMediaItemsByType",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "userFileModel",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "getAllMediaItemsByType",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "albumType",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "albumSubType",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "fetchOption",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "emptyFetchOption",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "private getCount(): number {\n    let contentWidth = screenManager.getWinWidth();\n    let maxThumbWidth = px2vp(Constants.GRID_IMAGE_SIZE) * Constants.GRID_MAX_SIZE_RATIO;\n    let columns = Math.max(Constants.GRID_MIN_COUNT, Math.ceil((contentWidth + Constants.GRID_GUTTER) / (maxThumbWidth + Constants.GRID_GUTTER)));\n    let contentHeight = screenManager.getWinHeight() - Constants.ACTION_BAR_HEIGHT - screenManager.getNaviBarHeight();\n    let rows = Math.ceil((contentHeight + Constants.GRID_GUTTER) / (maxThumbWidth + Constants.GRID_GUTTER)) + 4;\n    return columns * rows;\n  }",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "getCount",
              "children": []
            },
            {
              "type": "NumberKeyword",
              "label": "number",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    let contentWidth = screenManager.getWinWidth();\n    let maxThumbWidth = px2vp(Constants.GRID_IMAGE_SIZE) * Constants.GRID_MAX_SIZE_RATIO;\n    let columns = Math.max(Constants.GRID_MIN_COUNT, Math.ceil((contentWidth + Constants.GRID_GUTTER) / (maxThumbWidth + Constants.GRID_GUTTER)));\n    let contentHeight = screenManager.getWinHeight() - Constants.ACTION_BAR_HEIGHT - screenManager.getNaviBarHeight();\n    let rows = Math.ceil((contentHeight + Constants.GRID_GUTTER) / (maxThumbWidth + Constants.GRID_GUTTER)) + 4;\n    return columns * rows;\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let contentWidth = screenManager.getWinWidth();",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let contentWidth = screenManager.getWinWidth()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "contentWidth = screenManager.getWinWidth()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "contentWidth",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "screenManager.getWinWidth()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "screenManager.getWinWidth",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "screenManager",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "getWinWidth",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let maxThumbWidth = px2vp(Constants.GRID_IMAGE_SIZE) * Constants.GRID_MAX_SIZE_RATIO;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let maxThumbWidth = px2vp(Constants.GRID_IMAGE_SIZE) * Constants.GRID_MAX_SIZE_RATIO",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "maxThumbWidth = px2vp(Constants.GRID_IMAGE_SIZE) * Constants.GRID_MAX_SIZE_RATIO",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "maxThumbWidth",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "px2vp(Constants.GRID_IMAGE_SIZE) * Constants.GRID_MAX_SIZE_RATIO",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "px2vp(Constants.GRID_IMAGE_SIZE)",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "px2vp",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Constants.GRID_IMAGE_SIZE",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Constants",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "GRID_IMAGE_SIZE",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "AsteriskToken",
                                  "label": "*",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Constants.GRID_MAX_SIZE_RATIO",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Constants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "GRID_MAX_SIZE_RATIO",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let columns = Math.max(Constants.GRID_MIN_COUNT, Math.ceil((contentWidth + Constants.GRID_GUTTER) / (maxThumbWidth + Constants.GRID_GUTTER)));",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let columns = Math.max(Constants.GRID_MIN_COUNT, Math.ceil((contentWidth + Constants.GRID_GUTTER) / (maxThumbWidth + Constants.GRID_GUTTER)))",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "columns = Math.max(Constants.GRID_MIN_COUNT, Math.ceil((contentWidth + Constants.GRID_GUTTER) / (maxThumbWidth + Constants.GRID_GUTTER)))",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "columns",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "Math.max(Constants.GRID_MIN_COUNT, Math.ceil((contentWidth + Constants.GRID_GUTTER) / (maxThumbWidth + Constants.GRID_GUTTER)))",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Math.max",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Math",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "max",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Constants.GRID_MIN_COUNT",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Constants",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "GRID_MIN_COUNT",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "Math.ceil((contentWidth + Constants.GRID_GUTTER) / (maxThumbWidth + Constants.GRID_GUTTER))",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Math.ceil",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Math",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "ceil",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "(contentWidth + Constants.GRID_GUTTER) / (maxThumbWidth + Constants.GRID_GUTTER)",
                                      "children": [
                                        {
                                          "type": "ParenthesizedExpression",
                                          "label": "(contentWidth + Constants.GRID_GUTTER)",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "contentWidth + Constants.GRID_GUTTER",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "contentWidth",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PlusToken",
                                                  "label": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "Constants.GRID_GUTTER",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "Constants",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "GRID_GUTTER",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "SlashToken",
                                          "label": "/",
                                          "children": []
                                        },
                                        {
                                          "type": "ParenthesizedExpression",
                                          "label": "(maxThumbWidth + Constants.GRID_GUTTER)",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "maxThumbWidth + Constants.GRID_GUTTER",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "maxThumbWidth",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PlusToken",
                                                  "label": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "Constants.GRID_GUTTER",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "Constants",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "GRID_GUTTER",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let contentHeight = screenManager.getWinHeight() - Constants.ACTION_BAR_HEIGHT - screenManager.getNaviBarHeight();",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let contentHeight = screenManager.getWinHeight() - Constants.ACTION_BAR_HEIGHT - screenManager.getNaviBarHeight()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "contentHeight = screenManager.getWinHeight() - Constants.ACTION_BAR_HEIGHT - screenManager.getNaviBarHeight()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "contentHeight",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "screenManager.getWinHeight() - Constants.ACTION_BAR_HEIGHT - screenManager.getNaviBarHeight()",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "screenManager.getWinHeight() - Constants.ACTION_BAR_HEIGHT",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "screenManager.getWinHeight()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "screenManager.getWinHeight",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "screenManager",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "getWinHeight",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "MinusToken",
                                      "label": "-",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Constants.ACTION_BAR_HEIGHT",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Constants",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "ACTION_BAR_HEIGHT",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "MinusToken",
                                  "label": "-",
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "screenManager.getNaviBarHeight()",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "screenManager.getNaviBarHeight",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "screenManager",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "getNaviBarHeight",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let rows = Math.ceil((contentHeight + Constants.GRID_GUTTER) / (maxThumbWidth + Constants.GRID_GUTTER)) + 4;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let rows = Math.ceil((contentHeight + Constants.GRID_GUTTER) / (maxThumbWidth + Constants.GRID_GUTTER)) + 4",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "rows = Math.ceil((contentHeight + Constants.GRID_GUTTER) / (maxThumbWidth + Constants.GRID_GUTTER)) + 4",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "rows",
                              "children": []
                            },
                            {
                              "type": "BinaryExpression",
                              "label": "Math.ceil((contentHeight + Constants.GRID_GUTTER) / (maxThumbWidth + Constants.GRID_GUTTER)) + 4",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "Math.ceil((contentHeight + Constants.GRID_GUTTER) / (maxThumbWidth + Constants.GRID_GUTTER))",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Math.ceil",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Math",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "ceil",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "(contentHeight + Constants.GRID_GUTTER) / (maxThumbWidth + Constants.GRID_GUTTER)",
                                      "children": [
                                        {
                                          "type": "ParenthesizedExpression",
                                          "label": "(contentHeight + Constants.GRID_GUTTER)",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "contentHeight + Constants.GRID_GUTTER",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "contentHeight",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PlusToken",
                                                  "label": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "Constants.GRID_GUTTER",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "Constants",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "GRID_GUTTER",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "SlashToken",
                                          "label": "/",
                                          "children": []
                                        },
                                        {
                                          "type": "ParenthesizedExpression",
                                          "label": "(maxThumbWidth + Constants.GRID_GUTTER)",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "maxThumbWidth + Constants.GRID_GUTTER",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "maxThumbWidth",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PlusToken",
                                                  "label": "+",
                                                  "children": []
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "Constants.GRID_GUTTER",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "Constants",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "GRID_GUTTER",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "PlusToken",
                                  "label": "+",
                                  "children": []
                                },
                                {
                                  "type": "FirstLiteralToken",
                                  "label": "4",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return columns * rows;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "columns * rows",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "columns",
                          "children": []
                        },
                        {
                          "type": "AsteriskToken",
                          "label": "*",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "rows",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "children": []
    }
  ]
}