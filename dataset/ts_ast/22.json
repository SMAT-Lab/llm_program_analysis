{
  "type": "SourceFile",
  "label": "import { Log } from '../utils/Log';\nimport { BroadcastConstants } from '../constants/BroadcastConstants';\nimport { ItemDataSource } from '../common/ItemDataSource';\nimport { AlbumDataItem } from '../common/AlbumDataItem';\nimport { MenuContext } from './MenuContext';\nimport { ProcessMenuOperation } from './ProcessMenuOperation';\n\nconst TAG = 'AlbumSetDeleteMenuOperation';\n\nexport class AlbumSetDeleteMenuOperation extends ProcessMenuOperation {\n  constructor(menuContext: MenuContext) {\n    super(menuContext);\n  }\n\n  doAction(): void {\n    if (this.menuContext == null) {\n      Log.warn(TAG, 'menuContext is null, return');\n      return;\n    }\n    let dataSource: ItemDataSource = this.menuContext.dataSource;\n    if (dataSource == null) {\n      this.count = this.menuContext.items.length;\n      this.items = this.menuContext.items;\n    } else {\n      this.count = dataSource.getSelectedCount();\n      this.items = dataSource.getSelectedItems();\n    }\n    if (this.count as number <= 0) {\n      Log.warn(TAG, 'count <= 0, return');\n      return;\n    }\n\n    this.confirmCallback = (): void => this.confirmCallbackBindImpl();\n    this.cancelCallback = (): void => this.cancelCallbackBindImpl();\n\n    let deleteResource: Resource = $r('app.string.dialog_delete');\n    this.getDialogTitle().then<void, void>((dialogTitle: Resource): void => {\n      this.menuContext.broadCast.emit(BroadcastConstants.SHOW_DELETE_DIALOG, [dialogTitle, deleteResource, this.confirmCallback, this.cancelCallback]);\n    })\n  }\n\n  private async getDialogTitle(): Promise<Resource> {\n    let videoCount = 0;\n    let photoCount = 0;\n    for (let i = 0; i < this.items.length; i++) {\n      let itemVideoCount = await  (this.items[i] as AlbumDataItem).getVideoCount();\n      videoCount += itemVideoCount;\n      photoCount += ((this.items[i] as AlbumDataItem).count - itemVideoCount);\n    }\n\n    if (this.count as number === 1) {\n      if (videoCount > 0 && photoCount > 0) {\n        return $r('app.string.recycle_single_album_tips', photoCount, videoCount);\n      }\n      if (videoCount > 0 && photoCount <= 0) {\n        return $r('app.string.recycle_single_album_with_videos_tips', videoCount);\n      }\n      if (videoCount <= 0 && photoCount > 0) {\n        return $r('app.string.recycle_single_album_with_photos_tips', photoCount);\n      }\n    } else {\n      if (videoCount > 0 && photoCount > 0) {\n        return $r('app.string.recycle_albums_tips', this.count, photoCount, videoCount);\n      }\n      if (videoCount > 0 && photoCount <= 0) {\n        return $r('app.string.recycle_albums_with_videos_tips', this.count, videoCount);\n      }\n      if (videoCount <= 0 && photoCount > 0) {\n        return $r('app.string.recycle_albums_with_photos_tips', this.count, photoCount);\n      }\n    }\n  }\n\n  requestOneBatchOperation(): void {\n    let item = this.items[this.currentBatch] as AlbumDataItem;\n    let promise: Promise<boolean> = item.onDelete();\n    promise.then<void, void>((): void => {\n      this.currentBatch++;\n      this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);\n      this.cyclicOperation();\n    }).catch<void>((): void => {\n      this.onError();\n    })\n    }\n\n  private confirmCallback(): void {\n    this.confirmCallbackBindImpl();\n  }\n\n  private confirmCallbackBindImpl(): void {\n    Log.info(TAG, 'AlbumSet delete confirm');\n    this.onOperationEnd = this.menuContext.onOperationEnd;\n    let onOperationStart: Function = this.menuContext.onOperationStart;\n\n    if (onOperationStart != null) onOperationStart();\n\n    this.menuContext.broadCast.emit(BroadcastConstants.DELETE_PROGRESS_DIALOG, [$r('app.string.action_delete'), this.count]);\n    this.processOperation();\n  }\n\n  private cancelCallback(): void {\n    this.cancelCallbackBindImpl();\n  }\n\n  private cancelCallbackBindImpl(): void {\n    Log.info(TAG, 'AlbumSet delete cancel');\n  }\n}\n",
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import { Log } from '../utils/Log';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ Log }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ Log }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "Log",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Log",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../utils/Log'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { BroadcastConstants } from '../constants/BroadcastConstants';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ BroadcastConstants }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ BroadcastConstants }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "BroadcastConstants",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "BroadcastConstants",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../constants/BroadcastConstants'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { ItemDataSource } from '../common/ItemDataSource';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ ItemDataSource }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ ItemDataSource }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "ItemDataSource",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "ItemDataSource",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../common/ItemDataSource'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { AlbumDataItem } from '../common/AlbumDataItem';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ AlbumDataItem }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ AlbumDataItem }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "AlbumDataItem",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "AlbumDataItem",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../common/AlbumDataItem'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { MenuContext } from './MenuContext';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ MenuContext }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ MenuContext }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "MenuContext",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "MenuContext",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./MenuContext'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { ProcessMenuOperation } from './ProcessMenuOperation';",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ ProcessMenuOperation }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ ProcessMenuOperation }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "ProcessMenuOperation",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "ProcessMenuOperation",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./ProcessMenuOperation'",
          "children": []
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "const TAG = 'AlbumSetDeleteMenuOperation';",
      "children": [
        {
          "type": "VariableDeclarationList",
          "label": "const TAG = 'AlbumSetDeleteMenuOperation'",
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "TAG = 'AlbumSetDeleteMenuOperation'",
              "children": [
                {
                  "type": "Identifier",
                  "label": "TAG",
                  "children": []
                },
                {
                  "type": "StringLiteral",
                  "label": "'AlbumSetDeleteMenuOperation'",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export class AlbumSetDeleteMenuOperation extends ProcessMenuOperation {\n  constructor(menuContext: MenuContext) {\n    super(menuContext);\n  }\n\n  doAction(): void {\n    if (this.menuContext == null) {\n      Log.warn(TAG, 'menuContext is null, return');\n      return;\n    }\n    let dataSource: ItemDataSource = this.menuContext.dataSource;\n    if (dataSource == null) {\n      this.count = this.menuContext.items.length;\n      this.items = this.menuContext.items;\n    } else {\n      this.count = dataSource.getSelectedCount();\n      this.items = dataSource.getSelectedItems();\n    }\n    if (this.count as number <= 0) {\n      Log.warn(TAG, 'count <= 0, return');\n      return;\n    }\n\n    this.confirmCallback = (): void => this.confirmCallbackBindImpl();\n    this.cancelCallback = (): void => this.cancelCallbackBindImpl();\n\n    let deleteResource: Resource = $r('app.string.dialog_delete');\n    this.getDialogTitle().then<void, void>((dialogTitle: Resource): void => {\n      this.menuContext.broadCast.emit(BroadcastConstants.SHOW_DELETE_DIALOG, [dialogTitle, deleteResource, this.confirmCallback, this.cancelCallback]);\n    })\n  }\n\n  private async getDialogTitle(): Promise<Resource> {\n    let videoCount = 0;\n    let photoCount = 0;\n    for (let i = 0; i < this.items.length; i++) {\n      let itemVideoCount = await  (this.items[i] as AlbumDataItem).getVideoCount();\n      videoCount += itemVideoCount;\n      photoCount += ((this.items[i] as AlbumDataItem).count - itemVideoCount);\n    }\n\n    if (this.count as number === 1) {\n      if (videoCount > 0 && photoCount > 0) {\n        return $r('app.string.recycle_single_album_tips', photoCount, videoCount);\n      }\n      if (videoCount > 0 && photoCount <= 0) {\n        return $r('app.string.recycle_single_album_with_videos_tips', videoCount);\n      }\n      if (videoCount <= 0 && photoCount > 0) {\n        return $r('app.string.recycle_single_album_with_photos_tips', photoCount);\n      }\n    } else {\n      if (videoCount > 0 && photoCount > 0) {\n        return $r('app.string.recycle_albums_tips', this.count, photoCount, videoCount);\n      }\n      if (videoCount > 0 && photoCount <= 0) {\n        return $r('app.string.recycle_albums_with_videos_tips', this.count, videoCount);\n      }\n      if (videoCount <= 0 && photoCount > 0) {\n        return $r('app.string.recycle_albums_with_photos_tips', this.count, photoCount);\n      }\n    }\n  }\n\n  requestOneBatchOperation(): void {\n    let item = this.items[this.currentBatch] as AlbumDataItem;\n    let promise: Promise<boolean> = item.onDelete();\n    promise.then<void, void>((): void => {\n      this.currentBatch++;\n      this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);\n      this.cyclicOperation();\n    }).catch<void>((): void => {\n      this.onError();\n    })\n    }\n\n  private confirmCallback(): void {\n    this.confirmCallbackBindImpl();\n  }\n\n  private confirmCallbackBindImpl(): void {\n    Log.info(TAG, 'AlbumSet delete confirm');\n    this.onOperationEnd = this.menuContext.onOperationEnd;\n    let onOperationStart: Function = this.menuContext.onOperationStart;\n\n    if (onOperationStart != null) onOperationStart();\n\n    this.menuContext.broadCast.emit(BroadcastConstants.DELETE_PROGRESS_DIALOG, [$r('app.string.action_delete'), this.count]);\n    this.processOperation();\n  }\n\n  private cancelCallback(): void {\n    this.cancelCallbackBindImpl();\n  }\n\n  private cancelCallbackBindImpl(): void {\n    Log.info(TAG, 'AlbumSet delete cancel');\n  }\n}",
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "children": []
        },
        {
          "type": "Identifier",
          "label": "AlbumSetDeleteMenuOperation",
          "children": []
        },
        {
          "type": "HeritageClause",
          "label": "extends ProcessMenuOperation",
          "children": [
            {
              "type": "ExpressionWithTypeArguments",
              "label": "ProcessMenuOperation",
              "children": [
                {
                  "type": "Identifier",
                  "label": "ProcessMenuOperation",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "Constructor",
          "label": "constructor(menuContext: MenuContext) {\n    super(menuContext);\n  }",
          "children": [
            {
              "type": "Parameter",
              "label": "menuContext: MenuContext",
              "children": [
                {
                  "type": "Identifier",
                  "label": "menuContext",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "MenuContext",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "MenuContext",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    super(menuContext);\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "super(menuContext);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "super(menuContext)",
                      "children": [
                        {
                          "type": "SuperKeyword",
                          "label": "super",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "menuContext",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "doAction(): void {\n    if (this.menuContext == null) {\n      Log.warn(TAG, 'menuContext is null, return');\n      return;\n    }\n    let dataSource: ItemDataSource = this.menuContext.dataSource;\n    if (dataSource == null) {\n      this.count = this.menuContext.items.length;\n      this.items = this.menuContext.items;\n    } else {\n      this.count = dataSource.getSelectedCount();\n      this.items = dataSource.getSelectedItems();\n    }\n    if (this.count as number <= 0) {\n      Log.warn(TAG, 'count <= 0, return');\n      return;\n    }\n\n    this.confirmCallback = (): void => this.confirmCallbackBindImpl();\n    this.cancelCallback = (): void => this.cancelCallbackBindImpl();\n\n    let deleteResource: Resource = $r('app.string.dialog_delete');\n    this.getDialogTitle().then<void, void>((dialogTitle: Resource): void => {\n      this.menuContext.broadCast.emit(BroadcastConstants.SHOW_DELETE_DIALOG, [dialogTitle, deleteResource, this.confirmCallback, this.cancelCallback]);\n    })\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "doAction",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    if (this.menuContext == null) {\n      Log.warn(TAG, 'menuContext is null, return');\n      return;\n    }\n    let dataSource: ItemDataSource = this.menuContext.dataSource;\n    if (dataSource == null) {\n      this.count = this.menuContext.items.length;\n      this.items = this.menuContext.items;\n    } else {\n      this.count = dataSource.getSelectedCount();\n      this.items = dataSource.getSelectedItems();\n    }\n    if (this.count as number <= 0) {\n      Log.warn(TAG, 'count <= 0, return');\n      return;\n    }\n\n    this.confirmCallback = (): void => this.confirmCallbackBindImpl();\n    this.cancelCallback = (): void => this.cancelCallbackBindImpl();\n\n    let deleteResource: Resource = $r('app.string.dialog_delete');\n    this.getDialogTitle().then<void, void>((dialogTitle: Resource): void => {\n      this.menuContext.broadCast.emit(BroadcastConstants.SHOW_DELETE_DIALOG, [dialogTitle, deleteResource, this.confirmCallback, this.cancelCallback]);\n    })\n  }",
              "children": [
                {
                  "type": "IfStatement",
                  "label": "if (this.menuContext == null) {\n      Log.warn(TAG, 'menuContext is null, return');\n      return;\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.menuContext == null",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.menuContext",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "menuContext",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "EqualsEqualsToken",
                          "label": "==",
                          "children": []
                        },
                        {
                          "type": "NullKeyword",
                          "label": "null",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      Log.warn(TAG, 'menuContext is null, return');\n      return;\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.warn(TAG, 'menuContext is null, return');",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.warn(TAG, 'menuContext is null, return')",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.warn",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "warn",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'menuContext is null, return'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ReturnStatement",
                          "label": "return;",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let dataSource: ItemDataSource = this.menuContext.dataSource;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let dataSource: ItemDataSource = this.menuContext.dataSource",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "dataSource: ItemDataSource = this.menuContext.dataSource",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "dataSource",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "ItemDataSource",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "ItemDataSource",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.menuContext.dataSource",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.menuContext",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "menuContext",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "dataSource",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (dataSource == null) {\n      this.count = this.menuContext.items.length;\n      this.items = this.menuContext.items;\n    } else {\n      this.count = dataSource.getSelectedCount();\n      this.items = dataSource.getSelectedItems();\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "dataSource == null",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "dataSource",
                          "children": []
                        },
                        {
                          "type": "EqualsEqualsToken",
                          "label": "==",
                          "children": []
                        },
                        {
                          "type": "NullKeyword",
                          "label": "null",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.count = this.menuContext.items.length;\n      this.items = this.menuContext.items;\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.count = this.menuContext.items.length;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.count = this.menuContext.items.length",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.count",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "count",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.menuContext.items.length",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.menuContext.items",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.menuContext",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "menuContext",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "items",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "length",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "this.items = this.menuContext.items;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.items = this.menuContext.items",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.items",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "items",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.menuContext.items",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.menuContext",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "menuContext",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "items",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.count = dataSource.getSelectedCount();\n      this.items = dataSource.getSelectedItems();\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.count = dataSource.getSelectedCount();",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.count = dataSource.getSelectedCount()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.count",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "count",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "dataSource.getSelectedCount()",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "dataSource.getSelectedCount",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "dataSource",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "getSelectedCount",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "this.items = dataSource.getSelectedItems();",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "this.items = dataSource.getSelectedItems()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.items",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "items",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "dataSource.getSelectedItems()",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "dataSource.getSelectedItems",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "dataSource",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "getSelectedItems",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (this.count as number <= 0) {\n      Log.warn(TAG, 'count <= 0, return');\n      return;\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.count as number <= 0",
                      "children": [
                        {
                          "type": "AsExpression",
                          "label": "this.count as number",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.count",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "count",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "NumberKeyword",
                              "label": "number",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "LessThanEqualsToken",
                          "label": "<=",
                          "children": []
                        },
                        {
                          "type": "FirstLiteralToken",
                          "label": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      Log.warn(TAG, 'count <= 0, return');\n      return;\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "Log.warn(TAG, 'count <= 0, return');",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "Log.warn(TAG, 'count <= 0, return')",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Log.warn",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Log",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "warn",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'count <= 0, return'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ReturnStatement",
                          "label": "return;",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.confirmCallback = (): void => this.confirmCallbackBindImpl();",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.confirmCallback = (): void => this.confirmCallbackBindImpl()",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.confirmCallback",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "confirmCallback",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "ArrowFunction",
                          "label": "(): void => this.confirmCallbackBindImpl()",
                          "children": [
                            {
                              "type": "VoidKeyword",
                              "label": "void",
                              "children": []
                            },
                            {
                              "type": "EqualsGreaterThanToken",
                              "label": "=>",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "this.confirmCallbackBindImpl()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.confirmCallbackBindImpl",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "confirmCallbackBindImpl",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.cancelCallback = (): void => this.cancelCallbackBindImpl();",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.cancelCallback = (): void => this.cancelCallbackBindImpl()",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.cancelCallback",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "cancelCallback",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "ArrowFunction",
                          "label": "(): void => this.cancelCallbackBindImpl()",
                          "children": [
                            {
                              "type": "VoidKeyword",
                              "label": "void",
                              "children": []
                            },
                            {
                              "type": "EqualsGreaterThanToken",
                              "label": "=>",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "this.cancelCallbackBindImpl()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.cancelCallbackBindImpl",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "cancelCallbackBindImpl",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let deleteResource: Resource = $r('app.string.dialog_delete');",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let deleteResource: Resource = $r('app.string.dialog_delete')",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "deleteResource: Resource = $r('app.string.dialog_delete')",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "deleteResource",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "Resource",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "Resource",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "CallExpression",
                              "label": "$r('app.string.dialog_delete')",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "$r",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'app.string.dialog_delete'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.getDialogTitle().then<void, void>((dialogTitle: Resource): void => {\n      this.menuContext.broadCast.emit(BroadcastConstants.SHOW_DELETE_DIALOG, [dialogTitle, deleteResource, this.confirmCallback, this.cancelCallback]);\n    })",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.getDialogTitle().then<void, void>((dialogTitle: Resource): void => {\n      this.menuContext.broadCast.emit(BroadcastConstants.SHOW_DELETE_DIALOG, [dialogTitle, deleteResource, this.confirmCallback, this.cancelCallback]);\n    })",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.getDialogTitle().then",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.getDialogTitle()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.getDialogTitle",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "getDialogTitle",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "then",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "VoidKeyword",
                          "label": "void",
                          "children": []
                        },
                        {
                          "type": "VoidKeyword",
                          "label": "void",
                          "children": []
                        },
                        {
                          "type": "ArrowFunction",
                          "label": "(dialogTitle: Resource): void => {\n      this.menuContext.broadCast.emit(BroadcastConstants.SHOW_DELETE_DIALOG, [dialogTitle, deleteResource, this.confirmCallback, this.cancelCallback]);\n    }",
                          "children": [
                            {
                              "type": "Parameter",
                              "label": "dialogTitle: Resource",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "dialogTitle",
                                  "children": []
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "Resource",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Resource",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "VoidKeyword",
                              "label": "void",
                              "children": []
                            },
                            {
                              "type": "EqualsGreaterThanToken",
                              "label": "=>",
                              "children": []
                            },
                            {
                              "type": "Block",
                              "label": "{\n      this.menuContext.broadCast.emit(BroadcastConstants.SHOW_DELETE_DIALOG, [dialogTitle, deleteResource, this.confirmCallback, this.cancelCallback]);\n    }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "this.menuContext.broadCast.emit(BroadcastConstants.SHOW_DELETE_DIALOG, [dialogTitle, deleteResource, this.confirmCallback, this.cancelCallback]);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "this.menuContext.broadCast.emit(BroadcastConstants.SHOW_DELETE_DIALOG, [dialogTitle, deleteResource, this.confirmCallback, this.cancelCallback])",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.menuContext.broadCast.emit",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.menuContext.broadCast",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "this.menuContext",
                                                  "children": [
                                                    {
                                                      "type": "ThisKeyword",
                                                      "label": "this",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "menuContext",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "broadCast",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "emit",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "BroadcastConstants.SHOW_DELETE_DIALOG",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "BroadcastConstants",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "SHOW_DELETE_DIALOG",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ArrayLiteralExpression",
                                          "label": "[dialogTitle, deleteResource, this.confirmCallback, this.cancelCallback]",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "dialogTitle",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "deleteResource",
                                              "children": []
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.confirmCallback",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "confirmCallback",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.cancelCallback",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "cancelCallback",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "private async getDialogTitle(): Promise<Resource> {\n    let videoCount = 0;\n    let photoCount = 0;\n    for (let i = 0; i < this.items.length; i++) {\n      let itemVideoCount = await  (this.items[i] as AlbumDataItem).getVideoCount();\n      videoCount += itemVideoCount;\n      photoCount += ((this.items[i] as AlbumDataItem).count - itemVideoCount);\n    }\n\n    if (this.count as number === 1) {\n      if (videoCount > 0 && photoCount > 0) {\n        return $r('app.string.recycle_single_album_tips', photoCount, videoCount);\n      }\n      if (videoCount > 0 && photoCount <= 0) {\n        return $r('app.string.recycle_single_album_with_videos_tips', videoCount);\n      }\n      if (videoCount <= 0 && photoCount > 0) {\n        return $r('app.string.recycle_single_album_with_photos_tips', photoCount);\n      }\n    } else {\n      if (videoCount > 0 && photoCount > 0) {\n        return $r('app.string.recycle_albums_tips', this.count, photoCount, videoCount);\n      }\n      if (videoCount > 0 && photoCount <= 0) {\n        return $r('app.string.recycle_albums_with_videos_tips', this.count, videoCount);\n      }\n      if (videoCount <= 0 && photoCount > 0) {\n        return $r('app.string.recycle_albums_with_photos_tips', this.count, photoCount);\n      }\n    }\n  }",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "AsyncKeyword",
              "label": "async",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "getDialogTitle",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "Promise<Resource>",
              "children": [
                {
                  "type": "Identifier",
                  "label": "Promise",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "Resource",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Resource",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    let videoCount = 0;\n    let photoCount = 0;\n    for (let i = 0; i < this.items.length; i++) {\n      let itemVideoCount = await  (this.items[i] as AlbumDataItem).getVideoCount();\n      videoCount += itemVideoCount;\n      photoCount += ((this.items[i] as AlbumDataItem).count - itemVideoCount);\n    }\n\n    if (this.count as number === 1) {\n      if (videoCount > 0 && photoCount > 0) {\n        return $r('app.string.recycle_single_album_tips', photoCount, videoCount);\n      }\n      if (videoCount > 0 && photoCount <= 0) {\n        return $r('app.string.recycle_single_album_with_videos_tips', videoCount);\n      }\n      if (videoCount <= 0 && photoCount > 0) {\n        return $r('app.string.recycle_single_album_with_photos_tips', photoCount);\n      }\n    } else {\n      if (videoCount > 0 && photoCount > 0) {\n        return $r('app.string.recycle_albums_tips', this.count, photoCount, videoCount);\n      }\n      if (videoCount > 0 && photoCount <= 0) {\n        return $r('app.string.recycle_albums_with_videos_tips', this.count, videoCount);\n      }\n      if (videoCount <= 0 && photoCount > 0) {\n        return $r('app.string.recycle_albums_with_photos_tips', this.count, photoCount);\n      }\n    }\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let videoCount = 0;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let videoCount = 0",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "videoCount = 0",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "videoCount",
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let photoCount = 0;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let photoCount = 0",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "photoCount = 0",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "photoCount",
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ForStatement",
                  "label": "for (let i = 0; i < this.items.length; i++) {\n      let itemVideoCount = await  (this.items[i] as AlbumDataItem).getVideoCount();\n      videoCount += itemVideoCount;\n      photoCount += ((this.items[i] as AlbumDataItem).count - itemVideoCount);\n    }",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let i = 0",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "i = 0",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "i",
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BinaryExpression",
                      "label": "i < this.items.length",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "i",
                          "children": []
                        },
                        {
                          "type": "FirstBinaryOperator",
                          "label": "<",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.items.length",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.items",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "items",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "length",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "PostfixUnaryExpression",
                      "label": "i++",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "i",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      let itemVideoCount = await  (this.items[i] as AlbumDataItem).getVideoCount();\n      videoCount += itemVideoCount;\n      photoCount += ((this.items[i] as AlbumDataItem).count - itemVideoCount);\n    }",
                      "children": [
                        {
                          "type": "FirstStatement",
                          "label": "let itemVideoCount = await  (this.items[i] as AlbumDataItem).getVideoCount();",
                          "children": [
                            {
                              "type": "VariableDeclarationList",
                              "label": "let itemVideoCount = await  (this.items[i] as AlbumDataItem).getVideoCount()",
                              "children": [
                                {
                                  "type": "VariableDeclaration",
                                  "label": "itemVideoCount = await  (this.items[i] as AlbumDataItem).getVideoCount()",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "itemVideoCount",
                                      "children": []
                                    },
                                    {
                                      "type": "AwaitExpression",
                                      "label": "await  (this.items[i] as AlbumDataItem).getVideoCount()",
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "(this.items[i] as AlbumDataItem).getVideoCount()",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "(this.items[i] as AlbumDataItem).getVideoCount",
                                              "children": [
                                                {
                                                  "type": "ParenthesizedExpression",
                                                  "label": "(this.items[i] as AlbumDataItem)",
                                                  "children": [
                                                    {
                                                      "type": "AsExpression",
                                                      "label": "this.items[i] as AlbumDataItem",
                                                      "children": [
                                                        {
                                                          "type": "ElementAccessExpression",
                                                          "label": "this.items[i]",
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "this.items",
                                                              "children": [
                                                                {
                                                                  "type": "ThisKeyword",
                                                                  "label": "this",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "items",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "i",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "TypeReference",
                                                          "label": "AlbumDataItem",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "AlbumDataItem",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "getVideoCount",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "videoCount += itemVideoCount;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "videoCount += itemVideoCount",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "videoCount",
                                  "children": []
                                },
                                {
                                  "type": "FirstCompoundAssignment",
                                  "label": "+=",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "itemVideoCount",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "photoCount += ((this.items[i] as AlbumDataItem).count - itemVideoCount);",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "photoCount += ((this.items[i] as AlbumDataItem).count - itemVideoCount)",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "photoCount",
                                  "children": []
                                },
                                {
                                  "type": "FirstCompoundAssignment",
                                  "label": "+=",
                                  "children": []
                                },
                                {
                                  "type": "ParenthesizedExpression",
                                  "label": "((this.items[i] as AlbumDataItem).count - itemVideoCount)",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "(this.items[i] as AlbumDataItem).count - itemVideoCount",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "(this.items[i] as AlbumDataItem).count",
                                          "children": [
                                            {
                                              "type": "ParenthesizedExpression",
                                              "label": "(this.items[i] as AlbumDataItem)",
                                              "children": [
                                                {
                                                  "type": "AsExpression",
                                                  "label": "this.items[i] as AlbumDataItem",
                                                  "children": [
                                                    {
                                                      "type": "ElementAccessExpression",
                                                      "label": "this.items[i]",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "this.items",
                                                          "children": [
                                                            {
                                                              "type": "ThisKeyword",
                                                              "label": "this",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "items",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "i",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "TypeReference",
                                                      "label": "AlbumDataItem",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "AlbumDataItem",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "count",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "MinusToken",
                                          "label": "-",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "itemVideoCount",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (this.count as number === 1) {\n      if (videoCount > 0 && photoCount > 0) {\n        return $r('app.string.recycle_single_album_tips', photoCount, videoCount);\n      }\n      if (videoCount > 0 && photoCount <= 0) {\n        return $r('app.string.recycle_single_album_with_videos_tips', videoCount);\n      }\n      if (videoCount <= 0 && photoCount > 0) {\n        return $r('app.string.recycle_single_album_with_photos_tips', photoCount);\n      }\n    } else {\n      if (videoCount > 0 && photoCount > 0) {\n        return $r('app.string.recycle_albums_tips', this.count, photoCount, videoCount);\n      }\n      if (videoCount > 0 && photoCount <= 0) {\n        return $r('app.string.recycle_albums_with_videos_tips', this.count, videoCount);\n      }\n      if (videoCount <= 0 && photoCount > 0) {\n        return $r('app.string.recycle_albums_with_photos_tips', this.count, photoCount);\n      }\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.count as number === 1",
                      "children": [
                        {
                          "type": "AsExpression",
                          "label": "this.count as number",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.count",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "count",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "NumberKeyword",
                              "label": "number",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "EqualsEqualsEqualsToken",
                          "label": "===",
                          "children": []
                        },
                        {
                          "type": "FirstLiteralToken",
                          "label": "1",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      if (videoCount > 0 && photoCount > 0) {\n        return $r('app.string.recycle_single_album_tips', photoCount, videoCount);\n      }\n      if (videoCount > 0 && photoCount <= 0) {\n        return $r('app.string.recycle_single_album_with_videos_tips', videoCount);\n      }\n      if (videoCount <= 0 && photoCount > 0) {\n        return $r('app.string.recycle_single_album_with_photos_tips', photoCount);\n      }\n    }",
                      "children": [
                        {
                          "type": "IfStatement",
                          "label": "if (videoCount > 0 && photoCount > 0) {\n        return $r('app.string.recycle_single_album_tips', photoCount, videoCount);\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "videoCount > 0 && photoCount > 0",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "videoCount > 0",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "videoCount",
                                      "children": []
                                    },
                                    {
                                      "type": "GreaterThanToken",
                                      "label": ">",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "AmpersandAmpersandToken",
                                  "label": "&&",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "photoCount > 0",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "photoCount",
                                      "children": []
                                    },
                                    {
                                      "type": "GreaterThanToken",
                                      "label": ">",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        return $r('app.string.recycle_single_album_tips', photoCount, videoCount);\n      }",
                              "children": [
                                {
                                  "type": "ReturnStatement",
                                  "label": "return $r('app.string.recycle_single_album_tips', photoCount, videoCount);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "$r('app.string.recycle_single_album_tips', photoCount, videoCount)",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "$r",
                                          "children": []
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "'app.string.recycle_single_album_tips'",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "photoCount",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "videoCount",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "IfStatement",
                          "label": "if (videoCount > 0 && photoCount <= 0) {\n        return $r('app.string.recycle_single_album_with_videos_tips', videoCount);\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "videoCount > 0 && photoCount <= 0",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "videoCount > 0",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "videoCount",
                                      "children": []
                                    },
                                    {
                                      "type": "GreaterThanToken",
                                      "label": ">",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "AmpersandAmpersandToken",
                                  "label": "&&",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "photoCount <= 0",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "photoCount",
                                      "children": []
                                    },
                                    {
                                      "type": "LessThanEqualsToken",
                                      "label": "<=",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        return $r('app.string.recycle_single_album_with_videos_tips', videoCount);\n      }",
                              "children": [
                                {
                                  "type": "ReturnStatement",
                                  "label": "return $r('app.string.recycle_single_album_with_videos_tips', videoCount);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "$r('app.string.recycle_single_album_with_videos_tips', videoCount)",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "$r",
                                          "children": []
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "'app.string.recycle_single_album_with_videos_tips'",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "videoCount",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "IfStatement",
                          "label": "if (videoCount <= 0 && photoCount > 0) {\n        return $r('app.string.recycle_single_album_with_photos_tips', photoCount);\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "videoCount <= 0 && photoCount > 0",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "videoCount <= 0",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "videoCount",
                                      "children": []
                                    },
                                    {
                                      "type": "LessThanEqualsToken",
                                      "label": "<=",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "AmpersandAmpersandToken",
                                  "label": "&&",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "photoCount > 0",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "photoCount",
                                      "children": []
                                    },
                                    {
                                      "type": "GreaterThanToken",
                                      "label": ">",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        return $r('app.string.recycle_single_album_with_photos_tips', photoCount);\n      }",
                              "children": [
                                {
                                  "type": "ReturnStatement",
                                  "label": "return $r('app.string.recycle_single_album_with_photos_tips', photoCount);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "$r('app.string.recycle_single_album_with_photos_tips', photoCount)",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "$r",
                                          "children": []
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "'app.string.recycle_single_album_with_photos_tips'",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "photoCount",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      if (videoCount > 0 && photoCount > 0) {\n        return $r('app.string.recycle_albums_tips', this.count, photoCount, videoCount);\n      }\n      if (videoCount > 0 && photoCount <= 0) {\n        return $r('app.string.recycle_albums_with_videos_tips', this.count, videoCount);\n      }\n      if (videoCount <= 0 && photoCount > 0) {\n        return $r('app.string.recycle_albums_with_photos_tips', this.count, photoCount);\n      }\n    }",
                      "children": [
                        {
                          "type": "IfStatement",
                          "label": "if (videoCount > 0 && photoCount > 0) {\n        return $r('app.string.recycle_albums_tips', this.count, photoCount, videoCount);\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "videoCount > 0 && photoCount > 0",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "videoCount > 0",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "videoCount",
                                      "children": []
                                    },
                                    {
                                      "type": "GreaterThanToken",
                                      "label": ">",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "AmpersandAmpersandToken",
                                  "label": "&&",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "photoCount > 0",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "photoCount",
                                      "children": []
                                    },
                                    {
                                      "type": "GreaterThanToken",
                                      "label": ">",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        return $r('app.string.recycle_albums_tips', this.count, photoCount, videoCount);\n      }",
                              "children": [
                                {
                                  "type": "ReturnStatement",
                                  "label": "return $r('app.string.recycle_albums_tips', this.count, photoCount, videoCount);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "$r('app.string.recycle_albums_tips', this.count, photoCount, videoCount)",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "$r",
                                          "children": []
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "'app.string.recycle_albums_tips'",
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.count",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "count",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "photoCount",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "videoCount",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "IfStatement",
                          "label": "if (videoCount > 0 && photoCount <= 0) {\n        return $r('app.string.recycle_albums_with_videos_tips', this.count, videoCount);\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "videoCount > 0 && photoCount <= 0",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "videoCount > 0",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "videoCount",
                                      "children": []
                                    },
                                    {
                                      "type": "GreaterThanToken",
                                      "label": ">",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "AmpersandAmpersandToken",
                                  "label": "&&",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "photoCount <= 0",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "photoCount",
                                      "children": []
                                    },
                                    {
                                      "type": "LessThanEqualsToken",
                                      "label": "<=",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        return $r('app.string.recycle_albums_with_videos_tips', this.count, videoCount);\n      }",
                              "children": [
                                {
                                  "type": "ReturnStatement",
                                  "label": "return $r('app.string.recycle_albums_with_videos_tips', this.count, videoCount);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "$r('app.string.recycle_albums_with_videos_tips', this.count, videoCount)",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "$r",
                                          "children": []
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "'app.string.recycle_albums_with_videos_tips'",
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.count",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "count",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "videoCount",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "IfStatement",
                          "label": "if (videoCount <= 0 && photoCount > 0) {\n        return $r('app.string.recycle_albums_with_photos_tips', this.count, photoCount);\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "videoCount <= 0 && photoCount > 0",
                              "children": [
                                {
                                  "type": "BinaryExpression",
                                  "label": "videoCount <= 0",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "videoCount",
                                      "children": []
                                    },
                                    {
                                      "type": "LessThanEqualsToken",
                                      "label": "<=",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "AmpersandAmpersandToken",
                                  "label": "&&",
                                  "children": []
                                },
                                {
                                  "type": "BinaryExpression",
                                  "label": "photoCount > 0",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "photoCount",
                                      "children": []
                                    },
                                    {
                                      "type": "GreaterThanToken",
                                      "label": ">",
                                      "children": []
                                    },
                                    {
                                      "type": "FirstLiteralToken",
                                      "label": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        return $r('app.string.recycle_albums_with_photos_tips', this.count, photoCount);\n      }",
                              "children": [
                                {
                                  "type": "ReturnStatement",
                                  "label": "return $r('app.string.recycle_albums_with_photos_tips', this.count, photoCount);",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "$r('app.string.recycle_albums_with_photos_tips', this.count, photoCount)",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "$r",
                                          "children": []
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "'app.string.recycle_albums_with_photos_tips'",
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.count",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "count",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "photoCount",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "requestOneBatchOperation(): void {\n    let item = this.items[this.currentBatch] as AlbumDataItem;\n    let promise: Promise<boolean> = item.onDelete();\n    promise.then<void, void>((): void => {\n      this.currentBatch++;\n      this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);\n      this.cyclicOperation();\n    }).catch<void>((): void => {\n      this.onError();\n    })\n    }",
          "children": [
            {
              "type": "Identifier",
              "label": "requestOneBatchOperation",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    let item = this.items[this.currentBatch] as AlbumDataItem;\n    let promise: Promise<boolean> = item.onDelete();\n    promise.then<void, void>((): void => {\n      this.currentBatch++;\n      this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);\n      this.cyclicOperation();\n    }).catch<void>((): void => {\n      this.onError();\n    })\n    }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let item = this.items[this.currentBatch] as AlbumDataItem;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let item = this.items[this.currentBatch] as AlbumDataItem",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "item = this.items[this.currentBatch] as AlbumDataItem",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "item",
                              "children": []
                            },
                            {
                              "type": "AsExpression",
                              "label": "this.items[this.currentBatch] as AlbumDataItem",
                              "children": [
                                {
                                  "type": "ElementAccessExpression",
                                  "label": "this.items[this.currentBatch]",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.items",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "items",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.currentBatch",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "currentBatch",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "AlbumDataItem",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "AlbumDataItem",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let promise: Promise<boolean> = item.onDelete();",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let promise: Promise<boolean> = item.onDelete()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "promise: Promise<boolean> = item.onDelete()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "promise",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "Promise<boolean>",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "Promise",
                                  "children": []
                                },
                                {
                                  "type": "BooleanKeyword",
                                  "label": "boolean",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "CallExpression",
                              "label": "item.onDelete()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "item.onDelete",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "item",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "onDelete",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "promise.then<void, void>((): void => {\n      this.currentBatch++;\n      this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);\n      this.cyclicOperation();\n    }).catch<void>((): void => {\n      this.onError();\n    })",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "promise.then<void, void>((): void => {\n      this.currentBatch++;\n      this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);\n      this.cyclicOperation();\n    }).catch<void>((): void => {\n      this.onError();\n    })",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "promise.then<void, void>((): void => {\n      this.currentBatch++;\n      this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);\n      this.cyclicOperation();\n    }).catch",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "promise.then<void, void>((): void => {\n      this.currentBatch++;\n      this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);\n      this.cyclicOperation();\n    })",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "promise.then",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "promise",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "then",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "VoidKeyword",
                                  "label": "void",
                                  "children": []
                                },
                                {
                                  "type": "VoidKeyword",
                                  "label": "void",
                                  "children": []
                                },
                                {
                                  "type": "ArrowFunction",
                                  "label": "(): void => {\n      this.currentBatch++;\n      this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);\n      this.cyclicOperation();\n    }",
                                  "children": [
                                    {
                                      "type": "VoidKeyword",
                                      "label": "void",
                                      "children": []
                                    },
                                    {
                                      "type": "EqualsGreaterThanToken",
                                      "label": "=>",
                                      "children": []
                                    },
                                    {
                                      "type": "Block",
                                      "label": "{\n      this.currentBatch++;\n      this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);\n      this.cyclicOperation();\n    }",
                                      "children": [
                                        {
                                          "type": "ExpressionStatement",
                                          "label": "this.currentBatch++;",
                                          "children": [
                                            {
                                              "type": "PostfixUnaryExpression",
                                              "label": "this.currentBatch++",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "this.currentBatch",
                                                  "children": [
                                                    {
                                                      "type": "ThisKeyword",
                                                      "label": "this",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "currentBatch",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "label": "this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch])",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "this.menuContext.broadCast.emit",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "this.menuContext.broadCast",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "this.menuContext",
                                                          "children": [
                                                            {
                                                              "type": "ThisKeyword",
                                                              "label": "this",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "menuContext",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "broadCast",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "emit",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "BroadcastConstants.UPDATE_PROGRESS",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "BroadcastConstants",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "UPDATE_PROGRESS",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "ArrayLiteralExpression",
                                                  "label": "[this.getExpectProgress(), this.currentBatch]",
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "this.getExpectProgress()",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "this.getExpectProgress",
                                                          "children": [
                                                            {
                                                              "type": "ThisKeyword",
                                                              "label": "this",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "getExpectProgress",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "this.currentBatch",
                                                      "children": [
                                                        {
                                                          "type": "ThisKeyword",
                                                          "label": "this",
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "currentBatch",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "label": "this.cyclicOperation();",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "this.cyclicOperation()",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "this.cyclicOperation",
                                                  "children": [
                                                    {
                                                      "type": "ThisKeyword",
                                                      "label": "this",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "cyclicOperation",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "catch",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "VoidKeyword",
                          "label": "void",
                          "children": []
                        },
                        {
                          "type": "ArrowFunction",
                          "label": "(): void => {\n      this.onError();\n    }",
                          "children": [
                            {
                              "type": "VoidKeyword",
                              "label": "void",
                              "children": []
                            },
                            {
                              "type": "EqualsGreaterThanToken",
                              "label": "=>",
                              "children": []
                            },
                            {
                              "type": "Block",
                              "label": "{\n      this.onError();\n    }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "this.onError();",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "this.onError()",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.onError",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "onError",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "private confirmCallback(): void {\n    this.confirmCallbackBindImpl();\n  }",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "confirmCallback",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    this.confirmCallbackBindImpl();\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.confirmCallbackBindImpl();",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.confirmCallbackBindImpl()",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.confirmCallbackBindImpl",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "confirmCallbackBindImpl",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "private confirmCallbackBindImpl(): void {\n    Log.info(TAG, 'AlbumSet delete confirm');\n    this.onOperationEnd = this.menuContext.onOperationEnd;\n    let onOperationStart: Function = this.menuContext.onOperationStart;\n\n    if (onOperationStart != null) onOperationStart();\n\n    this.menuContext.broadCast.emit(BroadcastConstants.DELETE_PROGRESS_DIALOG, [$r('app.string.action_delete'), this.count]);\n    this.processOperation();\n  }",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "confirmCallbackBindImpl",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'AlbumSet delete confirm');\n    this.onOperationEnd = this.menuContext.onOperationEnd;\n    let onOperationStart: Function = this.menuContext.onOperationStart;\n\n    if (onOperationStart != null) onOperationStart();\n\n    this.menuContext.broadCast.emit(BroadcastConstants.DELETE_PROGRESS_DIALOG, [$r('app.string.action_delete'), this.count]);\n    this.processOperation();\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'AlbumSet delete confirm');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'AlbumSet delete confirm')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'AlbumSet delete confirm'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.onOperationEnd = this.menuContext.onOperationEnd;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.onOperationEnd = this.menuContext.onOperationEnd",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.onOperationEnd",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "onOperationEnd",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.menuContext.onOperationEnd",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.menuContext",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "menuContext",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "onOperationEnd",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let onOperationStart: Function = this.menuContext.onOperationStart;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let onOperationStart: Function = this.menuContext.onOperationStart",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "onOperationStart: Function = this.menuContext.onOperationStart",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "onOperationStart",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "Function",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "Function",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.menuContext.onOperationStart",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.menuContext",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "menuContext",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "onOperationStart",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (onOperationStart != null) onOperationStart();",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "onOperationStart != null",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "onOperationStart",
                          "children": []
                        },
                        {
                          "type": "ExclamationEqualsToken",
                          "label": "!=",
                          "children": []
                        },
                        {
                          "type": "NullKeyword",
                          "label": "null",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "ExpressionStatement",
                      "label": "onOperationStart();",
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "onOperationStart()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "onOperationStart",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.menuContext.broadCast.emit(BroadcastConstants.DELETE_PROGRESS_DIALOG, [$r('app.string.action_delete'), this.count]);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.menuContext.broadCast.emit(BroadcastConstants.DELETE_PROGRESS_DIALOG, [$r('app.string.action_delete'), this.count])",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.menuContext.broadCast.emit",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.menuContext.broadCast",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.menuContext",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "menuContext",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "broadCast",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "emit",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "BroadcastConstants.DELETE_PROGRESS_DIALOG",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "BroadcastConstants",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "DELETE_PROGRESS_DIALOG",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ArrayLiteralExpression",
                          "label": "[$r('app.string.action_delete'), this.count]",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "$r('app.string.action_delete')",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "$r",
                                  "children": []
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'app.string.action_delete'",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.count",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "count",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "this.processOperation();",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.processOperation()",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.processOperation",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "processOperation",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "private cancelCallback(): void {\n    this.cancelCallbackBindImpl();\n  }",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "cancelCallback",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    this.cancelCallbackBindImpl();\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.cancelCallbackBindImpl();",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "this.cancelCallbackBindImpl()",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.cancelCallbackBindImpl",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "cancelCallbackBindImpl",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "private cancelCallbackBindImpl(): void {\n    Log.info(TAG, 'AlbumSet delete cancel');\n  }",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "cancelCallbackBindImpl",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    Log.info(TAG, 'AlbumSet delete cancel');\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "Log.info(TAG, 'AlbumSet delete cancel');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Log.info(TAG, 'AlbumSet delete cancel')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Log.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Log",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'AlbumSet delete cancel'",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "children": []
    }
  ]
}