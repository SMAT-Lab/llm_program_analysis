{
  "type": "SourceFile",
  "label": "import axios from 'axios';\nimport { Novu } from '../novu';\nconst mockConfig = {\n  apiKey: '1234',\n};\njest.mock('axios');\ndescribe('test use of novus node package - InboundParse class', () => {\n  const mockedAxios = axios as jest.Mocked<typeof axios>;\n  let novu: Novu;\n  beforeEach(() => {\n    mockedAxios.create.mockReturnThis();\n    novu = new Novu(mockConfig.apiKey);\n  });\n  test('should get inbound parse correctly', async () => {\n    mockedAxios.get.mockResolvedValue({});\n    await novu.inboundParse.getMxStatus();\n    expect(mockedAxios.get).toHaveBeenCalled();\n    expect(mockedAxios.get).toHaveBeenCalledWith('/inbound-parse/mx/status');\n  });\n});",
  "start_token": 0,
  "end_token": 138,
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import axios from 'axios';",
      "start_token": 0,
      "end_token": 4,
      "children": [
        {
          "type": "ImportClause",
          "label": "axios",
          "start_token": 1,
          "end_token": 1,
          "children": [
            {
              "type": "Identifier",
              "label": "axios",
              "start_token": 1,
              "end_token": 1,
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'axios'",
          "start_token": 3,
          "end_token": 3,
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { Novu } from '../novu';",
      "start_token": 5,
      "end_token": 11,
      "children": [
        {
          "type": "ImportClause",
          "label": "{ Novu }",
          "start_token": 6,
          "end_token": 8,
          "children": [
            {
              "type": "NamedImports",
              "label": "{ Novu }",
              "start_token": 6,
              "end_token": 8,
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "Novu",
                  "start_token": 7,
                  "end_token": 7,
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Novu",
                      "start_token": 7,
                      "end_token": 7,
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../novu'",
          "start_token": 10,
          "end_token": 10,
          "children": []
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "const mockConfig = {\n  apiKey: '1234',\n};",
      "start_token": 12,
      "end_token": 21,
      "children": [
        {
          "type": "VariableDeclarationList",
          "label": "const mockConfig = {\n  apiKey: '1234',\n}",
          "start_token": 12,
          "end_token": 20,
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "mockConfig = {\n  apiKey: '1234',\n}",
              "start_token": 13,
              "end_token": 20,
              "children": [
                {
                  "type": "Identifier",
                  "label": "mockConfig",
                  "start_token": 13,
                  "end_token": 13,
                  "children": []
                },
                {
                  "type": "ObjectLiteralExpression",
                  "label": "{\n  apiKey: '1234',\n}",
                  "start_token": 15,
                  "end_token": 20,
                  "children": [
                    {
                      "type": "PropertyAssignment",
                      "label": "apiKey: '1234'",
                      "start_token": 16,
                      "end_token": 18,
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "apiKey",
                          "start_token": 16,
                          "end_token": 16,
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'1234'",
                          "start_token": 18,
                          "end_token": 18,
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "label": "jest.mock('axios');",
      "start_token": 22,
      "end_token": 28,
      "children": [
        {
          "type": "CallExpression",
          "label": "jest.mock('axios')",
          "start_token": 22,
          "end_token": 27,
          "children": [
            {
              "type": "PropertyAccessExpression",
              "label": "jest.mock",
              "start_token": 22,
              "end_token": 24,
              "children": [
                {
                  "type": "Identifier",
                  "label": "jest",
                  "start_token": 22,
                  "end_token": 22,
                  "children": []
                },
                {
                  "type": "Identifier",
                  "label": "mock",
                  "start_token": 24,
                  "end_token": 24,
                  "children": []
                }
              ]
            },
            {
              "type": "StringLiteral",
              "label": "'axios'",
              "start_token": 26,
              "end_token": 26,
              "children": []
            }
          ]
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "label": "describe('test use of novus node package - InboundParse class', () => {\n  const mockedAxios = axios as jest.Mocked<typeof axios>;\n  let novu: Novu;\n  beforeEach(() => {\n    mockedAxios.create.mockReturnThis();\n    novu = new Novu(mockConfig.apiKey);\n  });\n  test('should get inbound parse correctly', async () => {\n    mockedAxios.get.mockResolvedValue({});\n    await novu.inboundParse.getMxStatus();\n    expect(mockedAxios.get).toHaveBeenCalled();\n    expect(mockedAxios.get).toHaveBeenCalledWith('/inbound-parse/mx/status');\n  });\n});",
      "start_token": 29,
      "end_token": 138,
      "children": [
        {
          "type": "CallExpression",
          "label": "describe('test use of novus node package - InboundParse class', () => {\n  const mockedAxios = axios as jest.Mocked<typeof axios>;\n  let novu: Novu;\n  beforeEach(() => {\n    mockedAxios.create.mockReturnThis();\n    novu = new Novu(mockConfig.apiKey);\n  });\n  test('should get inbound parse correctly', async () => {\n    mockedAxios.get.mockResolvedValue({});\n    await novu.inboundParse.getMxStatus();\n    expect(mockedAxios.get).toHaveBeenCalled();\n    expect(mockedAxios.get).toHaveBeenCalledWith('/inbound-parse/mx/status');\n  });\n})",
          "start_token": 29,
          "end_token": 137,
          "children": [
            {
              "type": "Identifier",
              "label": "describe",
              "start_token": 29,
              "end_token": 29,
              "children": []
            },
            {
              "type": "StringLiteral",
              "label": "'test use of novus node package - InboundParse class'",
              "start_token": 31,
              "end_token": 31,
              "children": []
            },
            {
              "type": "ArrowFunction",
              "label": "() => {\n  const mockedAxios = axios as jest.Mocked<typeof axios>;\n  let novu: Novu;\n  beforeEach(() => {\n    mockedAxios.create.mockReturnThis();\n    novu = new Novu(mockConfig.apiKey);\n  });\n  test('should get inbound parse correctly', async () => {\n    mockedAxios.get.mockResolvedValue({});\n    await novu.inboundParse.getMxStatus();\n    expect(mockedAxios.get).toHaveBeenCalled();\n    expect(mockedAxios.get).toHaveBeenCalledWith('/inbound-parse/mx/status');\n  });\n}",
              "start_token": 33,
              "end_token": 136,
              "children": [
                {
                  "type": "EqualsGreaterThanToken",
                  "label": "=>",
                  "start_token": 35,
                  "end_token": 35,
                  "children": []
                },
                {
                  "type": "Block",
                  "label": "{\n  const mockedAxios = axios as jest.Mocked<typeof axios>;\n  let novu: Novu;\n  beforeEach(() => {\n    mockedAxios.create.mockReturnThis();\n    novu = new Novu(mockConfig.apiKey);\n  });\n  test('should get inbound parse correctly', async () => {\n    mockedAxios.get.mockResolvedValue({});\n    await novu.inboundParse.getMxStatus();\n    expect(mockedAxios.get).toHaveBeenCalled();\n    expect(mockedAxios.get).toHaveBeenCalledWith('/inbound-parse/mx/status');\n  });\n}",
                  "start_token": 36,
                  "end_token": 136,
                  "children": [
                    {
                      "type": "FirstStatement",
                      "label": "const mockedAxios = axios as jest.Mocked<typeof axios>;",
                      "start_token": 37,
                      "end_token": 49,
                      "children": [
                        {
                          "type": "VariableDeclarationList",
                          "label": "const mockedAxios = axios as jest.Mocked<typeof axios>",
                          "start_token": 37,
                          "end_token": 48,
                          "children": [
                            {
                              "type": "VariableDeclaration",
                              "label": "mockedAxios = axios as jest.Mocked<typeof axios>",
                              "start_token": 38,
                              "end_token": 48,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "mockedAxios",
                                  "start_token": 38,
                                  "end_token": 38,
                                  "children": []
                                },
                                {
                                  "type": "AsExpression",
                                  "label": "axios as jest.Mocked<typeof axios>",
                                  "start_token": 40,
                                  "end_token": 48,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "axios",
                                      "start_token": 40,
                                      "end_token": 40,
                                      "children": []
                                    },
                                    {
                                      "type": "TypeReference",
                                      "label": "jest.Mocked<typeof axios>",
                                      "start_token": 42,
                                      "end_token": 48,
                                      "children": [
                                        {
                                          "type": "FirstNode",
                                          "label": "jest.Mocked",
                                          "start_token": 42,
                                          "end_token": 44,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "jest",
                                              "start_token": 42,
                                              "end_token": 42,
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "Mocked",
                                              "start_token": 44,
                                              "end_token": 44,
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "TypeQuery",
                                          "label": "typeof axios",
                                          "start_token": 46,
                                          "end_token": 47,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "axios",
                                              "start_token": 47,
                                              "end_token": 47,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "FirstStatement",
                      "label": "let novu: Novu;",
                      "start_token": 50,
                      "end_token": 54,
                      "children": [
                        {
                          "type": "VariableDeclarationList",
                          "label": "let novu: Novu",
                          "start_token": 50,
                          "end_token": 53,
                          "children": [
                            {
                              "type": "VariableDeclaration",
                              "label": "novu: Novu",
                              "start_token": 51,
                              "end_token": 53,
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "novu",
                                  "start_token": 51,
                                  "end_token": 51,
                                  "children": []
                                },
                                {
                                  "type": "TypeReference",
                                  "label": "Novu",
                                  "start_token": 53,
                                  "end_token": 53,
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Novu",
                                      "start_token": 53,
                                      "end_token": 53,
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "ExpressionStatement",
                      "label": "beforeEach(() => {\n    mockedAxios.create.mockReturnThis();\n    novu = new Novu(mockConfig.apiKey);\n  });",
                      "start_token": 55,
                      "end_token": 81,
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "beforeEach(() => {\n    mockedAxios.create.mockReturnThis();\n    novu = new Novu(mockConfig.apiKey);\n  })",
                          "start_token": 55,
                          "end_token": 80,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "beforeEach",
                              "start_token": 55,
                              "end_token": 55,
                              "children": []
                            },
                            {
                              "type": "ArrowFunction",
                              "label": "() => {\n    mockedAxios.create.mockReturnThis();\n    novu = new Novu(mockConfig.apiKey);\n  }",
                              "start_token": 57,
                              "end_token": 79,
                              "children": [
                                {
                                  "type": "EqualsGreaterThanToken",
                                  "label": "=>",
                                  "start_token": 59,
                                  "end_token": 59,
                                  "children": []
                                },
                                {
                                  "type": "Block",
                                  "label": "{\n    mockedAxios.create.mockReturnThis();\n    novu = new Novu(mockConfig.apiKey);\n  }",
                                  "start_token": 60,
                                  "end_token": 79,
                                  "children": [
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "mockedAxios.create.mockReturnThis();",
                                      "start_token": 61,
                                      "end_token": 68,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "mockedAxios.create.mockReturnThis()",
                                          "start_token": 61,
                                          "end_token": 67,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "mockedAxios.create.mockReturnThis",
                                              "start_token": 61,
                                              "end_token": 65,
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "mockedAxios.create",
                                                  "start_token": 61,
                                                  "end_token": 63,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "mockedAxios",
                                                      "start_token": 61,
                                                      "end_token": 61,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "create",
                                                      "start_token": 63,
                                                      "end_token": 63,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "mockReturnThis",
                                                  "start_token": 65,
                                                  "end_token": 65,
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "novu = new Novu(mockConfig.apiKey);",
                                      "start_token": 69,
                                      "end_token": 78,
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "novu = new Novu(mockConfig.apiKey)",
                                          "start_token": 69,
                                          "end_token": 77,
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "novu",
                                              "start_token": 69,
                                              "end_token": 69,
                                              "children": []
                                            },
                                            {
                                              "type": "FirstAssignment",
                                              "label": "=",
                                              "start_token": 70,
                                              "end_token": 70,
                                              "children": []
                                            },
                                            {
                                              "type": "NewExpression",
                                              "label": "new Novu(mockConfig.apiKey)",
                                              "start_token": 71,
                                              "end_token": 77,
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "Novu",
                                                  "start_token": 72,
                                                  "end_token": 72,
                                                  "children": []
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "mockConfig.apiKey",
                                                  "start_token": 74,
                                                  "end_token": 76,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "mockConfig",
                                                      "start_token": 74,
                                                      "end_token": 74,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "apiKey",
                                                      "start_token": 76,
                                                      "end_token": 76,
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "ExpressionStatement",
                      "label": "test('should get inbound parse correctly', async () => {\n    mockedAxios.get.mockResolvedValue({});\n    await novu.inboundParse.getMxStatus();\n    expect(mockedAxios.get).toHaveBeenCalled();\n    expect(mockedAxios.get).toHaveBeenCalledWith('/inbound-parse/mx/status');\n  });",
                      "start_token": 82,
                      "end_token": 135,
                      "children": [
                        {
                          "type": "CallExpression",
                          "label": "test('should get inbound parse correctly', async () => {\n    mockedAxios.get.mockResolvedValue({});\n    await novu.inboundParse.getMxStatus();\n    expect(mockedAxios.get).toHaveBeenCalled();\n    expect(mockedAxios.get).toHaveBeenCalledWith('/inbound-parse/mx/status');\n  })",
                          "start_token": 82,
                          "end_token": 134,
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "test",
                              "start_token": 82,
                              "end_token": 82,
                              "children": []
                            },
                            {
                              "type": "StringLiteral",
                              "label": "'should get inbound parse correctly'",
                              "start_token": 84,
                              "end_token": 84,
                              "children": []
                            },
                            {
                              "type": "ArrowFunction",
                              "label": "async () => {\n    mockedAxios.get.mockResolvedValue({});\n    await novu.inboundParse.getMxStatus();\n    expect(mockedAxios.get).toHaveBeenCalled();\n    expect(mockedAxios.get).toHaveBeenCalledWith('/inbound-parse/mx/status');\n  }",
                              "start_token": 86,
                              "end_token": 133,
                              "children": [
                                {
                                  "type": "AsyncKeyword",
                                  "label": "async",
                                  "start_token": 86,
                                  "end_token": 86,
                                  "children": []
                                },
                                {
                                  "type": "EqualsGreaterThanToken",
                                  "label": "=>",
                                  "start_token": 89,
                                  "end_token": 89,
                                  "children": []
                                },
                                {
                                  "type": "Block",
                                  "label": "{\n    mockedAxios.get.mockResolvedValue({});\n    await novu.inboundParse.getMxStatus();\n    expect(mockedAxios.get).toHaveBeenCalled();\n    expect(mockedAxios.get).toHaveBeenCalledWith('/inbound-parse/mx/status');\n  }",
                                  "start_token": 90,
                                  "end_token": 133,
                                  "children": [
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "mockedAxios.get.mockResolvedValue({});",
                                      "start_token": 91,
                                      "end_token": 100,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "mockedAxios.get.mockResolvedValue({})",
                                          "start_token": 91,
                                          "end_token": 99,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "mockedAxios.get.mockResolvedValue",
                                              "start_token": 91,
                                              "end_token": 95,
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "mockedAxios.get",
                                                  "start_token": 91,
                                                  "end_token": 93,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "mockedAxios",
                                                      "start_token": 91,
                                                      "end_token": 91,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "get",
                                                      "start_token": 93,
                                                      "end_token": 93,
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "mockResolvedValue",
                                                  "start_token": 95,
                                                  "end_token": 95,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "ObjectLiteralExpression",
                                              "label": "{}",
                                              "start_token": 97,
                                              "end_token": 98,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "await novu.inboundParse.getMxStatus();",
                                      "start_token": 101,
                                      "end_token": 109,
                                      "children": [
                                        {
                                          "type": "AwaitExpression",
                                          "label": "await novu.inboundParse.getMxStatus()",
                                          "start_token": 101,
                                          "end_token": 108,
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "novu.inboundParse.getMxStatus()",
                                              "start_token": 102,
                                              "end_token": 108,
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "novu.inboundParse.getMxStatus",
                                                  "start_token": 102,
                                                  "end_token": 106,
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "novu.inboundParse",
                                                      "start_token": 102,
                                                      "end_token": 104,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "novu",
                                                          "start_token": 102,
                                                          "end_token": 102,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "inboundParse",
                                                          "start_token": 104,
                                                          "end_token": 104,
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "getMxStatus",
                                                      "start_token": 106,
                                                      "end_token": 106,
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "expect(mockedAxios.get).toHaveBeenCalled();",
                                      "start_token": 110,
                                      "end_token": 120,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "expect(mockedAxios.get).toHaveBeenCalled()",
                                          "start_token": 110,
                                          "end_token": 119,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "expect(mockedAxios.get).toHaveBeenCalled",
                                              "start_token": 110,
                                              "end_token": 117,
                                              "children": [
                                                {
                                                  "type": "CallExpression",
                                                  "label": "expect(mockedAxios.get)",
                                                  "start_token": 110,
                                                  "end_token": 115,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "expect",
                                                      "start_token": 110,
                                                      "end_token": 110,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "mockedAxios.get",
                                                      "start_token": 112,
                                                      "end_token": 114,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "mockedAxios",
                                                          "start_token": 112,
                                                          "end_token": 112,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "get",
                                                          "start_token": 114,
                                                          "end_token": 114,
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "toHaveBeenCalled",
                                                  "start_token": 117,
                                                  "end_token": 117,
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "label": "expect(mockedAxios.get).toHaveBeenCalledWith('/inbound-parse/mx/status');",
                                      "start_token": 121,
                                      "end_token": 132,
                                      "children": [
                                        {
                                          "type": "CallExpression",
                                          "label": "expect(mockedAxios.get).toHaveBeenCalledWith('/inbound-parse/mx/status')",
                                          "start_token": 121,
                                          "end_token": 131,
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "expect(mockedAxios.get).toHaveBeenCalledWith",
                                              "start_token": 121,
                                              "end_token": 128,
                                              "children": [
                                                {
                                                  "type": "CallExpression",
                                                  "label": "expect(mockedAxios.get)",
                                                  "start_token": 121,
                                                  "end_token": 126,
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "expect",
                                                      "start_token": 121,
                                                      "end_token": 121,
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "mockedAxios.get",
                                                      "start_token": 123,
                                                      "end_token": 125,
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "mockedAxios",
                                                          "start_token": 123,
                                                          "end_token": 123,
                                                          "children": []
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "get",
                                                          "start_token": 125,
                                                          "end_token": 125,
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "toHaveBeenCalledWith",
                                                  "start_token": 128,
                                                  "end_token": 128,
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "StringLiteral",
                                              "label": "'/inbound-parse/mx/status'",
                                              "start_token": 130,
                                              "end_token": 130,
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "start_token": -1,
      "end_token": -1,
      "children": []
    }
  ]
}