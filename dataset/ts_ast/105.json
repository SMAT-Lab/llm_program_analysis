{
  "type": "SourceFile",
  "label": "import type AbilityConstant from '@ohos.app.ability.AbilityConstant';\nimport hilog from '@ohos.hilog';\nimport UIAbility from '@ohos.app.ability.UIAbility';\nimport type Want from '@ohos.app.ability.Want';\nimport window from '@ohos.window';\nimport type { BusinessError } from '@ohos.base';\nimport type { Configuration } from '@ohos.app.ability.Configuration';\n\nconst TAG: string = '[EntryAbility]';\nconst DOMAIN_NUMBER: number = 0xFF00;\n\nlet systemLanguage: string | undefined; // 系统当前语言\n\nexport default class EntryAbility extends UIAbility {\n  windowStage: window.WindowStage | undefined = undefined;\n\n  onCreate(want: Want, launchParam: AbilityConstant.LaunchParam): void {\n    hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onCreate');\n    // Main window is created, set main page for this ability\n    let uiAbilityContext = this.context;\n    let applicationContext = this.context.getApplicationContext();\n    systemLanguage = this.context.config.language; // UIAbility实例首次加载时，获取系统当前语言\n    hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage is ${systemLanguage}`);\n  }\n\n  onDestroy(): void {\n    // 系统资源的释放、数据的保存等\n    hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onDestroy');\n  }\n\n  onWindowStageCreate(windowStage: window.WindowStage): void {\n    this.windowStage = windowStage;\n    // 设置WindowStage的事件订阅（获焦/失焦、可见/不可见）\n    try {\n      windowStage.on('windowStageEvent', (data) => {\n        let stageEventType: window.WindowStageEventType = data;\n        switch (stageEventType) {\n          case window.WindowStageEventType.SHOWN: // 切到前台\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage foreground.');\n            break;\n          case window.WindowStageEventType.ACTIVE: // 获焦状态\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage active.');\n            break;\n          case window.WindowStageEventType.INACTIVE: // 失焦状态\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage inactive.');\n            break;\n          case window.WindowStageEventType.HIDDEN: // 切到后台\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage background.');\n            break;\n          default:\n            break;\n        }\n      });\n    } catch (exception) {\n      hilog.error(DOMAIN_NUMBER, TAG, 'Failed to enable the listener for window stage event changes. Cause:' + JSON.stringify(exception));\n    };\n    hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onWindowStageCreate');\n\n    // 设置UI加载\n    // Main window is created, set main page for this ability\n    windowStage.loadContent('pages/Index', (err, data) => {\n      if (err.code) {\n        hilog.error(DOMAIN_NUMBER, TAG, 'Failed to load the content. Cause: %{public}s', JSON.stringify(err) ?? '');\n        return;\n      }\n      hilog.info(DOMAIN_NUMBER, TAG, 'Succeeded in loading the content. Data: %{public}s', JSON.stringify(data) ?? '');\n    });\n  }\n\n  onWindowStageDestroy(): void {\n    // Main window is destroyed, release UI related resources\n    hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onWindowStageDestroy');\n    // 释放UI资源\n    // 例如在onWindowStageDestroy()中注销获焦/失焦等WindowStage事件\n    try {\n      if (this.windowStage) {\n        this.windowStage.off('windowStageEvent');\n      }\n    } catch (err) {\n      let code = (err as BusinessError).code;\n      let message = (err as BusinessError).message;\n      hilog.error(DOMAIN_NUMBER, TAG, `Failed to disable the listener for windowStageEvent. Code is ${code}, message is ${message}`);\n    };\n  }\n\n  onForeground(): void {\n    // 申请系统需要的资源，或者重新申请在onBackground()中释放的资源\n    // Ability has brought to foreground\n    hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onForeground');\n  }\n\n  onBackground(): void {\n    // 释放UI不可见时无用的资源，或者在此回调中执行较为耗时的操作\n    // 例如状态保存等\n    // Ability has back to background\n    hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onBackground');\n  }\n\n  onConfigurationUpdate(newConfig: Configuration): void {\n    hilog.info(DOMAIN_NUMBER, TAG, `onConfigurationUpdated systemLanguage is ${systemLanguage}, newConfig: ${JSON.stringify(newConfig)}`);\n\n    if (systemLanguage !== newConfig.language) {\n      hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage from ${systemLanguage} changed to ${newConfig.language}`);\n      systemLanguage = newConfig.language; // 将变化之后的系统语言保存，作为下一次变化前的系统语言\n    }\n  }\n};\n",
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import type AbilityConstant from '@ohos.app.ability.AbilityConstant';",
      "children": [
        {
          "type": "ImportClause",
          "label": "type AbilityConstant",
          "children": [
            {
              "type": "Identifier",
              "label": "AbilityConstant",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.app.ability.AbilityConstant'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import hilog from '@ohos.hilog';",
      "children": [
        {
          "type": "ImportClause",
          "label": "hilog",
          "children": [
            {
              "type": "Identifier",
              "label": "hilog",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.hilog'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import UIAbility from '@ohos.app.ability.UIAbility';",
      "children": [
        {
          "type": "ImportClause",
          "label": "UIAbility",
          "children": [
            {
              "type": "Identifier",
              "label": "UIAbility",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.app.ability.UIAbility'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import type Want from '@ohos.app.ability.Want';",
      "children": [
        {
          "type": "ImportClause",
          "label": "type Want",
          "children": [
            {
              "type": "Identifier",
              "label": "Want",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.app.ability.Want'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import window from '@ohos.window';",
      "children": [
        {
          "type": "ImportClause",
          "label": "window",
          "children": [
            {
              "type": "Identifier",
              "label": "window",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.window'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import type { BusinessError } from '@ohos.base';",
      "children": [
        {
          "type": "ImportClause",
          "label": "type { BusinessError }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ BusinessError }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "BusinessError",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "BusinessError",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.base'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import type { Configuration } from '@ohos.app.ability.Configuration';",
      "children": [
        {
          "type": "ImportClause",
          "label": "type { Configuration }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ Configuration }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "Configuration",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Configuration",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'@ohos.app.ability.Configuration'",
          "children": []
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "const TAG: string = '[EntryAbility]';",
      "children": [
        {
          "type": "VariableDeclarationList",
          "label": "const TAG: string = '[EntryAbility]'",
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "TAG: string = '[EntryAbility]'",
              "children": [
                {
                  "type": "Identifier",
                  "label": "TAG",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                },
                {
                  "type": "StringLiteral",
                  "label": "'[EntryAbility]'",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "const DOMAIN_NUMBER: number = 0xFF00;",
      "children": [
        {
          "type": "VariableDeclarationList",
          "label": "const DOMAIN_NUMBER: number = 0xFF00",
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "DOMAIN_NUMBER: number = 0xFF00",
              "children": [
                {
                  "type": "Identifier",
                  "label": "DOMAIN_NUMBER",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                },
                {
                  "type": "FirstLiteralToken",
                  "label": "0xFF00",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "FirstStatement",
      "label": "let systemLanguage: string | undefined;",
      "children": [
        {
          "type": "VariableDeclarationList",
          "label": "let systemLanguage: string | undefined",
          "children": [
            {
              "type": "VariableDeclaration",
              "label": "systemLanguage: string | undefined",
              "children": [
                {
                  "type": "Identifier",
                  "label": "systemLanguage",
                  "children": []
                },
                {
                  "type": "UnionType",
                  "label": "string | undefined",
                  "children": [
                    {
                      "type": "StringKeyword",
                      "label": "string",
                      "children": []
                    },
                    {
                      "type": "UndefinedKeyword",
                      "label": "undefined",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export default class EntryAbility extends UIAbility {\n  windowStage: window.WindowStage | undefined = undefined;\n\n  onCreate(want: Want, launchParam: AbilityConstant.LaunchParam): void {\n    hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onCreate');\n    // Main window is created, set main page for this ability\n    let uiAbilityContext = this.context;\n    let applicationContext = this.context.getApplicationContext();\n    systemLanguage = this.context.config.language; // UIAbility实例首次加载时，获取系统当前语言\n    hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage is ${systemLanguage}`);\n  }\n\n  onDestroy(): void {\n    // 系统资源的释放、数据的保存等\n    hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onDestroy');\n  }\n\n  onWindowStageCreate(windowStage: window.WindowStage): void {\n    this.windowStage = windowStage;\n    // 设置WindowStage的事件订阅（获焦/失焦、可见/不可见）\n    try {\n      windowStage.on('windowStageEvent', (data) => {\n        let stageEventType: window.WindowStageEventType = data;\n        switch (stageEventType) {\n          case window.WindowStageEventType.SHOWN: // 切到前台\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage foreground.');\n            break;\n          case window.WindowStageEventType.ACTIVE: // 获焦状态\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage active.');\n            break;\n          case window.WindowStageEventType.INACTIVE: // 失焦状态\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage inactive.');\n            break;\n          case window.WindowStageEventType.HIDDEN: // 切到后台\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage background.');\n            break;\n          default:\n            break;\n        }\n      });\n    } catch (exception) {\n      hilog.error(DOMAIN_NUMBER, TAG, 'Failed to enable the listener for window stage event changes. Cause:' + JSON.stringify(exception));\n    };\n    hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onWindowStageCreate');\n\n    // 设置UI加载\n    // Main window is created, set main page for this ability\n    windowStage.loadContent('pages/Index', (err, data) => {\n      if (err.code) {\n        hilog.error(DOMAIN_NUMBER, TAG, 'Failed to load the content. Cause: %{public}s', JSON.stringify(err) ?? '');\n        return;\n      }\n      hilog.info(DOMAIN_NUMBER, TAG, 'Succeeded in loading the content. Data: %{public}s', JSON.stringify(data) ?? '');\n    });\n  }\n\n  onWindowStageDestroy(): void {\n    // Main window is destroyed, release UI related resources\n    hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onWindowStageDestroy');\n    // 释放UI资源\n    // 例如在onWindowStageDestroy()中注销获焦/失焦等WindowStage事件\n    try {\n      if (this.windowStage) {\n        this.windowStage.off('windowStageEvent');\n      }\n    } catch (err) {\n      let code = (err as BusinessError).code;\n      let message = (err as BusinessError).message;\n      hilog.error(DOMAIN_NUMBER, TAG, `Failed to disable the listener for windowStageEvent. Code is ${code}, message is ${message}`);\n    };\n  }\n\n  onForeground(): void {\n    // 申请系统需要的资源，或者重新申请在onBackground()中释放的资源\n    // Ability has brought to foreground\n    hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onForeground');\n  }\n\n  onBackground(): void {\n    // 释放UI不可见时无用的资源，或者在此回调中执行较为耗时的操作\n    // 例如状态保存等\n    // Ability has back to background\n    hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onBackground');\n  }\n\n  onConfigurationUpdate(newConfig: Configuration): void {\n    hilog.info(DOMAIN_NUMBER, TAG, `onConfigurationUpdated systemLanguage is ${systemLanguage}, newConfig: ${JSON.stringify(newConfig)}`);\n\n    if (systemLanguage !== newConfig.language) {\n      hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage from ${systemLanguage} changed to ${newConfig.language}`);\n      systemLanguage = newConfig.language; // 将变化之后的系统语言保存，作为下一次变化前的系统语言\n    }\n  }\n}",
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "children": []
        },
        {
          "type": "DefaultKeyword",
          "label": "default",
          "children": []
        },
        {
          "type": "Identifier",
          "label": "EntryAbility",
          "children": []
        },
        {
          "type": "HeritageClause",
          "label": "extends UIAbility",
          "children": [
            {
              "type": "ExpressionWithTypeArguments",
              "label": "UIAbility",
              "children": [
                {
                  "type": "Identifier",
                  "label": "UIAbility",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "windowStage: window.WindowStage | undefined = undefined;",
          "children": [
            {
              "type": "Identifier",
              "label": "windowStage",
              "children": []
            },
            {
              "type": "UnionType",
              "label": "window.WindowStage | undefined",
              "children": [
                {
                  "type": "TypeReference",
                  "label": "window.WindowStage",
                  "children": [
                    {
                      "type": "FirstNode",
                      "label": "window.WindowStage",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "window",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "WindowStage",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "UndefinedKeyword",
                  "label": "undefined",
                  "children": []
                }
              ]
            },
            {
              "type": "Identifier",
              "label": "undefined",
              "children": []
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onCreate(want: Want, launchParam: AbilityConstant.LaunchParam): void {\n    hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onCreate');\n    // Main window is created, set main page for this ability\n    let uiAbilityContext = this.context;\n    let applicationContext = this.context.getApplicationContext();\n    systemLanguage = this.context.config.language; // UIAbility实例首次加载时，获取系统当前语言\n    hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage is ${systemLanguage}`);\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onCreate",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "want: Want",
              "children": [
                {
                  "type": "Identifier",
                  "label": "want",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "Want",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Want",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "launchParam: AbilityConstant.LaunchParam",
              "children": [
                {
                  "type": "Identifier",
                  "label": "launchParam",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "AbilityConstant.LaunchParam",
                  "children": [
                    {
                      "type": "FirstNode",
                      "label": "AbilityConstant.LaunchParam",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "AbilityConstant",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "LaunchParam",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onCreate');\n    // Main window is created, set main page for this ability\n    let uiAbilityContext = this.context;\n    let applicationContext = this.context.getApplicationContext();\n    systemLanguage = this.context.config.language; // UIAbility实例首次加载时，获取系统当前语言\n    hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage is ${systemLanguage}`);\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onCreate');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onCreate')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "hilog.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "hilog",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "DOMAIN_NUMBER",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'%{public}s'",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'Ability onCreate'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let uiAbilityContext = this.context;",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let uiAbilityContext = this.context",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "uiAbilityContext = this.context",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "uiAbilityContext",
                              "children": []
                            },
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.context",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "context",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let applicationContext = this.context.getApplicationContext();",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let applicationContext = this.context.getApplicationContext()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "applicationContext = this.context.getApplicationContext()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "applicationContext",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "this.context.getApplicationContext()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.context.getApplicationContext",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "this.context",
                                      "children": [
                                        {
                                          "type": "ThisKeyword",
                                          "label": "this",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "context",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "getApplicationContext",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "systemLanguage = this.context.config.language;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "systemLanguage = this.context.config.language",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "systemLanguage",
                          "children": []
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.context.config.language",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.context.config",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.context",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "context",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "config",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "language",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage is ${systemLanguage}`);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage is ${systemLanguage}`)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "hilog.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "hilog",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "DOMAIN_NUMBER",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "TemplateExpression",
                          "label": "`systemLanguage is ${systemLanguage}`",
                          "children": [
                            {
                              "type": "TemplateHead",
                              "label": "`systemLanguage is ${",
                              "children": []
                            },
                            {
                              "type": "TemplateSpan",
                              "label": "systemLanguage}`",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "systemLanguage",
                                  "children": []
                                },
                                {
                                  "type": "LastTemplateToken",
                                  "label": "}`",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onDestroy(): void {\n    // 系统资源的释放、数据的保存等\n    hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onDestroy');\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onDestroy",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    // 系统资源的释放、数据的保存等\n    hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onDestroy');\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onDestroy');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onDestroy')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "hilog.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "hilog",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "DOMAIN_NUMBER",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'%{public}s'",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'Ability onDestroy'",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onWindowStageCreate(windowStage: window.WindowStage): void {\n    this.windowStage = windowStage;\n    // 设置WindowStage的事件订阅（获焦/失焦、可见/不可见）\n    try {\n      windowStage.on('windowStageEvent', (data) => {\n        let stageEventType: window.WindowStageEventType = data;\n        switch (stageEventType) {\n          case window.WindowStageEventType.SHOWN: // 切到前台\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage foreground.');\n            break;\n          case window.WindowStageEventType.ACTIVE: // 获焦状态\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage active.');\n            break;\n          case window.WindowStageEventType.INACTIVE: // 失焦状态\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage inactive.');\n            break;\n          case window.WindowStageEventType.HIDDEN: // 切到后台\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage background.');\n            break;\n          default:\n            break;\n        }\n      });\n    } catch (exception) {\n      hilog.error(DOMAIN_NUMBER, TAG, 'Failed to enable the listener for window stage event changes. Cause:' + JSON.stringify(exception));\n    };\n    hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onWindowStageCreate');\n\n    // 设置UI加载\n    // Main window is created, set main page for this ability\n    windowStage.loadContent('pages/Index', (err, data) => {\n      if (err.code) {\n        hilog.error(DOMAIN_NUMBER, TAG, 'Failed to load the content. Cause: %{public}s', JSON.stringify(err) ?? '');\n        return;\n      }\n      hilog.info(DOMAIN_NUMBER, TAG, 'Succeeded in loading the content. Data: %{public}s', JSON.stringify(data) ?? '');\n    });\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onWindowStageCreate",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "windowStage: window.WindowStage",
              "children": [
                {
                  "type": "Identifier",
                  "label": "windowStage",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "window.WindowStage",
                  "children": [
                    {
                      "type": "FirstNode",
                      "label": "window.WindowStage",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "window",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "WindowStage",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    this.windowStage = windowStage;\n    // 设置WindowStage的事件订阅（获焦/失焦、可见/不可见）\n    try {\n      windowStage.on('windowStageEvent', (data) => {\n        let stageEventType: window.WindowStageEventType = data;\n        switch (stageEventType) {\n          case window.WindowStageEventType.SHOWN: // 切到前台\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage foreground.');\n            break;\n          case window.WindowStageEventType.ACTIVE: // 获焦状态\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage active.');\n            break;\n          case window.WindowStageEventType.INACTIVE: // 失焦状态\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage inactive.');\n            break;\n          case window.WindowStageEventType.HIDDEN: // 切到后台\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage background.');\n            break;\n          default:\n            break;\n        }\n      });\n    } catch (exception) {\n      hilog.error(DOMAIN_NUMBER, TAG, 'Failed to enable the listener for window stage event changes. Cause:' + JSON.stringify(exception));\n    };\n    hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onWindowStageCreate');\n\n    // 设置UI加载\n    // Main window is created, set main page for this ability\n    windowStage.loadContent('pages/Index', (err, data) => {\n      if (err.code) {\n        hilog.error(DOMAIN_NUMBER, TAG, 'Failed to load the content. Cause: %{public}s', JSON.stringify(err) ?? '');\n        return;\n      }\n      hilog.info(DOMAIN_NUMBER, TAG, 'Succeeded in loading the content. Data: %{public}s', JSON.stringify(data) ?? '');\n    });\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.windowStage = windowStage;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.windowStage = windowStage",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.windowStage",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "windowStage",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "windowStage",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TryStatement",
                  "label": "try {\n      windowStage.on('windowStageEvent', (data) => {\n        let stageEventType: window.WindowStageEventType = data;\n        switch (stageEventType) {\n          case window.WindowStageEventType.SHOWN: // 切到前台\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage foreground.');\n            break;\n          case window.WindowStageEventType.ACTIVE: // 获焦状态\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage active.');\n            break;\n          case window.WindowStageEventType.INACTIVE: // 失焦状态\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage inactive.');\n            break;\n          case window.WindowStageEventType.HIDDEN: // 切到后台\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage background.');\n            break;\n          default:\n            break;\n        }\n      });\n    } catch (exception) {\n      hilog.error(DOMAIN_NUMBER, TAG, 'Failed to enable the listener for window stage event changes. Cause:' + JSON.stringify(exception));\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      windowStage.on('windowStageEvent', (data) => {\n        let stageEventType: window.WindowStageEventType = data;\n        switch (stageEventType) {\n          case window.WindowStageEventType.SHOWN: // 切到前台\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage foreground.');\n            break;\n          case window.WindowStageEventType.ACTIVE: // 获焦状态\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage active.');\n            break;\n          case window.WindowStageEventType.INACTIVE: // 失焦状态\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage inactive.');\n            break;\n          case window.WindowStageEventType.HIDDEN: // 切到后台\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage background.');\n            break;\n          default:\n            break;\n        }\n      });\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "windowStage.on('windowStageEvent', (data) => {\n        let stageEventType: window.WindowStageEventType = data;\n        switch (stageEventType) {\n          case window.WindowStageEventType.SHOWN: // 切到前台\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage foreground.');\n            break;\n          case window.WindowStageEventType.ACTIVE: // 获焦状态\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage active.');\n            break;\n          case window.WindowStageEventType.INACTIVE: // 失焦状态\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage inactive.');\n            break;\n          case window.WindowStageEventType.HIDDEN: // 切到后台\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage background.');\n            break;\n          default:\n            break;\n        }\n      });",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "windowStage.on('windowStageEvent', (data) => {\n        let stageEventType: window.WindowStageEventType = data;\n        switch (stageEventType) {\n          case window.WindowStageEventType.SHOWN: // 切到前台\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage foreground.');\n            break;\n          case window.WindowStageEventType.ACTIVE: // 获焦状态\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage active.');\n            break;\n          case window.WindowStageEventType.INACTIVE: // 失焦状态\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage inactive.');\n            break;\n          case window.WindowStageEventType.HIDDEN: // 切到后台\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage background.');\n            break;\n          default:\n            break;\n        }\n      })",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "windowStage.on",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "windowStage",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "on",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "StringLiteral",
                                  "label": "'windowStageEvent'",
                                  "children": []
                                },
                                {
                                  "type": "ArrowFunction",
                                  "label": "(data) => {\n        let stageEventType: window.WindowStageEventType = data;\n        switch (stageEventType) {\n          case window.WindowStageEventType.SHOWN: // 切到前台\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage foreground.');\n            break;\n          case window.WindowStageEventType.ACTIVE: // 获焦状态\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage active.');\n            break;\n          case window.WindowStageEventType.INACTIVE: // 失焦状态\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage inactive.');\n            break;\n          case window.WindowStageEventType.HIDDEN: // 切到后台\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage background.');\n            break;\n          default:\n            break;\n        }\n      }",
                                  "children": [
                                    {
                                      "type": "Parameter",
                                      "label": "data",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "data",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "EqualsGreaterThanToken",
                                      "label": "=>",
                                      "children": []
                                    },
                                    {
                                      "type": "Block",
                                      "label": "{\n        let stageEventType: window.WindowStageEventType = data;\n        switch (stageEventType) {\n          case window.WindowStageEventType.SHOWN: // 切到前台\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage foreground.');\n            break;\n          case window.WindowStageEventType.ACTIVE: // 获焦状态\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage active.');\n            break;\n          case window.WindowStageEventType.INACTIVE: // 失焦状态\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage inactive.');\n            break;\n          case window.WindowStageEventType.HIDDEN: // 切到后台\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage background.');\n            break;\n          default:\n            break;\n        }\n      }",
                                      "children": [
                                        {
                                          "type": "FirstStatement",
                                          "label": "let stageEventType: window.WindowStageEventType = data;",
                                          "children": [
                                            {
                                              "type": "VariableDeclarationList",
                                              "label": "let stageEventType: window.WindowStageEventType = data",
                                              "children": [
                                                {
                                                  "type": "VariableDeclaration",
                                                  "label": "stageEventType: window.WindowStageEventType = data",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "stageEventType",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "TypeReference",
                                                      "label": "window.WindowStageEventType",
                                                      "children": [
                                                        {
                                                          "type": "FirstNode",
                                                          "label": "window.WindowStageEventType",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "window",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "WindowStageEventType",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "data",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "SwitchStatement",
                                          "label": "switch (stageEventType) {\n          case window.WindowStageEventType.SHOWN: // 切到前台\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage foreground.');\n            break;\n          case window.WindowStageEventType.ACTIVE: // 获焦状态\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage active.');\n            break;\n          case window.WindowStageEventType.INACTIVE: // 失焦状态\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage inactive.');\n            break;\n          case window.WindowStageEventType.HIDDEN: // 切到后台\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage background.');\n            break;\n          default:\n            break;\n        }",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "stageEventType",
                                              "children": []
                                            },
                                            {
                                              "type": "CaseBlock",
                                              "label": "{\n          case window.WindowStageEventType.SHOWN: // 切到前台\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage foreground.');\n            break;\n          case window.WindowStageEventType.ACTIVE: // 获焦状态\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage active.');\n            break;\n          case window.WindowStageEventType.INACTIVE: // 失焦状态\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage inactive.');\n            break;\n          case window.WindowStageEventType.HIDDEN: // 切到后台\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage background.');\n            break;\n          default:\n            break;\n        }",
                                              "children": [
                                                {
                                                  "type": "CaseClause",
                                                  "label": "case window.WindowStageEventType.SHOWN: // 切到前台\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage foreground.');\n            break;",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "window.WindowStageEventType.SHOWN",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "window.WindowStageEventType",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "window",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "WindowStageEventType",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "SHOWN",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "hilog.info(DOMAIN_NUMBER, TAG, 'windowStage foreground.');",
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "hilog.info(DOMAIN_NUMBER, TAG, 'windowStage foreground.')",
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "hilog.info",
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "hilog",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "info",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "DOMAIN_NUMBER",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "TAG",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'windowStage foreground.'",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "BreakStatement",
                                                      "label": "break;",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "CaseClause",
                                                  "label": "case window.WindowStageEventType.ACTIVE: // 获焦状态\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage active.');\n            break;",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "window.WindowStageEventType.ACTIVE",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "window.WindowStageEventType",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "window",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "WindowStageEventType",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "ACTIVE",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "hilog.info(DOMAIN_NUMBER, TAG, 'windowStage active.');",
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "hilog.info(DOMAIN_NUMBER, TAG, 'windowStage active.')",
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "hilog.info",
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "hilog",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "info",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "DOMAIN_NUMBER",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "TAG",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'windowStage active.'",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "BreakStatement",
                                                      "label": "break;",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "CaseClause",
                                                  "label": "case window.WindowStageEventType.INACTIVE: // 失焦状态\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage inactive.');\n            break;",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "window.WindowStageEventType.INACTIVE",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "window.WindowStageEventType",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "window",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "WindowStageEventType",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "INACTIVE",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "hilog.info(DOMAIN_NUMBER, TAG, 'windowStage inactive.');",
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "hilog.info(DOMAIN_NUMBER, TAG, 'windowStage inactive.')",
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "hilog.info",
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "hilog",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "info",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "DOMAIN_NUMBER",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "TAG",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'windowStage inactive.'",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "BreakStatement",
                                                      "label": "break;",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "CaseClause",
                                                  "label": "case window.WindowStageEventType.HIDDEN: // 切到后台\n            hilog.info(DOMAIN_NUMBER, TAG, 'windowStage background.');\n            break;",
                                                  "children": [
                                                    {
                                                      "type": "PropertyAccessExpression",
                                                      "label": "window.WindowStageEventType.HIDDEN",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "window.WindowStageEventType",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "window",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "WindowStageEventType",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "HIDDEN",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "label": "hilog.info(DOMAIN_NUMBER, TAG, 'windowStage background.');",
                                                      "children": [
                                                        {
                                                          "type": "CallExpression",
                                                          "label": "hilog.info(DOMAIN_NUMBER, TAG, 'windowStage background.')",
                                                          "children": [
                                                            {
                                                              "type": "PropertyAccessExpression",
                                                              "label": "hilog.info",
                                                              "children": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "hilog",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "label": "info",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "DOMAIN_NUMBER",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "TAG",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "StringLiteral",
                                                              "label": "'windowStage background.'",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "BreakStatement",
                                                      "label": "break;",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "DefaultClause",
                                                  "label": "default:\n            break;",
                                                  "children": [
                                                    {
                                                      "type": "BreakStatement",
                                                      "label": "break;",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (exception) {\n      hilog.error(DOMAIN_NUMBER, TAG, 'Failed to enable the listener for window stage event changes. Cause:' + JSON.stringify(exception));\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "exception",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "exception",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      hilog.error(DOMAIN_NUMBER, TAG, 'Failed to enable the listener for window stage event changes. Cause:' + JSON.stringify(exception));\n    }",
                          "children": [
                            {
                              "type": "ExpressionStatement",
                              "label": "hilog.error(DOMAIN_NUMBER, TAG, 'Failed to enable the listener for window stage event changes. Cause:' + JSON.stringify(exception));",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "hilog.error(DOMAIN_NUMBER, TAG, 'Failed to enable the listener for window stage event changes. Cause:' + JSON.stringify(exception))",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "hilog.error",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "hilog",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "error",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "DOMAIN_NUMBER",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TAG",
                                      "children": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "label": "'Failed to enable the listener for window stage event changes. Cause:' + JSON.stringify(exception)",
                                      "children": [
                                        {
                                          "type": "StringLiteral",
                                          "label": "'Failed to enable the listener for window stage event changes. Cause:'",
                                          "children": []
                                        },
                                        {
                                          "type": "PlusToken",
                                          "label": "+",
                                          "children": []
                                        },
                                        {
                                          "type": "CallExpression",
                                          "label": "JSON.stringify(exception)",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "JSON.stringify",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "JSON",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "stringify",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "exception",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "EmptyStatement",
                  "label": ";",
                  "children": []
                },
                {
                  "type": "ExpressionStatement",
                  "label": "hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onWindowStageCreate');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onWindowStageCreate')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "hilog.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "hilog",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "DOMAIN_NUMBER",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'%{public}s'",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'Ability onWindowStageCreate'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "windowStage.loadContent('pages/Index', (err, data) => {\n      if (err.code) {\n        hilog.error(DOMAIN_NUMBER, TAG, 'Failed to load the content. Cause: %{public}s', JSON.stringify(err) ?? '');\n        return;\n      }\n      hilog.info(DOMAIN_NUMBER, TAG, 'Succeeded in loading the content. Data: %{public}s', JSON.stringify(data) ?? '');\n    });",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "windowStage.loadContent('pages/Index', (err, data) => {\n      if (err.code) {\n        hilog.error(DOMAIN_NUMBER, TAG, 'Failed to load the content. Cause: %{public}s', JSON.stringify(err) ?? '');\n        return;\n      }\n      hilog.info(DOMAIN_NUMBER, TAG, 'Succeeded in loading the content. Data: %{public}s', JSON.stringify(data) ?? '');\n    })",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "windowStage.loadContent",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "windowStage",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "loadContent",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'pages/Index'",
                          "children": []
                        },
                        {
                          "type": "ArrowFunction",
                          "label": "(err, data) => {\n      if (err.code) {\n        hilog.error(DOMAIN_NUMBER, TAG, 'Failed to load the content. Cause: %{public}s', JSON.stringify(err) ?? '');\n        return;\n      }\n      hilog.info(DOMAIN_NUMBER, TAG, 'Succeeded in loading the content. Data: %{public}s', JSON.stringify(data) ?? '');\n    }",
                          "children": [
                            {
                              "type": "Parameter",
                              "label": "err",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "err",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Parameter",
                              "label": "data",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "data",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "EqualsGreaterThanToken",
                              "label": "=>",
                              "children": []
                            },
                            {
                              "type": "Block",
                              "label": "{\n      if (err.code) {\n        hilog.error(DOMAIN_NUMBER, TAG, 'Failed to load the content. Cause: %{public}s', JSON.stringify(err) ?? '');\n        return;\n      }\n      hilog.info(DOMAIN_NUMBER, TAG, 'Succeeded in loading the content. Data: %{public}s', JSON.stringify(data) ?? '');\n    }",
                              "children": [
                                {
                                  "type": "IfStatement",
                                  "label": "if (err.code) {\n        hilog.error(DOMAIN_NUMBER, TAG, 'Failed to load the content. Cause: %{public}s', JSON.stringify(err) ?? '');\n        return;\n      }",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "err.code",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "err",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "code",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Block",
                                      "label": "{\n        hilog.error(DOMAIN_NUMBER, TAG, 'Failed to load the content. Cause: %{public}s', JSON.stringify(err) ?? '');\n        return;\n      }",
                                      "children": [
                                        {
                                          "type": "ExpressionStatement",
                                          "label": "hilog.error(DOMAIN_NUMBER, TAG, 'Failed to load the content. Cause: %{public}s', JSON.stringify(err) ?? '');",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "hilog.error(DOMAIN_NUMBER, TAG, 'Failed to load the content. Cause: %{public}s', JSON.stringify(err) ?? '')",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "hilog.error",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "hilog",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "error",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "DOMAIN_NUMBER",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "TAG",
                                                  "children": []
                                                },
                                                {
                                                  "type": "StringLiteral",
                                                  "label": "'Failed to load the content. Cause: %{public}s'",
                                                  "children": []
                                                },
                                                {
                                                  "type": "BinaryExpression",
                                                  "label": "JSON.stringify(err) ?? ''",
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "JSON.stringify(err)",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "JSON.stringify",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "JSON",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "stringify",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "label": "err",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "QuestionQuestionToken",
                                                      "label": "??",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "StringLiteral",
                                                      "label": "''",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ReturnStatement",
                                          "label": "return;",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "label": "hilog.info(DOMAIN_NUMBER, TAG, 'Succeeded in loading the content. Data: %{public}s', JSON.stringify(data) ?? '');",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "hilog.info(DOMAIN_NUMBER, TAG, 'Succeeded in loading the content. Data: %{public}s', JSON.stringify(data) ?? '')",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "hilog.info",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "hilog",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "info",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "DOMAIN_NUMBER",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "TAG",
                                          "children": []
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "'Succeeded in loading the content. Data: %{public}s'",
                                          "children": []
                                        },
                                        {
                                          "type": "BinaryExpression",
                                          "label": "JSON.stringify(data) ?? ''",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "JSON.stringify(data)",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "JSON.stringify",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "JSON",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "stringify",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "data",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "QuestionQuestionToken",
                                              "label": "??",
                                              "children": []
                                            },
                                            {
                                              "type": "StringLiteral",
                                              "label": "''",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onWindowStageDestroy(): void {\n    // Main window is destroyed, release UI related resources\n    hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onWindowStageDestroy');\n    // 释放UI资源\n    // 例如在onWindowStageDestroy()中注销获焦/失焦等WindowStage事件\n    try {\n      if (this.windowStage) {\n        this.windowStage.off('windowStageEvent');\n      }\n    } catch (err) {\n      let code = (err as BusinessError).code;\n      let message = (err as BusinessError).message;\n      hilog.error(DOMAIN_NUMBER, TAG, `Failed to disable the listener for windowStageEvent. Code is ${code}, message is ${message}`);\n    };\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onWindowStageDestroy",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    // Main window is destroyed, release UI related resources\n    hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onWindowStageDestroy');\n    // 释放UI资源\n    // 例如在onWindowStageDestroy()中注销获焦/失焦等WindowStage事件\n    try {\n      if (this.windowStage) {\n        this.windowStage.off('windowStageEvent');\n      }\n    } catch (err) {\n      let code = (err as BusinessError).code;\n      let message = (err as BusinessError).message;\n      hilog.error(DOMAIN_NUMBER, TAG, `Failed to disable the listener for windowStageEvent. Code is ${code}, message is ${message}`);\n    };\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onWindowStageDestroy');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onWindowStageDestroy')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "hilog.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "hilog",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "DOMAIN_NUMBER",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'%{public}s'",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'Ability onWindowStageDestroy'",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "TryStatement",
                  "label": "try {\n      if (this.windowStage) {\n        this.windowStage.off('windowStageEvent');\n      }\n    } catch (err) {\n      let code = (err as BusinessError).code;\n      let message = (err as BusinessError).message;\n      hilog.error(DOMAIN_NUMBER, TAG, `Failed to disable the listener for windowStageEvent. Code is ${code}, message is ${message}`);\n    }",
                  "children": [
                    {
                      "type": "Block",
                      "label": "{\n      if (this.windowStage) {\n        this.windowStage.off('windowStageEvent');\n      }\n    }",
                      "children": [
                        {
                          "type": "IfStatement",
                          "label": "if (this.windowStage) {\n        this.windowStage.off('windowStageEvent');\n      }",
                          "children": [
                            {
                              "type": "PropertyAccessExpression",
                              "label": "this.windowStage",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "windowStage",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        this.windowStage.off('windowStageEvent');\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "this.windowStage.off('windowStageEvent');",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "this.windowStage.off('windowStageEvent')",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "this.windowStage.off",
                                          "children": [
                                            {
                                              "type": "PropertyAccessExpression",
                                              "label": "this.windowStage",
                                              "children": [
                                                {
                                                  "type": "ThisKeyword",
                                                  "label": "this",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "windowStage",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "off",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "StringLiteral",
                                          "label": "'windowStageEvent'",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "CatchClause",
                      "label": "catch (err) {\n      let code = (err as BusinessError).code;\n      let message = (err as BusinessError).message;\n      hilog.error(DOMAIN_NUMBER, TAG, `Failed to disable the listener for windowStageEvent. Code is ${code}, message is ${message}`);\n    }",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "err",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "err",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Block",
                          "label": "{\n      let code = (err as BusinessError).code;\n      let message = (err as BusinessError).message;\n      hilog.error(DOMAIN_NUMBER, TAG, `Failed to disable the listener for windowStageEvent. Code is ${code}, message is ${message}`);\n    }",
                          "children": [
                            {
                              "type": "FirstStatement",
                              "label": "let code = (err as BusinessError).code;",
                              "children": [
                                {
                                  "type": "VariableDeclarationList",
                                  "label": "let code = (err as BusinessError).code",
                                  "children": [
                                    {
                                      "type": "VariableDeclaration",
                                      "label": "code = (err as BusinessError).code",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "code",
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "(err as BusinessError).code",
                                          "children": [
                                            {
                                              "type": "ParenthesizedExpression",
                                              "label": "(err as BusinessError)",
                                              "children": [
                                                {
                                                  "type": "AsExpression",
                                                  "label": "err as BusinessError",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "err",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "TypeReference",
                                                      "label": "BusinessError",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "BusinessError",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "code",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "FirstStatement",
                              "label": "let message = (err as BusinessError).message;",
                              "children": [
                                {
                                  "type": "VariableDeclarationList",
                                  "label": "let message = (err as BusinessError).message",
                                  "children": [
                                    {
                                      "type": "VariableDeclaration",
                                      "label": "message = (err as BusinessError).message",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "message",
                                          "children": []
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "(err as BusinessError).message",
                                          "children": [
                                            {
                                              "type": "ParenthesizedExpression",
                                              "label": "(err as BusinessError)",
                                              "children": [
                                                {
                                                  "type": "AsExpression",
                                                  "label": "err as BusinessError",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "err",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "TypeReference",
                                                      "label": "BusinessError",
                                                      "children": [
                                                        {
                                                          "type": "Identifier",
                                                          "label": "BusinessError",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "message",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ExpressionStatement",
                              "label": "hilog.error(DOMAIN_NUMBER, TAG, `Failed to disable the listener for windowStageEvent. Code is ${code}, message is ${message}`);",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "hilog.error(DOMAIN_NUMBER, TAG, `Failed to disable the listener for windowStageEvent. Code is ${code}, message is ${message}`)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "hilog.error",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "hilog",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "error",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "DOMAIN_NUMBER",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "TAG",
                                      "children": []
                                    },
                                    {
                                      "type": "TemplateExpression",
                                      "label": "`Failed to disable the listener for windowStageEvent. Code is ${code}, message is ${message}`",
                                      "children": [
                                        {
                                          "type": "TemplateHead",
                                          "label": "`Failed to disable the listener for windowStageEvent. Code is ${",
                                          "children": []
                                        },
                                        {
                                          "type": "TemplateSpan",
                                          "label": "code}, message is ${",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "code",
                                              "children": []
                                            },
                                            {
                                              "type": "TemplateMiddle",
                                              "label": "}, message is ${",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "TemplateSpan",
                                          "label": "message}`",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "message",
                                              "children": []
                                            },
                                            {
                                              "type": "LastTemplateToken",
                                              "label": "}`",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "EmptyStatement",
                  "label": ";",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onForeground(): void {\n    // 申请系统需要的资源，或者重新申请在onBackground()中释放的资源\n    // Ability has brought to foreground\n    hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onForeground');\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onForeground",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    // 申请系统需要的资源，或者重新申请在onBackground()中释放的资源\n    // Ability has brought to foreground\n    hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onForeground');\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onForeground');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onForeground')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "hilog.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "hilog",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "DOMAIN_NUMBER",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'%{public}s'",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'Ability onForeground'",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onBackground(): void {\n    // 释放UI不可见时无用的资源，或者在此回调中执行较为耗时的操作\n    // 例如状态保存等\n    // Ability has back to background\n    hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onBackground');\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onBackground",
              "children": []
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    // 释放UI不可见时无用的资源，或者在此回调中执行较为耗时的操作\n    // 例如状态保存等\n    // Ability has back to background\n    hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onBackground');\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onBackground');",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onBackground')",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "hilog.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "hilog",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "DOMAIN_NUMBER",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'%{public}s'",
                          "children": []
                        },
                        {
                          "type": "StringLiteral",
                          "label": "'Ability onBackground'",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "onConfigurationUpdate(newConfig: Configuration): void {\n    hilog.info(DOMAIN_NUMBER, TAG, `onConfigurationUpdated systemLanguage is ${systemLanguage}, newConfig: ${JSON.stringify(newConfig)}`);\n\n    if (systemLanguage !== newConfig.language) {\n      hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage from ${systemLanguage} changed to ${newConfig.language}`);\n      systemLanguage = newConfig.language; // 将变化之后的系统语言保存，作为下一次变化前的系统语言\n    }\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "onConfigurationUpdate",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "newConfig: Configuration",
              "children": [
                {
                  "type": "Identifier",
                  "label": "newConfig",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "Configuration",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Configuration",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    hilog.info(DOMAIN_NUMBER, TAG, `onConfigurationUpdated systemLanguage is ${systemLanguage}, newConfig: ${JSON.stringify(newConfig)}`);\n\n    if (systemLanguage !== newConfig.language) {\n      hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage from ${systemLanguage} changed to ${newConfig.language}`);\n      systemLanguage = newConfig.language; // 将变化之后的系统语言保存，作为下一次变化前的系统语言\n    }\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "hilog.info(DOMAIN_NUMBER, TAG, `onConfigurationUpdated systemLanguage is ${systemLanguage}, newConfig: ${JSON.stringify(newConfig)}`);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "hilog.info(DOMAIN_NUMBER, TAG, `onConfigurationUpdated systemLanguage is ${systemLanguage}, newConfig: ${JSON.stringify(newConfig)}`)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "hilog.info",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "hilog",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "Identifier",
                          "label": "DOMAIN_NUMBER",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "TAG",
                          "children": []
                        },
                        {
                          "type": "TemplateExpression",
                          "label": "`onConfigurationUpdated systemLanguage is ${systemLanguage}, newConfig: ${JSON.stringify(newConfig)}`",
                          "children": [
                            {
                              "type": "TemplateHead",
                              "label": "`onConfigurationUpdated systemLanguage is ${",
                              "children": []
                            },
                            {
                              "type": "TemplateSpan",
                              "label": "systemLanguage}, newConfig: ${",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "systemLanguage",
                                  "children": []
                                },
                                {
                                  "type": "TemplateMiddle",
                                  "label": "}, newConfig: ${",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "TemplateSpan",
                              "label": "JSON.stringify(newConfig)}`",
                              "children": [
                                {
                                  "type": "CallExpression",
                                  "label": "JSON.stringify(newConfig)",
                                  "children": [
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "JSON.stringify",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "JSON",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "stringify",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "newConfig",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "LastTemplateToken",
                                  "label": "}`",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (systemLanguage !== newConfig.language) {\n      hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage from ${systemLanguage} changed to ${newConfig.language}`);\n      systemLanguage = newConfig.language; // 将变化之后的系统语言保存，作为下一次变化前的系统语言\n    }",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "systemLanguage !== newConfig.language",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "systemLanguage",
                          "children": []
                        },
                        {
                          "type": "ExclamationEqualsEqualsToken",
                          "label": "!==",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "newConfig.language",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "newConfig",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "language",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage from ${systemLanguage} changed to ${newConfig.language}`);\n      systemLanguage = newConfig.language; // 将变化之后的系统语言保存，作为下一次变化前的系统语言\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage from ${systemLanguage} changed to ${newConfig.language}`);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage from ${systemLanguage} changed to ${newConfig.language}`)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "hilog.info",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "hilog",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "DOMAIN_NUMBER",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "TAG",
                                  "children": []
                                },
                                {
                                  "type": "TemplateExpression",
                                  "label": "`systemLanguage from ${systemLanguage} changed to ${newConfig.language}`",
                                  "children": [
                                    {
                                      "type": "TemplateHead",
                                      "label": "`systemLanguage from ${",
                                      "children": []
                                    },
                                    {
                                      "type": "TemplateSpan",
                                      "label": "systemLanguage} changed to ${",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "systemLanguage",
                                          "children": []
                                        },
                                        {
                                          "type": "TemplateMiddle",
                                          "label": "} changed to ${",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "TemplateSpan",
                                      "label": "newConfig.language}`",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "newConfig.language",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "newConfig",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "language",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "LastTemplateToken",
                                          "label": "}`",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "systemLanguage = newConfig.language;",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "systemLanguage = newConfig.language",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "systemLanguage",
                                  "children": []
                                },
                                {
                                  "type": "FirstAssignment",
                                  "label": "=",
                                  "children": []
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "newConfig.language",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "newConfig",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "language",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "EmptyStatement",
      "label": ";",
      "children": []
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "children": []
    }
  ]
}