{
  "type": "SourceFile",
  "label": "import ISettingsController from './ISettingsController'\n\n/**\n * BaseSettingsController Of Wifi test\n */\n\nexport default abstract class BaseSettingsController implements ISettingsController {\n  protected getComponent: () => any;\n\n  /**\n   * Bind component.\n   */\n  bindComponent(component: any): ISettingsController {\n    this.getComponent = () => component;\n\n    // set default property values by component\n    for (let key in this) {\n      if (key in component) {\n        this[key] = component[key];\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * Bind component's properties, note that only basic types can be transported.\n   * Type like Resource may meet unexpected error.\n   * If you want to transport resource string or color, ets. AppStorage is suggested @StorageLink.\n   */\n  bindProperties(componentProperties: string[], controllerProperties?: string[]): ISettingsController {\n    for (let i = 0; i < componentProperties.length; i++) {\n      this.defineBoundProperty(componentProperties[i], controllerProperties ? controllerProperties[i] : componentProperties[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Initialize data.\n   */\n  initData(): ISettingsController {\n    return this;\n  };\n\n  /**\n   * Subscribe listeners.\n   */\n  subscribe(): ISettingsController {\n    return this;\n  };\n\n  /**\n   * Unsubscribe listeners.\n   */\n  unsubscribe(): ISettingsController {\n    return this;\n  };\n\n  /**\n   * Define bound properties.\n   */\n  private defineBoundProperty(componentProperty: string, controllerProperty: string): void {\n    let __v = this[controllerProperty];\n\n    Object.defineProperty(this, controllerProperty, {\n      get: function () {\n        return __v;\n      },\n      set: function (value) {\n        __v = value;\n        this.getComponent()[componentProperty] = value;\n      }\n    });\n  }\n}",
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import ISettingsController from './ISettingsController'",
      "children": [
        {
          "type": "ImportClause",
          "label": "ISettingsController",
          "children": [
            {
              "type": "Identifier",
              "label": "ISettingsController",
              "children": []
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./ISettingsController'",
          "children": []
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export default abstract class BaseSettingsController implements ISettingsController {\n  protected getComponent: () => any;\n\n  /**\n   * Bind component.\n   */\n  bindComponent(component: any): ISettingsController {\n    this.getComponent = () => component;\n\n    // set default property values by component\n    for (let key in this) {\n      if (key in component) {\n        this[key] = component[key];\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * Bind component's properties, note that only basic types can be transported.\n   * Type like Resource may meet unexpected error.\n   * If you want to transport resource string or color, ets. AppStorage is suggested @StorageLink.\n   */\n  bindProperties(componentProperties: string[], controllerProperties?: string[]): ISettingsController {\n    for (let i = 0; i < componentProperties.length; i++) {\n      this.defineBoundProperty(componentProperties[i], controllerProperties ? controllerProperties[i] : componentProperties[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Initialize data.\n   */\n  initData(): ISettingsController {\n    return this;\n  };\n\n  /**\n   * Subscribe listeners.\n   */\n  subscribe(): ISettingsController {\n    return this;\n  };\n\n  /**\n   * Unsubscribe listeners.\n   */\n  unsubscribe(): ISettingsController {\n    return this;\n  };\n\n  /**\n   * Define bound properties.\n   */\n  private defineBoundProperty(componentProperty: string, controllerProperty: string): void {\n    let __v = this[controllerProperty];\n\n    Object.defineProperty(this, controllerProperty, {\n      get: function () {\n        return __v;\n      },\n      set: function (value) {\n        __v = value;\n        this.getComponent()[componentProperty] = value;\n      }\n    });\n  }\n}",
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "children": []
        },
        {
          "type": "DefaultKeyword",
          "label": "default",
          "children": []
        },
        {
          "type": "FirstContextualKeyword",
          "label": "abstract",
          "children": []
        },
        {
          "type": "Identifier",
          "label": "BaseSettingsController",
          "children": []
        },
        {
          "type": "HeritageClause",
          "label": "implements ISettingsController",
          "children": [
            {
              "type": "ExpressionWithTypeArguments",
              "label": "ISettingsController",
              "children": [
                {
                  "type": "Identifier",
                  "label": "ISettingsController",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "PropertyDeclaration",
          "label": "protected getComponent: () => any;",
          "children": [
            {
              "type": "ProtectedKeyword",
              "label": "protected",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "getComponent",
              "children": []
            },
            {
              "type": "FunctionType",
              "label": "() => any",
              "children": [
                {
                  "type": "AnyKeyword",
                  "label": "any",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "bindComponent(component: any): ISettingsController {\n    this.getComponent = () => component;\n\n    // set default property values by component\n    for (let key in this) {\n      if (key in component) {\n        this[key] = component[key];\n      }\n    }\n\n    return this;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "bindComponent",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "component: any",
              "children": [
                {
                  "type": "Identifier",
                  "label": "component",
                  "children": []
                },
                {
                  "type": "AnyKeyword",
                  "label": "any",
                  "children": []
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "ISettingsController",
              "children": [
                {
                  "type": "Identifier",
                  "label": "ISettingsController",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    this.getComponent = () => component;\n\n    // set default property values by component\n    for (let key in this) {\n      if (key in component) {\n        this[key] = component[key];\n      }\n    }\n\n    return this;\n  }",
              "children": [
                {
                  "type": "ExpressionStatement",
                  "label": "this.getComponent = () => component;",
                  "children": [
                    {
                      "type": "BinaryExpression",
                      "label": "this.getComponent = () => component",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "this.getComponent",
                          "children": [
                            {
                              "type": "ThisKeyword",
                              "label": "this",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "getComponent",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "FirstAssignment",
                          "label": "=",
                          "children": []
                        },
                        {
                          "type": "ArrowFunction",
                          "label": "() => component",
                          "children": [
                            {
                              "type": "EqualsGreaterThanToken",
                              "label": "=>",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "component",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ForInStatement",
                  "label": "for (let key in this) {\n      if (key in component) {\n        this[key] = component[key];\n      }\n    }",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let key",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "key",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "key",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "ThisKeyword",
                      "label": "this",
                      "children": []
                    },
                    {
                      "type": "Block",
                      "label": "{\n      if (key in component) {\n        this[key] = component[key];\n      }\n    }",
                      "children": [
                        {
                          "type": "IfStatement",
                          "label": "if (key in component) {\n        this[key] = component[key];\n      }",
                          "children": [
                            {
                              "type": "BinaryExpression",
                              "label": "key in component",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "key",
                                  "children": []
                                },
                                {
                                  "type": "InKeyword",
                                  "label": "in",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "component",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "Block",
                              "label": "{\n        this[key] = component[key];\n      }",
                              "children": [
                                {
                                  "type": "ExpressionStatement",
                                  "label": "this[key] = component[key];",
                                  "children": [
                                    {
                                      "type": "BinaryExpression",
                                      "label": "this[key] = component[key]",
                                      "children": [
                                        {
                                          "type": "ElementAccessExpression",
                                          "label": "this[key]",
                                          "children": [
                                            {
                                              "type": "ThisKeyword",
                                              "label": "this",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "key",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "FirstAssignment",
                                          "label": "=",
                                          "children": []
                                        },
                                        {
                                          "type": "ElementAccessExpression",
                                          "label": "component[key]",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "component",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "key",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return this;",
                  "children": [
                    {
                      "type": "ThisKeyword",
                      "label": "this",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "bindProperties(componentProperties: string[], controllerProperties?: string[]): ISettingsController {\n    for (let i = 0; i < componentProperties.length; i++) {\n      this.defineBoundProperty(componentProperties[i], controllerProperties ? controllerProperties[i] : componentProperties[i]);\n    }\n    return this;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "bindProperties",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "componentProperties: string[]",
              "children": [
                {
                  "type": "Identifier",
                  "label": "componentProperties",
                  "children": []
                },
                {
                  "type": "ArrayType",
                  "label": "string[]",
                  "children": [
                    {
                      "type": "StringKeyword",
                      "label": "string",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "controllerProperties?: string[]",
              "children": [
                {
                  "type": "Identifier",
                  "label": "controllerProperties",
                  "children": []
                },
                {
                  "type": "QuestionToken",
                  "label": "?",
                  "children": []
                },
                {
                  "type": "ArrayType",
                  "label": "string[]",
                  "children": [
                    {
                      "type": "StringKeyword",
                      "label": "string",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "ISettingsController",
              "children": [
                {
                  "type": "Identifier",
                  "label": "ISettingsController",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    for (let i = 0; i < componentProperties.length; i++) {\n      this.defineBoundProperty(componentProperties[i], controllerProperties ? controllerProperties[i] : componentProperties[i]);\n    }\n    return this;\n  }",
              "children": [
                {
                  "type": "ForStatement",
                  "label": "for (let i = 0; i < componentProperties.length; i++) {\n      this.defineBoundProperty(componentProperties[i], controllerProperties ? controllerProperties[i] : componentProperties[i]);\n    }",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let i = 0",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "i = 0",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "i",
                              "children": []
                            },
                            {
                              "type": "FirstLiteralToken",
                              "label": "0",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BinaryExpression",
                      "label": "i < componentProperties.length",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "i",
                          "children": []
                        },
                        {
                          "type": "FirstBinaryOperator",
                          "label": "<",
                          "children": []
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "componentProperties.length",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "componentProperties",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "length",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "PostfixUnaryExpression",
                      "label": "i++",
                      "children": [
                        {
                          "type": "Identifier",
                          "label": "i",
                          "children": []
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.defineBoundProperty(componentProperties[i], controllerProperties ? controllerProperties[i] : componentProperties[i]);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.defineBoundProperty(componentProperties[i], controllerProperties ? controllerProperties[i] : componentProperties[i]);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.defineBoundProperty(componentProperties[i], controllerProperties ? controllerProperties[i] : componentProperties[i])",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.defineBoundProperty",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "defineBoundProperty",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "ElementAccessExpression",
                                  "label": "componentProperties[i]",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "componentProperties",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "i",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "ConditionalExpression",
                                  "label": "controllerProperties ? controllerProperties[i] : componentProperties[i]",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "controllerProperties",
                                      "children": []
                                    },
                                    {
                                      "type": "QuestionToken",
                                      "label": "?",
                                      "children": []
                                    },
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "controllerProperties[i]",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "controllerProperties",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "i",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ColonToken",
                                      "label": ":",
                                      "children": []
                                    },
                                    {
                                      "type": "ElementAccessExpression",
                                      "label": "componentProperties[i]",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "componentProperties",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "i",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return this;",
                  "children": [
                    {
                      "type": "ThisKeyword",
                      "label": "this",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "initData(): ISettingsController {\n    return this;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "initData",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "ISettingsController",
              "children": [
                {
                  "type": "Identifier",
                  "label": "ISettingsController",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    return this;\n  }",
              "children": [
                {
                  "type": "ReturnStatement",
                  "label": "return this;",
                  "children": [
                    {
                      "type": "ThisKeyword",
                      "label": "this",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "SemicolonClassElement",
          "label": ";",
          "children": []
        },
        {
          "type": "MethodDeclaration",
          "label": "subscribe(): ISettingsController {\n    return this;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "subscribe",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "ISettingsController",
              "children": [
                {
                  "type": "Identifier",
                  "label": "ISettingsController",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    return this;\n  }",
              "children": [
                {
                  "type": "ReturnStatement",
                  "label": "return this;",
                  "children": [
                    {
                      "type": "ThisKeyword",
                      "label": "this",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "SemicolonClassElement",
          "label": ";",
          "children": []
        },
        {
          "type": "MethodDeclaration",
          "label": "unsubscribe(): ISettingsController {\n    return this;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "unsubscribe",
              "children": []
            },
            {
              "type": "TypeReference",
              "label": "ISettingsController",
              "children": [
                {
                  "type": "Identifier",
                  "label": "ISettingsController",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    return this;\n  }",
              "children": [
                {
                  "type": "ReturnStatement",
                  "label": "return this;",
                  "children": [
                    {
                      "type": "ThisKeyword",
                      "label": "this",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "SemicolonClassElement",
          "label": ";",
          "children": []
        },
        {
          "type": "MethodDeclaration",
          "label": "private defineBoundProperty(componentProperty: string, controllerProperty: string): void {\n    let __v = this[controllerProperty];\n\n    Object.defineProperty(this, controllerProperty, {\n      get: function () {\n        return __v;\n      },\n      set: function (value) {\n        __v = value;\n        this.getComponent()[componentProperty] = value;\n      }\n    });\n  }",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "defineBoundProperty",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "componentProperty: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "componentProperty",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "controllerProperty: string",
              "children": [
                {
                  "type": "Identifier",
                  "label": "controllerProperty",
                  "children": []
                },
                {
                  "type": "StringKeyword",
                  "label": "string",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    let __v = this[controllerProperty];\n\n    Object.defineProperty(this, controllerProperty, {\n      get: function () {\n        return __v;\n      },\n      set: function (value) {\n        __v = value;\n        this.getComponent()[componentProperty] = value;\n      }\n    });\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let __v = this[controllerProperty];",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let __v = this[controllerProperty]",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "__v = this[controllerProperty]",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "__v",
                              "children": []
                            },
                            {
                              "type": "ElementAccessExpression",
                              "label": "this[controllerProperty]",
                              "children": [
                                {
                                  "type": "ThisKeyword",
                                  "label": "this",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "controllerProperty",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "Object.defineProperty(this, controllerProperty, {\n      get: function () {\n        return __v;\n      },\n      set: function (value) {\n        __v = value;\n        this.getComponent()[componentProperty] = value;\n      }\n    });",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "Object.defineProperty(this, controllerProperty, {\n      get: function () {\n        return __v;\n      },\n      set: function (value) {\n        __v = value;\n        this.getComponent()[componentProperty] = value;\n      }\n    })",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Object.defineProperty",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Object",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "defineProperty",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "ThisKeyword",
                          "label": "this",
                          "children": []
                        },
                        {
                          "type": "Identifier",
                          "label": "controllerProperty",
                          "children": []
                        },
                        {
                          "type": "ObjectLiteralExpression",
                          "label": "{\n      get: function () {\n        return __v;\n      },\n      set: function (value) {\n        __v = value;\n        this.getComponent()[componentProperty] = value;\n      }\n    }",
                          "children": [
                            {
                              "type": "PropertyAssignment",
                              "label": "get: function () {\n        return __v;\n      }",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "get",
                                  "children": []
                                },
                                {
                                  "type": "FunctionExpression",
                                  "label": "function () {\n        return __v;\n      }",
                                  "children": [
                                    {
                                      "type": "Block",
                                      "label": "{\n        return __v;\n      }",
                                      "children": [
                                        {
                                          "type": "ReturnStatement",
                                          "label": "return __v;",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "__v",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "PropertyAssignment",
                              "label": "set: function (value) {\n        __v = value;\n        this.getComponent()[componentProperty] = value;\n      }",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "set",
                                  "children": []
                                },
                                {
                                  "type": "FunctionExpression",
                                  "label": "function (value) {\n        __v = value;\n        this.getComponent()[componentProperty] = value;\n      }",
                                  "children": [
                                    {
                                      "type": "Parameter",
                                      "label": "value",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "value",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Block",
                                      "label": "{\n        __v = value;\n        this.getComponent()[componentProperty] = value;\n      }",
                                      "children": [
                                        {
                                          "type": "ExpressionStatement",
                                          "label": "__v = value;",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "__v = value",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "__v",
                                                  "children": []
                                                },
                                                {
                                                  "type": "FirstAssignment",
                                                  "label": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "value",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "label": "this.getComponent()[componentProperty] = value;",
                                          "children": [
                                            {
                                              "type": "BinaryExpression",
                                              "label": "this.getComponent()[componentProperty] = value",
                                              "children": [
                                                {
                                                  "type": "ElementAccessExpression",
                                                  "label": "this.getComponent()[componentProperty]",
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "this.getComponent()",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "this.getComponent",
                                                          "children": [
                                                            {
                                                              "type": "ThisKeyword",
                                                              "label": "this",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "getComponent",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "componentProperty",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "FirstAssignment",
                                                  "label": "=",
                                                  "children": []
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "value",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "children": []
    }
  ]
}