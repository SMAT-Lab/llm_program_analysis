{
  "type": "SourceFile",
  "label": "import { Action } from './Action'\nimport { ActionBarProp } from '../common/ActionBarProp'\nimport { ActionBarMode, ActionBarSelectionMode } from './ActionBarMode'\nimport { screenManager } from '../common/ScreenManager'\n\nexport class AlbumBarModel {\n  createActionBar(isAlbumSetSelectedMode: boolean, selectedAlbumsCount: number,\n                  isDisableRename: boolean, isDisableDelete: boolean): ActionBarProp {\n    let actionBarProp: ActionBarProp = new ActionBarProp();\n    let isHorizontal = screenManager.isHorizontal();\n    if (isHorizontal) {\n      this.updateHorizontalActionBar(actionBarProp, isAlbumSetSelectedMode,\n        selectedAlbumsCount, isDisableRename, isDisableDelete);\n    } else {\n      this.updateVerticalActionBar(actionBarProp, isAlbumSetSelectedMode);\n    }\n    return actionBarProp;\n  }\n\n  updateActionBar(actionBarProp: ActionBarProp, isAlbumSetSelectedMode: boolean,\n                  selectedAlbumsCount: number, isDisableRename: boolean, isDisableDelete: boolean): void {\n    let isHorizontal = screenManager.isHorizontal();\n    if (isHorizontal) {\n      this.updateHorizontalActionBar(actionBarProp, isAlbumSetSelectedMode,\n        selectedAlbumsCount, isDisableRename, isDisableDelete);\n    } else {\n      this.updateVerticalActionBar(actionBarProp, isAlbumSetSelectedMode);\n    }\n  }\n\n  private updateHorizontalActionBar(actionBarProp: ActionBarProp, isAlbumSetSelectedMode: boolean, selectedAlbumsCount: number,\n                                    isDisableRename: boolean, isDisableDelete: boolean): ActionBarProp {\n    let isSidebar: boolean = screenManager.isSidebar();\n    actionBarProp\n      .setHasTabBar(isSidebar)\n      .setTitle($r('app.string.tab_albums'))\n      .setIsHeadTitle(true);\n    let menuList: Action[] = this.getMenuList(isAlbumSetSelectedMode, selectedAlbumsCount, isDisableRename, isDisableDelete);\n    if (isAlbumSetSelectedMode) {\n      actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode(ActionBarSelectionMode.MULTI);\n    } else {\n      menuList.push(Action.NEW)\n      actionBarProp\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.STANDARD_MODE);\n    }\n    return actionBarProp;\n  }\n\n  private updateVerticalActionBar(actionBarProp: ActionBarProp, isAlbumSetSelectedMode: boolean): ActionBarProp {\n    let menuList: Action[] = [];\n    menuList.push(Action.NEW);\n    let isSidebar: boolean = screenManager.isSidebar();\n    actionBarProp\n      .setHasTabBar(isSidebar)\n      .setTitle($r('app.string.tab_albums'))\n      .setIsHeadTitle(true);\n\n    if (isAlbumSetSelectedMode) {\n      actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode(ActionBarSelectionMode.MULTI);\n    } else {\n      actionBarProp\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.STANDARD_MODE);\n    }\n\n    return actionBarProp;\n  }\n\n  getMenuList(isAlbumSetSelectedMode: boolean, selectedAlbumsCount: number, isDisableRename: boolean, isDisableDelete: boolean): Action[] {\n    let menuList: Action[] = [];\n    if (isAlbumSetSelectedMode) {\n      menuList.push((!isDisableRename && selectedAlbumsCount === 1) ? Action.RENAME : Action.RENAME_INVALID);\n      menuList.push((!isDisableDelete && selectedAlbumsCount > 0) ? Action.DELETE : Action.DELETE_INVALID);\n    }\n    return menuList;\n  }\n}\n",
  "children": [
    {
      "type": "ImportDeclaration",
      "label": "import { Action } from './Action'",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ Action }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ Action }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "Action",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Action",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./Action'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { ActionBarProp } from '../common/ActionBarProp'",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ ActionBarProp }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ ActionBarProp }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "ActionBarProp",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "ActionBarProp",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../common/ActionBarProp'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { ActionBarMode, ActionBarSelectionMode } from './ActionBarMode'",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ ActionBarMode, ActionBarSelectionMode }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ ActionBarMode, ActionBarSelectionMode }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "ActionBarMode",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "ActionBarMode",
                      "children": []
                    }
                  ]
                },
                {
                  "type": "ImportSpecifier",
                  "label": "ActionBarSelectionMode",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "ActionBarSelectionMode",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'./ActionBarMode'",
          "children": []
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "label": "import { screenManager } from '../common/ScreenManager'",
      "children": [
        {
          "type": "ImportClause",
          "label": "{ screenManager }",
          "children": [
            {
              "type": "NamedImports",
              "label": "{ screenManager }",
              "children": [
                {
                  "type": "ImportSpecifier",
                  "label": "screenManager",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "screenManager",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "StringLiteral",
          "label": "'../common/ScreenManager'",
          "children": []
        }
      ]
    },
    {
      "type": "ClassDeclaration",
      "label": "export class AlbumBarModel {\n  createActionBar(isAlbumSetSelectedMode: boolean, selectedAlbumsCount: number,\n                  isDisableRename: boolean, isDisableDelete: boolean): ActionBarProp {\n    let actionBarProp: ActionBarProp = new ActionBarProp();\n    let isHorizontal = screenManager.isHorizontal();\n    if (isHorizontal) {\n      this.updateHorizontalActionBar(actionBarProp, isAlbumSetSelectedMode,\n        selectedAlbumsCount, isDisableRename, isDisableDelete);\n    } else {\n      this.updateVerticalActionBar(actionBarProp, isAlbumSetSelectedMode);\n    }\n    return actionBarProp;\n  }\n\n  updateActionBar(actionBarProp: ActionBarProp, isAlbumSetSelectedMode: boolean,\n                  selectedAlbumsCount: number, isDisableRename: boolean, isDisableDelete: boolean): void {\n    let isHorizontal = screenManager.isHorizontal();\n    if (isHorizontal) {\n      this.updateHorizontalActionBar(actionBarProp, isAlbumSetSelectedMode,\n        selectedAlbumsCount, isDisableRename, isDisableDelete);\n    } else {\n      this.updateVerticalActionBar(actionBarProp, isAlbumSetSelectedMode);\n    }\n  }\n\n  private updateHorizontalActionBar(actionBarProp: ActionBarProp, isAlbumSetSelectedMode: boolean, selectedAlbumsCount: number,\n                                    isDisableRename: boolean, isDisableDelete: boolean): ActionBarProp {\n    let isSidebar: boolean = screenManager.isSidebar();\n    actionBarProp\n      .setHasTabBar(isSidebar)\n      .setTitle($r('app.string.tab_albums'))\n      .setIsHeadTitle(true);\n    let menuList: Action[] = this.getMenuList(isAlbumSetSelectedMode, selectedAlbumsCount, isDisableRename, isDisableDelete);\n    if (isAlbumSetSelectedMode) {\n      actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode(ActionBarSelectionMode.MULTI);\n    } else {\n      menuList.push(Action.NEW)\n      actionBarProp\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.STANDARD_MODE);\n    }\n    return actionBarProp;\n  }\n\n  private updateVerticalActionBar(actionBarProp: ActionBarProp, isAlbumSetSelectedMode: boolean): ActionBarProp {\n    let menuList: Action[] = [];\n    menuList.push(Action.NEW);\n    let isSidebar: boolean = screenManager.isSidebar();\n    actionBarProp\n      .setHasTabBar(isSidebar)\n      .setTitle($r('app.string.tab_albums'))\n      .setIsHeadTitle(true);\n\n    if (isAlbumSetSelectedMode) {\n      actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode(ActionBarSelectionMode.MULTI);\n    } else {\n      actionBarProp\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.STANDARD_MODE);\n    }\n\n    return actionBarProp;\n  }\n\n  getMenuList(isAlbumSetSelectedMode: boolean, selectedAlbumsCount: number, isDisableRename: boolean, isDisableDelete: boolean): Action[] {\n    let menuList: Action[] = [];\n    if (isAlbumSetSelectedMode) {\n      menuList.push((!isDisableRename && selectedAlbumsCount === 1) ? Action.RENAME : Action.RENAME_INVALID);\n      menuList.push((!isDisableDelete && selectedAlbumsCount > 0) ? Action.DELETE : Action.DELETE_INVALID);\n    }\n    return menuList;\n  }\n}",
      "children": [
        {
          "type": "ExportKeyword",
          "label": "export",
          "children": []
        },
        {
          "type": "Identifier",
          "label": "AlbumBarModel",
          "children": []
        },
        {
          "type": "MethodDeclaration",
          "label": "createActionBar(isAlbumSetSelectedMode: boolean, selectedAlbumsCount: number,\n                  isDisableRename: boolean, isDisableDelete: boolean): ActionBarProp {\n    let actionBarProp: ActionBarProp = new ActionBarProp();\n    let isHorizontal = screenManager.isHorizontal();\n    if (isHorizontal) {\n      this.updateHorizontalActionBar(actionBarProp, isAlbumSetSelectedMode,\n        selectedAlbumsCount, isDisableRename, isDisableDelete);\n    } else {\n      this.updateVerticalActionBar(actionBarProp, isAlbumSetSelectedMode);\n    }\n    return actionBarProp;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "createActionBar",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "isAlbumSetSelectedMode: boolean",
              "children": [
                {
                  "type": "Identifier",
                  "label": "isAlbumSetSelectedMode",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "selectedAlbumsCount: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "selectedAlbumsCount",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "isDisableRename: boolean",
              "children": [
                {
                  "type": "Identifier",
                  "label": "isDisableRename",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "isDisableDelete: boolean",
              "children": [
                {
                  "type": "Identifier",
                  "label": "isDisableDelete",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "ActionBarProp",
              "children": [
                {
                  "type": "Identifier",
                  "label": "ActionBarProp",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    let actionBarProp: ActionBarProp = new ActionBarProp();\n    let isHorizontal = screenManager.isHorizontal();\n    if (isHorizontal) {\n      this.updateHorizontalActionBar(actionBarProp, isAlbumSetSelectedMode,\n        selectedAlbumsCount, isDisableRename, isDisableDelete);\n    } else {\n      this.updateVerticalActionBar(actionBarProp, isAlbumSetSelectedMode);\n    }\n    return actionBarProp;\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let actionBarProp: ActionBarProp = new ActionBarProp();",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let actionBarProp: ActionBarProp = new ActionBarProp()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "actionBarProp: ActionBarProp = new ActionBarProp()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "actionBarProp",
                              "children": []
                            },
                            {
                              "type": "TypeReference",
                              "label": "ActionBarProp",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "ActionBarProp",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "type": "NewExpression",
                              "label": "new ActionBarProp()",
                              "children": [
                                {
                                  "type": "Identifier",
                                  "label": "ActionBarProp",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let isHorizontal = screenManager.isHorizontal();",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let isHorizontal = screenManager.isHorizontal()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "isHorizontal = screenManager.isHorizontal()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "isHorizontal",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "screenManager.isHorizontal()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "screenManager.isHorizontal",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "screenManager",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "isHorizontal",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (isHorizontal) {\n      this.updateHorizontalActionBar(actionBarProp, isAlbumSetSelectedMode,\n        selectedAlbumsCount, isDisableRename, isDisableDelete);\n    } else {\n      this.updateVerticalActionBar(actionBarProp, isAlbumSetSelectedMode);\n    }",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "isHorizontal",
                      "children": []
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.updateHorizontalActionBar(actionBarProp, isAlbumSetSelectedMode,\n        selectedAlbumsCount, isDisableRename, isDisableDelete);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.updateHorizontalActionBar(actionBarProp, isAlbumSetSelectedMode,\n        selectedAlbumsCount, isDisableRename, isDisableDelete);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.updateHorizontalActionBar(actionBarProp, isAlbumSetSelectedMode,\n        selectedAlbumsCount, isDisableRename, isDisableDelete)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.updateHorizontalActionBar",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "updateHorizontalActionBar",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "actionBarProp",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isAlbumSetSelectedMode",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "selectedAlbumsCount",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isDisableRename",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isDisableDelete",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.updateVerticalActionBar(actionBarProp, isAlbumSetSelectedMode);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.updateVerticalActionBar(actionBarProp, isAlbumSetSelectedMode);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.updateVerticalActionBar(actionBarProp, isAlbumSetSelectedMode)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.updateVerticalActionBar",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "updateVerticalActionBar",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "actionBarProp",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isAlbumSetSelectedMode",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return actionBarProp;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "actionBarProp",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "updateActionBar(actionBarProp: ActionBarProp, isAlbumSetSelectedMode: boolean,\n                  selectedAlbumsCount: number, isDisableRename: boolean, isDisableDelete: boolean): void {\n    let isHorizontal = screenManager.isHorizontal();\n    if (isHorizontal) {\n      this.updateHorizontalActionBar(actionBarProp, isAlbumSetSelectedMode,\n        selectedAlbumsCount, isDisableRename, isDisableDelete);\n    } else {\n      this.updateVerticalActionBar(actionBarProp, isAlbumSetSelectedMode);\n    }\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "updateActionBar",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "actionBarProp: ActionBarProp",
              "children": [
                {
                  "type": "Identifier",
                  "label": "actionBarProp",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "ActionBarProp",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "ActionBarProp",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "isAlbumSetSelectedMode: boolean",
              "children": [
                {
                  "type": "Identifier",
                  "label": "isAlbumSetSelectedMode",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "selectedAlbumsCount: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "selectedAlbumsCount",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "isDisableRename: boolean",
              "children": [
                {
                  "type": "Identifier",
                  "label": "isDisableRename",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "isDisableDelete: boolean",
              "children": [
                {
                  "type": "Identifier",
                  "label": "isDisableDelete",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "VoidKeyword",
              "label": "void",
              "children": []
            },
            {
              "type": "Block",
              "label": "{\n    let isHorizontal = screenManager.isHorizontal();\n    if (isHorizontal) {\n      this.updateHorizontalActionBar(actionBarProp, isAlbumSetSelectedMode,\n        selectedAlbumsCount, isDisableRename, isDisableDelete);\n    } else {\n      this.updateVerticalActionBar(actionBarProp, isAlbumSetSelectedMode);\n    }\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let isHorizontal = screenManager.isHorizontal();",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let isHorizontal = screenManager.isHorizontal()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "isHorizontal = screenManager.isHorizontal()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "isHorizontal",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "screenManager.isHorizontal()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "screenManager.isHorizontal",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "screenManager",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "isHorizontal",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (isHorizontal) {\n      this.updateHorizontalActionBar(actionBarProp, isAlbumSetSelectedMode,\n        selectedAlbumsCount, isDisableRename, isDisableDelete);\n    } else {\n      this.updateVerticalActionBar(actionBarProp, isAlbumSetSelectedMode);\n    }",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "isHorizontal",
                      "children": []
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.updateHorizontalActionBar(actionBarProp, isAlbumSetSelectedMode,\n        selectedAlbumsCount, isDisableRename, isDisableDelete);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.updateHorizontalActionBar(actionBarProp, isAlbumSetSelectedMode,\n        selectedAlbumsCount, isDisableRename, isDisableDelete);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.updateHorizontalActionBar(actionBarProp, isAlbumSetSelectedMode,\n        selectedAlbumsCount, isDisableRename, isDisableDelete)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.updateHorizontalActionBar",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "updateHorizontalActionBar",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "actionBarProp",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isAlbumSetSelectedMode",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "selectedAlbumsCount",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isDisableRename",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isDisableDelete",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      this.updateVerticalActionBar(actionBarProp, isAlbumSetSelectedMode);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "this.updateVerticalActionBar(actionBarProp, isAlbumSetSelectedMode);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "this.updateVerticalActionBar(actionBarProp, isAlbumSetSelectedMode)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.updateVerticalActionBar",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "updateVerticalActionBar",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "actionBarProp",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isAlbumSetSelectedMode",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "private updateHorizontalActionBar(actionBarProp: ActionBarProp, isAlbumSetSelectedMode: boolean, selectedAlbumsCount: number,\n                                    isDisableRename: boolean, isDisableDelete: boolean): ActionBarProp {\n    let isSidebar: boolean = screenManager.isSidebar();\n    actionBarProp\n      .setHasTabBar(isSidebar)\n      .setTitle($r('app.string.tab_albums'))\n      .setIsHeadTitle(true);\n    let menuList: Action[] = this.getMenuList(isAlbumSetSelectedMode, selectedAlbumsCount, isDisableRename, isDisableDelete);\n    if (isAlbumSetSelectedMode) {\n      actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode(ActionBarSelectionMode.MULTI);\n    } else {\n      menuList.push(Action.NEW)\n      actionBarProp\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.STANDARD_MODE);\n    }\n    return actionBarProp;\n  }",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "updateHorizontalActionBar",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "actionBarProp: ActionBarProp",
              "children": [
                {
                  "type": "Identifier",
                  "label": "actionBarProp",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "ActionBarProp",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "ActionBarProp",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "isAlbumSetSelectedMode: boolean",
              "children": [
                {
                  "type": "Identifier",
                  "label": "isAlbumSetSelectedMode",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "selectedAlbumsCount: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "selectedAlbumsCount",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "isDisableRename: boolean",
              "children": [
                {
                  "type": "Identifier",
                  "label": "isDisableRename",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "isDisableDelete: boolean",
              "children": [
                {
                  "type": "Identifier",
                  "label": "isDisableDelete",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "ActionBarProp",
              "children": [
                {
                  "type": "Identifier",
                  "label": "ActionBarProp",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    let isSidebar: boolean = screenManager.isSidebar();\n    actionBarProp\n      .setHasTabBar(isSidebar)\n      .setTitle($r('app.string.tab_albums'))\n      .setIsHeadTitle(true);\n    let menuList: Action[] = this.getMenuList(isAlbumSetSelectedMode, selectedAlbumsCount, isDisableRename, isDisableDelete);\n    if (isAlbumSetSelectedMode) {\n      actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode(ActionBarSelectionMode.MULTI);\n    } else {\n      menuList.push(Action.NEW)\n      actionBarProp\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.STANDARD_MODE);\n    }\n    return actionBarProp;\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let isSidebar: boolean = screenManager.isSidebar();",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let isSidebar: boolean = screenManager.isSidebar()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "isSidebar: boolean = screenManager.isSidebar()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "isSidebar",
                              "children": []
                            },
                            {
                              "type": "BooleanKeyword",
                              "label": "boolean",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "screenManager.isSidebar()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "screenManager.isSidebar",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "screenManager",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "isSidebar",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "actionBarProp\n      .setHasTabBar(isSidebar)\n      .setTitle($r('app.string.tab_albums'))\n      .setIsHeadTitle(true);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "actionBarProp\n      .setHasTabBar(isSidebar)\n      .setTitle($r('app.string.tab_albums'))\n      .setIsHeadTitle(true)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "actionBarProp\n      .setHasTabBar(isSidebar)\n      .setTitle($r('app.string.tab_albums'))\n      .setIsHeadTitle",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "actionBarProp\n      .setHasTabBar(isSidebar)\n      .setTitle($r('app.string.tab_albums'))",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "actionBarProp\n      .setHasTabBar(isSidebar)\n      .setTitle",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "actionBarProp\n      .setHasTabBar(isSidebar)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "actionBarProp\n      .setHasTabBar",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "actionBarProp",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "setHasTabBar",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "isSidebar",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "setTitle",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "$r('app.string.tab_albums')",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "$r",
                                      "children": []
                                    },
                                    {
                                      "type": "StringLiteral",
                                      "label": "'app.string.tab_albums'",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "setIsHeadTitle",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "TrueKeyword",
                          "label": "true",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let menuList: Action[] = this.getMenuList(isAlbumSetSelectedMode, selectedAlbumsCount, isDisableRename, isDisableDelete);",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let menuList: Action[] = this.getMenuList(isAlbumSetSelectedMode, selectedAlbumsCount, isDisableRename, isDisableDelete)",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "menuList: Action[] = this.getMenuList(isAlbumSetSelectedMode, selectedAlbumsCount, isDisableRename, isDisableDelete)",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "menuList",
                              "children": []
                            },
                            {
                              "type": "ArrayType",
                              "label": "Action[]",
                              "children": [
                                {
                                  "type": "TypeReference",
                                  "label": "Action",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Action",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "CallExpression",
                              "label": "this.getMenuList(isAlbumSetSelectedMode, selectedAlbumsCount, isDisableRename, isDisableDelete)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "this.getMenuList",
                                  "children": [
                                    {
                                      "type": "ThisKeyword",
                                      "label": "this",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "getMenuList",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isAlbumSetSelectedMode",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "selectedAlbumsCount",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isDisableRename",
                                  "children": []
                                },
                                {
                                  "type": "Identifier",
                                  "label": "isDisableDelete",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (isAlbumSetSelectedMode) {\n      actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode(ActionBarSelectionMode.MULTI);\n    } else {\n      menuList.push(Action.NEW)\n      actionBarProp\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.STANDARD_MODE);\n    }",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "isAlbumSetSelectedMode",
                      "children": []
                    },
                    {
                      "type": "Block",
                      "label": "{\n      actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode(ActionBarSelectionMode.MULTI);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode(ActionBarSelectionMode.MULTI);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode(ActionBarSelectionMode.MULTI)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.SELECTION_MODE)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMenuList(menuList)\n        .setMode",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMenuList(menuList)",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMenuList",
                                                  "children": [
                                                    {
                                                      "type": "CallExpression",
                                                      "label": "actionBarProp\n        .setLeftAction(Action.CANCEL)",
                                                      "children": [
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "actionBarProp\n        .setLeftAction",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "actionBarProp",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "setLeftAction",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "PropertyAccessExpression",
                                                          "label": "Action.CANCEL",
                                                          "children": [
                                                            {
                                                              "type": "Identifier",
                                                              "label": "Action",
                                                              "children": []
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "label": "CANCEL",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "setMenuList",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "label": "menuList",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "setMode",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "ActionBarMode.SELECTION_MODE",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "ActionBarMode",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "SELECTION_MODE",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "setSelectionMode",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "ActionBarSelectionMode.MULTI",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "ActionBarSelectionMode",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "MULTI",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      menuList.push(Action.NEW)\n      actionBarProp\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.STANDARD_MODE);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "menuList.push(Action.NEW)",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "menuList.push(Action.NEW)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "menuList.push",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "menuList",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "push",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "Action.NEW",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Action",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "NEW",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "actionBarProp\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.STANDARD_MODE);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "actionBarProp\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.STANDARD_MODE)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "actionBarProp\n        .setMenuList(menuList)\n        .setMode",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "actionBarProp\n        .setMenuList(menuList)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "actionBarProp\n        .setMenuList",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "actionBarProp",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "setMenuList",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "menuList",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "setMode",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "ActionBarMode.STANDARD_MODE",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "ActionBarMode",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "STANDARD_MODE",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return actionBarProp;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "actionBarProp",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "private updateVerticalActionBar(actionBarProp: ActionBarProp, isAlbumSetSelectedMode: boolean): ActionBarProp {\n    let menuList: Action[] = [];\n    menuList.push(Action.NEW);\n    let isSidebar: boolean = screenManager.isSidebar();\n    actionBarProp\n      .setHasTabBar(isSidebar)\n      .setTitle($r('app.string.tab_albums'))\n      .setIsHeadTitle(true);\n\n    if (isAlbumSetSelectedMode) {\n      actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode(ActionBarSelectionMode.MULTI);\n    } else {\n      actionBarProp\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.STANDARD_MODE);\n    }\n\n    return actionBarProp;\n  }",
          "children": [
            {
              "type": "PrivateKeyword",
              "label": "private",
              "children": []
            },
            {
              "type": "Identifier",
              "label": "updateVerticalActionBar",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "actionBarProp: ActionBarProp",
              "children": [
                {
                  "type": "Identifier",
                  "label": "actionBarProp",
                  "children": []
                },
                {
                  "type": "TypeReference",
                  "label": "ActionBarProp",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "ActionBarProp",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "isAlbumSetSelectedMode: boolean",
              "children": [
                {
                  "type": "Identifier",
                  "label": "isAlbumSetSelectedMode",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "TypeReference",
              "label": "ActionBarProp",
              "children": [
                {
                  "type": "Identifier",
                  "label": "ActionBarProp",
                  "children": []
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    let menuList: Action[] = [];\n    menuList.push(Action.NEW);\n    let isSidebar: boolean = screenManager.isSidebar();\n    actionBarProp\n      .setHasTabBar(isSidebar)\n      .setTitle($r('app.string.tab_albums'))\n      .setIsHeadTitle(true);\n\n    if (isAlbumSetSelectedMode) {\n      actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode(ActionBarSelectionMode.MULTI);\n    } else {\n      actionBarProp\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.STANDARD_MODE);\n    }\n\n    return actionBarProp;\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let menuList: Action[] = [];",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let menuList: Action[] = []",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "menuList: Action[] = []",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "menuList",
                              "children": []
                            },
                            {
                              "type": "ArrayType",
                              "label": "Action[]",
                              "children": [
                                {
                                  "type": "TypeReference",
                                  "label": "Action",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Action",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ArrayLiteralExpression",
                              "label": "[]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "menuList.push(Action.NEW);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "menuList.push(Action.NEW)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "menuList.push",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "menuList",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "push",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "PropertyAccessExpression",
                          "label": "Action.NEW",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "Action",
                              "children": []
                            },
                            {
                              "type": "Identifier",
                              "label": "NEW",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "FirstStatement",
                  "label": "let isSidebar: boolean = screenManager.isSidebar();",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let isSidebar: boolean = screenManager.isSidebar()",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "isSidebar: boolean = screenManager.isSidebar()",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "isSidebar",
                              "children": []
                            },
                            {
                              "type": "BooleanKeyword",
                              "label": "boolean",
                              "children": []
                            },
                            {
                              "type": "CallExpression",
                              "label": "screenManager.isSidebar()",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "screenManager.isSidebar",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "screenManager",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "isSidebar",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ExpressionStatement",
                  "label": "actionBarProp\n      .setHasTabBar(isSidebar)\n      .setTitle($r('app.string.tab_albums'))\n      .setIsHeadTitle(true);",
                  "children": [
                    {
                      "type": "CallExpression",
                      "label": "actionBarProp\n      .setHasTabBar(isSidebar)\n      .setTitle($r('app.string.tab_albums'))\n      .setIsHeadTitle(true)",
                      "children": [
                        {
                          "type": "PropertyAccessExpression",
                          "label": "actionBarProp\n      .setHasTabBar(isSidebar)\n      .setTitle($r('app.string.tab_albums'))\n      .setIsHeadTitle",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "actionBarProp\n      .setHasTabBar(isSidebar)\n      .setTitle($r('app.string.tab_albums'))",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "actionBarProp\n      .setHasTabBar(isSidebar)\n      .setTitle",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "actionBarProp\n      .setHasTabBar(isSidebar)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "actionBarProp\n      .setHasTabBar",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "actionBarProp",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "setHasTabBar",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "isSidebar",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "setTitle",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "CallExpression",
                                  "label": "$r('app.string.tab_albums')",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "$r",
                                      "children": []
                                    },
                                    {
                                      "type": "StringLiteral",
                                      "label": "'app.string.tab_albums'",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "Identifier",
                              "label": "setIsHeadTitle",
                              "children": []
                            }
                          ]
                        },
                        {
                          "type": "TrueKeyword",
                          "label": "true",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (isAlbumSetSelectedMode) {\n      actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode(ActionBarSelectionMode.MULTI);\n    } else {\n      actionBarProp\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.STANDARD_MODE);\n    }",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "isAlbumSetSelectedMode",
                      "children": []
                    },
                    {
                      "type": "Block",
                      "label": "{\n      actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode(ActionBarSelectionMode.MULTI);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode(ActionBarSelectionMode.MULTI);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode(ActionBarSelectionMode.MULTI)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMode(ActionBarMode.SELECTION_MODE)\n        .setSelectionMode",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMode(ActionBarMode.SELECTION_MODE)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "actionBarProp\n        .setLeftAction(Action.CANCEL)\n        .setMode",
                                          "children": [
                                            {
                                              "type": "CallExpression",
                                              "label": "actionBarProp\n        .setLeftAction(Action.CANCEL)",
                                              "children": [
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "actionBarProp\n        .setLeftAction",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "actionBarProp",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "setLeftAction",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "PropertyAccessExpression",
                                                  "label": "Action.CANCEL",
                                                  "children": [
                                                    {
                                                      "type": "Identifier",
                                                      "label": "Action",
                                                      "children": []
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "label": "CANCEL",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "setMode",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "ActionBarMode.SELECTION_MODE",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "ActionBarMode",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "SELECTION_MODE",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "setSelectionMode",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "ActionBarSelectionMode.MULTI",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "ActionBarSelectionMode",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "MULTI",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Block",
                      "label": "{\n      actionBarProp\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.STANDARD_MODE);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "actionBarProp\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.STANDARD_MODE);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "actionBarProp\n        .setMenuList(menuList)\n        .setMode(ActionBarMode.STANDARD_MODE)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "actionBarProp\n        .setMenuList(menuList)\n        .setMode",
                                  "children": [
                                    {
                                      "type": "CallExpression",
                                      "label": "actionBarProp\n        .setMenuList(menuList)",
                                      "children": [
                                        {
                                          "type": "PropertyAccessExpression",
                                          "label": "actionBarProp\n        .setMenuList",
                                          "children": [
                                            {
                                              "type": "Identifier",
                                              "label": "actionBarProp",
                                              "children": []
                                            },
                                            {
                                              "type": "Identifier",
                                              "label": "setMenuList",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "menuList",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "setMode",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "ActionBarMode.STANDARD_MODE",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "ActionBarMode",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "STANDARD_MODE",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return actionBarProp;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "actionBarProp",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "MethodDeclaration",
          "label": "getMenuList(isAlbumSetSelectedMode: boolean, selectedAlbumsCount: number, isDisableRename: boolean, isDisableDelete: boolean): Action[] {\n    let menuList: Action[] = [];\n    if (isAlbumSetSelectedMode) {\n      menuList.push((!isDisableRename && selectedAlbumsCount === 1) ? Action.RENAME : Action.RENAME_INVALID);\n      menuList.push((!isDisableDelete && selectedAlbumsCount > 0) ? Action.DELETE : Action.DELETE_INVALID);\n    }\n    return menuList;\n  }",
          "children": [
            {
              "type": "Identifier",
              "label": "getMenuList",
              "children": []
            },
            {
              "type": "Parameter",
              "label": "isAlbumSetSelectedMode: boolean",
              "children": [
                {
                  "type": "Identifier",
                  "label": "isAlbumSetSelectedMode",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "selectedAlbumsCount: number",
              "children": [
                {
                  "type": "Identifier",
                  "label": "selectedAlbumsCount",
                  "children": []
                },
                {
                  "type": "NumberKeyword",
                  "label": "number",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "isDisableRename: boolean",
              "children": [
                {
                  "type": "Identifier",
                  "label": "isDisableRename",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "Parameter",
              "label": "isDisableDelete: boolean",
              "children": [
                {
                  "type": "Identifier",
                  "label": "isDisableDelete",
                  "children": []
                },
                {
                  "type": "BooleanKeyword",
                  "label": "boolean",
                  "children": []
                }
              ]
            },
            {
              "type": "ArrayType",
              "label": "Action[]",
              "children": [
                {
                  "type": "TypeReference",
                  "label": "Action",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "Action",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "Block",
              "label": "{\n    let menuList: Action[] = [];\n    if (isAlbumSetSelectedMode) {\n      menuList.push((!isDisableRename && selectedAlbumsCount === 1) ? Action.RENAME : Action.RENAME_INVALID);\n      menuList.push((!isDisableDelete && selectedAlbumsCount > 0) ? Action.DELETE : Action.DELETE_INVALID);\n    }\n    return menuList;\n  }",
              "children": [
                {
                  "type": "FirstStatement",
                  "label": "let menuList: Action[] = [];",
                  "children": [
                    {
                      "type": "VariableDeclarationList",
                      "label": "let menuList: Action[] = []",
                      "children": [
                        {
                          "type": "VariableDeclaration",
                          "label": "menuList: Action[] = []",
                          "children": [
                            {
                              "type": "Identifier",
                              "label": "menuList",
                              "children": []
                            },
                            {
                              "type": "ArrayType",
                              "label": "Action[]",
                              "children": [
                                {
                                  "type": "TypeReference",
                                  "label": "Action",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "Action",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ArrayLiteralExpression",
                              "label": "[]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "IfStatement",
                  "label": "if (isAlbumSetSelectedMode) {\n      menuList.push((!isDisableRename && selectedAlbumsCount === 1) ? Action.RENAME : Action.RENAME_INVALID);\n      menuList.push((!isDisableDelete && selectedAlbumsCount > 0) ? Action.DELETE : Action.DELETE_INVALID);\n    }",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "isAlbumSetSelectedMode",
                      "children": []
                    },
                    {
                      "type": "Block",
                      "label": "{\n      menuList.push((!isDisableRename && selectedAlbumsCount === 1) ? Action.RENAME : Action.RENAME_INVALID);\n      menuList.push((!isDisableDelete && selectedAlbumsCount > 0) ? Action.DELETE : Action.DELETE_INVALID);\n    }",
                      "children": [
                        {
                          "type": "ExpressionStatement",
                          "label": "menuList.push((!isDisableRename && selectedAlbumsCount === 1) ? Action.RENAME : Action.RENAME_INVALID);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "menuList.push((!isDisableRename && selectedAlbumsCount === 1) ? Action.RENAME : Action.RENAME_INVALID)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "menuList.push",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "menuList",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "push",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "ConditionalExpression",
                                  "label": "(!isDisableRename && selectedAlbumsCount === 1) ? Action.RENAME : Action.RENAME_INVALID",
                                  "children": [
                                    {
                                      "type": "ParenthesizedExpression",
                                      "label": "(!isDisableRename && selectedAlbumsCount === 1)",
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "!isDisableRename && selectedAlbumsCount === 1",
                                          "children": [
                                            {
                                              "type": "PrefixUnaryExpression",
                                              "label": "!isDisableRename",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "isDisableRename",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AmpersandAmpersandToken",
                                              "label": "&&",
                                              "children": []
                                            },
                                            {
                                              "type": "BinaryExpression",
                                              "label": "selectedAlbumsCount === 1",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "selectedAlbumsCount",
                                                  "children": []
                                                },
                                                {
                                                  "type": "EqualsEqualsEqualsToken",
                                                  "label": "===",
                                                  "children": []
                                                },
                                                {
                                                  "type": "FirstLiteralToken",
                                                  "label": "1",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "QuestionToken",
                                      "label": "?",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Action.RENAME",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Action",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "RENAME",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ColonToken",
                                      "label": ":",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Action.RENAME_INVALID",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Action",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "RENAME_INVALID",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "ExpressionStatement",
                          "label": "menuList.push((!isDisableDelete && selectedAlbumsCount > 0) ? Action.DELETE : Action.DELETE_INVALID);",
                          "children": [
                            {
                              "type": "CallExpression",
                              "label": "menuList.push((!isDisableDelete && selectedAlbumsCount > 0) ? Action.DELETE : Action.DELETE_INVALID)",
                              "children": [
                                {
                                  "type": "PropertyAccessExpression",
                                  "label": "menuList.push",
                                  "children": [
                                    {
                                      "type": "Identifier",
                                      "label": "menuList",
                                      "children": []
                                    },
                                    {
                                      "type": "Identifier",
                                      "label": "push",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "type": "ConditionalExpression",
                                  "label": "(!isDisableDelete && selectedAlbumsCount > 0) ? Action.DELETE : Action.DELETE_INVALID",
                                  "children": [
                                    {
                                      "type": "ParenthesizedExpression",
                                      "label": "(!isDisableDelete && selectedAlbumsCount > 0)",
                                      "children": [
                                        {
                                          "type": "BinaryExpression",
                                          "label": "!isDisableDelete && selectedAlbumsCount > 0",
                                          "children": [
                                            {
                                              "type": "PrefixUnaryExpression",
                                              "label": "!isDisableDelete",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "isDisableDelete",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "type": "AmpersandAmpersandToken",
                                              "label": "&&",
                                              "children": []
                                            },
                                            {
                                              "type": "BinaryExpression",
                                              "label": "selectedAlbumsCount > 0",
                                              "children": [
                                                {
                                                  "type": "Identifier",
                                                  "label": "selectedAlbumsCount",
                                                  "children": []
                                                },
                                                {
                                                  "type": "GreaterThanToken",
                                                  "label": ">",
                                                  "children": []
                                                },
                                                {
                                                  "type": "FirstLiteralToken",
                                                  "label": "0",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "QuestionToken",
                                      "label": "?",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Action.DELETE",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Action",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "DELETE",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ColonToken",
                                      "label": ":",
                                      "children": []
                                    },
                                    {
                                      "type": "PropertyAccessExpression",
                                      "label": "Action.DELETE_INVALID",
                                      "children": [
                                        {
                                          "type": "Identifier",
                                          "label": "Action",
                                          "children": []
                                        },
                                        {
                                          "type": "Identifier",
                                          "label": "DELETE_INVALID",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "ReturnStatement",
                  "label": "return menuList;",
                  "children": [
                    {
                      "type": "Identifier",
                      "label": "menuList",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "EndOfFileToken",
      "label": "",
      "children": []
    }
  ]
}