digraph "173.ts" {
subgraph "cluster_@ts_files/173.ts: %dflt.[static]%dflt()" {
  label="@ts_files/173.ts: %dflt.[static]%dflt()";
  Node33750 [label="id:0
      this = this: @ts_files/173.ts: %dflt
      return"];
}
subgraph "cluster_@ts_files/173.ts: %dflt.isStringArray(any)" {
  label="@ts_files/173.ts: %dflt.isStringArray(any)";
  Node37700 [label="id:0
      value = parameter0: any
      this = this: @ts_files/173.ts: %dflt
      %0 = instanceinvoke Array.<@%unk/%unk: .isArray()>(value)
      %1 = <any>value
      %2 = instanceinvoke %1.<@%unk/%unk: .every()>(%AM0$isStringArray)
      %3 = %0 && %2
      return %3"];
}
subgraph "cluster_@ts_files/173.ts: %dflt.isStrArrayOrUndefined(any)" {
  label="@ts_files/173.ts: %dflt.isStrArrayOrUndefined(any)";
  Node45590 [label="id:0
      arg = parameter0: any
      this = this: @ts_files/173.ts: %dflt
      %0 = typeof arg === 'undefined'
      %1 = staticinvoke <@ts_files/173.ts: %dflt.isStringArray(any)>(arg)
      %2 = %0 || %1
      return %2"];
}
subgraph "cluster_@ts_files/173.ts: %dflt.%AM0$isStringArray(unknown)" {
  label="@ts_files/173.ts: %dflt.%AM0$isStringArray(unknown)";
  Node44890 [label="id:0
      elem = parameter0: unknown
      this = this: @ts_files/173.ts: %dflt
      %0 = typeof elem === 'string'
      return %0"];
}
subgraph "cluster_@ts_files/173.ts: SemanticTokensBuilder.constructor(SemanticTokensLegend)" {
  label="@ts_files/173.ts: SemanticTokensBuilder.constructor(SemanticTokensLegend)";
  Node70370 [label="id:0
      instanceinvoke this.<@ts_files/173.ts: SemanticTokensBuilder.%instInit()>()
      legend = parameter0: SemanticTokensLegend
      this = this: @ts_files/173.ts: SemanticTokensBuilder
      this.<@ts_files/173.ts: SemanticTokensBuilder._prevLine> = 0
      this.<@ts_files/173.ts: SemanticTokensBuilder._prevChar> = 0
      this.<@ts_files/173.ts: SemanticTokensBuilder._dataIsSortedAndDeltaEncoded> = true
      %0 = newarray (any)[0]
      this.<@ts_files/173.ts: SemanticTokensBuilder._data> = %0
      this.<@ts_files/173.ts: SemanticTokensBuilder._dataLen> = 0
      %1 = new @%unk/%unk: Map<string,number>
      instanceinvoke %1.<@%unk/%unk: Map.constructor()>()
      this.<@ts_files/173.ts: SemanticTokensBuilder._tokenTypeStrToInt> = %1
      %2 = new @%unk/%unk: Map<string,number>
      instanceinvoke %2.<@%unk/%unk: Map.constructor()>()
      this.<@ts_files/173.ts: SemanticTokensBuilder._tokenModifierStrToInt> = %2
      this.<@ts_files/173.ts: SemanticTokensBuilder._hasLegend> = false
      if legend != 0"];
  Node70371 [label="id:1
      this.<@ts_files/173.ts: SemanticTokensBuilder._hasLegend> = true
      i = 0
      %3 = legend.<@%unk/%unk: .tokenTypes>
      len = %3.<@%unk/%unk: .length>"];
  Node70372 [label="id:2
      if i < len"];
  Node70373 [label="id:3
      %4 = legend.<@%unk/%unk: .tokenTypes>
      %5 = %4.<@%unk/%unk: .i>
      %6 = this.<@ts_files/173.ts: SemanticTokensBuilder._tokenTypeStrToInt>
      instanceinvoke %6.<@%unk/%unk: .set()>(%5, i)
      i = i + 1"];
  Node70374 [label="id:4
      if i < len"];
  Node70375 [label="id:5
      %8 = legend.<@%unk/%unk: .tokenModifiers>
      %9 = %8.<@%unk/%unk: .i>
      %10 = this.<@ts_files/173.ts: SemanticTokensBuilder._tokenModifierStrToInt>
      instanceinvoke %10.<@%unk/%unk: .set()>(%9, i)
      i = i + 1"];
  Node70376 [label="id:6
      return"];
  Node70377 [label="id:7
      i = 0
      %7 = legend.<@%unk/%unk: .tokenModifiers>
      len = %7.<@%unk/%unk: .length>"];
  Node70370 -> Node70371;
  Node70370 -> Node70376;
  Node70371 -> Node70372;
  Node70372 -> Node70373;
  Node70372 -> Node70377;
  Node70373 -> Node70372;
  Node70374 -> Node70375;
  Node70374 -> Node70376;
  Node70375 -> Node70374;
  Node70377 -> Node70374;
}
subgraph "cluster_@ts_files/173.ts: SemanticTokensBuilder.push(any, any, any, any, any)" {
  label="@ts_files/173.ts: SemanticTokensBuilder.push(any, any, any, any, any)";
  Node61680 [label="id:0
      arg0 = parameter0: any
      arg1 = parameter1: any
      arg2 = parameter2: any
      arg3 = parameter3: any
      arg4 = parameter4: any
      this = this: @ts_files/173.ts: SemanticTokensBuilder
      %0 = typeof arg0 === 'number'
      %1 = typeof arg1 === 'number'
      %2 = %0 && %1
      %3 = typeof arg2 === 'number'
      %4 = %2 && %3
      %5 = typeof arg3 === 'number'
      %6 = %4 && %5
      %7 = typeof arg4 === 'number'
      %8 = typeof arg4 === 'undefined'
      %9 = %7 || %8
      %10 = %6 && %9
      if %10 != false"];
  Node61681 [label="id:1
      if typeof arg4 === 'undefined'"];
  Node61682 [label="id:2
      arg4 = 0"];
  Node61683 [label="id:3
      %11 = instanceinvoke this.<@ts_files/173.ts: SemanticTokensBuilder._pushEncoded(number, number, number, number, number)>(arg0, arg1, arg2, arg3, arg4)
      return %11"];
  Node61684 [label="id:4
      %12 = instanceinvoke Range.<@%unk/%unk: .is()>(arg0)
      %13 = typeof arg1 === 'string'
      %14 = %12 && %13
      %15 = staticinvoke <@ts_files/173.ts: %dflt.isStrArrayOrUndefined(any)>(arg2)
      %16 = %14 && %15
      if %16 != false"];
  Node61685 [label="id:5
      %17 = instanceinvoke this.<@ts_files/173.ts: SemanticTokensBuilder._push(Range, string, string[])>(arg0, arg1, arg2)
      return %17"];
  Node61686 [label="id:6
      %18 = new @%unk/%unk: Error
      instanceinvoke %18.<@%unk/%unk: Error.constructor()>('Illegal argument')
      throw %18
      return"];
  Node61680 -> Node61681;
  Node61680 -> Node61684;
  Node61681 -> Node61682;
  Node61681 -> Node61683;
  Node61682 -> Node61683;
  Node61684 -> Node61685;
  Node61684 -> Node61686;
}
subgraph "cluster_@ts_files/173.ts: SemanticTokensBuilder._push(Range, string, string[])" {
  label="@ts_files/173.ts: SemanticTokensBuilder._push(Range, string, string[])";
  Node64740 [label="id:0
      range = parameter0: Range
      tokenType = parameter1: string
      tokenModifiers = parameter2: string[]
      this = this: @ts_files/173.ts: SemanticTokensBuilder
      %0 = this.<@ts_files/173.ts: SemanticTokensBuilder._hasLegend>
      %1 = !%0
      if %1 != false"];
  Node64741 [label="id:1
      %2 = new @%unk/%unk: Error
      instanceinvoke %2.<@%unk/%unk: Error.constructor()>('Legend must be provided in constructor')
      throw %2"];
  Node64742 [label="id:2
      %3 = range.<@%unk/%unk: .start>
      %4 = %3.<@%unk/%unk: .line>
      %5 = range.<@%unk/%unk: .end>
      %6 = %5.<@%unk/%unk: .line>
      if %4 !== %6"];
  Node64743 [label="id:3
      %7 = new @%unk/%unk: Error
      instanceinvoke %7.<@%unk/%unk: Error.constructor()>('`range` cannot span multiple lines')
      throw %7"];
  Node64744 [label="id:4
      %8 = this.<@ts_files/173.ts: SemanticTokensBuilder._tokenTypeStrToInt>
      %9 = instanceinvoke %8.<@%unk/%unk: .has()>(tokenType)
      %10 = !%9
      if %10 != 0"];
  Node64745 [label="id:5
      %11 = new @%unk/%unk: Error
      instanceinvoke %11.<@%unk/%unk: Error.constructor()>('`tokenType` is not in the provided legend')
      throw %11"];
  Node64746 [label="id:6
      %12 = range.<@%unk/%unk: .start>
      line = %12.<@%unk/%unk: .line>
      %13 = range.<@%unk/%unk: .start>
      char = %13.<@%unk/%unk: .character>
      %14 = range.<@%unk/%unk: .end>
      %15 = %14.<@%unk/%unk: .character>
      %16 = range.<@%unk/%unk: .start>
      %17 = %16.<@%unk/%unk: .character>
      length = %15 - %17
      %18 = this.<@ts_files/173.ts: SemanticTokensBuilder._tokenTypeStrToInt>
      nTokenType = instanceinvoke %18.<@%unk/%unk: .get()>(tokenType)
      nTokenModifiers = 0
      if tokenModifiers != 0
      %19 = instanceinvoke tokenModifiers.<@%unk/%unk: .iterator()>()"];
  Node64747 [label="id:7
      %20 = instanceinvoke %19.<@%unk/%unk: .next()>()
      %21 = %20.<@ES2015/BuiltinClass: IteratorResult.done>
      if %21 == true"];
  Node64748 [label="id:8
      %22 = %20.<@ES2015/BuiltinClass: IteratorResult.value>
      tokenModifier = <string>%22
      %23 = this.<@ts_files/173.ts: SemanticTokensBuilder._tokenModifierStrToInt>
      %24 = instanceinvoke %23.<@%unk/%unk: .has()>(tokenModifier)
      %25 = !%24
      if %25 != 0"];
  Node64749 [label="id:9
      %26 = new @%unk/%unk: Error
      instanceinvoke %26.<@%unk/%unk: Error.constructor()>('`tokenModifier` is not in the provided legend')
      throw %26"];
  Node647410 [label="id:10
      %27 = this.<@ts_files/173.ts: SemanticTokensBuilder._tokenModifierStrToInt>
      nTokenModifier = instanceinvoke %27.<@%unk/%unk: .get()>(tokenModifier)
      %28 = 1 << nTokenModifier
      nTokenModifiers = nTokenModifiers | %28 >>> 0"];
  Node647411 [label="id:11
      instanceinvoke this.<@ts_files/173.ts: SemanticTokensBuilder._pushEncoded(number, number, number, number, number)>(line, char, length, nTokenType, nTokenModifiers)
      return"];
  Node64740 -> Node64741;
  Node64740 -> Node64742;
  Node64741 -> Node64742;
  Node64742 -> Node64743;
  Node64742 -> Node64744;
  Node64743 -> Node64744;
  Node64744 -> Node64745;
  Node64744 -> Node64746;
  Node64745 -> Node64746;
  Node64746 -> Node64747;
  Node64746 -> Node647411;
  Node64747 -> Node64748;
  Node64747 -> Node647411;
  Node64748 -> Node64749;
  Node64748 -> Node647410;
  Node64749 -> Node647410;
  Node647410 -> Node64747;
}
subgraph "cluster_@ts_files/173.ts: SemanticTokensBuilder._pushEncoded(number, number, number, number, number)" {
  label="@ts_files/173.ts: SemanticTokensBuilder._pushEncoded(number, number, number, number, number)";
  Node85580 [label="id:0
      line = parameter0: number
      char = parameter1: number
      length = parameter2: number
      tokenType = parameter3: number
      tokenModifiers = parameter4: number
      this = this: @ts_files/173.ts: SemanticTokensBuilder
      %0 = this.<@ts_files/173.ts: SemanticTokensBuilder._dataIsSortedAndDeltaEncoded>
      %1 = this.<@ts_files/173.ts: SemanticTokensBuilder._prevLine>
      %2 = line < %1
      %3 = this.<@ts_files/173.ts: SemanticTokensBuilder._prevLine>
      %4 = line === %3
      %5 = this.<@ts_files/173.ts: SemanticTokensBuilder._prevChar>
      %6 = char < %5
      %7 = %4 && %6
      %8 = %2 || %7
      %9 = %0 && %8
      if %9 != false"];
  Node85581 [label="id:1
      this.<@ts_files/173.ts: SemanticTokensBuilder._dataIsSortedAndDeltaEncoded> = false
      %10 = this.<@ts_files/173.ts: SemanticTokensBuilder._data>
      %11 = %10.<@%unk/%unk: .length>
      %12 = %11 / 5
      tokenCount = %12 | 0
      prevLine = 0
      prevChar = 0
      i = 0"];
  Node85582 [label="id:2
      if i < tokenCount"];
  Node85583 [label="id:3
      %13 = this.<@ts_files/173.ts: SemanticTokensBuilder._data>
      %14 = 5 * i
      line = %13[%14]
      %15 = this.<@ts_files/173.ts: SemanticTokensBuilder._data>
      %16 = 5 * i
      %17 = %16 + 1
      char = %15[%17]
      if line === 0"];
  Node85584 [label="id:4
      line = prevLine
      char = char + prevChar"];
  Node85585 [label="id:5
      line = line + prevLine"];
  Node85586 [label="id:6
      %18 = this.<@ts_files/173.ts: SemanticTokensBuilder._data>
      %19 = 5 * i
      %18['%19'] = line
      %20 = this.<@ts_files/173.ts: SemanticTokensBuilder._data>
      %21 = 5 * i
      %22 = %21 + 1
      %20['%22'] = char
      prevLine = line
      prevChar = char
      i = i + 1"];
  Node85587 [label="id:7
      pushLine = line
      pushChar = char
      %23 = this.<@ts_files/173.ts: SemanticTokensBuilder._dataIsSortedAndDeltaEncoded>
      %24 = this.<@ts_files/173.ts: SemanticTokensBuilder._dataLen>
      %25 = %24 > 0
      %26 = %23 && %25
      if %26 != false"];
  Node85588 [label="id:8
      pushLine = pushLine - this.<@ts_files/173.ts: SemanticTokensBuilder._prevLine>
      if pushLine === 0"];
  Node85589 [label="id:9
      pushChar = pushChar - this.<@ts_files/173.ts: SemanticTokensBuilder._prevChar>"];
  Node855810 [label="id:10
      %27 = this.<@ts_files/173.ts: SemanticTokensBuilder._data>
      %28 = this.<@ts_files/173.ts: SemanticTokensBuilder._dataLen>
      %28 = %28 + 1
      %27['%28'] = pushLine
      %29 = this.<@ts_files/173.ts: SemanticTokensBuilder._data>
      %30 = this.<@ts_files/173.ts: SemanticTokensBuilder._dataLen>
      %30 = %30 + 1
      %29['%30'] = pushChar
      %31 = this.<@ts_files/173.ts: SemanticTokensBuilder._data>
      %32 = this.<@ts_files/173.ts: SemanticTokensBuilder._dataLen>
      %32 = %32 + 1
      %31['%32'] = length
      %33 = this.<@ts_files/173.ts: SemanticTokensBuilder._data>
      %34 = this.<@ts_files/173.ts: SemanticTokensBuilder._dataLen>
      %34 = %34 + 1
      %33['%34'] = tokenType
      %35 = this.<@ts_files/173.ts: SemanticTokensBuilder._data>
      %36 = this.<@ts_files/173.ts: SemanticTokensBuilder._dataLen>
      %36 = %36 + 1
      %35['%36'] = tokenModifiers
      this.<@ts_files/173.ts: SemanticTokensBuilder._prevLine> = line
      this.<@ts_files/173.ts: SemanticTokensBuilder._prevChar> = char
      return"];
  Node85580 -> Node85581;
  Node85580 -> Node85587;
  Node85581 -> Node85582;
  Node85582 -> Node85583;
  Node85582 -> Node85587;
  Node85583 -> Node85584;
  Node85583 -> Node85585;
  Node85584 -> Node85586;
  Node85585 -> Node85586;
  Node85586 -> Node85582;
  Node85587 -> Node85588;
  Node85587 -> Node855810;
  Node85588 -> Node85589;
  Node85588 -> Node855810;
  Node85589 -> Node855810;
}
subgraph "cluster_@ts_files/173.ts: SemanticTokensBuilder.build(string)" {
  label="@ts_files/173.ts: SemanticTokensBuilder.build(string)";
  Node49670 [label="id:0
      resultId = parameter0: string
      this = this: @ts_files/173.ts: SemanticTokensBuilder
      %0 = this.<@ts_files/173.ts: SemanticTokensBuilder._dataIsSortedAndDeltaEncoded>
      %1 = !%0
      if %1 != false"];
  Node49671 [label="id:1
      %2 = new @ts_files/173.ts: %AC$SemanticTokensBuilder$build$0
      instanceinvoke %2.<@ts_files/173.ts: %AC$SemanticTokensBuilder$build$0.constructor()>()
      return %2"];
  Node49672 [label="id:2
      %3 = new @ts_files/173.ts: %AC$SemanticTokensBuilder$build$1
      instanceinvoke %3.<@ts_files/173.ts: %AC$SemanticTokensBuilder$build$1.constructor()>()
      return %3"];
  Node49670 -> Node49671;
  Node49670 -> Node49672;
}
subgraph "cluster_@ts_files/173.ts: SemanticTokensBuilder.%AM0$_sortAndDeltaEncode([data], unknown, unknown)" {
  label="@ts_files/173.ts: SemanticTokensBuilder.%AM0$_sortAndDeltaEncode([data], unknown, unknown)";
  Node82590 [label="id:0
      %closures0 = parameter0: [data]
      a = parameter1: unknown
      b = parameter2: unknown
      data = %closures0.data
      this = this: @ts_files/173.ts: SemanticTokensBuilder
      %0 = 5 * a
      aLine = data[%0]
      %1 = 5 * b
      bLine = data[%1]
      if aLine === bLine"];
  Node82591 [label="id:1
      %2 = 5 * a
      %3 = %2 + 1
      aChar = data[%3]
      %4 = 5 * b
      %5 = %4 + 1
      bChar = data[%5]
      %6 = aChar - bChar
      return %6"];
  Node82592 [label="id:2
      %7 = aLine - bLine
      return %7"];
  Node82590 -> Node82591;
  Node82590 -> Node82592;
}
subgraph "cluster_@ts_files/173.ts: SemanticTokensBuilder.[static]_sortAndDeltaEncode(number[])" {
  label="@ts_files/173.ts: SemanticTokensBuilder.[static]_sortAndDeltaEncode(number[])";
  Node73470 [label="id:0
      data = parameter0: number[]
      this = this: @ts_files/173.ts: SemanticTokensBuilder
      %0 = newarray (any)[0]
      pos = %0
      %1 = data.<@%unk/%unk: .length>
      %2 = %1 / 5
      tokenCount = %2 | 0
      i = 0"];
  Node73471 [label="id:1
      if i < tokenCount"];
  Node73472 [label="id:2
      pos[i] = i
      i = i + 1"];
  Node73473 [label="id:3
      instanceinvoke pos.<@%unk/%unk: .sort()>(%AM0$_sortAndDeltaEncode)
      %3 = data.<@%unk/%unk: .length>
      %4 = newarray (number)[%3]
      result = %4
      prevLine = 0
      prevChar = 0
      i = 0"];
  Node73474 [label="id:4
      if i < tokenCount"];
  Node73475 [label="id:5
      return result"];
  Node73476 [label="id:6
      %5 = pos[i]
      srcOffset = 5 * %5
      %6 = srcOffset + 0
      line = data[%6]
      %7 = srcOffset + 1
      char = data[%7]
      %8 = srcOffset + 2
      length = data[%8]
      %9 = srcOffset + 3
      tokenType = data[%9]
      %10 = srcOffset + 4
      tokenModifiers = data[%10]
      pushLine = line - prevLine
      if pushLine === 0"];
  Node73477 [label="id:7
      pushChar = char - prevChar"];
  Node73478 [label="id:8
      pushChar = char"];
  Node73479 [label="id:9
      dstOffset = 5 * i
      %12 = dstOffset + 0
      result[%12] = pushLine
      %13 = dstOffset + 1
      result[%13] = pushChar
      %14 = dstOffset + 2
      result[%14] = length
      %15 = dstOffset + 3
      result[%15] = tokenType
      %16 = dstOffset + 4
      result[%16] = tokenModifiers
      prevLine = line
      prevChar = char
      i = i + 1"];
  Node73470 -> Node73471;
  Node73471 -> Node73472;
  Node73471 -> Node73473;
  Node73472 -> Node73471;
  Node73473 -> Node73474;
  Node73474 -> Node73475;
  Node73474 -> Node73476;
  Node73476 -> Node73477;
  Node73476 -> Node73478;
  Node73477 -> Node73479;
  Node73478 -> Node73479;
  Node73479 -> Node73474;
}
}
