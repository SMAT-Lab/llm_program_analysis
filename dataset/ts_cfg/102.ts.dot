digraph "102.ts" {
subgraph "cluster_@ts_files/102.ts: %dflt.[static]%dflt()" {
  label="@ts_files/102.ts: %dflt.[static]%dflt()";
  Node33670 [label="id:0
      this = this: @ts_files/102.ts: %dflt
      %0 = new @ts_files/102.ts: InputUtil
      instanceinvoke %0.<@ts_files/102.ts: InputUtil.constructor()>()
      default = %0
      return"];
}
subgraph "cluster_@ts_files/102.ts: InputUtil.isEmpty(string)" {
  label="@ts_files/102.ts: InputUtil.isEmpty(string)";
  Node39610 [label="id:0
      str = parameter0: string
      this = this: @ts_files/102.ts: InputUtil
      %0 = str == 'undefined'
      %1 = !str
      %2 = %0 || %1
      %3 = new @%unk/%unk: RegExp
      instanceinvoke %3.<@%unk/%unk: RegExp.constructor()>('[^\s]')
      %4 = instanceinvoke %3.<@%unk/%unk: .test()>(str)
      %5 = !%4
      %6 = %2 || %5
      return %6"];
}
subgraph "cluster_@ts_files/102.ts: InputUtil.checkNeedNumberSpace(string)" {
  label="@ts_files/102.ts: InputUtil.checkNeedNumberSpace(string)";
  Node52130 [label="id:0
      numText = parameter0: string
      this = this: @ts_files/102.ts: InputUtil
      %0 = new @%unk/%unk: RegExp
      instanceinvoke %0.<@%unk/%unk: RegExp.constructor()>('[\+;,#\*]', 'g')
      isSpace = %0
      %1 = new @%unk/%unk: RegExp
      instanceinvoke %1.<@%unk/%unk: RegExp.constructor()>('^\+.*')
      isRule = %1
      %2 = instanceinvoke isSpace.<@%unk/%unk: .test()>(numText)
      if %2 != 0"];
  Node52131 [label="id:1
      %3 = instanceinvoke isRule.<@%unk/%unk: .test()>(numText)
      return %3"];
  Node52132 [label="id:2
      return true"];
  Node52130 -> Node52131;
  Node52130 -> Node52132;
}
subgraph "cluster_@ts_files/102.ts: InputUtil.removeSpace(string)" {
  label="@ts_files/102.ts: InputUtil.removeSpace(string)";
  Node43600 [label="id:0
      str = parameter0: string
      this = this: @ts_files/102.ts: InputUtil
      %0 = instanceinvoke this.<@ts_files/102.ts: InputUtil.isEmpty(string)>(str)
      if %0 != false"];
  Node43601 [label="id:1
      return ''"];
  Node43602 [label="id:2
      %1 = new @%unk/%unk: RegExp
      instanceinvoke %1.<@%unk/%unk: RegExp.constructor()>('[\s]', 'g')
      %2 = instanceinvoke str.<@%unk/%unk: .replace()>(%1, '')
      return %2"];
  Node43600 -> Node43601;
  Node43600 -> Node43602;
}
}
