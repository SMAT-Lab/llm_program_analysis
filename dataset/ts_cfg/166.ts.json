{
  "type": "file",
  "name": "166.ts",
  "label": "166.ts",
  "start_line": -1,
  "end_line": 55,
  "classes": [
    {
      "type": "class",
      "name": "%dflt",
      "label": "%dflt",
      "start_line": -1,
      "end_line": 1,
      "functions": [
        {
          "type": "function",
          "name": "%dflt",
          "label": "%dflt",
          "start_line": -1,
          "end_line": 1,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/166.ts: %dflt\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": ""
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": ""
    },
    {
      "type": "class",
      "name": "%AC$0",
      "label": "%AC$0",
      "start_line": 4,
      "end_line": 4,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{ refreshOnWindowFocus?: boolean | undefined }"
    },
    {
      "type": "class",
      "name": "%AC$1",
      "label": "%AC$1",
      "start_line": 7,
      "end_line": 7,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n            refreshOnWindowFocus?: boolean | undefined;\n            config?: Config | undefined;\n            project?: Project | undefined;\n        }"
    },
    {
      "type": "class",
      "name": "%AC$2",
      "label": "%AC$2",
      "start_line": 29,
      "end_line": 29,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{ ahead: number; behind: number }"
    },
    {
      "type": "class",
      "name": "%AC$3",
      "label": "%AC$3",
      "start_line": 30,
      "end_line": 30,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{ ahead: number; behind: number }"
    },
    {
      "type": "class",
      "name": "%AC$4",
      "label": "%AC$4",
      "start_line": 34,
      "end_line": 34,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{ heads: string[]; remotes: string[]; tags: string[] }"
    },
    {
      "type": "class",
      "name": "%AC$5",
      "label": "%AC$5",
      "start_line": 46,
      "end_line": 46,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{ added: number; deleted: number }"
    },
    {
      "type": "class",
      "name": "%AC$6",
      "label": "%AC$6",
      "start_line": 50,
      "end_line": 50,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{ oldStart: number; newStart: number; oldLines: number; newLines: number }"
    },
    {
      "type": "class",
      "name": "GitRepository",
      "label": "GitRepository",
      "start_line": 0,
      "end_line": 2,
      "functions": [
        {
          "type": "function",
          "name": "constructor",
          "label": "constructor",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "constructor(\n        path: string,\n        options?: {\n            refreshOnWindowFocus?: boolean | undefined;\n            config?: Config | undefined;\n            project?: Project | undefined;\n        },\n    );"
        },
        {
          "type": "function",
          "name": "destroy",
          "label": "destroy",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "destroy(): void;"
        },
        {
          "type": "function",
          "name": "isDestroyed",
          "label": "isDestroyed",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "isDestroyed(): boolean;"
        },
        {
          "type": "function",
          "name": "%AM0",
          "label": "%AM0",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "() => void"
        },
        {
          "type": "function",
          "name": "onDidDestroy",
          "label": "onDidDestroy",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "onDidDestroy(callback: () => void): Disposable;"
        },
        {
          "type": "function",
          "name": "%AM1",
          "label": "%AM1",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "(event: RepoStatusChangedEvent) => void"
        },
        {
          "type": "function",
          "name": "onDidChangeStatus",
          "label": "onDidChangeStatus",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "onDidChangeStatus(callback: (event: RepoStatusChangedEvent) => void): Disposable;"
        },
        {
          "type": "function",
          "name": "%AM2",
          "label": "%AM2",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "() => void"
        },
        {
          "type": "function",
          "name": "onDidChangeStatuses",
          "label": "onDidChangeStatuses",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "onDidChangeStatuses(callback: () => void): Disposable;"
        },
        {
          "type": "function",
          "name": "getType",
          "label": "getType",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "getType(): \"git\";"
        },
        {
          "type": "function",
          "name": "getPath",
          "label": "getPath",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "getPath(): string;"
        },
        {
          "type": "function",
          "name": "getWorkingDirectory",
          "label": "getWorkingDirectory",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "getWorkingDirectory(): string;"
        },
        {
          "type": "function",
          "name": "isProjectAtRoot",
          "label": "isProjectAtRoot",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "isProjectAtRoot(): boolean;"
        },
        {
          "type": "function",
          "name": "relativize",
          "label": "relativize",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "relativize(): string;"
        },
        {
          "type": "function",
          "name": "hasBranch",
          "label": "hasBranch",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "hasBranch(branch: string): boolean;"
        },
        {
          "type": "function",
          "name": "getShortHead",
          "label": "getShortHead",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "getShortHead(path?: string): string;"
        },
        {
          "type": "function",
          "name": "isSubmodule",
          "label": "isSubmodule",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "isSubmodule(path: string): boolean;"
        },
        {
          "type": "function",
          "name": "getAheadBehindCount",
          "label": "getAheadBehindCount",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "getAheadBehindCount(reference: string, path?: string): { ahead: number; behind: number };"
        },
        {
          "type": "function",
          "name": "getCachedUpstreamAheadBehindCount",
          "label": "getCachedUpstreamAheadBehindCount",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "getCachedUpstreamAheadBehindCount(path?: string): { ahead: number; behind: number };"
        },
        {
          "type": "function",
          "name": "getConfigValue",
          "label": "getConfigValue",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "getConfigValue(key: string, path?: string): string;"
        },
        {
          "type": "function",
          "name": "getOriginURL",
          "label": "getOriginURL",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "getOriginURL(path?: string): string;"
        },
        {
          "type": "function",
          "name": "getUpstreamBranch",
          "label": "getUpstreamBranch",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "getUpstreamBranch(path?: string): string | null;"
        },
        {
          "type": "function",
          "name": "getReferences",
          "label": "getReferences",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "getReferences(path?: string): { heads: string[]; remotes: string[]; tags: string[] };"
        },
        {
          "type": "function",
          "name": "getReferenceTarget",
          "label": "getReferenceTarget",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "getReferenceTarget(reference: string, path?: string): string;"
        },
        {
          "type": "function",
          "name": "isPathModified",
          "label": "isPathModified",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "isPathModified(path: string): boolean;"
        },
        {
          "type": "function",
          "name": "isPathNew",
          "label": "isPathNew",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "isPathNew(path: string): boolean;"
        },
        {
          "type": "function",
          "name": "isPathIgnored",
          "label": "isPathIgnored",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "isPathIgnored(path: string): boolean;"
        },
        {
          "type": "function",
          "name": "getDirectoryStatus",
          "label": "getDirectoryStatus",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "getDirectoryStatus(path: string): number;"
        },
        {
          "type": "function",
          "name": "getPathStatus",
          "label": "getPathStatus",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "getPathStatus(path: string): number;"
        },
        {
          "type": "function",
          "name": "getCachedPathStatus",
          "label": "getCachedPathStatus",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "getCachedPathStatus(path: string): number | null;"
        },
        {
          "type": "function",
          "name": "isStatusModified",
          "label": "isStatusModified",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "isStatusModified(status: number): boolean;"
        },
        {
          "type": "function",
          "name": "isStatusNew",
          "label": "isStatusNew",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "isStatusNew(status: number): boolean;"
        },
        {
          "type": "function",
          "name": "getDiffStats",
          "label": "getDiffStats",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "getDiffStats(path: string): { added: number; deleted: number };"
        },
        {
          "type": "function",
          "name": "getLineDiffs",
          "label": "getLineDiffs",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "getLineDiffs(\n        path: string,\n        text: string,\n    ): Array<{ oldStart: number; newStart: number; oldLines: number; newLines: number }>;"
        },
        {
          "type": "function",
          "name": "checkoutHead",
          "label": "checkoutHead",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "checkoutHead(path: string): boolean;"
        },
        {
          "type": "function",
          "name": "checkoutReference",
          "label": "checkoutReference",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "checkoutReference(reference: string, create: boolean): boolean;"
        },
        {
          "type": "function",
          "name": "open",
          "label": "open",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "static open(path: string, options?: { refreshOnWindowFocus?: boolean | undefined }): GitRepository;"
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": "export class GitRepository {\n    // Construction\n    static open(path: string, options?: { refreshOnWindowFocus?: boolean | undefined }): GitRepository;\n    constructor(\n        path: string,\n        options?: {\n            refreshOnWindowFocus?: boolean | undefined;\n            config?: Config | undefined;\n            project?: Project | undefined;\n        },\n    );\n    // Lifecycle\n    destroy(): void;\n    isDestroyed(): boolean;\n    // Event Subscription\n    onDidDestroy(callback: () => void): Disposable;\n    onDidChangeStatus(callback: (event: RepoStatusChangedEvent) => void): Disposable;\n    onDidChangeStatuses(callback: () => void): Disposable;\n    // Repository Details\n    getType(): \"git\";\n    getPath(): string;\n    getWorkingDirectory(): string;\n    isProjectAtRoot(): boolean;\n    relativize(): string;\n    hasBranch(branch: string): boolean;\n    getShortHead(path?: string): string;\n    isSubmodule(path: string): boolean;\n    getAheadBehindCount(reference: string, path?: string): { ahead: number; behind: number };\n    getCachedUpstreamAheadBehindCount(path?: string): { ahead: number; behind: number };\n    getConfigValue(key: string, path?: string): string;\n    getOriginURL(path?: string): string;\n    getUpstreamBranch(path?: string): string | null;\n    getReferences(path?: string): { heads: string[]; remotes: string[]; tags: string[] };\n    getReferenceTarget(reference: string, path?: string): string;\n    // Reading Status\n    isPathModified(path: string): boolean;\n    isPathNew(path: string): boolean;\n    isPathIgnored(path: string): boolean;\n    getDirectoryStatus(path: string): number;\n    getPathStatus(path: string): number;\n    getCachedPathStatus(path: string): number | null;\n    isStatusModified(status: number): boolean;\n    isStatusNew(status: number): boolean;\n    // Retrieving Diffs\n    getDiffStats(path: string): { added: number; deleted: number };\n    getLineDiffs(\n        path: string,\n        text: string,\n    ): Array<{ oldStart: number; newStart: number; oldLines: number; newLines: number }>;\n    // Checking Out\n    checkoutHead(path: string): boolean;\n    checkoutReference(reference: string, create: boolean): boolean;\n}"
    },
    {
      "type": "class",
      "name": "RepoStatusChangedEvent",
      "label": "RepoStatusChangedEvent",
      "start_line": 55,
      "end_line": 55,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "export interface RepoStatusChangedEvent {\n    path: string;\n    pathStatus: number;\n}"
    }
  ],
  "functions": [],
  "blocks": [],
  "simplified_code": "import { Config, Disposable, Project } from \"../index\";\nexport class GitRepository {\n    // Construction\n    static open(path: string, options?: { refreshOnWindowFocus?: boolean | undefined }): GitRepository;\n    constructor(\n        path: string,\n        options?: {\n            refreshOnWindowFocus?: boolean | undefined;\n            config?: Config | undefined;\n            project?: Project | undefined;\n        },\n    );\n    // Lifecycle\n    destroy(): void;\n    isDestroyed(): boolean;\n    // Event Subscription\n    onDidDestroy(callback: () => void): Disposable;\n    onDidChangeStatus(callback: (event: RepoStatusChangedEvent) => void): Disposable;\n    onDidChangeStatuses(callback: () => void): Disposable;\n    // Repository Details\n    getType(): \"git\";\n    getPath(): string;\n    getWorkingDirectory(): string;\n    isProjectAtRoot(): boolean;\n    relativize(): string;\n    hasBranch(branch: string): boolean;\n    getShortHead(path?: string): string;\n    isSubmodule(path: string): boolean;\n    getAheadBehindCount(reference: string, path?: string): { ahead: number; behind: number };\n    getCachedUpstreamAheadBehindCount(path?: string): { ahead: number; behind: number };\n    getConfigValue(key: string, path?: string): string;\n    getOriginURL(path?: string): string;\n    getUpstreamBranch(path?: string): string | null;\n    getReferences(path?: string): { heads: string[]; remotes: string[]; tags: string[] };\n    getReferenceTarget(reference: string, path?: string): string;\n    // Reading Status\n    isPathModified(path: string): boolean;\n    isPathNew(path: string): boolean;\n    isPathIgnored(path: string): boolean;\n    getDirectoryStatus(path: string): number;\n    getPathStatus(path: string): number;\n    getCachedPathStatus(path: string): number | null;\n    isStatusModified(status: number): boolean;\n    isStatusNew(status: number): boolean;\n    // Retrieving Diffs\n    getDiffStats(path: string): { added: number; deleted: number };\n    getLineDiffs(\n        path: string,\n        text: string,\n    ): Array<{ oldStart: number; newStart: number; oldLines: number; newLines: number }>;\n    // Checking Out\n    checkoutHead(path: string): boolean;\n    checkoutReference(reference: string, create: boolean): boolean;\n}\nexport interface RepoStatusChangedEvent {\n    path: string;\n    pathStatus: number;\n}"
}