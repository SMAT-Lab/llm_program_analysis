{
  "type": "file",
  "name": "154.ts",
  "label": "154.ts",
  "start_line": -1,
  "end_line": 605,
  "classes": [
    {
      "type": "class",
      "name": "%dflt",
      "label": "%dflt",
      "start_line": -1,
      "end_line": 605,
      "functions": [
        {
          "type": "function",
          "name": "%dflt",
          "label": "%dflt",
          "start_line": -1,
          "end_line": 1,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/154.ts: %dflt\nup = %AM0\ndown = %AM32\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": ""
        },
        {
          "type": "function",
          "name": "%AM1$%AM0",
          "label": "%AM1$%AM0",
          "start_line": 1,
          "end_line": 3,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "table = parameter0: unknown\nthis = this: @ts_files/154.ts: %dflt\n%0 = instanceinvoke table.<@%unk/%unk: .string()>('id', 128)\ninstanceinvoke %0.<@%unk/%unk: .primary()>()\ninstanceinvoke table.<@%unk/%unk: .string()>('title')\ninstanceinvoke table.<@%unk/%unk: .string()>('prefix')\ninstanceinvoke table.<@%unk/%unk: .string()>('status')\ninstanceinvoke table.<@%unk/%unk: .text()>('description')\ninstanceinvoke table.<@%unk/%unk: .text()>('meta')\ninstanceinvoke table.<@%unk/%unk: .string()>('color')\ninstanceinvoke table.<@%unk/%unk: .string()>('uuid')\ninstanceinvoke table.<@%unk/%unk: .string()>('password')\ninstanceinvoke table.<@%unk/%unk: .string()>('roles')\n%1 = instanceinvoke table.<@%unk/%unk: .boolean()>('deleted')\ninstanceinvoke %1.<@%unk/%unk: .defaultTo()>(false)\ninstanceinvoke table.<@%unk/%unk: .boolean()>('is_meta')\ninstanceinvoke table.<@%unk/%unk: .float()>('order')\ninstanceinvoke table.<@%unk/%unk: .timestamps()>(true, true)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(table) => {\n    table.string('id', 128).primary();\n    table.string('title');\n    table.string('prefix');\n    table.string('status');\n    table.text('description');\n    table.text('meta');\n    table.string('color');\n    table.string('uuid');\n    table.string('password');\n    table.string('roles');\n    table.boolean('deleted').defaultTo(false);\n    table.boolean('is_meta');\n    table.float('order');\n    table.timestamps(true, true);\n  }"
        },
        {
          "type": "function",
          "name": "%AM2$%AM0",
          "label": "%AM2$%AM0",
          "start_line": 1,
          "end_line": 19,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "table = parameter0: unknown\nthis = this: @ts_files/154.ts: %dflt\n%0 = instanceinvoke table.<@%unk/%unk: .string()>('id', 20)\n%1 = instanceinvoke %0.<@%unk/%unk: .primary()>()\ninstanceinvoke %1.<@%unk/%unk: .notNullable()>()\ninstanceinvoke table.<@%unk/%unk: .string()>('project_id', 128)\n%2 = MetaTableOldV2.<@%unk/%unk: .PROJECT>\n%3 = %2 + '.id'\n%4 = instanceinvoke table.<@%unk/%unk: .foreign()>('project_id')\ninstanceinvoke %4.<@%unk/%unk: .references()>(%3)\ninstanceinvoke table.<@%unk/%unk: .string()>('alias')\ninstanceinvoke table.<@%unk/%unk: .text()>('config')\ninstanceinvoke table.<@%unk/%unk: .text()>('meta')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('is_meta')\ninstanceinvoke table.<@%unk/%unk: .string()>('type')\ninstanceinvoke table.<@%unk/%unk: .string()>('inflection_column')\ninstanceinvoke table.<@%unk/%unk: .string()>('inflection_table')\ninstanceinvoke table.<@%unk/%unk: .timestamps()>(true, true)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(table) => {\n    table.string('id', 20).primary().notNullable();\n    // todo: foreign key\n    // table.string('project_id', 128);\n    table.string('project_id', 128);\n    table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('alias');\n    table.text('config');\n    table.text('meta');\n    table.boolean('is_meta');\n    table.string('type');\n    table.string('inflection_column');\n    table.string('inflection_table');\n    // todo: type\n    // table.text('ssl');\n    table.timestamps(true, true);\n  }"
        },
        {
          "type": "function",
          "name": "%AM3$%AM0",
          "label": "%AM3$%AM0",
          "start_line": 1,
          "end_line": 36,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "table = parameter0: unknown\nthis = this: @ts_files/154.ts: %dflt\n%0 = instanceinvoke table.<@%unk/%unk: .string()>('id', 20)\n%1 = instanceinvoke %0.<@%unk/%unk: .primary()>()\ninstanceinvoke %1.<@%unk/%unk: .notNullable()>()\ninstanceinvoke table.<@%unk/%unk: .string()>('base_id', 20)\n%2 = MetaTableOldV2.<@%unk/%unk: .BASES>\n%3 = %2 + '.id'\n%4 = instanceinvoke table.<@%unk/%unk: .foreign()>('base_id')\ninstanceinvoke %4.<@%unk/%unk: .references()>(%3)\ninstanceinvoke table.<@%unk/%unk: .string()>('project_id', 128)\n%5 = MetaTableOldV2.<@%unk/%unk: .PROJECT>\n%6 = %5 + '.id'\n%7 = instanceinvoke table.<@%unk/%unk: .foreign()>('project_id')\ninstanceinvoke %7.<@%unk/%unk: .references()>(%6)\ninstanceinvoke table.<@%unk/%unk: .string()>('table_name')\ninstanceinvoke table.<@%unk/%unk: .string()>('title')\n%8 = instanceinvoke table.<@%unk/%unk: .string()>('type')\ninstanceinvoke %8.<@%unk/%unk: .defaultTo()>('table')\ninstanceinvoke table.<@%unk/%unk: .text()>('meta', 'mediumtext')\ninstanceinvoke table.<@%unk/%unk: .text()>('schema', 'text')\n%9 = instanceinvoke table.<@%unk/%unk: .boolean()>('enabled')\ninstanceinvoke %9.<@%unk/%unk: .defaultTo()>(true)\n%10 = instanceinvoke table.<@%unk/%unk: .boolean()>('mm')\ninstanceinvoke %10.<@%unk/%unk: .defaultTo()>(false)\ninstanceinvoke table.<@%unk/%unk: .string()>('tags')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('pinned')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('deleted')\ninstanceinvoke table.<@%unk/%unk: .float()>('order')\ninstanceinvoke table.<@%unk/%unk: .timestamps()>(true, true)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('base_id', 20);\n    table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('table_name');\n    table.string('title');\n    table.string('type').defaultTo('table');\n    table.text('meta', 'mediumtext');\n    table.text('schema', 'text');\n    table.boolean('enabled').defaultTo(true);\n    table.boolean('mm').defaultTo(false);\n    table.string('tags');\n    table.boolean('pinned');\n    table.boolean('deleted');\n    table.float('order');\n    table.timestamps(true, true);\n  }"
        },
        {
          "type": "function",
          "name": "%AM4$%AM0",
          "label": "%AM4$%AM0",
          "start_line": 1,
          "end_line": 55,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "table = parameter0: unknown\nthis = this: @ts_files/154.ts: %dflt\n%0 = instanceinvoke table.<@%unk/%unk: .string()>('id', 20)\n%1 = instanceinvoke %0.<@%unk/%unk: .primary()>()\ninstanceinvoke %1.<@%unk/%unk: .notNullable()>()\ninstanceinvoke table.<@%unk/%unk: .string()>('base_id', 20)\ninstanceinvoke table.<@%unk/%unk: .string()>('project_id', 128)\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_model_id', 20)\n%2 = MetaTable.<@%unk/%unk: .MODELS>\n%3 = %2 + '.id'\n%4 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_model_id')\ninstanceinvoke %4.<@%unk/%unk: .references()>(%3)\ninstanceinvoke table.<@%unk/%unk: .string()>('title')\ninstanceinvoke table.<@%unk/%unk: .string()>('column_name')\ninstanceinvoke table.<@%unk/%unk: .string()>('uidt')\ninstanceinvoke table.<@%unk/%unk: .string()>('dt')\ninstanceinvoke table.<@%unk/%unk: .string()>('np')\ninstanceinvoke table.<@%unk/%unk: .string()>('ns')\ninstanceinvoke table.<@%unk/%unk: .string()>('clen')\ninstanceinvoke table.<@%unk/%unk: .string()>('cop')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('pk')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('pv')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('rqd')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('un')\ninstanceinvoke table.<@%unk/%unk: .string()>('ct')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('ai')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('unique')\ninstanceinvoke table.<@%unk/%unk: .string()>('cdf')\ninstanceinvoke table.<@%unk/%unk: .string()>('cc')\ninstanceinvoke table.<@%unk/%unk: .string()>('csn')\ninstanceinvoke table.<@%unk/%unk: .string()>('dtx')\ninstanceinvoke table.<@%unk/%unk: .string()>('dtxp')\ninstanceinvoke table.<@%unk/%unk: .string()>('dtxs')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('au')\ninstanceinvoke table.<@%unk/%unk: .text()>('validate')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('virtual')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('deleted')\n%5 = instanceinvoke table.<@%unk/%unk: .boolean()>('system')\ninstanceinvoke %5.<@%unk/%unk: .defaultTo()>(false)\ninstanceinvoke table.<@%unk/%unk: .float()>('order')\ninstanceinvoke table.<@%unk/%unk: .timestamps()>(true, true)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_model_id', 20);\n    table.foreign('fk_model_id').references(`${MetaTable.MODELS}.id`);\n    table.string('title');\n    table.string('column_name');\n    // todo: decide type\n    table.string('uidt');\n    table.string('dt');\n    table.string('np');\n    table.string('ns');\n    table.string('clen');\n    table.string('cop');\n    table.boolean('pk');\n    table.boolean('pv');\n    table.boolean('rqd');\n    table.boolean('un');\n    table.string('ct');\n    table.boolean('ai');\n    table.boolean('unique');\n    table.string('cdf');\n    table.string('cc');\n    table.string('csn');\n    table.string('dtx');\n    table.string('dtxp');\n    table.string('dtxs');\n    table.boolean('au');\n    // todo: normalise\n    table.text('validate');\n    //todo: virtual, real, etc\n    table.boolean('virtual');\n    table.boolean('deleted');\n    table.boolean('system').defaultTo(false);\n    table.float('order');\n    table.timestamps(true, true);\n  }"
        },
        {
          "type": "function",
          "name": "%AM5$%AM0",
          "label": "%AM5$%AM0",
          "start_line": 1,
          "end_line": 101,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "table = parameter0: unknown\nthis = this: @ts_files/154.ts: %dflt\n%0 = instanceinvoke table.<@%unk/%unk: .string()>('id', 20)\n%1 = instanceinvoke %0.<@%unk/%unk: .primary()>()\ninstanceinvoke %1.<@%unk/%unk: .notNullable()>()\ninstanceinvoke table.<@%unk/%unk: .string()>('ref_db_alias')\ninstanceinvoke table.<@%unk/%unk: .string()>('type')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('virtual')\ninstanceinvoke table.<@%unk/%unk: .string()>('db_type')\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_column_id', 20)\n%2 = MetaTable.<@%unk/%unk: .COLUMNS>\n%3 = %2 + '.id'\n%4 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_column_id')\ninstanceinvoke %4.<@%unk/%unk: .references()>(%3)\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_related_model_id', 20)\n%5 = MetaTable.<@%unk/%unk: .MODELS>\n%6 = %5 + '.id'\n%7 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_related_model_id')\ninstanceinvoke %7.<@%unk/%unk: .references()>(%6)\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_child_column_id', 20)\n%8 = MetaTable.<@%unk/%unk: .COLUMNS>\n%9 = %8 + '.id'\n%10 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_child_column_id')\ninstanceinvoke %10.<@%unk/%unk: .references()>(%9)\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_parent_column_id', 20)\n%11 = MetaTable.<@%unk/%unk: .COLUMNS>\n%12 = %11 + '.id'\n%13 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_parent_column_id')\ninstanceinvoke %13.<@%unk/%unk: .references()>(%12)\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_mm_model_id', 20)\n%14 = MetaTable.<@%unk/%unk: .MODELS>\n%15 = %14 + '.id'\n%16 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_mm_model_id')\ninstanceinvoke %16.<@%unk/%unk: .references()>(%15)\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_mm_child_column_id', 20)\n%17 = MetaTable.<@%unk/%unk: .COLUMNS>\n%18 = %17 + '.id'\n%19 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_mm_child_column_id')\ninstanceinvoke %19.<@%unk/%unk: .references()>(%18)\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_mm_parent_column_id', 20)\n%20 = MetaTable.<@%unk/%unk: .COLUMNS>\n%21 = %20 + '.id'\n%22 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_mm_parent_column_id')\ninstanceinvoke %22.<@%unk/%unk: .references()>(%21)\ninstanceinvoke table.<@%unk/%unk: .string()>('ur')\ninstanceinvoke table.<@%unk/%unk: .string()>('dr')\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_index_name')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('deleted')\ninstanceinvoke table.<@%unk/%unk: .timestamps()>(true, true)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('ref_db_alias');\n    table.string('type');\n    table.boolean('virtual');\n    table.string('db_type');\n    table.string('fk_column_id', 20);\n    table.foreign('fk_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('fk_related_model_id', 20);\n    table.foreign('fk_related_model_id').references(`${MetaTable.MODELS}.id`);\n    // fk_rel_column_id\n    // fk_rel_ref_column_id\n    table.string('fk_child_column_id', 20);\n    table.foreign('fk_child_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('fk_parent_column_id', 20);\n    table.foreign('fk_parent_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('fk_mm_model_id', 20);\n    table.foreign('fk_mm_model_id').references(`${MetaTable.MODELS}.id`);\n    table.string('fk_mm_child_column_id', 20);\n    table\n      .foreign('fk_mm_child_column_id')\n      .references(`${MetaTable.COLUMNS}.id`);\n    table.string('fk_mm_parent_column_id', 20);\n    table\n      .foreign('fk_mm_parent_column_id')\n      .references(`${MetaTable.COLUMNS}.id`);\n    table.string('ur');\n    table.string('dr');\n    table.string('fk_index_name');\n    table.boolean('deleted');\n    table.timestamps(true, true);\n  }"
        },
        {
          "type": "function",
          "name": "%AM6$%AM0",
          "label": "%AM6$%AM0",
          "start_line": 1,
          "end_line": 133,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "table = parameter0: unknown\nthis = this: @ts_files/154.ts: %dflt\n%0 = instanceinvoke table.<@%unk/%unk: .string()>('id', 20)\n%1 = instanceinvoke %0.<@%unk/%unk: .primary()>()\ninstanceinvoke %1.<@%unk/%unk: .notNullable()>()\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_column_id', 20)\n%2 = MetaTable.<@%unk/%unk: .COLUMNS>\n%3 = %2 + '.id'\n%4 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_column_id')\ninstanceinvoke %4.<@%unk/%unk: .references()>(%3)\ninstanceinvoke table.<@%unk/%unk: .string()>('title')\ninstanceinvoke table.<@%unk/%unk: .string()>('color')\ninstanceinvoke table.<@%unk/%unk: .float()>('order')\ninstanceinvoke table.<@%unk/%unk: .timestamps()>(true, true)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('fk_column_id', 20);\n    table.foreign('fk_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('title');\n    table.string('color');\n    table.float('order');\n    table.timestamps(true, true);\n  }"
        },
        {
          "type": "function",
          "name": "%AM7$%AM0",
          "label": "%AM7$%AM0",
          "start_line": 1,
          "end_line": 142,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "table = parameter0: unknown\nthis = this: @ts_files/154.ts: %dflt\n%0 = instanceinvoke table.<@%unk/%unk: .string()>('id', 20)\n%1 = instanceinvoke %0.<@%unk/%unk: .primary()>()\ninstanceinvoke %1.<@%unk/%unk: .notNullable()>()\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_column_id', 20)\n%2 = MetaTable.<@%unk/%unk: .COLUMNS>\n%3 = %2 + '.id'\n%4 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_column_id')\ninstanceinvoke %4.<@%unk/%unk: .references()>(%3)\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_relation_column_id', 20)\n%5 = MetaTable.<@%unk/%unk: .COLUMNS>\n%6 = %5 + '.id'\n%7 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_relation_column_id')\ninstanceinvoke %7.<@%unk/%unk: .references()>(%6)\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_lookup_column_id', 20)\n%8 = MetaTable.<@%unk/%unk: .COLUMNS>\n%9 = %8 + '.id'\n%10 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_lookup_column_id')\ninstanceinvoke %10.<@%unk/%unk: .references()>(%9)\ninstanceinvoke table.<@%unk/%unk: .boolean()>('deleted')\ninstanceinvoke table.<@%unk/%unk: .timestamps()>(true, true)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('fk_column_id', 20);\n    table.foreign('fk_column_id').references(`${MetaTable.COLUMNS}.id`);\n    // todo: refer relation column\n    // table.string('fk_child_column_id',20);\n    // table.foreign('fk_child_column_id').references(`${MetaTable.COLUMNS}.id`);\n    // table.string('fk_parent_column_id',20);\n    // table.foreign('fk_parent_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('fk_relation_column_id', 20);\n    table\n      .foreign('fk_relation_column_id')\n      .references(`${MetaTable.COLUMNS}.id`);\n    table.string('fk_lookup_column_id', 20);\n    table.foreign('fk_lookup_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.boolean('deleted');\n    table.timestamps(true, true);\n  }"
        },
        {
          "type": "function",
          "name": "%AM8$%AM0",
          "label": "%AM8$%AM0",
          "start_line": 1,
          "end_line": 160,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "table = parameter0: unknown\nthis = this: @ts_files/154.ts: %dflt\n%0 = instanceinvoke table.<@%unk/%unk: .string()>('id', 20)\n%1 = instanceinvoke %0.<@%unk/%unk: .primary()>()\ninstanceinvoke %1.<@%unk/%unk: .notNullable()>()\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_column_id', 20)\n%2 = MetaTable.<@%unk/%unk: .COLUMNS>\n%3 = %2 + '.id'\n%4 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_column_id')\ninstanceinvoke %4.<@%unk/%unk: .references()>(%3)\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_relation_column_id', 20)\n%5 = MetaTable.<@%unk/%unk: .COLUMNS>\n%6 = %5 + '.id'\n%7 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_relation_column_id')\ninstanceinvoke %7.<@%unk/%unk: .references()>(%6)\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_rollup_column_id', 20)\n%8 = MetaTable.<@%unk/%unk: .COLUMNS>\n%9 = %8 + '.id'\n%10 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_rollup_column_id')\ninstanceinvoke %10.<@%unk/%unk: .references()>(%9)\ninstanceinvoke table.<@%unk/%unk: .string()>('rollup_function')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('deleted')\ninstanceinvoke table.<@%unk/%unk: .timestamps()>(true, true)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('fk_column_id', 20);\n    table.foreign('fk_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('fk_relation_column_id', 20);\n    table\n      .foreign('fk_relation_column_id')\n      .references(`${MetaTable.COLUMNS}.id`);\n    table.string('fk_rollup_column_id', 20);\n    table.foreign('fk_rollup_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('rollup_function');\n    table.boolean('deleted');\n    table.timestamps(true, true);\n  }"
        },
        {
          "type": "function",
          "name": "%AM9$%AM0",
          "label": "%AM9$%AM0",
          "start_line": 1,
          "end_line": 174,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "table = parameter0: unknown\nthis = this: @ts_files/154.ts: %dflt\n%0 = instanceinvoke table.<@%unk/%unk: .string()>('id', 20)\n%1 = instanceinvoke %0.<@%unk/%unk: .primary()>()\ninstanceinvoke %1.<@%unk/%unk: .notNullable()>()\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_column_id', 20)\n%2 = MetaTable.<@%unk/%unk: .COLUMNS>\n%3 = %2 + '.id'\n%4 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_column_id')\ninstanceinvoke %4.<@%unk/%unk: .references()>(%3)\n%5 = instanceinvoke table.<@%unk/%unk: .text()>('formula')\ninstanceinvoke %5.<@%unk/%unk: .notNullable()>()\ninstanceinvoke table.<@%unk/%unk: .text()>('formula_raw')\ninstanceinvoke table.<@%unk/%unk: .text()>('error')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('deleted')\ninstanceinvoke table.<@%unk/%unk: .float()>('order')\ninstanceinvoke table.<@%unk/%unk: .timestamps()>(true, true)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('fk_column_id', 20);\n    table.foreign('fk_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.text('formula').notNullable();\n    table.text('formula_raw');\n    table.text('error');\n    table.boolean('deleted');\n    table.float('order');\n    table.timestamps(true, true);\n  }"
        },
        {
          "type": "function",
          "name": "%AM10$%AM0",
          "label": "%AM10$%AM0",
          "start_line": 1,
          "end_line": 185,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "table = parameter0: unknown\nthis = this: @ts_files/154.ts: %dflt\n%0 = instanceinvoke table.<@%unk/%unk: .string()>('id', 20)\n%1 = instanceinvoke %0.<@%unk/%unk: .primary()>()\ninstanceinvoke %1.<@%unk/%unk: .notNullable()>()\ninstanceinvoke table.<@%unk/%unk: .string()>('base_id', 20)\ninstanceinvoke table.<@%unk/%unk: .string()>('project_id', 128)\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_model_id', 20)\n%2 = MetaTable.<@%unk/%unk: .MODELS>\n%3 = %2 + '.id'\n%4 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_model_id')\ninstanceinvoke %4.<@%unk/%unk: .references()>(%3)\ninstanceinvoke table.<@%unk/%unk: .string()>('title')\ninstanceinvoke table.<@%unk/%unk: .integer()>('type')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('is_default')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('show_system_fields')\n%5 = instanceinvoke table.<@%unk/%unk: .string()>('lock_type')\ninstanceinvoke %5.<@%unk/%unk: .defaultTo()>('collaborative')\ninstanceinvoke table.<@%unk/%unk: .string()>('uuid')\ninstanceinvoke table.<@%unk/%unk: .string()>('password')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('show')\ninstanceinvoke table.<@%unk/%unk: .float()>('order')\ninstanceinvoke table.<@%unk/%unk: .timestamps()>(true, true)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_model_id', 20);\n    table.foreign('fk_model_id').references(`${MetaTable.MODELS}.id`);\n    table.string('title');\n    table.integer('type');\n    table.boolean('is_default');\n    table.boolean('show_system_fields');\n    table.string('lock_type').defaultTo('collaborative');\n    table.string('uuid');\n    table.string('password');\n    // todo:  type\n    table.boolean('show');\n    table.float('order');\n    table.timestamps(true, true);\n  }"
        },
        {
          "type": "function",
          "name": "%AM11$%AM0",
          "label": "%AM11$%AM0",
          "start_line": 1,
          "end_line": 205,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "table = parameter0: unknown\nthis = this: @ts_files/154.ts: %dflt\n%0 = instanceinvoke table.<@%unk/%unk: .string()>('id', 20)\n%1 = instanceinvoke %0.<@%unk/%unk: .primary()>()\ninstanceinvoke %1.<@%unk/%unk: .notNullable()>()\ninstanceinvoke table.<@%unk/%unk: .string()>('base_id', 20)\ninstanceinvoke table.<@%unk/%unk: .string()>('project_id', 128)\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_model_id', 20)\n%2 = MetaTable.<@%unk/%unk: .MODELS>\n%3 = %2 + '.id'\n%4 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_model_id')\ninstanceinvoke %4.<@%unk/%unk: .references()>(%3)\ninstanceinvoke table.<@%unk/%unk: .string()>('title')\ninstanceinvoke table.<@%unk/%unk: .string()>('description', 255)\n%5 = instanceinvoke table.<@%unk/%unk: .string()>('env')\ninstanceinvoke %5.<@%unk/%unk: .defaultTo()>('all')\ninstanceinvoke table.<@%unk/%unk: .string()>('type')\ninstanceinvoke table.<@%unk/%unk: .string()>('event')\ninstanceinvoke table.<@%unk/%unk: .string()>('operation')\n%6 = instanceinvoke table.<@%unk/%unk: .boolean()>('async')\ninstanceinvoke %6.<@%unk/%unk: .defaultTo()>(false)\n%7 = instanceinvoke table.<@%unk/%unk: .boolean()>('payload')\ninstanceinvoke %7.<@%unk/%unk: .defaultTo()>(true)\ninstanceinvoke table.<@%unk/%unk: .text()>('url', 'text')\ninstanceinvoke table.<@%unk/%unk: .text()>('headers', 'text')\n%8 = instanceinvoke table.<@%unk/%unk: .boolean()>('condition')\ninstanceinvoke %8.<@%unk/%unk: .defaultTo()>(false)\ninstanceinvoke table.<@%unk/%unk: .text()>('notification', 'text')\n%9 = instanceinvoke table.<@%unk/%unk: .integer()>('retries')\ninstanceinvoke %9.<@%unk/%unk: .defaultTo()>(0)\n%10 = instanceinvoke table.<@%unk/%unk: .integer()>('retry_interval')\ninstanceinvoke %10.<@%unk/%unk: .defaultTo()>(60000)\n%11 = instanceinvoke table.<@%unk/%unk: .integer()>('timeout')\ninstanceinvoke %11.<@%unk/%unk: .defaultTo()>(60000)\n%12 = instanceinvoke table.<@%unk/%unk: .boolean()>('active')\ninstanceinvoke %12.<@%unk/%unk: .defaultTo()>(true)\ninstanceinvoke table.<@%unk/%unk: .timestamps()>(true, true)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_model_id', 20);\n    table.foreign('fk_model_id').references(`${MetaTable.MODELS}.id`);\n    table.string('title');\n    table.string('description', 255);\n    table.string('env').defaultTo('all');\n    table.string('type');\n    table.string('event');\n    table.string('operation');\n    table.boolean('async').defaultTo(false);\n    table.boolean('payload').defaultTo(true);\n    table.text('url', 'text');\n    table.text('headers', 'text');\n    // todo: normalise\n    table.boolean('condition').defaultTo(false);\n    table.text('notification', 'text');\n    table.integer('retries').defaultTo(0);\n    table.integer('retry_interval').defaultTo(60000);\n    table.integer('timeout').defaultTo(60000);\n    table.boolean('active').defaultTo(true);\n    table.timestamps(true, true);\n  }"
        },
        {
          "type": "function",
          "name": "%AM12$%AM0",
          "label": "%AM12$%AM0",
          "start_line": 1,
          "end_line": 232,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "table = parameter0: unknown\nthis = this: @ts_files/154.ts: %dflt\n%0 = instanceinvoke table.<@%unk/%unk: .string()>('id', 20)\n%1 = instanceinvoke %0.<@%unk/%unk: .primary()>()\ninstanceinvoke %1.<@%unk/%unk: .notNullable()>()\ninstanceinvoke table.<@%unk/%unk: .string()>('base_id', 20)\ninstanceinvoke table.<@%unk/%unk: .string()>('project_id', 128)\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_hook_id', 20)\ninstanceinvoke table.<@%unk/%unk: .string()>('type')\ninstanceinvoke table.<@%unk/%unk: .string()>('event')\ninstanceinvoke table.<@%unk/%unk: .string()>('operation')\n%2 = instanceinvoke table.<@%unk/%unk: .boolean()>('test_call')\ninstanceinvoke %2.<@%unk/%unk: .defaultTo()>(true)\n%3 = instanceinvoke table.<@%unk/%unk: .boolean()>('payload')\ninstanceinvoke %3.<@%unk/%unk: .defaultTo()>(true)\ninstanceinvoke table.<@%unk/%unk: .text()>('conditions')\ninstanceinvoke table.<@%unk/%unk: .text()>('notification', 'text')\ninstanceinvoke table.<@%unk/%unk: .string()>('error_code')\ninstanceinvoke table.<@%unk/%unk: .string()>('error_message')\ninstanceinvoke table.<@%unk/%unk: .text()>('error', 'text')\ninstanceinvoke table.<@%unk/%unk: .integer()>('execution_time')\ninstanceinvoke table.<@%unk/%unk: .string()>('response')\ninstanceinvoke table.<@%unk/%unk: .string()>('triggered_by')\ninstanceinvoke table.<@%unk/%unk: .timestamps()>(true, true)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_hook_id', 20);\n    // table.foreign('fk_hook_id').references(`${MetaTable.HOOKS}.id`);\n    table.string('type');\n    table.string('event');\n    table.string('operation');\n    table.boolean('test_call').defaultTo(true);\n    table.boolean('payload').defaultTo(true);\n    table.text('conditions');\n    table.text('notification', 'text');\n    table.string('error_code');\n    table.string('error_message');\n    table.text('error', 'text');\n    table.integer('execution_time');\n    table.string('response');\n    table.string('triggered_by');\n    table.timestamps(true, true);\n  }"
        },
        {
          "type": "function",
          "name": "%AM13$%AM0",
          "label": "%AM13$%AM0",
          "start_line": 1,
          "end_line": 255,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "table = parameter0: unknown\nthis = this: @ts_files/154.ts: %dflt\n%0 = instanceinvoke table.<@%unk/%unk: .string()>('id', 20)\n%1 = instanceinvoke %0.<@%unk/%unk: .primary()>()\ninstanceinvoke %1.<@%unk/%unk: .notNullable()>()\ninstanceinvoke table.<@%unk/%unk: .string()>('base_id', 20)\ninstanceinvoke table.<@%unk/%unk: .string()>('project_id', 128)\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_view_id', 20)\n%2 = MetaTable.<@%unk/%unk: .VIEWS>\n%3 = %2 + '.id'\n%4 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_view_id')\ninstanceinvoke %4.<@%unk/%unk: .references()>(%3)\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_hook_id', 20)\n%5 = MetaTable.<@%unk/%unk: .HOOKS>\n%6 = %5 + '.id'\n%7 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_hook_id')\ninstanceinvoke %7.<@%unk/%unk: .references()>(%6)\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_column_id', 20)\n%8 = MetaTable.<@%unk/%unk: .COLUMNS>\n%9 = %8 + '.id'\n%10 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_column_id')\ninstanceinvoke %10.<@%unk/%unk: .references()>(%9)\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_parent_id', 20)\n%11 = MetaTable.<@%unk/%unk: .FILTER_EXP>\n%12 = %11 + '.id'\n%13 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_parent_id')\ninstanceinvoke %13.<@%unk/%unk: .references()>(%12)\ninstanceinvoke table.<@%unk/%unk: .string()>('logical_op')\ninstanceinvoke table.<@%unk/%unk: .string()>('comparison_op')\ninstanceinvoke table.<@%unk/%unk: .string()>('value')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('is_group')\ninstanceinvoke table.<@%unk/%unk: .float()>('order')\ninstanceinvoke table.<@%unk/%unk: .timestamps()>(true, true)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_view_id', 20);\n    table.foreign('fk_view_id').references(`${MetaTable.VIEWS}.id`);\n    table.string('fk_hook_id', 20);\n    table.foreign('fk_hook_id').references(`${MetaTable.HOOKS}.id`);\n    table.string('fk_column_id', 20);\n    table.foreign('fk_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('fk_parent_id', 20);\n    table.foreign('fk_parent_id').references(`${MetaTable.FILTER_EXP}.id`);\n    table.string('logical_op');\n    table.string('comparison_op');\n    table.string('value');\n    table.boolean('is_group');\n    table.float('order');\n    table.timestamps(true, true);\n  }"
        },
        {
          "type": "function",
          "name": "%AM14$%AM0",
          "label": "%AM14$%AM0",
          "start_line": 1,
          "end_line": 303,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "table = parameter0: unknown\nthis = this: @ts_files/154.ts: %dflt\n%0 = instanceinvoke table.<@%unk/%unk: .string()>('id', 20)\n%1 = instanceinvoke %0.<@%unk/%unk: .primary()>()\ninstanceinvoke %1.<@%unk/%unk: .notNullable()>()\ninstanceinvoke table.<@%unk/%unk: .string()>('base_id', 20)\ninstanceinvoke table.<@%unk/%unk: .string()>('project_id', 128)\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_view_id', 20)\n%2 = MetaTable.<@%unk/%unk: .VIEWS>\n%3 = %2 + '.id'\n%4 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_view_id')\ninstanceinvoke %4.<@%unk/%unk: .references()>(%3)\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_column_id', 20)\n%5 = MetaTable.<@%unk/%unk: .COLUMNS>\n%6 = %5 + '.id'\n%7 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_column_id')\ninstanceinvoke %7.<@%unk/%unk: .references()>(%6)\n%8 = instanceinvoke table.<@%unk/%unk: .string()>('direction')\ninstanceinvoke %8.<@%unk/%unk: .defaultTo()>(false)\ninstanceinvoke table.<@%unk/%unk: .float()>('order')\ninstanceinvoke table.<@%unk/%unk: .timestamps()>(true, true)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_view_id', 20);\n    table.foreign('fk_view_id').references(`${MetaTable.VIEWS}.id`);\n    table.string('fk_column_id', 20);\n    table.foreign('fk_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('direction').defaultTo(false);\n    table.float('order');\n    table.timestamps(true, true);\n  }"
        },
        {
          "type": "function",
          "name": "%AM15$%AM0",
          "label": "%AM15$%AM0",
          "start_line": 1,
          "end_line": 317,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "table = parameter0: unknown\nthis = this: @ts_files/154.ts: %dflt\n%0 = instanceinvoke table.<@%unk/%unk: .string()>('id', 20)\n%1 = instanceinvoke %0.<@%unk/%unk: .primary()>()\ninstanceinvoke %1.<@%unk/%unk: .notNullable()>()\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_view_id', 20)\n%2 = MetaTable.<@%unk/%unk: .VIEWS>\n%3 = %2 + '.id'\n%4 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_view_id')\ninstanceinvoke %4.<@%unk/%unk: .references()>(%3)\ninstanceinvoke table.<@%unk/%unk: .text()>('meta', 'mediumtext')\ninstanceinvoke table.<@%unk/%unk: .text()>('query_params', 'mediumtext')\ninstanceinvoke table.<@%unk/%unk: .string()>('view_id')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('show_all_fields')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('allow_copy')\ninstanceinvoke table.<@%unk/%unk: .string()>('password')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('deleted')\ninstanceinvoke table.<@%unk/%unk: .float()>('order')\ninstanceinvoke table.<@%unk/%unk: .timestamps()>(true, true)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('fk_view_id', 20);\n    table.foreign('fk_view_id').references(`${MetaTable.VIEWS}.id`);\n    table.text('meta', 'mediumtext');\n    // todo:\n    table.text('query_params', 'mediumtext');\n    table.string('view_id');\n    table.boolean('show_all_fields');\n    table.boolean('allow_copy');\n    table.string('password');\n    table.boolean('deleted');\n    table.float('order');\n    table.timestamps(true, true);\n  }"
        },
        {
          "type": "function",
          "name": "%AM16$%AM0",
          "label": "%AM16$%AM0",
          "start_line": 1,
          "end_line": 332,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "table = parameter0: unknown\nthis = this: @ts_files/154.ts: %dflt\ninstanceinvoke table.<@%unk/%unk: .string()>('base_id', 20)\ninstanceinvoke table.<@%unk/%unk: .string()>('project_id', 128)\n%0 = instanceinvoke table.<@%unk/%unk: .string()>('fk_view_id', 20)\ninstanceinvoke %0.<@%unk/%unk: .primary()>()\n%1 = MetaTable.<@%unk/%unk: .VIEWS>\n%2 = %1 + '.id'\n%3 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_view_id')\ninstanceinvoke %3.<@%unk/%unk: .references()>(%2)\ninstanceinvoke table.<@%unk/%unk: .string()>('heading')\ninstanceinvoke table.<@%unk/%unk: .string()>('subheading')\ninstanceinvoke table.<@%unk/%unk: .string()>('success_msg')\ninstanceinvoke table.<@%unk/%unk: .string()>('redirect_url')\ninstanceinvoke table.<@%unk/%unk: .string()>('redirect_after_secs')\ninstanceinvoke table.<@%unk/%unk: .string()>('email')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('submit_another_form')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('show_blank_form')\ninstanceinvoke table.<@%unk/%unk: .string()>('uuid')\ninstanceinvoke table.<@%unk/%unk: .string()>('banner_image_url')\ninstanceinvoke table.<@%unk/%unk: .string()>('logo_url')\ninstanceinvoke table.<@%unk/%unk: .timestamps()>(true, true)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(table) => {\n    // table\n    //   .string('id', 20)\n    //   .primary()\n    //   .notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_view_id', 20).primary();\n    table.foreign('fk_view_id').references(`${MetaTable.VIEWS}.id`);\n    table.string('heading');\n    table.string('subheading');\n    table.string('success_msg');\n    table.string('redirect_url');\n    table.string('redirect_after_secs');\n    table.string('email');\n    table.boolean('submit_another_form');\n    table.boolean('show_blank_form');\n    table.string('uuid');\n    table.string('banner_image_url');\n    table.string('logo_url');\n    table.timestamps(true, true);\n  }"
        },
        {
          "type": "function",
          "name": "%AM17$%AM0",
          "label": "%AM17$%AM0",
          "start_line": 1,
          "end_line": 356,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "table = parameter0: unknown\nthis = this: @ts_files/154.ts: %dflt\n%0 = instanceinvoke table.<@%unk/%unk: .string()>('id', 20)\n%1 = instanceinvoke %0.<@%unk/%unk: .primary()>()\ninstanceinvoke %1.<@%unk/%unk: .notNullable()>()\ninstanceinvoke table.<@%unk/%unk: .string()>('base_id', 20)\ninstanceinvoke table.<@%unk/%unk: .string()>('project_id', 128)\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_view_id', 20)\n%2 = MetaTable.<@%unk/%unk: .FORM_VIEW>\n%3 = %2 + '.fk_view_id'\n%4 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_view_id')\ninstanceinvoke %4.<@%unk/%unk: .references()>(%3)\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_column_id', 20)\n%5 = MetaTable.<@%unk/%unk: .COLUMNS>\n%6 = %5 + '.id'\n%7 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_column_id')\ninstanceinvoke %7.<@%unk/%unk: .references()>(%6)\ninstanceinvoke table.<@%unk/%unk: .string()>('uuid')\ninstanceinvoke table.<@%unk/%unk: .string()>('label')\ninstanceinvoke table.<@%unk/%unk: .string()>('help')\ninstanceinvoke table.<@%unk/%unk: .string()>('description')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('required')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('show')\ninstanceinvoke table.<@%unk/%unk: .float()>('order')\ninstanceinvoke table.<@%unk/%unk: .timestamps()>(true, true)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_view_id', 20);\n    table.foreign('fk_view_id').references(`${MetaTable.FORM_VIEW}.fk_view_id`);\n    table.string('fk_column_id', 20);\n    table.foreign('fk_column_id').references(`${MetaTable.COLUMNS}.id`);\n    // todo: type\n    table.string('uuid');\n    table.string('label');\n    table.string('help');\n    table.string('description');\n    table.boolean('required');\n    table.boolean('show');\n    table.float('order');\n    // todo : condition\n    table.timestamps(true, true);\n  }"
        },
        {
          "type": "function",
          "name": "%AM18$%AM0",
          "label": "%AM18$%AM0",
          "start_line": 1,
          "end_line": 377,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "table = parameter0: unknown\nthis = this: @ts_files/154.ts: %dflt\ninstanceinvoke table.<@%unk/%unk: .string()>('base_id', 20)\ninstanceinvoke table.<@%unk/%unk: .string()>('project_id', 128)\n%0 = instanceinvoke table.<@%unk/%unk: .string()>('fk_view_id', 20)\ninstanceinvoke %0.<@%unk/%unk: .primary()>()\n%1 = MetaTable.<@%unk/%unk: .VIEWS>\n%2 = %1 + '.id'\n%3 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_view_id')\ninstanceinvoke %3.<@%unk/%unk: .references()>(%2)\ninstanceinvoke table.<@%unk/%unk: .boolean()>('next_enabled')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('prev_enabled')\ninstanceinvoke table.<@%unk/%unk: .integer()>('cover_image_idx')\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_cover_image_col_id', 20)\n%4 = MetaTable.<@%unk/%unk: .COLUMNS>\n%5 = %4 + '.id'\n%6 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_cover_image_col_id')\ninstanceinvoke %6.<@%unk/%unk: .references()>(%5)\ninstanceinvoke table.<@%unk/%unk: .string()>('cover_image')\ninstanceinvoke table.<@%unk/%unk: .string()>('restrict_types')\ninstanceinvoke table.<@%unk/%unk: .string()>('restrict_size')\ninstanceinvoke table.<@%unk/%unk: .string()>('restrict_number')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('public')\ninstanceinvoke table.<@%unk/%unk: .string()>('dimensions')\ninstanceinvoke table.<@%unk/%unk: .string()>('responsive_columns')\ninstanceinvoke table.<@%unk/%unk: .timestamps()>(true, true)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(table) => {\n    // table\n    //   .string('id', 20)\n    //   .primary()\n    //   .notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_view_id', 20).primary();\n    table.foreign('fk_view_id').references(`${MetaTable.VIEWS}.id`);\n    // todo:  type\n    table.boolean('next_enabled');\n    table.boolean('prev_enabled');\n    table.integer('cover_image_idx');\n    table.string('fk_cover_image_col_id', 20);\n    table\n      .foreign('fk_cover_image_col_id')\n      .references(`${MetaTable.COLUMNS}.id`);\n    table.string('cover_image');\n    table.string('restrict_types');\n    table.string('restrict_size');\n    table.string('restrict_number');\n    table.boolean('public');\n    table.string('dimensions');\n    table.string('responsive_columns');\n    // todo : condition\n    table.timestamps(true, true);\n  }"
        },
        {
          "type": "function",
          "name": "%AM19$%AM0",
          "label": "%AM19$%AM0",
          "start_line": 1,
          "end_line": 406,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "table = parameter0: unknown\nthis = this: @ts_files/154.ts: %dflt\n%0 = instanceinvoke table.<@%unk/%unk: .string()>('id', 20)\n%1 = instanceinvoke %0.<@%unk/%unk: .primary()>()\ninstanceinvoke %1.<@%unk/%unk: .notNullable()>()\ninstanceinvoke table.<@%unk/%unk: .string()>('base_id', 20)\ninstanceinvoke table.<@%unk/%unk: .string()>('project_id', 128)\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_view_id', 20)\n%2 = MetaTable.<@%unk/%unk: .GALLERY_VIEW>\n%3 = %2 + '.fk_view_id'\n%4 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_view_id')\ninstanceinvoke %4.<@%unk/%unk: .references()>(%3)\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_column_id', 20)\n%5 = MetaTable.<@%unk/%unk: .COLUMNS>\n%6 = %5 + '.id'\n%7 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_column_id')\ninstanceinvoke %7.<@%unk/%unk: .references()>(%6)\ninstanceinvoke table.<@%unk/%unk: .string()>('uuid')\ninstanceinvoke table.<@%unk/%unk: .string()>('label')\ninstanceinvoke table.<@%unk/%unk: .string()>('help')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('show')\ninstanceinvoke table.<@%unk/%unk: .float()>('order')\ninstanceinvoke table.<@%unk/%unk: .timestamps()>(true, true)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_view_id', 20);\n    table\n      .foreign('fk_view_id')\n      .references(`${MetaTable.GALLERY_VIEW}.fk_view_id`);\n    table.string('fk_column_id', 20);\n    table.foreign('fk_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('uuid');\n    // todo:  type\n    table.string('label');\n    table.string('help');\n    table.boolean('show');\n    table.float('order');\n    table.timestamps(true, true);\n  }"
        },
        {
          "type": "function",
          "name": "%AM20$%AM0",
          "label": "%AM20$%AM0",
          "start_line": 1,
          "end_line": 426,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "table = parameter0: unknown\nthis = this: @ts_files/154.ts: %dflt\n%0 = instanceinvoke table.<@%unk/%unk: .string()>('fk_view_id', 20)\ninstanceinvoke %0.<@%unk/%unk: .primary()>()\n%1 = MetaTable.<@%unk/%unk: .VIEWS>\n%2 = %1 + '.id'\n%3 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_view_id')\ninstanceinvoke %3.<@%unk/%unk: .references()>(%2)\ninstanceinvoke table.<@%unk/%unk: .string()>('base_id', 20)\ninstanceinvoke table.<@%unk/%unk: .string()>('project_id', 128)\ninstanceinvoke table.<@%unk/%unk: .string()>('uuid')\ninstanceinvoke table.<@%unk/%unk: .timestamps()>(true, true)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(table) => {\n    table.string('fk_view_id', 20).primary();\n    table.foreign('fk_view_id').references(`${MetaTable.VIEWS}.id`);\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('uuid');\n    table.timestamps(true, true);\n  }"
        },
        {
          "type": "function",
          "name": "%AM21$%AM0",
          "label": "%AM21$%AM0",
          "start_line": 1,
          "end_line": 436,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "table = parameter0: unknown\nthis = this: @ts_files/154.ts: %dflt\n%0 = instanceinvoke table.<@%unk/%unk: .string()>('id', 20)\n%1 = instanceinvoke %0.<@%unk/%unk: .primary()>()\ninstanceinvoke %1.<@%unk/%unk: .notNullable()>()\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_view_id', 20)\n%2 = MetaTable.<@%unk/%unk: .GRID_VIEW>\n%3 = %2 + '.fk_view_id'\n%4 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_view_id')\ninstanceinvoke %4.<@%unk/%unk: .references()>(%3)\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_column_id', 20)\n%5 = MetaTable.<@%unk/%unk: .COLUMNS>\n%6 = %5 + '.id'\n%7 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_column_id')\ninstanceinvoke %7.<@%unk/%unk: .references()>(%6)\ninstanceinvoke table.<@%unk/%unk: .string()>('base_id', 20)\ninstanceinvoke table.<@%unk/%unk: .string()>('project_id', 128)\ninstanceinvoke table.<@%unk/%unk: .string()>('uuid')\ninstanceinvoke table.<@%unk/%unk: .string()>('label')\ninstanceinvoke table.<@%unk/%unk: .string()>('help')\n%8 = instanceinvoke table.<@%unk/%unk: .string()>('width')\ninstanceinvoke %8.<@%unk/%unk: .defaultTo()>('200px')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('show')\ninstanceinvoke table.<@%unk/%unk: .float()>('order')\ninstanceinvoke table.<@%unk/%unk: .timestamps()>(true, true)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('fk_view_id', 20);\n    table.foreign('fk_view_id').references(`${MetaTable.GRID_VIEW}.fk_view_id`);\n    table.string('fk_column_id', 20);\n    table.foreign('fk_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('uuid');\n    // todo:  type\n    table.string('label');\n    table.string('help');\n    table.string('width').defaultTo('200px');\n    table.boolean('show');\n    table.float('order');\n    table.timestamps(true, true);\n  }"
        },
        {
          "type": "function",
          "name": "%AM22$%AM0",
          "label": "%AM22$%AM0",
          "start_line": 1,
          "end_line": 455,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "table = parameter0: unknown\nthis = this: @ts_files/154.ts: %dflt\n%0 = instanceinvoke table.<@%unk/%unk: .string()>('fk_view_id', 20)\ninstanceinvoke %0.<@%unk/%unk: .primary()>()\n%1 = MetaTable.<@%unk/%unk: .VIEWS>\n%2 = %1 + '.id'\n%3 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_view_id')\ninstanceinvoke %3.<@%unk/%unk: .references()>(%2)\ninstanceinvoke table.<@%unk/%unk: .string()>('base_id', 20)\ninstanceinvoke table.<@%unk/%unk: .string()>('project_id', 128)\ninstanceinvoke table.<@%unk/%unk: .boolean()>('show')\ninstanceinvoke table.<@%unk/%unk: .float()>('order')\ninstanceinvoke table.<@%unk/%unk: .string()>('uuid')\ninstanceinvoke table.<@%unk/%unk: .string()>('title')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('public')\ninstanceinvoke table.<@%unk/%unk: .string()>('password')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('show_all_fields')\ninstanceinvoke table.<@%unk/%unk: .timestamps()>(true, true)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(table) => {\n    table.string('fk_view_id', 20).primary();\n    table.foreign('fk_view_id').references(`${MetaTable.VIEWS}.id`);\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.boolean('show');\n    table.float('order');\n    table.string('uuid');\n    table.string('title');\n    // todo:  type\n    table.boolean('public');\n    table.string('password');\n    table.boolean('show_all_fields');\n    table.timestamps(true, true);\n  }"
        },
        {
          "type": "function",
          "name": "%AM23$%AM0",
          "label": "%AM23$%AM0",
          "start_line": 1,
          "end_line": 472,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "table = parameter0: unknown\nthis = this: @ts_files/154.ts: %dflt\n%0 = instanceinvoke table.<@%unk/%unk: .string()>('id', 20)\n%1 = instanceinvoke %0.<@%unk/%unk: .primary()>()\ninstanceinvoke %1.<@%unk/%unk: .notNullable()>()\ninstanceinvoke table.<@%unk/%unk: .string()>('base_id', 20)\ninstanceinvoke table.<@%unk/%unk: .string()>('project_id', 128)\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_view_id', 20)\n%2 = MetaTable.<@%unk/%unk: .KANBAN_VIEW>\n%3 = %2 + '.fk_view_id'\n%4 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_view_id')\ninstanceinvoke %4.<@%unk/%unk: .references()>(%3)\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_column_id', 20)\n%5 = MetaTable.<@%unk/%unk: .COLUMNS>\n%6 = %5 + '.id'\n%7 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_column_id')\ninstanceinvoke %7.<@%unk/%unk: .references()>(%6)\ninstanceinvoke table.<@%unk/%unk: .string()>('uuid')\ninstanceinvoke table.<@%unk/%unk: .string()>('label')\ninstanceinvoke table.<@%unk/%unk: .string()>('help')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('show')\ninstanceinvoke table.<@%unk/%unk: .float()>('order')\ninstanceinvoke table.<@%unk/%unk: .timestamps()>(true, true)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_view_id', 20);\n    table\n      .foreign('fk_view_id')\n      .references(`${MetaTable.KANBAN_VIEW}.fk_view_id`);\n    table.string('fk_column_id', 20);\n    table.foreign('fk_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('uuid');\n    // todo:  type\n    table.string('label');\n    table.string('help');\n    table.boolean('show');\n    table.float('order');\n    table.timestamps(true, true);\n  }"
        },
        {
          "type": "function",
          "name": "%AM24$%AM0",
          "label": "%AM24$%AM0",
          "start_line": 1,
          "end_line": 492,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "table = parameter0: unknown\nthis = this: @ts_files/154.ts: %dflt\n%0 = instanceinvoke table.<@%unk/%unk: .string()>('id', 20)\n%1 = instanceinvoke %0.<@%unk/%unk: .primary()>()\ninstanceinvoke %1.<@%unk/%unk: .notNullable()>()\ninstanceinvoke table.<@%unk/%unk: .string()>('email')\ninstanceinvoke table.<@%unk/%unk: .string()>('password', 255)\ninstanceinvoke table.<@%unk/%unk: .string()>('salt', 255)\ninstanceinvoke table.<@%unk/%unk: .string()>('firstname')\ninstanceinvoke table.<@%unk/%unk: .string()>('lastname')\ninstanceinvoke table.<@%unk/%unk: .string()>('username')\ninstanceinvoke table.<@%unk/%unk: .string()>('refresh_token', 255)\ninstanceinvoke table.<@%unk/%unk: .string()>('invite_token', 255)\ninstanceinvoke table.<@%unk/%unk: .string()>('invite_token_expires', 255)\ninstanceinvoke table.<@%unk/%unk: .timestamp()>('reset_password_expires')\ninstanceinvoke table.<@%unk/%unk: .string()>('reset_password_token', 255)\ninstanceinvoke table.<@%unk/%unk: .string()>('email_verification_token', 255)\ninstanceinvoke table.<@%unk/%unk: .boolean()>('email_verified')\n%2 = instanceinvoke table.<@%unk/%unk: .string()>('roles', 255)\ninstanceinvoke %2.<@%unk/%unk: .defaultTo()>('editor')\ninstanceinvoke table.<@%unk/%unk: .timestamps()>(true, true)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('email');\n    table.string('password', 255);\n    table.string('salt', 255);\n    table.string('firstname');\n    table.string('lastname');\n    table.string('username');\n    table.string('refresh_token', 255);\n    table.string('invite_token', 255);\n    table.string('invite_token_expires', 255);\n    table.timestamp('reset_password_expires');\n    table.string('reset_password_token', 255);\n    table.string('email_verification_token', 255);\n    table.boolean('email_verified');\n    table.string('roles', 255).defaultTo('editor');\n    table.timestamps(true, true);\n  }"
        },
        {
          "type": "function",
          "name": "%AM25$%AM0",
          "label": "%AM25$%AM0",
          "start_line": 1,
          "end_line": 510,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "table = parameter0: unknown\nthis = this: @ts_files/154.ts: %dflt\ninstanceinvoke table.<@%unk/%unk: .string()>('project_id', 128)\n%0 = MetaTableOldV2.<@%unk/%unk: .PROJECT>\n%1 = %0 + '.id'\n%2 = instanceinvoke table.<@%unk/%unk: .foreign()>('project_id')\ninstanceinvoke %2.<@%unk/%unk: .references()>(%1)\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_user_id', 20)\n%3 = MetaTable.<@%unk/%unk: .USERS>\n%4 = %3 + '.id'\n%5 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_user_id')\ninstanceinvoke %5.<@%unk/%unk: .references()>(%4)\ninstanceinvoke table.<@%unk/%unk: .text()>('roles')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('starred')\ninstanceinvoke table.<@%unk/%unk: .boolean()>('pinned')\ninstanceinvoke table.<@%unk/%unk: .string()>('group')\ninstanceinvoke table.<@%unk/%unk: .string()>('color')\ninstanceinvoke table.<@%unk/%unk: .float()>('order')\ninstanceinvoke table.<@%unk/%unk: .float()>('hidden')\ninstanceinvoke table.<@%unk/%unk: .timestamp()>('opened_date')\ninstanceinvoke table.<@%unk/%unk: .timestamps()>(true, true)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(table) => {\n    table.string('project_id', 128);\n    table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_user_id', 20);\n    table.foreign('fk_user_id').references(`${MetaTable.USERS}.id`);\n    table.text('roles');\n    table.boolean('starred');\n    table.boolean('pinned');\n    table.string('group');\n    table.string('color');\n    table.float('order');\n    table.float('hidden');\n    table.timestamp('opened_date');\n    table.timestamps(true, true);\n  }"
        },
        {
          "type": "function",
          "name": "%AM26$%AM0",
          "label": "%AM26$%AM0",
          "start_line": 1,
          "end_line": 525,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "table = parameter0: unknown\nthis = this: @ts_files/154.ts: %dflt\n%0 = instanceinvoke table.<@%unk/%unk: .string()>('id', 20)\n%1 = instanceinvoke %0.<@%unk/%unk: .primary()>()\ninstanceinvoke %1.<@%unk/%unk: .notNullable()>()\ninstanceinvoke table.<@%unk/%unk: .string()>('title')\ninstanceinvoke table.<@%unk/%unk: .timestamps()>(true, true)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('title');\n    table.timestamps(true, true);\n  }"
        },
        {
          "type": "function",
          "name": "%AM27$%AM0",
          "label": "%AM27$%AM0",
          "start_line": 1,
          "end_line": 530,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "table = parameter0: unknown\nthis = this: @ts_files/154.ts: %dflt\n%0 = instanceinvoke table.<@%unk/%unk: .string()>('id', 20)\n%1 = instanceinvoke %0.<@%unk/%unk: .primary()>()\ninstanceinvoke %1.<@%unk/%unk: .notNullable()>()\ninstanceinvoke table.<@%unk/%unk: .string()>('title')\ninstanceinvoke table.<@%unk/%unk: .string()>('org_id', 20)\n%2 = MetaTable.<@%unk/%unk: .ORGS_OLD>\n%3 = %2 + '.id'\n%4 = instanceinvoke table.<@%unk/%unk: .foreign()>('org_id')\ninstanceinvoke %4.<@%unk/%unk: .references()>(%3)\ninstanceinvoke table.<@%unk/%unk: .timestamps()>(true, true)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('title');\n    table.string('org_id', 20);\n    table.foreign('org_id').references(`${MetaTable.ORGS_OLD}.id`);\n    table.timestamps(true, true);\n  }"
        },
        {
          "type": "function",
          "name": "%AM28$%AM0",
          "label": "%AM28$%AM0",
          "start_line": 1,
          "end_line": 537,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "table = parameter0: unknown\nthis = this: @ts_files/154.ts: %dflt\ninstanceinvoke table.<@%unk/%unk: .string()>('org_id', 20)\n%0 = MetaTable.<@%unk/%unk: .ORGS_OLD>\n%1 = %0 + '.id'\n%2 = instanceinvoke table.<@%unk/%unk: .foreign()>('org_id')\ninstanceinvoke %2.<@%unk/%unk: .references()>(%1)\ninstanceinvoke table.<@%unk/%unk: .string()>('user_id', 20)\n%3 = MetaTable.<@%unk/%unk: .USERS>\n%4 = %3 + '.id'\n%5 = instanceinvoke table.<@%unk/%unk: .foreign()>('user_id')\ninstanceinvoke %5.<@%unk/%unk: .references()>(%4)\ninstanceinvoke table.<@%unk/%unk: .timestamps()>(true, true)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(table) => {\n    table.string('org_id', 20);\n    table.foreign('org_id').references(`${MetaTable.ORGS_OLD}.id`);\n    table.string('user_id', 20);\n    table.foreign('user_id').references(`${MetaTable.USERS}.id`);\n    table.timestamps(true, true);\n  }"
        },
        {
          "type": "function",
          "name": "%AM29$%AM0",
          "label": "%AM29$%AM0",
          "start_line": 1,
          "end_line": 544,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "table = parameter0: unknown\nthis = this: @ts_files/154.ts: %dflt\n%0 = instanceinvoke table.<@%unk/%unk: .string()>('id', 20)\n%1 = instanceinvoke %0.<@%unk/%unk: .primary()>()\ninstanceinvoke %1.<@%unk/%unk: .notNullable()>()\ninstanceinvoke table.<@%unk/%unk: .string()>('user')\ninstanceinvoke table.<@%unk/%unk: .string()>('ip')\ninstanceinvoke table.<@%unk/%unk: .string()>('base_id', 20)\n%2 = MetaTableOldV2.<@%unk/%unk: .BASES>\n%3 = %2 + '.id'\n%4 = instanceinvoke table.<@%unk/%unk: .foreign()>('base_id')\ninstanceinvoke %4.<@%unk/%unk: .references()>(%3)\ninstanceinvoke table.<@%unk/%unk: .string()>('project_id', 128)\n%5 = MetaTableOldV2.<@%unk/%unk: .PROJECT>\n%6 = %5 + '.id'\n%7 = instanceinvoke table.<@%unk/%unk: .foreign()>('project_id')\ninstanceinvoke %7.<@%unk/%unk: .references()>(%6)\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_model_id', 20)\n%8 = MetaTable.<@%unk/%unk: .MODELS>\n%9 = %8 + '.id'\n%10 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_model_id')\ninstanceinvoke %10.<@%unk/%unk: .references()>(%9)\n%11 = instanceinvoke table.<@%unk/%unk: .string()>('row_id')\ninstanceinvoke %11.<@%unk/%unk: .index()>()\ninstanceinvoke table.<@%unk/%unk: .string()>('op_type')\ninstanceinvoke table.<@%unk/%unk: .string()>('op_sub_type')\ninstanceinvoke table.<@%unk/%unk: .string()>('status')\ninstanceinvoke table.<@%unk/%unk: .text()>('description')\ninstanceinvoke table.<@%unk/%unk: .text()>('details')\ninstanceinvoke table.<@%unk/%unk: .timestamps()>(true, true)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('user');\n    table.string('ip');\n    table.string('base_id', 20);\n    table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_model_id', 20);\n    table.foreign('fk_model_id').references(`${MetaTable.MODELS}.id`);\n    table.string('row_id').index();\n    table.string('op_type');\n    table.string('op_sub_type');\n    table.string('status');\n    table.text('description');\n    table.text('details');\n    table.timestamps(true, true);\n  }"
        },
        {
          "type": "function",
          "name": "%AM30$%AM0",
          "label": "%AM30$%AM0",
          "start_line": 1,
          "end_line": 562,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "table = parameter0: unknown\nthis = this: @ts_files/154.ts: %dflt\n%0 = instanceinvoke table.<@%unk/%unk: .string()>('id', 20)\n%1 = instanceinvoke %0.<@%unk/%unk: .primary()>()\ninstanceinvoke %1.<@%unk/%unk: .notNullable()>()\ninstanceinvoke table.<@%unk/%unk: .string()>('title', 45)\ninstanceinvoke table.<@%unk/%unk: .text()>('description')\n%2 = instanceinvoke table.<@%unk/%unk: .boolean()>('active')\ninstanceinvoke %2.<@%unk/%unk: .defaultTo()>(false)\ninstanceinvoke table.<@%unk/%unk: .float()>('rating')\ninstanceinvoke table.<@%unk/%unk: .string()>('version')\ninstanceinvoke table.<@%unk/%unk: .string()>('docs')\n%3 = instanceinvoke table.<@%unk/%unk: .string()>('status')\ninstanceinvoke %3.<@%unk/%unk: .defaultTo()>('install')\ninstanceinvoke table.<@%unk/%unk: .string()>('status_details')\ninstanceinvoke table.<@%unk/%unk: .string()>('logo')\ninstanceinvoke table.<@%unk/%unk: .string()>('icon')\ninstanceinvoke table.<@%unk/%unk: .string()>('tags')\ninstanceinvoke table.<@%unk/%unk: .string()>('category')\ninstanceinvoke table.<@%unk/%unk: .text()>('input_schema')\ninstanceinvoke table.<@%unk/%unk: .text()>('input')\ninstanceinvoke table.<@%unk/%unk: .string()>('creator')\ninstanceinvoke table.<@%unk/%unk: .string()>('creator_website')\ninstanceinvoke table.<@%unk/%unk: .string()>('price')\ninstanceinvoke table.<@%unk/%unk: .timestamps()>(true, true)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('title', 45);\n    table.text('description');\n    table.boolean('active').defaultTo(false);\n    table.float('rating');\n    table.string('version');\n    table.string('docs');\n    table.string('status').defaultTo('install');\n    table.string('status_details');\n    table.string('logo');\n    table.string('icon');\n    table.string('tags');\n    table.string('category');\n    table.text('input_schema');\n    table.text('input');\n    table.string('creator');\n    table.string('creator_website');\n    table.string('price');\n    table.timestamps(true, true);\n  }"
        },
        {
          "type": "function",
          "name": "%AM31$%AM0",
          "label": "%AM31$%AM0",
          "start_line": 1,
          "end_line": 583,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "table = parameter0: unknown\nthis = this: @ts_files/154.ts: %dflt\n%0 = instanceinvoke table.<@%unk/%unk: .string()>('id', 20)\n%1 = instanceinvoke %0.<@%unk/%unk: .primary()>()\ninstanceinvoke %1.<@%unk/%unk: .notNullable()>()\ninstanceinvoke table.<@%unk/%unk: .string()>('base_id', 20)\ninstanceinvoke table.<@%unk/%unk: .string()>('project_id', 128)\ninstanceinvoke table.<@%unk/%unk: .string()>('fk_view_id', 20)\n%2 = MetaTable.<@%unk/%unk: .VIEWS>\n%3 = %2 + '.id'\n%4 = instanceinvoke table.<@%unk/%unk: .foreign()>('fk_view_id')\ninstanceinvoke %4.<@%unk/%unk: .references()>(%3)\ninstanceinvoke table.<@%unk/%unk: .string()>('role', 45)\n%5 = instanceinvoke table.<@%unk/%unk: .boolean()>('disabled')\ninstanceinvoke %5.<@%unk/%unk: .defaultTo()>(true)\ninstanceinvoke table.<@%unk/%unk: .timestamps()>(true, true)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    // table.string('fk_model_id', 20);\n    // table.foreign('fk_model_id').references(`${MetaTable.MODELS}.id`);\n    table.string('fk_view_id', 20);\n    table.foreign('fk_view_id').references(`${MetaTable.VIEWS}.id`);\n    table.string('role', 45);\n    table.boolean('disabled').defaultTo(true);\n    table.timestamps(true, true);\n  }"
        },
        {
          "type": "function",
          "name": "%AM0",
          "label": "%AM0",
          "start_line": 1,
          "end_line": 2,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "knex = parameter0: unknown\nthis = this: @ts_files/154.ts: %dflt\n%0 = MetaTableOldV2.<@%unk/%unk: .PROJECT>\n%1 = knex.<@%unk/%unk: .schema>\n%2 = instanceinvoke %1.<@%unk/%unk: .createTable()>(%0, %AM1$%AM0)\n%3 = await %2\n%4 = MetaTableOldV2.<@%unk/%unk: .BASES>\n%5 = knex.<@%unk/%unk: .schema>\n%6 = instanceinvoke %5.<@%unk/%unk: .createTable()>(%4, %AM2$%AM0)\n%7 = await %6\n%8 = MetaTable.<@%unk/%unk: .MODELS>\n%9 = knex.<@%unk/%unk: .schema>\n%10 = instanceinvoke %9.<@%unk/%unk: .createTable()>(%8, %AM3$%AM0)\n%11 = await %10\n%12 = MetaTable.<@%unk/%unk: .COLUMNS>\n%13 = knex.<@%unk/%unk: .schema>\n%14 = instanceinvoke %13.<@%unk/%unk: .createTable()>(%12, %AM4$%AM0)\n%15 = await %14\n%16 = MetaTable.<@%unk/%unk: .COL_RELATIONS>\n%17 = knex.<@%unk/%unk: .schema>\n%18 = instanceinvoke %17.<@%unk/%unk: .createTable()>(%16, %AM5$%AM0)\n%19 = await %18\n%20 = MetaTable.<@%unk/%unk: .COL_SELECT_OPTIONS>\n%21 = knex.<@%unk/%unk: .schema>\n%22 = instanceinvoke %21.<@%unk/%unk: .createTable()>(%20, %AM6$%AM0)\n%23 = await %22\n%24 = MetaTable.<@%unk/%unk: .COL_LOOKUP>\n%25 = knex.<@%unk/%unk: .schema>\n%26 = instanceinvoke %25.<@%unk/%unk: .createTable()>(%24, %AM7$%AM0)\n%27 = await %26\n%28 = MetaTable.<@%unk/%unk: .COL_ROLLUP>\n%29 = knex.<@%unk/%unk: .schema>\n%30 = instanceinvoke %29.<@%unk/%unk: .createTable()>(%28, %AM8$%AM0)\n%31 = await %30\n%32 = MetaTable.<@%unk/%unk: .COL_FORMULA>\n%33 = knex.<@%unk/%unk: .schema>\n%34 = instanceinvoke %33.<@%unk/%unk: .createTable()>(%32, %AM9$%AM0)\n%35 = await %34\n%36 = MetaTable.<@%unk/%unk: .VIEWS>\n%37 = knex.<@%unk/%unk: .schema>\n%38 = instanceinvoke %37.<@%unk/%unk: .createTable()>(%36, %AM10$%AM0)\n%39 = await %38\n%40 = MetaTable.<@%unk/%unk: .HOOKS>\n%41 = knex.<@%unk/%unk: .schema>\n%42 = instanceinvoke %41.<@%unk/%unk: .createTable()>(%40, %AM11$%AM0)\n%43 = await %42\n%44 = MetaTable.<@%unk/%unk: .HOOK_LOGS>\n%45 = knex.<@%unk/%unk: .schema>\n%46 = instanceinvoke %45.<@%unk/%unk: .createTable()>(%44, %AM12$%AM0)\n%47 = await %46\n%48 = MetaTable.<@%unk/%unk: .FILTER_EXP>\n%49 = knex.<@%unk/%unk: .schema>\n%50 = instanceinvoke %49.<@%unk/%unk: .createTable()>(%48, %AM13$%AM0)\n%51 = await %50\n%52 = MetaTable.<@%unk/%unk: .SORT>\n%53 = knex.<@%unk/%unk: .schema>\n%54 = instanceinvoke %53.<@%unk/%unk: .createTable()>(%52, %AM14$%AM0)\n%55 = await %54\n%56 = MetaTable.<@%unk/%unk: .SHARED_VIEWS>\n%57 = knex.<@%unk/%unk: .schema>\n%58 = instanceinvoke %57.<@%unk/%unk: .createTable()>(%56, %AM15$%AM0)\n%59 = await %58\n%60 = MetaTable.<@%unk/%unk: .FORM_VIEW>\n%61 = knex.<@%unk/%unk: .schema>\n%62 = instanceinvoke %61.<@%unk/%unk: .createTable()>(%60, %AM16$%AM0)\n%63 = await %62\n%64 = MetaTable.<@%unk/%unk: .FORM_VIEW_COLUMNS>\n%65 = knex.<@%unk/%unk: .schema>\n%66 = instanceinvoke %65.<@%unk/%unk: .createTable()>(%64, %AM17$%AM0)\n%67 = await %66\n%68 = MetaTable.<@%unk/%unk: .GALLERY_VIEW>\n%69 = knex.<@%unk/%unk: .schema>\n%70 = instanceinvoke %69.<@%unk/%unk: .createTable()>(%68, %AM18$%AM0)\n%71 = await %70\n%72 = MetaTable.<@%unk/%unk: .GALLERY_VIEW_COLUMNS>\n%73 = knex.<@%unk/%unk: .schema>\n%74 = instanceinvoke %73.<@%unk/%unk: .createTable()>(%72, %AM19$%AM0)\n%75 = await %74\n%76 = MetaTable.<@%unk/%unk: .GRID_VIEW>\n%77 = knex.<@%unk/%unk: .schema>\n%78 = instanceinvoke %77.<@%unk/%unk: .createTable()>(%76, %AM20$%AM0)\n%79 = await %78\n%80 = MetaTable.<@%unk/%unk: .GRID_VIEW_COLUMNS>\n%81 = knex.<@%unk/%unk: .schema>\n%82 = instanceinvoke %81.<@%unk/%unk: .createTable()>(%80, %AM21$%AM0)\n%83 = await %82\n%84 = MetaTable.<@%unk/%unk: .KANBAN_VIEW>\n%85 = knex.<@%unk/%unk: .schema>\n%86 = instanceinvoke %85.<@%unk/%unk: .createTable()>(%84, %AM22$%AM0)\n%87 = await %86\n%88 = MetaTable.<@%unk/%unk: .KANBAN_VIEW_COLUMNS>\n%89 = knex.<@%unk/%unk: .schema>\n%90 = instanceinvoke %89.<@%unk/%unk: .createTable()>(%88, %AM23$%AM0)\n%91 = await %90\n%92 = MetaTable.<@%unk/%unk: .USERS>\n%93 = knex.<@%unk/%unk: .schema>\n%94 = instanceinvoke %93.<@%unk/%unk: .createTable()>(%92, %AM24$%AM0)\n%95 = await %94\n%96 = MetaTableOldV2.<@%unk/%unk: .PROJECT_USERS>\n%97 = knex.<@%unk/%unk: .schema>\n%98 = instanceinvoke %97.<@%unk/%unk: .createTable()>(%96, %AM25$%AM0)\n%99 = await %98\n%100 = MetaTable.<@%unk/%unk: .ORGS_OLD>\n%101 = knex.<@%unk/%unk: .schema>\n%102 = instanceinvoke %101.<@%unk/%unk: .createTable()>(%100, %AM26$%AM0)\n%103 = await %102\n%104 = MetaTable.<@%unk/%unk: .TEAMS>\n%105 = knex.<@%unk/%unk: .schema>\n%106 = instanceinvoke %105.<@%unk/%unk: .createTable()>(%104, %AM27$%AM0)\n%107 = await %106\n%108 = MetaTable.<@%unk/%unk: .TEAM_USERS>\n%109 = knex.<@%unk/%unk: .schema>\n%110 = instanceinvoke %109.<@%unk/%unk: .createTable()>(%108, %AM28$%AM0)\n%111 = await %110\n%112 = MetaTable.<@%unk/%unk: .AUDIT>\n%113 = knex.<@%unk/%unk: .schema>\n%114 = instanceinvoke %113.<@%unk/%unk: .createTable()>(%112, %AM29$%AM0)\n%115 = await %114\n%116 = MetaTable.<@%unk/%unk: .PLUGIN>\n%117 = knex.<@%unk/%unk: .schema>\n%118 = instanceinvoke %117.<@%unk/%unk: .createTable()>(%116, %AM30$%AM0)\n%119 = await %118\n%120 = MetaTable.<@%unk/%unk: .MODEL_ROLE_VISIBILITY>\n%121 = knex.<@%unk/%unk: .schema>\n%122 = instanceinvoke %121.<@%unk/%unk: .createTable()>(%120, %AM31$%AM0)\n%123 = await %122\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "async (knex) => {\n  await knex.schema.createTable(MetaTableOldV2.PROJECT, (table) => {\n    table.string('id', 128).primary();\n    table.string('title');\n    table.string('prefix');\n    table.string('status');\n    table.text('description');\n    table.text('meta');\n    table.string('color');\n    table.string('uuid');\n    table.string('password');\n    table.string('roles');\n    table.boolean('deleted').defaultTo(false);\n    table.boolean('is_meta');\n    table.float('order');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTableOldV2.BASES, (table) => {\n    table.string('id', 20).primary().notNullable();\n    // todo: foreign key\n    // table.string('project_id', 128);\n    table.string('project_id', 128);\n    table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('alias');\n    table.text('config');\n    table.text('meta');\n    table.boolean('is_meta');\n    table.string('type');\n    table.string('inflection_column');\n    table.string('inflection_table');\n    // todo: type\n    // table.text('ssl');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.MODELS, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('base_id', 20);\n    table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('table_name');\n    table.string('title');\n    table.string('type').defaultTo('table');\n    table.text('meta', 'mediumtext');\n    table.text('schema', 'text');\n    table.boolean('enabled').defaultTo(true);\n    table.boolean('mm').defaultTo(false);\n    table.string('tags');\n    table.boolean('pinned');\n    table.boolean('deleted');\n    table.float('order');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.COLUMNS, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_model_id', 20);\n    table.foreign('fk_model_id').references(`${MetaTable.MODELS}.id`);\n    table.string('title');\n    table.string('column_name');\n    // todo: decide type\n    table.string('uidt');\n    table.string('dt');\n    table.string('np');\n    table.string('ns');\n    table.string('clen');\n    table.string('cop');\n    table.boolean('pk');\n    table.boolean('pv');\n    table.boolean('rqd');\n    table.boolean('un');\n    table.string('ct');\n    table.boolean('ai');\n    table.boolean('unique');\n    table.string('cdf');\n    table.string('cc');\n    table.string('csn');\n    table.string('dtx');\n    table.string('dtxp');\n    table.string('dtxs');\n    table.boolean('au');\n    // todo: normalise\n    table.text('validate');\n    //todo: virtual, real, etc\n    table.boolean('virtual');\n    table.boolean('deleted');\n    table.boolean('system').defaultTo(false);\n    table.float('order');\n    table.timestamps(true, true);\n  });\n  // await knex.schema.createTable(MetaTable.COLUMN_VALIDATIONS, table => {\n  //   table\n  //     .string('id', 20)\n  //     .primary()\n  //     .notNullable();\n  // })\n  await knex.schema.createTable(MetaTable.COL_RELATIONS, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('ref_db_alias');\n    table.string('type');\n    table.boolean('virtual');\n    table.string('db_type');\n    table.string('fk_column_id', 20);\n    table.foreign('fk_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('fk_related_model_id', 20);\n    table.foreign('fk_related_model_id').references(`${MetaTable.MODELS}.id`);\n    // fk_rel_column_id\n    // fk_rel_ref_column_id\n    table.string('fk_child_column_id', 20);\n    table.foreign('fk_child_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('fk_parent_column_id', 20);\n    table.foreign('fk_parent_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('fk_mm_model_id', 20);\n    table.foreign('fk_mm_model_id').references(`${MetaTable.MODELS}.id`);\n    table.string('fk_mm_child_column_id', 20);\n    table\n      .foreign('fk_mm_child_column_id')\n      .references(`${MetaTable.COLUMNS}.id`);\n    table.string('fk_mm_parent_column_id', 20);\n    table\n      .foreign('fk_mm_parent_column_id')\n      .references(`${MetaTable.COLUMNS}.id`);\n    table.string('ur');\n    table.string('dr');\n    table.string('fk_index_name');\n    table.boolean('deleted');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.COL_SELECT_OPTIONS, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('fk_column_id', 20);\n    table.foreign('fk_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('title');\n    table.string('color');\n    table.float('order');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.COL_LOOKUP, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('fk_column_id', 20);\n    table.foreign('fk_column_id').references(`${MetaTable.COLUMNS}.id`);\n    // todo: refer relation column\n    // table.string('fk_child_column_id',20);\n    // table.foreign('fk_child_column_id').references(`${MetaTable.COLUMNS}.id`);\n    // table.string('fk_parent_column_id',20);\n    // table.foreign('fk_parent_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('fk_relation_column_id', 20);\n    table\n      .foreign('fk_relation_column_id')\n      .references(`${MetaTable.COLUMNS}.id`);\n    table.string('fk_lookup_column_id', 20);\n    table.foreign('fk_lookup_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.boolean('deleted');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.COL_ROLLUP, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('fk_column_id', 20);\n    table.foreign('fk_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('fk_relation_column_id', 20);\n    table\n      .foreign('fk_relation_column_id')\n      .references(`${MetaTable.COLUMNS}.id`);\n    table.string('fk_rollup_column_id', 20);\n    table.foreign('fk_rollup_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('rollup_function');\n    table.boolean('deleted');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.COL_FORMULA, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('fk_column_id', 20);\n    table.foreign('fk_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.text('formula').notNullable();\n    table.text('formula_raw');\n    table.text('error');\n    table.boolean('deleted');\n    table.float('order');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.VIEWS, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_model_id', 20);\n    table.foreign('fk_model_id').references(`${MetaTable.MODELS}.id`);\n    table.string('title');\n    table.integer('type');\n    table.boolean('is_default');\n    table.boolean('show_system_fields');\n    table.string('lock_type').defaultTo('collaborative');\n    table.string('uuid');\n    table.string('password');\n    // todo:  type\n    table.boolean('show');\n    table.float('order');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.HOOKS, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_model_id', 20);\n    table.foreign('fk_model_id').references(`${MetaTable.MODELS}.id`);\n    table.string('title');\n    table.string('description', 255);\n    table.string('env').defaultTo('all');\n    table.string('type');\n    table.string('event');\n    table.string('operation');\n    table.boolean('async').defaultTo(false);\n    table.boolean('payload').defaultTo(true);\n    table.text('url', 'text');\n    table.text('headers', 'text');\n    // todo: normalise\n    table.boolean('condition').defaultTo(false);\n    table.text('notification', 'text');\n    table.integer('retries').defaultTo(0);\n    table.integer('retry_interval').defaultTo(60000);\n    table.integer('timeout').defaultTo(60000);\n    table.boolean('active').defaultTo(true);\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.HOOK_LOGS, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_hook_id', 20);\n    // table.foreign('fk_hook_id').references(`${MetaTable.HOOKS}.id`);\n    table.string('type');\n    table.string('event');\n    table.string('operation');\n    table.boolean('test_call').defaultTo(true);\n    table.boolean('payload').defaultTo(true);\n    table.text('conditions');\n    table.text('notification', 'text');\n    table.string('error_code');\n    table.string('error_message');\n    table.text('error', 'text');\n    table.integer('execution_time');\n    table.string('response');\n    table.string('triggered_by');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.FILTER_EXP, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_view_id', 20);\n    table.foreign('fk_view_id').references(`${MetaTable.VIEWS}.id`);\n    table.string('fk_hook_id', 20);\n    table.foreign('fk_hook_id').references(`${MetaTable.HOOKS}.id`);\n    table.string('fk_column_id', 20);\n    table.foreign('fk_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('fk_parent_id', 20);\n    table.foreign('fk_parent_id').references(`${MetaTable.FILTER_EXP}.id`);\n    table.string('logical_op');\n    table.string('comparison_op');\n    table.string('value');\n    table.boolean('is_group');\n    table.float('order');\n    table.timestamps(true, true);\n  });\n  // await knex.schema.createTable(MetaTable.HOOK_FILTER_EXP, table => {\n  //   table\n  //     .string('id', 20)\n  //     .primary()\n  //     .notNullable();\n  //\n  //   table.string('base_id', 20);\n  //   // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n  //   table.string('project_id', 128);\n  //   // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n  //\n  //   table.string('fk_hook_id', 20);\n  //   table.foreign('fk_hook_id').references(`${MetaTable.HOOKS}.id`);\n  //   table.string('fk_column_id', 20);\n  //   table.foreign('fk_column_id').references(`${MetaTable.COLUMNS}.id`);\n  //\n  //   table.string('fk_parent_id', 20);\n  //   table.foreign('fk_parent_id').references(`${MetaTable.HOOK_FILTER_EXP}.id`);\n  //\n  //   table.string('logical_op');\n  //   table.string('comparison_op');\n  //   table.string('value');\n  //   table.boolean('is_group');\n  //\n  //   table.float('order');\n  //   table.timestamps(true, true);\n  // });\n  await knex.schema.createTable(MetaTable.SORT, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_view_id', 20);\n    table.foreign('fk_view_id').references(`${MetaTable.VIEWS}.id`);\n    table.string('fk_column_id', 20);\n    table.foreign('fk_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('direction').defaultTo(false);\n    table.float('order');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.SHARED_VIEWS, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('fk_view_id', 20);\n    table.foreign('fk_view_id').references(`${MetaTable.VIEWS}.id`);\n    table.text('meta', 'mediumtext');\n    // todo:\n    table.text('query_params', 'mediumtext');\n    table.string('view_id');\n    table.boolean('show_all_fields');\n    table.boolean('allow_copy');\n    table.string('password');\n    table.boolean('deleted');\n    table.float('order');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.FORM_VIEW, (table) => {\n    // table\n    //   .string('id', 20)\n    //   .primary()\n    //   .notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_view_id', 20).primary();\n    table.foreign('fk_view_id').references(`${MetaTable.VIEWS}.id`);\n    table.string('heading');\n    table.string('subheading');\n    table.string('success_msg');\n    table.string('redirect_url');\n    table.string('redirect_after_secs');\n    table.string('email');\n    table.boolean('submit_another_form');\n    table.boolean('show_blank_form');\n    table.string('uuid');\n    table.string('banner_image_url');\n    table.string('logo_url');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.FORM_VIEW_COLUMNS, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_view_id', 20);\n    table.foreign('fk_view_id').references(`${MetaTable.FORM_VIEW}.fk_view_id`);\n    table.string('fk_column_id', 20);\n    table.foreign('fk_column_id').references(`${MetaTable.COLUMNS}.id`);\n    // todo: type\n    table.string('uuid');\n    table.string('label');\n    table.string('help');\n    table.string('description');\n    table.boolean('required');\n    table.boolean('show');\n    table.float('order');\n    // todo : condition\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.GALLERY_VIEW, (table) => {\n    // table\n    //   .string('id', 20)\n    //   .primary()\n    //   .notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_view_id', 20).primary();\n    table.foreign('fk_view_id').references(`${MetaTable.VIEWS}.id`);\n    // todo:  type\n    table.boolean('next_enabled');\n    table.boolean('prev_enabled');\n    table.integer('cover_image_idx');\n    table.string('fk_cover_image_col_id', 20);\n    table\n      .foreign('fk_cover_image_col_id')\n      .references(`${MetaTable.COLUMNS}.id`);\n    table.string('cover_image');\n    table.string('restrict_types');\n    table.string('restrict_size');\n    table.string('restrict_number');\n    table.boolean('public');\n    table.string('dimensions');\n    table.string('responsive_columns');\n    // todo : condition\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.GALLERY_VIEW_COLUMNS, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_view_id', 20);\n    table\n      .foreign('fk_view_id')\n      .references(`${MetaTable.GALLERY_VIEW}.fk_view_id`);\n    table.string('fk_column_id', 20);\n    table.foreign('fk_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('uuid');\n    // todo:  type\n    table.string('label');\n    table.string('help');\n    table.boolean('show');\n    table.float('order');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.GRID_VIEW, (table) => {\n    table.string('fk_view_id', 20).primary();\n    table.foreign('fk_view_id').references(`${MetaTable.VIEWS}.id`);\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('uuid');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.GRID_VIEW_COLUMNS, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('fk_view_id', 20);\n    table.foreign('fk_view_id').references(`${MetaTable.GRID_VIEW}.fk_view_id`);\n    table.string('fk_column_id', 20);\n    table.foreign('fk_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('uuid');\n    // todo:  type\n    table.string('label');\n    table.string('help');\n    table.string('width').defaultTo('200px');\n    table.boolean('show');\n    table.float('order');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.KANBAN_VIEW, (table) => {\n    table.string('fk_view_id', 20).primary();\n    table.foreign('fk_view_id').references(`${MetaTable.VIEWS}.id`);\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.boolean('show');\n    table.float('order');\n    table.string('uuid');\n    table.string('title');\n    // todo:  type\n    table.boolean('public');\n    table.string('password');\n    table.boolean('show_all_fields');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.KANBAN_VIEW_COLUMNS, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_view_id', 20);\n    table\n      .foreign('fk_view_id')\n      .references(`${MetaTable.KANBAN_VIEW}.fk_view_id`);\n    table.string('fk_column_id', 20);\n    table.foreign('fk_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('uuid');\n    // todo:  type\n    table.string('label');\n    table.string('help');\n    table.boolean('show');\n    table.float('order');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.USERS, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('email');\n    table.string('password', 255);\n    table.string('salt', 255);\n    table.string('firstname');\n    table.string('lastname');\n    table.string('username');\n    table.string('refresh_token', 255);\n    table.string('invite_token', 255);\n    table.string('invite_token_expires', 255);\n    table.timestamp('reset_password_expires');\n    table.string('reset_password_token', 255);\n    table.string('email_verification_token', 255);\n    table.boolean('email_verified');\n    table.string('roles', 255).defaultTo('editor');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTableOldV2.PROJECT_USERS, (table) => {\n    table.string('project_id', 128);\n    table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_user_id', 20);\n    table.foreign('fk_user_id').references(`${MetaTable.USERS}.id`);\n    table.text('roles');\n    table.boolean('starred');\n    table.boolean('pinned');\n    table.string('group');\n    table.string('color');\n    table.float('order');\n    table.float('hidden');\n    table.timestamp('opened_date');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.ORGS_OLD, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('title');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.TEAMS, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('title');\n    table.string('org_id', 20);\n    table.foreign('org_id').references(`${MetaTable.ORGS_OLD}.id`);\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.TEAM_USERS, (table) => {\n    table.string('org_id', 20);\n    table.foreign('org_id').references(`${MetaTable.ORGS_OLD}.id`);\n    table.string('user_id', 20);\n    table.foreign('user_id').references(`${MetaTable.USERS}.id`);\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.AUDIT, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('user');\n    table.string('ip');\n    table.string('base_id', 20);\n    table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_model_id', 20);\n    table.foreign('fk_model_id').references(`${MetaTable.MODELS}.id`);\n    table.string('row_id').index();\n    table.string('op_type');\n    table.string('op_sub_type');\n    table.string('status');\n    table.text('description');\n    table.text('details');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.PLUGIN, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('title', 45);\n    table.text('description');\n    table.boolean('active').defaultTo(false);\n    table.float('rating');\n    table.string('version');\n    table.string('docs');\n    table.string('status').defaultTo('install');\n    table.string('status_details');\n    table.string('logo');\n    table.string('icon');\n    table.string('tags');\n    table.string('category');\n    table.text('input_schema');\n    table.text('input');\n    table.string('creator');\n    table.string('creator_website');\n    table.string('price');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.MODEL_ROLE_VISIBILITY, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    // table.string('fk_model_id', 20);\n    // table.foreign('fk_model_id').references(`${MetaTable.MODELS}.id`);\n    table.string('fk_view_id', 20);\n    table.foreign('fk_view_id').references(`${MetaTable.VIEWS}.id`);\n    table.string('role', 45);\n    table.boolean('disabled').defaultTo(true);\n    table.timestamps(true, true);\n  });\n  // await knex('nc_plugins').insert([\n  //   googleAuth,\n  //   ses,\n  //   cache\n  //   // ee,\n  //   // brand,\n  // ]);\n}"
        },
        {
          "type": "function",
          "name": "%AM32",
          "label": "%AM32",
          "start_line": 1,
          "end_line": 605,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "knex = parameter0: unknown\nthis = this: @ts_files/154.ts: %dflt\n%0 = instanceinvoke orderedMetaTables.<@%unk/%unk: .iterator()>()",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%1 = instanceinvoke %0.<@%unk/%unk: .next()>()\n%2 = %1.<@ES2015/BuiltinClass: IteratorResult.done>\nif %2 == true",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "%3 = %1.<@ES2015/BuiltinClass: IteratorResult.value>\ntableName = <string>%3\n%4 = knex.<@%unk/%unk: .schema>\n%5 = instanceinvoke %4.<@%unk/%unk: .dropTable()>(tableName)\n%6 = await %5",
                      "start_line": 1,
                      "end_line": 1,
                      "successors": [
                        {
                          "type": "blockRef",
                          "label": "(RepeatedBlock)"
                        }
                      ]
                    },
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "return",
                      "start_line": 1,
                      "end_line": 1,
                      "successors": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "async (knex) => {\n  for (const tableName of orderedMetaTables) {\n    await knex.schema.dropTable(tableName);\n  }\n}"
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": ""
    }
  ],
  "functions": [],
  "blocks": [],
  "simplified_code": "import { MetaTable, MetaTableOldV2, orderedMetaTables } from '~/utils/globals';\nconst up = async (knex) => {\n  await knex.schema.createTable(MetaTableOldV2.PROJECT, (table) => {\n    table.string('id', 128).primary();\n    table.string('title');\n    table.string('prefix');\n    table.string('status');\n    table.text('description');\n    table.text('meta');\n    table.string('color');\n    table.string('uuid');\n    table.string('password');\n    table.string('roles');\n    table.boolean('deleted').defaultTo(false);\n    table.boolean('is_meta');\n    table.float('order');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTableOldV2.BASES, (table) => {\n    table.string('id', 20).primary().notNullable();\n    // todo: foreign key\n    // table.string('project_id', 128);\n    table.string('project_id', 128);\n    table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('alias');\n    table.text('config');\n    table.text('meta');\n    table.boolean('is_meta');\n    table.string('type');\n    table.string('inflection_column');\n    table.string('inflection_table');\n    // todo: type\n    // table.text('ssl');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.MODELS, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('base_id', 20);\n    table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('table_name');\n    table.string('title');\n    table.string('type').defaultTo('table');\n    table.text('meta', 'mediumtext');\n    table.text('schema', 'text');\n    table.boolean('enabled').defaultTo(true);\n    table.boolean('mm').defaultTo(false);\n    table.string('tags');\n    table.boolean('pinned');\n    table.boolean('deleted');\n    table.float('order');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.COLUMNS, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_model_id', 20);\n    table.foreign('fk_model_id').references(`${MetaTable.MODELS}.id`);\n    table.string('title');\n    table.string('column_name');\n    // todo: decide type\n    table.string('uidt');\n    table.string('dt');\n    table.string('np');\n    table.string('ns');\n    table.string('clen');\n    table.string('cop');\n    table.boolean('pk');\n    table.boolean('pv');\n    table.boolean('rqd');\n    table.boolean('un');\n    table.string('ct');\n    table.boolean('ai');\n    table.boolean('unique');\n    table.string('cdf');\n    table.string('cc');\n    table.string('csn');\n    table.string('dtx');\n    table.string('dtxp');\n    table.string('dtxs');\n    table.boolean('au');\n    // todo: normalise\n    table.text('validate');\n    //todo: virtual, real, etc\n    table.boolean('virtual');\n    table.boolean('deleted');\n    table.boolean('system').defaultTo(false);\n    table.float('order');\n    table.timestamps(true, true);\n  });\n  // await knex.schema.createTable(MetaTable.COLUMN_VALIDATIONS, table => {\n  //   table\n  //     .string('id', 20)\n  //     .primary()\n  //     .notNullable();\n  // })\n  await knex.schema.createTable(MetaTable.COL_RELATIONS, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('ref_db_alias');\n    table.string('type');\n    table.boolean('virtual');\n    table.string('db_type');\n    table.string('fk_column_id', 20);\n    table.foreign('fk_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('fk_related_model_id', 20);\n    table.foreign('fk_related_model_id').references(`${MetaTable.MODELS}.id`);\n    // fk_rel_column_id\n    // fk_rel_ref_column_id\n    table.string('fk_child_column_id', 20);\n    table.foreign('fk_child_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('fk_parent_column_id', 20);\n    table.foreign('fk_parent_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('fk_mm_model_id', 20);\n    table.foreign('fk_mm_model_id').references(`${MetaTable.MODELS}.id`);\n    table.string('fk_mm_child_column_id', 20);\n    table\n      .foreign('fk_mm_child_column_id')\n      .references(`${MetaTable.COLUMNS}.id`);\n    table.string('fk_mm_parent_column_id', 20);\n    table\n      .foreign('fk_mm_parent_column_id')\n      .references(`${MetaTable.COLUMNS}.id`);\n    table.string('ur');\n    table.string('dr');\n    table.string('fk_index_name');\n    table.boolean('deleted');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.COL_SELECT_OPTIONS, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('fk_column_id', 20);\n    table.foreign('fk_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('title');\n    table.string('color');\n    table.float('order');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.COL_LOOKUP, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('fk_column_id', 20);\n    table.foreign('fk_column_id').references(`${MetaTable.COLUMNS}.id`);\n    // todo: refer relation column\n    // table.string('fk_child_column_id',20);\n    // table.foreign('fk_child_column_id').references(`${MetaTable.COLUMNS}.id`);\n    // table.string('fk_parent_column_id',20);\n    // table.foreign('fk_parent_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('fk_relation_column_id', 20);\n    table\n      .foreign('fk_relation_column_id')\n      .references(`${MetaTable.COLUMNS}.id`);\n    table.string('fk_lookup_column_id', 20);\n    table.foreign('fk_lookup_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.boolean('deleted');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.COL_ROLLUP, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('fk_column_id', 20);\n    table.foreign('fk_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('fk_relation_column_id', 20);\n    table\n      .foreign('fk_relation_column_id')\n      .references(`${MetaTable.COLUMNS}.id`);\n    table.string('fk_rollup_column_id', 20);\n    table.foreign('fk_rollup_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('rollup_function');\n    table.boolean('deleted');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.COL_FORMULA, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('fk_column_id', 20);\n    table.foreign('fk_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.text('formula').notNullable();\n    table.text('formula_raw');\n    table.text('error');\n    table.boolean('deleted');\n    table.float('order');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.VIEWS, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_model_id', 20);\n    table.foreign('fk_model_id').references(`${MetaTable.MODELS}.id`);\n    table.string('title');\n    table.integer('type');\n    table.boolean('is_default');\n    table.boolean('show_system_fields');\n    table.string('lock_type').defaultTo('collaborative');\n    table.string('uuid');\n    table.string('password');\n    // todo:  type\n    table.boolean('show');\n    table.float('order');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.HOOKS, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_model_id', 20);\n    table.foreign('fk_model_id').references(`${MetaTable.MODELS}.id`);\n    table.string('title');\n    table.string('description', 255);\n    table.string('env').defaultTo('all');\n    table.string('type');\n    table.string('event');\n    table.string('operation');\n    table.boolean('async').defaultTo(false);\n    table.boolean('payload').defaultTo(true);\n    table.text('url', 'text');\n    table.text('headers', 'text');\n    // todo: normalise\n    table.boolean('condition').defaultTo(false);\n    table.text('notification', 'text');\n    table.integer('retries').defaultTo(0);\n    table.integer('retry_interval').defaultTo(60000);\n    table.integer('timeout').defaultTo(60000);\n    table.boolean('active').defaultTo(true);\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.HOOK_LOGS, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_hook_id', 20);\n    // table.foreign('fk_hook_id').references(`${MetaTable.HOOKS}.id`);\n    table.string('type');\n    table.string('event');\n    table.string('operation');\n    table.boolean('test_call').defaultTo(true);\n    table.boolean('payload').defaultTo(true);\n    table.text('conditions');\n    table.text('notification', 'text');\n    table.string('error_code');\n    table.string('error_message');\n    table.text('error', 'text');\n    table.integer('execution_time');\n    table.string('response');\n    table.string('triggered_by');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.FILTER_EXP, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_view_id', 20);\n    table.foreign('fk_view_id').references(`${MetaTable.VIEWS}.id`);\n    table.string('fk_hook_id', 20);\n    table.foreign('fk_hook_id').references(`${MetaTable.HOOKS}.id`);\n    table.string('fk_column_id', 20);\n    table.foreign('fk_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('fk_parent_id', 20);\n    table.foreign('fk_parent_id').references(`${MetaTable.FILTER_EXP}.id`);\n    table.string('logical_op');\n    table.string('comparison_op');\n    table.string('value');\n    table.boolean('is_group');\n    table.float('order');\n    table.timestamps(true, true);\n  });\n  // await knex.schema.createTable(MetaTable.HOOK_FILTER_EXP, table => {\n  //   table\n  //     .string('id', 20)\n  //     .primary()\n  //     .notNullable();\n  //\n  //   table.string('base_id', 20);\n  //   // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n  //   table.string('project_id', 128);\n  //   // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n  //\n  //   table.string('fk_hook_id', 20);\n  //   table.foreign('fk_hook_id').references(`${MetaTable.HOOKS}.id`);\n  //   table.string('fk_column_id', 20);\n  //   table.foreign('fk_column_id').references(`${MetaTable.COLUMNS}.id`);\n  //\n  //   table.string('fk_parent_id', 20);\n  //   table.foreign('fk_parent_id').references(`${MetaTable.HOOK_FILTER_EXP}.id`);\n  //\n  //   table.string('logical_op');\n  //   table.string('comparison_op');\n  //   table.string('value');\n  //   table.boolean('is_group');\n  //\n  //   table.float('order');\n  //   table.timestamps(true, true);\n  // });\n  await knex.schema.createTable(MetaTable.SORT, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_view_id', 20);\n    table.foreign('fk_view_id').references(`${MetaTable.VIEWS}.id`);\n    table.string('fk_column_id', 20);\n    table.foreign('fk_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('direction').defaultTo(false);\n    table.float('order');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.SHARED_VIEWS, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('fk_view_id', 20);\n    table.foreign('fk_view_id').references(`${MetaTable.VIEWS}.id`);\n    table.text('meta', 'mediumtext');\n    // todo:\n    table.text('query_params', 'mediumtext');\n    table.string('view_id');\n    table.boolean('show_all_fields');\n    table.boolean('allow_copy');\n    table.string('password');\n    table.boolean('deleted');\n    table.float('order');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.FORM_VIEW, (table) => {\n    // table\n    //   .string('id', 20)\n    //   .primary()\n    //   .notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_view_id', 20).primary();\n    table.foreign('fk_view_id').references(`${MetaTable.VIEWS}.id`);\n    table.string('heading');\n    table.string('subheading');\n    table.string('success_msg');\n    table.string('redirect_url');\n    table.string('redirect_after_secs');\n    table.string('email');\n    table.boolean('submit_another_form');\n    table.boolean('show_blank_form');\n    table.string('uuid');\n    table.string('banner_image_url');\n    table.string('logo_url');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.FORM_VIEW_COLUMNS, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_view_id', 20);\n    table.foreign('fk_view_id').references(`${MetaTable.FORM_VIEW}.fk_view_id`);\n    table.string('fk_column_id', 20);\n    table.foreign('fk_column_id').references(`${MetaTable.COLUMNS}.id`);\n    // todo: type\n    table.string('uuid');\n    table.string('label');\n    table.string('help');\n    table.string('description');\n    table.boolean('required');\n    table.boolean('show');\n    table.float('order');\n    // todo : condition\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.GALLERY_VIEW, (table) => {\n    // table\n    //   .string('id', 20)\n    //   .primary()\n    //   .notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_view_id', 20).primary();\n    table.foreign('fk_view_id').references(`${MetaTable.VIEWS}.id`);\n    // todo:  type\n    table.boolean('next_enabled');\n    table.boolean('prev_enabled');\n    table.integer('cover_image_idx');\n    table.string('fk_cover_image_col_id', 20);\n    table\n      .foreign('fk_cover_image_col_id')\n      .references(`${MetaTable.COLUMNS}.id`);\n    table.string('cover_image');\n    table.string('restrict_types');\n    table.string('restrict_size');\n    table.string('restrict_number');\n    table.boolean('public');\n    table.string('dimensions');\n    table.string('responsive_columns');\n    // todo : condition\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.GALLERY_VIEW_COLUMNS, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_view_id', 20);\n    table\n      .foreign('fk_view_id')\n      .references(`${MetaTable.GALLERY_VIEW}.fk_view_id`);\n    table.string('fk_column_id', 20);\n    table.foreign('fk_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('uuid');\n    // todo:  type\n    table.string('label');\n    table.string('help');\n    table.boolean('show');\n    table.float('order');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.GRID_VIEW, (table) => {\n    table.string('fk_view_id', 20).primary();\n    table.foreign('fk_view_id').references(`${MetaTable.VIEWS}.id`);\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('uuid');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.GRID_VIEW_COLUMNS, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('fk_view_id', 20);\n    table.foreign('fk_view_id').references(`${MetaTable.GRID_VIEW}.fk_view_id`);\n    table.string('fk_column_id', 20);\n    table.foreign('fk_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('uuid');\n    // todo:  type\n    table.string('label');\n    table.string('help');\n    table.string('width').defaultTo('200px');\n    table.boolean('show');\n    table.float('order');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.KANBAN_VIEW, (table) => {\n    table.string('fk_view_id', 20).primary();\n    table.foreign('fk_view_id').references(`${MetaTable.VIEWS}.id`);\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.boolean('show');\n    table.float('order');\n    table.string('uuid');\n    table.string('title');\n    // todo:  type\n    table.boolean('public');\n    table.string('password');\n    table.boolean('show_all_fields');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.KANBAN_VIEW_COLUMNS, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_view_id', 20);\n    table\n      .foreign('fk_view_id')\n      .references(`${MetaTable.KANBAN_VIEW}.fk_view_id`);\n    table.string('fk_column_id', 20);\n    table.foreign('fk_column_id').references(`${MetaTable.COLUMNS}.id`);\n    table.string('uuid');\n    // todo:  type\n    table.string('label');\n    table.string('help');\n    table.boolean('show');\n    table.float('order');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.USERS, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('email');\n    table.string('password', 255);\n    table.string('salt', 255);\n    table.string('firstname');\n    table.string('lastname');\n    table.string('username');\n    table.string('refresh_token', 255);\n    table.string('invite_token', 255);\n    table.string('invite_token_expires', 255);\n    table.timestamp('reset_password_expires');\n    table.string('reset_password_token', 255);\n    table.string('email_verification_token', 255);\n    table.boolean('email_verified');\n    table.string('roles', 255).defaultTo('editor');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTableOldV2.PROJECT_USERS, (table) => {\n    table.string('project_id', 128);\n    table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_user_id', 20);\n    table.foreign('fk_user_id').references(`${MetaTable.USERS}.id`);\n    table.text('roles');\n    table.boolean('starred');\n    table.boolean('pinned');\n    table.string('group');\n    table.string('color');\n    table.float('order');\n    table.float('hidden');\n    table.timestamp('opened_date');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.ORGS_OLD, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('title');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.TEAMS, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('title');\n    table.string('org_id', 20);\n    table.foreign('org_id').references(`${MetaTable.ORGS_OLD}.id`);\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.TEAM_USERS, (table) => {\n    table.string('org_id', 20);\n    table.foreign('org_id').references(`${MetaTable.ORGS_OLD}.id`);\n    table.string('user_id', 20);\n    table.foreign('user_id').references(`${MetaTable.USERS}.id`);\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.AUDIT, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('user');\n    table.string('ip');\n    table.string('base_id', 20);\n    table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    table.string('fk_model_id', 20);\n    table.foreign('fk_model_id').references(`${MetaTable.MODELS}.id`);\n    table.string('row_id').index();\n    table.string('op_type');\n    table.string('op_sub_type');\n    table.string('status');\n    table.text('description');\n    table.text('details');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.PLUGIN, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('title', 45);\n    table.text('description');\n    table.boolean('active').defaultTo(false);\n    table.float('rating');\n    table.string('version');\n    table.string('docs');\n    table.string('status').defaultTo('install');\n    table.string('status_details');\n    table.string('logo');\n    table.string('icon');\n    table.string('tags');\n    table.string('category');\n    table.text('input_schema');\n    table.text('input');\n    table.string('creator');\n    table.string('creator_website');\n    table.string('price');\n    table.timestamps(true, true);\n  });\n  await knex.schema.createTable(MetaTable.MODEL_ROLE_VISIBILITY, (table) => {\n    table.string('id', 20).primary().notNullable();\n    table.string('base_id', 20);\n    // table.foreign('base_id').references(`${MetaTableOldV2.BASES}.id`);\n    table.string('project_id', 128);\n    // table.foreign('project_id').references(`${MetaTableOldV2.PROJECT}.id`);\n    // table.string('fk_model_id', 20);\n    // table.foreign('fk_model_id').references(`${MetaTable.MODELS}.id`);\n    table.string('fk_view_id', 20);\n    table.foreign('fk_view_id').references(`${MetaTable.VIEWS}.id`);\n    table.string('role', 45);\n    table.boolean('disabled').defaultTo(true);\n    table.timestamps(true, true);\n  });\n  // await knex('nc_plugins').insert([\n  //   googleAuth,\n  //   ses,\n  //   cache\n  //   // ee,\n  //   // brand,\n  // ]);\n};\nconst down = async (knex) => {\n  for (const tableName of orderedMetaTables) {\n    await knex.schema.dropTable(tableName);\n  }\n};\nexport { up, down };"
}