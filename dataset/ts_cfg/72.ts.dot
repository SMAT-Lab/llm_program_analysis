digraph "72.ts" {
subgraph "cluster_@ts_files/72.ts: %dflt.[static]%dflt()" {
  label="@ts_files/72.ts: %dflt.[static]%dflt()";
  Node33250 [label="id:0
      this = this: @ts_files/72.ts: %dflt
      return"];
}
subgraph "cluster_@ts_files/72.ts: AlbumBarModel.createActionBar(boolean, number, boolean, boolean)" {
  label="@ts_files/72.ts: AlbumBarModel.createActionBar(boolean, number, boolean, boolean)";
  Node74340 [label="id:0
      isAlbumSetSelectedMode = parameter0: boolean
      selectedAlbumsCount = parameter1: number
      isDisableRename = parameter2: boolean
      isDisableDelete = parameter3: boolean
      this = this: @ts_files/72.ts: AlbumBarModel
      %0 = new @%unk/%unk: ActionBarProp
      instanceinvoke %0.<@%unk/%unk: ActionBarProp.constructor()>()
      actionBarProp = %0
      isHorizontal = instanceinvoke screenManager.<@%unk/%unk: .isHorizontal()>()
      if isHorizontal != 0"];
  Node74341 [label="id:1
      instanceinvoke this.<@ts_files/72.ts: AlbumBarModel.updateHorizontalActionBar(ActionBarProp, boolean, number, boolean, boolean)>(actionBarProp, isAlbumSetSelectedMode, selectedAlbumsCount, isDisableRename, isDisableDelete)"];
  Node74342 [label="id:2
      instanceinvoke this.<@ts_files/72.ts: AlbumBarModel.updateVerticalActionBar(ActionBarProp, boolean)>(actionBarProp, isAlbumSetSelectedMode)"];
  Node74343 [label="id:3
      return actionBarProp"];
  Node74340 -> Node74341;
  Node74340 -> Node74342;
  Node74341 -> Node74343;
  Node74342 -> Node74343;
}
subgraph "cluster_@ts_files/72.ts: AlbumBarModel.updateActionBar(ActionBarProp, boolean, number, boolean, boolean)" {
  label="@ts_files/72.ts: AlbumBarModel.updateActionBar(ActionBarProp, boolean, number, boolean, boolean)";
  Node88250 [label="id:0
      actionBarProp = parameter0: ActionBarProp
      isAlbumSetSelectedMode = parameter1: boolean
      selectedAlbumsCount = parameter2: number
      isDisableRename = parameter3: boolean
      isDisableDelete = parameter4: boolean
      this = this: @ts_files/72.ts: AlbumBarModel
      isHorizontal = instanceinvoke screenManager.<@%unk/%unk: .isHorizontal()>()
      if isHorizontal != 0"];
  Node88251 [label="id:1
      instanceinvoke this.<@ts_files/72.ts: AlbumBarModel.updateHorizontalActionBar(ActionBarProp, boolean, number, boolean, boolean)>(actionBarProp, isAlbumSetSelectedMode, selectedAlbumsCount, isDisableRename, isDisableDelete)"];
  Node88252 [label="id:2
      instanceinvoke this.<@ts_files/72.ts: AlbumBarModel.updateVerticalActionBar(ActionBarProp, boolean)>(actionBarProp, isAlbumSetSelectedMode)"];
  Node88253 [label="id:3
      return"];
  Node88250 -> Node88251;
  Node88250 -> Node88252;
  Node88251 -> Node88253;
  Node88252 -> Node88253;
}
subgraph "cluster_@ts_files/72.ts: AlbumBarModel.updateHorizontalActionBar(ActionBarProp, boolean, number, boolean, boolean)" {
  label="@ts_files/72.ts: AlbumBarModel.updateHorizontalActionBar(ActionBarProp, boolean, number, boolean, boolean)";
  Node98910 [label="id:0
      actionBarProp = parameter0: ActionBarProp
      isAlbumSetSelectedMode = parameter1: boolean
      selectedAlbumsCount = parameter2: number
      isDisableRename = parameter3: boolean
      isDisableDelete = parameter4: boolean
      this = this: @ts_files/72.ts: AlbumBarModel
      isSidebar = instanceinvoke screenManager.<@%unk/%unk: .isSidebar()>()
      %0 = staticinvoke <@%unk/%unk: .$r()>('app.string.tab_albums')
      %1 = instanceinvoke actionBarProp.<@%unk/%unk: .setHasTabBar()>(isSidebar)
      %2 = instanceinvoke %1.<@%unk/%unk: .setTitle()>(%0)
      instanceinvoke %2.<@%unk/%unk: .setIsHeadTitle()>(true)
      menuList = instanceinvoke this.<@ts_files/72.ts: AlbumBarModel.getMenuList(boolean, number, boolean, boolean)>(isAlbumSetSelectedMode, selectedAlbumsCount, isDisableRename, isDisableDelete)
      if isAlbumSetSelectedMode != false"];
  Node98911 [label="id:1
      %3 = ActionBarSelectionMode.<@%unk/%unk: .MULTI>
      %4 = ActionBarMode.<@%unk/%unk: .SELECTION_MODE>
      %5 = Action.<@%unk/%unk: .CANCEL>
      %6 = instanceinvoke actionBarProp.<@%unk/%unk: .setLeftAction()>(%5)
      %7 = instanceinvoke %6.<@%unk/%unk: .setMenuList()>(menuList)
      %8 = instanceinvoke %7.<@%unk/%unk: .setMode()>(%4)
      instanceinvoke %8.<@%unk/%unk: .setSelectionMode()>(%3)"];
  Node98912 [label="id:2
      %9 = Action.<@%unk/%unk: .NEW>
      instanceinvoke menuList.<@%unk/%unk: .push()>(%9)
      %10 = ActionBarMode.<@%unk/%unk: .STANDARD_MODE>
      %11 = instanceinvoke actionBarProp.<@%unk/%unk: .setMenuList()>(menuList)
      instanceinvoke %11.<@%unk/%unk: .setMode()>(%10)"];
  Node98913 [label="id:3
      return actionBarProp"];
  Node98910 -> Node98911;
  Node98910 -> Node98912;
  Node98911 -> Node98913;
  Node98912 -> Node98913;
}
subgraph "cluster_@ts_files/72.ts: AlbumBarModel.updateVerticalActionBar(ActionBarProp, boolean)" {
  label="@ts_files/72.ts: AlbumBarModel.updateVerticalActionBar(ActionBarProp, boolean)";
  Node73020 [label="id:0
      actionBarProp = parameter0: ActionBarProp
      isAlbumSetSelectedMode = parameter1: boolean
      this = this: @ts_files/72.ts: AlbumBarModel
      %0 = newarray (any)[0]
      menuList = %0
      %1 = Action.<@%unk/%unk: .NEW>
      instanceinvoke menuList.<@%unk/%unk: .push()>(%1)
      isSidebar = instanceinvoke screenManager.<@%unk/%unk: .isSidebar()>()
      %2 = staticinvoke <@%unk/%unk: .$r()>('app.string.tab_albums')
      %3 = instanceinvoke actionBarProp.<@%unk/%unk: .setHasTabBar()>(isSidebar)
      %4 = instanceinvoke %3.<@%unk/%unk: .setTitle()>(%2)
      instanceinvoke %4.<@%unk/%unk: .setIsHeadTitle()>(true)
      if isAlbumSetSelectedMode != false"];
  Node73021 [label="id:1
      %5 = ActionBarSelectionMode.<@%unk/%unk: .MULTI>
      %6 = ActionBarMode.<@%unk/%unk: .SELECTION_MODE>
      %7 = Action.<@%unk/%unk: .CANCEL>
      %8 = instanceinvoke actionBarProp.<@%unk/%unk: .setLeftAction()>(%7)
      %9 = instanceinvoke %8.<@%unk/%unk: .setMode()>(%6)
      instanceinvoke %9.<@%unk/%unk: .setSelectionMode()>(%5)"];
  Node73022 [label="id:2
      %10 = ActionBarMode.<@%unk/%unk: .STANDARD_MODE>
      %11 = instanceinvoke actionBarProp.<@%unk/%unk: .setMenuList()>(menuList)
      instanceinvoke %11.<@%unk/%unk: .setMode()>(%10)"];
  Node73023 [label="id:3
      return actionBarProp"];
  Node73020 -> Node73021;
  Node73020 -> Node73022;
  Node73021 -> Node73023;
  Node73022 -> Node73023;
}
subgraph "cluster_@ts_files/72.ts: AlbumBarModel.getMenuList(boolean, number, boolean, boolean)" {
  label="@ts_files/72.ts: AlbumBarModel.getMenuList(boolean, number, boolean, boolean)";
  Node70600 [label="id:0
      isAlbumSetSelectedMode = parameter0: boolean
      selectedAlbumsCount = parameter1: number
      isDisableRename = parameter2: boolean
      isDisableDelete = parameter3: boolean
      this = this: @ts_files/72.ts: AlbumBarModel
      %0 = newarray (any)[0]
      menuList = %0
      if isAlbumSetSelectedMode != false"];
  Node70601 [label="id:1
      return menuList"];
  Node70602 [label="id:2
      %1 = !isDisableRename
      %2 = selectedAlbumsCount === 1
      %3 = %1 && %2
      if %3 != false"];
  Node70603 [label="id:3
      %4 = Action.<@%unk/%unk: .RENAME>"];
  Node70604 [label="id:4
      %4 = Action.<@%unk/%unk: .RENAME_INVALID>"];
  Node70605 [label="id:5
      instanceinvoke menuList.<@%unk/%unk: .push()>(%4)
      %5 = !isDisableDelete
      %6 = selectedAlbumsCount > 0
      %7 = %5 && %6
      if %7 != false"];
  Node70606 [label="id:6
      %8 = Action.<@%unk/%unk: .DELETE>"];
  Node70607 [label="id:7
      %8 = Action.<@%unk/%unk: .DELETE_INVALID>"];
  Node70608 [label="id:8
      instanceinvoke menuList.<@%unk/%unk: .push()>(%8)"];
  Node70600 -> Node70601;
  Node70600 -> Node70602;
  Node70602 -> Node70603;
  Node70602 -> Node70604;
  Node70603 -> Node70605;
  Node70604 -> Node70605;
  Node70605 -> Node70606;
  Node70605 -> Node70607;
  Node70606 -> Node70608;
  Node70607 -> Node70608;
  Node70608 -> Node70601;
}
}
