{
  "type": "file",
  "name": "22.ts",
  "label": "22.ts",
  "start_line": -1,
  "end_line": 120,
  "classes": [
    {
      "type": "class",
      "name": "%dflt",
      "label": "%dflt",
      "start_line": -1,
      "end_line": 84,
      "functions": [
        {
          "type": "function",
          "name": "%dflt",
          "label": "%dflt",
          "start_line": -1,
          "end_line": 84,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/22.ts: %dflt\nTAG = 'AlbumSetDeleteMenuOperation'\nreturn",
              "start_line": 1,
              "end_line": 84,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": ""
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": ""
    },
    {
      "type": "class",
      "name": "AlbumSetDeleteMenuOperation",
      "label": "AlbumSetDeleteMenuOperation",
      "start_line": 1,
      "end_line": 120,
      "functions": [
        {
          "type": "function",
          "name": "constructor",
          "label": "constructor",
          "start_line": 1,
          "end_line": 84,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "instanceinvoke this.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.%instInit()>()\nmenuContext = parameter0: MenuContext\nthis = this: @ts_files/22.ts: AlbumSetDeleteMenuOperation\nstaticinvoke <@%unk/%unk: .super()>(menuContext)\nreturn",
              "start_line": 1,
              "end_line": 84,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "constructor(menuContext: MenuContext) {\n    super(menuContext);\n  }"
        },
        {
          "type": "function",
          "name": "doAction",
          "label": "doAction",
          "start_line": 1,
          "end_line": 30,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/22.ts: AlbumSetDeleteMenuOperation\n%0 = this.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.menuContext>\nif %0 == null",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "instanceinvoke Log.<@%unk/%unk: .warn()>(TAG, 'menuContext is null, return')\nreturn",
                  "start_line": 1,
                  "end_line": 84,
                  "successors": []
                },
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%1 = this.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.menuContext>\ndataSource = %1.<@%unk/%unk: .dataSource>\nif dataSource == null",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "%2 = this.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.menuContext>\n%3 = %2.<@%unk/%unk: .items>\n%4 = %3.<@%unk/%unk: .length>\nthis.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.count> = %4\n%5 = this.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.menuContext>\n%6 = %5.<@%unk/%unk: .items>\nthis.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.items> = %6",
                      "start_line": 1,
                      "end_line": 1,
                      "successors": [
                        {
                          "type": "block",
                          "name": "Block?",
                          "label": "%9 = this.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.count>\n%10 = <number>%9\nif %10 <= 0",
                          "start_line": 1,
                          "end_line": 1,
                          "successors": [
                            {
                              "type": "block",
                              "name": "Block?",
                              "label": "instanceinvoke Log.<@%unk/%unk: .warn()>(TAG, 'count <= 0, return')\nreturn",
                              "start_line": 1,
                              "end_line": 84,
                              "successors": []
                            },
                            {
                              "type": "block",
                              "name": "Block?",
                              "label": "this.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.confirmCallback> = %AM0$doAction\nthis.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.cancelCallback> = %AM1$doAction\ndeleteResource = staticinvoke <@%unk/%unk: .$r()>('app.string.dialog_delete')\n%11 = instanceinvoke this.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.getDialogTitle()>()\ninstanceinvoke %11.<@%unk/%unk: .then()>(%AM2$doAction)\nreturn",
                              "start_line": 1,
                              "end_line": 84,
                              "successors": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "%7 = instanceinvoke dataSource.<@%unk/%unk: .getSelectedCount()>()\nthis.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.count> = %7\n%8 = instanceinvoke dataSource.<@%unk/%unk: .getSelectedItems()>()\nthis.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.items> = %8",
                      "start_line": 1,
                      "end_line": 1,
                      "successors": [
                        {
                          "type": "blockRef",
                          "label": "(RepeatedBlock)"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "doAction(): void {\n    if (this.menuContext == null) {\n      Log.warn(TAG, 'menuContext is null, return');\n      return;\n    }\n    let dataSource: ItemDataSource = this.menuContext.dataSource;\n    if (dataSource == null) {\n      this.count = this.menuContext.items.length;\n      this.items = this.menuContext.items;\n    } else {\n      this.count = dataSource.getSelectedCount();\n      this.items = dataSource.getSelectedItems();\n    }\n    if (this.count as number <= 0) {\n      Log.warn(TAG, 'count <= 0, return');\n      return;\n    }\n\n    this.confirmCallback = (): void => this.confirmCallbackBindImpl();\n    this.cancelCallback = (): void => this.cancelCallbackBindImpl();\n\n    let deleteResource: Resource = $r('app.string.dialog_delete');\n    this.getDialogTitle().then<void, void>((dialogTitle: Resource): void => {\n      this.menuContext.broadCast.emit(BroadcastConstants.SHOW_DELETE_DIALOG, [dialogTitle, deleteResource, this.confirmCallback, this.cancelCallback]);\n    })\n  }"
        },
        {
          "type": "function",
          "name": "getDialogTitle",
          "label": "getDialogTitle",
          "start_line": 1,
          "end_line": 60,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/22.ts: AlbumSetDeleteMenuOperation\nvideoCount = 0\nphotoCount = 0\ni = 0",
              "start_line": 1,
              "end_line": 60,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%0 = this.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.items>\n%1 = %0.<@%unk/%unk: .length>\nif i < %1",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "%2 = this.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.items>\n%3 = %2.<@%unk/%unk: .i>\n%4 = <AlbumDataItem>%3\n%5 = instanceinvoke %4.<@%unk/%unk: .getVideoCount()>()\nitemVideoCount = await %5\nvideoCount = videoCount + itemVideoCount\n%6 = this.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.items>\n%7 = %6.<@%unk/%unk: .i>\n%8 = <AlbumDataItem>%7\n%9 = %8.<@%unk/%unk: .count>\nphotoCount = photoCount + %9 - itemVideoCount\ni = i + 1",
                      "start_line": 1,
                      "end_line": 1,
                      "successors": [
                        {
                          "type": "blockRef",
                          "label": "(RepeatedBlock)"
                        }
                      ]
                    },
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "%10 = this.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.count>\n%11 = <number>%10\nif %11 === 1",
                      "start_line": 1,
                      "end_line": 1,
                      "successors": [
                        {
                          "type": "block",
                          "name": "Block?",
                          "label": "%12 = videoCount > 0\n%13 = photoCount > 0\n%14 = %12 && %13\nif %14 != false",
                          "start_line": 1,
                          "end_line": 1,
                          "successors": [
                            {
                              "type": "block",
                              "name": "Block?",
                              "label": "%15 = staticinvoke <@%unk/%unk: .$r()>('app.string.recycle_single_album_tips', photoCount, videoCount)\nreturn %15",
                              "start_line": 1,
                              "end_line": 1,
                              "successors": []
                            },
                            {
                              "type": "block",
                              "name": "Block?",
                              "label": "%16 = videoCount > 0\n%17 = photoCount <= 0\n%18 = %16 && %17\nif %18 != false",
                              "start_line": 1,
                              "end_line": 1,
                              "successors": [
                                {
                                  "type": "block",
                                  "name": "Block?",
                                  "label": "%19 = staticinvoke <@%unk/%unk: .$r()>('app.string.recycle_single_album_with_videos_tips', videoCount)\nreturn %19",
                                  "start_line": 1,
                                  "end_line": 1,
                                  "successors": []
                                },
                                {
                                  "type": "block",
                                  "name": "Block?",
                                  "label": "%20 = videoCount <= 0\n%21 = photoCount > 0\n%22 = %20 && %21\nif %22 != false",
                                  "start_line": 1,
                                  "end_line": 1,
                                  "successors": [
                                    {
                                      "type": "block",
                                      "name": "Block?",
                                      "label": "%23 = staticinvoke <@%unk/%unk: .$r()>('app.string.recycle_single_album_with_photos_tips', photoCount)\nreturn %23",
                                      "start_line": 1,
                                      "end_line": 1,
                                      "successors": []
                                    },
                                    {
                                      "type": "block",
                                      "name": "Block?",
                                      "label": "return",
                                      "start_line": 32,
                                      "end_line": 84,
                                      "successors": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "block",
                          "name": "Block?",
                          "label": "%24 = videoCount > 0\n%25 = photoCount > 0\n%26 = %24 && %25\nif %26 != false",
                          "start_line": 1,
                          "end_line": 1,
                          "successors": [
                            {
                              "type": "block",
                              "name": "Block?",
                              "label": "%27 = this.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.count>\n%28 = staticinvoke <@%unk/%unk: .$r()>('app.string.recycle_albums_tips', %27, photoCount, videoCount)\nreturn %28",
                              "start_line": 1,
                              "end_line": 1,
                              "successors": []
                            },
                            {
                              "type": "block",
                              "name": "Block?",
                              "label": "%29 = videoCount > 0\n%30 = photoCount <= 0\n%31 = %29 && %30\nif %31 != false",
                              "start_line": 1,
                              "end_line": 1,
                              "successors": [
                                {
                                  "type": "block",
                                  "name": "Block?",
                                  "label": "%32 = this.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.count>\n%33 = staticinvoke <@%unk/%unk: .$r()>('app.string.recycle_albums_with_videos_tips', %32, videoCount)\nreturn %33",
                                  "start_line": 1,
                                  "end_line": 1,
                                  "successors": []
                                },
                                {
                                  "type": "block",
                                  "name": "Block?",
                                  "label": "%34 = videoCount <= 0\n%35 = photoCount > 0\n%36 = %34 && %35\nif %36 != false",
                                  "start_line": 1,
                                  "end_line": 1,
                                  "successors": [
                                    {
                                      "type": "block",
                                      "name": "Block?",
                                      "label": "%37 = this.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.count>\n%38 = staticinvoke <@%unk/%unk: .$r()>('app.string.recycle_albums_with_photos_tips', %37, photoCount)\nreturn %38",
                                      "start_line": 1,
                                      "end_line": 1,
                                      "successors": []
                                    },
                                    {
                                      "type": "blockRef",
                                      "label": "(RepeatedBlock)"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "private async getDialogTitle(): Promise<Resource> {\n    let videoCount = 0;\n    let photoCount = 0;\n    for (let i = 0; i < this.items.length; i++) {\n      let itemVideoCount = await  (this.items[i] as AlbumDataItem).getVideoCount();\n      videoCount += itemVideoCount;\n      photoCount += ((this.items[i] as AlbumDataItem).count - itemVideoCount);\n    }\n\n    if (this.count as number === 1) {\n      if (videoCount > 0 && photoCount > 0) {\n        return $r('app.string.recycle_single_album_tips', photoCount, videoCount);\n      }\n      if (videoCount > 0 && photoCount <= 0) {\n        return $r('app.string.recycle_single_album_with_videos_tips', videoCount);\n      }\n      if (videoCount <= 0 && photoCount > 0) {\n        return $r('app.string.recycle_single_album_with_photos_tips', photoCount);\n      }\n    } else {\n      if (videoCount > 0 && photoCount > 0) {\n        return $r('app.string.recycle_albums_tips', this.count, photoCount, videoCount);\n      }\n      if (videoCount > 0 && photoCount <= 0) {\n        return $r('app.string.recycle_albums_with_videos_tips', this.count, videoCount);\n      }\n      if (videoCount <= 0 && photoCount > 0) {\n        return $r('app.string.recycle_albums_with_photos_tips', this.count, photoCount);\n      }\n    }\n  }"
        },
        {
          "type": "function",
          "name": "requestOneBatchOperation",
          "label": "requestOneBatchOperation",
          "start_line": 1,
          "end_line": 89,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/22.ts: AlbumSetDeleteMenuOperation\n%0 = this.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.items>\n%1 = this.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.currentBatch>\n%2 = %0.<@%unk/%unk: .%1>\nitem = <AlbumDataItem>%2\npromise = instanceinvoke item.<@%unk/%unk: .onDelete()>()\n%3 = instanceinvoke promise.<@%unk/%unk: .then()>(%AM4$requestOneBatchOperation)\ninstanceinvoke %3.<@%unk/%unk: .catch()>(%AM3$requestOneBatchOperation)\nreturn",
              "start_line": 1,
              "end_line": 84,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "requestOneBatchOperation(): void {\n    let item = this.items[this.currentBatch] as AlbumDataItem;\n    let promise: Promise<boolean> = item.onDelete();\n    promise.then<void, void>((): void => {\n      this.currentBatch++;\n      this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);\n      this.cyclicOperation();\n    }).catch<void>((): void => {\n      this.onError();\n    })\n    }"
        },
        {
          "type": "function",
          "name": "confirmCallback",
          "label": "confirmCallback",
          "start_line": 1,
          "end_line": 101,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/22.ts: AlbumSetDeleteMenuOperation\ninstanceinvoke this.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.confirmCallbackBindImpl()>()\nreturn",
              "start_line": 1,
              "end_line": 84,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "private confirmCallback(): void {\n    this.confirmCallbackBindImpl();\n  }"
        },
        {
          "type": "function",
          "name": "confirmCallbackBindImpl",
          "label": "confirmCallbackBindImpl",
          "start_line": 1,
          "end_line": 105,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/22.ts: AlbumSetDeleteMenuOperation\ninstanceinvoke Log.<@%unk/%unk: .info()>(TAG, 'AlbumSet delete confirm')\n%0 = this.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.menuContext>\n%1 = %0.<@%unk/%unk: .onOperationEnd>\nthis.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.onOperationEnd> = %1\n%2 = this.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.menuContext>\nonOperationStart = %2.<@%unk/%unk: .onOperationStart>\nif onOperationStart != null",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "staticinvoke <@%unk/%unk: .onOperationStart()>()",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "%3 = BroadcastConstants.<@%unk/%unk: .DELETE_PROGRESS_DIALOG>\n%4 = staticinvoke <@%unk/%unk: .$r()>('app.string.action_delete')\n%5 = this.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.count>\n%6 = newarray (unknown)[2]\n%6[0] = %4\n%6[1] = %5\n%7 = this.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.menuContext>\n%8 = %7.<@%unk/%unk: .broadCast>\ninstanceinvoke %8.<@%unk/%unk: .emit()>(%3, %6)\ninstanceinvoke this.<@%unk/%unk: .processOperation()>()\nreturn",
                      "start_line": 1,
                      "end_line": 84,
                      "successors": []
                    }
                  ]
                },
                {
                  "type": "blockRef",
                  "label": "(RepeatedBlock)"
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "private confirmCallbackBindImpl(): void {\n    Log.info(TAG, 'AlbumSet delete confirm');\n    this.onOperationEnd = this.menuContext.onOperationEnd;\n    let onOperationStart: Function = this.menuContext.onOperationStart;\n\n    if (onOperationStart != null) onOperationStart();\n\n    this.menuContext.broadCast.emit(BroadcastConstants.DELETE_PROGRESS_DIALOG, [$r('app.string.action_delete'), this.count]);\n    this.processOperation();\n  }"
        },
        {
          "type": "function",
          "name": "cancelCallback",
          "label": "cancelCallback",
          "start_line": 1,
          "end_line": 116,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/22.ts: AlbumSetDeleteMenuOperation\ninstanceinvoke this.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.cancelCallbackBindImpl()>()\nreturn",
              "start_line": 1,
              "end_line": 84,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "private cancelCallback(): void {\n    this.cancelCallbackBindImpl();\n  }"
        },
        {
          "type": "function",
          "name": "cancelCallbackBindImpl",
          "label": "cancelCallbackBindImpl",
          "start_line": 1,
          "end_line": 120,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/22.ts: AlbumSetDeleteMenuOperation\ninstanceinvoke Log.<@%unk/%unk: .info()>(TAG, 'AlbumSet delete cancel')\nreturn",
              "start_line": 1,
              "end_line": 84,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "private cancelCallbackBindImpl(): void {\n    Log.info(TAG, 'AlbumSet delete cancel');\n  }"
        },
        {
          "type": "function",
          "name": "%AM0$doAction",
          "label": "%AM0$doAction",
          "start_line": 1,
          "end_line": 48,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/22.ts: AlbumSetDeleteMenuOperation\n%0 = instanceinvoke this.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.confirmCallbackBindImpl()>()\nreturn %0",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(): void => this.confirmCallbackBindImpl()"
        },
        {
          "type": "function",
          "name": "%AM1$doAction",
          "label": "%AM1$doAction",
          "start_line": 1,
          "end_line": 49,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/22.ts: AlbumSetDeleteMenuOperation\n%0 = instanceinvoke this.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.cancelCallbackBindImpl()>()\nreturn %0",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(): void => this.cancelCallbackBindImpl()"
        },
        {
          "type": "function",
          "name": "%AM2$doAction",
          "label": "%AM2$doAction",
          "start_line": 1,
          "end_line": 84,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "%closures0 = parameter0: [deleteResource]\ndialogTitle = parameter1: Resource\ndeleteResource = %closures0.deleteResource\nthis = this: @ts_files/22.ts: AlbumSetDeleteMenuOperation\n%0 = BroadcastConstants.<@%unk/%unk: .SHOW_DELETE_DIALOG>\n%1 = this.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.confirmCallback>\n%2 = this.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.cancelCallback>\n%3 = newarray (Resource|unknown)[4]\n%3[0] = dialogTitle\n%3[1] = deleteResource\n%3[2] = %1\n%3[3] = %2\n%4 = this.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.menuContext>\n%5 = %4.<@%unk/%unk: .broadCast>\ninstanceinvoke %5.<@%unk/%unk: .emit()>(%0, %3)\nreturn",
              "start_line": 1,
              "end_line": 84,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(dialogTitle: Resource): void => {\n      this.menuContext.broadCast.emit(BroadcastConstants.SHOW_DELETE_DIALOG, [dialogTitle, deleteResource, this.confirmCallback, this.cancelCallback]);\n    }"
        },
        {
          "type": "function",
          "name": "%AM3$requestOneBatchOperation",
          "label": "%AM3$requestOneBatchOperation",
          "start_line": 1,
          "end_line": 96,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/22.ts: AlbumSetDeleteMenuOperation\ninstanceinvoke this.<@%unk/%unk: .onError()>()\nreturn",
              "start_line": 1,
              "end_line": 84,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(): void => {\n      this.onError();\n    }"
        },
        {
          "type": "function",
          "name": "%AM4$requestOneBatchOperation",
          "label": "%AM4$requestOneBatchOperation",
          "start_line": 1,
          "end_line": 92,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/22.ts: AlbumSetDeleteMenuOperation\n%0 = this.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.currentBatch>\n%0 = %0 + 1\n%1 = BroadcastConstants.<@%unk/%unk: .UPDATE_PROGRESS>\n%2 = instanceinvoke this.<@%unk/%unk: .getExpectProgress()>()\n%3 = this.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.currentBatch>\n%4 = newarray (unknown)[2]\n%4[0] = %2\n%4[1] = %3\n%5 = this.<@ts_files/22.ts: AlbumSetDeleteMenuOperation.menuContext>\n%6 = %5.<@%unk/%unk: .broadCast>\ninstanceinvoke %6.<@%unk/%unk: .emit()>(%1, %4)\ninstanceinvoke this.<@%unk/%unk: .cyclicOperation()>()\nreturn",
              "start_line": 1,
              "end_line": 84,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(): void => {\n      this.currentBatch++;\n      this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);\n      this.cyclicOperation();\n    }"
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": "export class AlbumSetDeleteMenuOperation extends ProcessMenuOperation {\n  constructor(menuContext: MenuContext) {\n    super(menuContext);\n  }\n\n  doAction(): void {\n    if (this.menuContext == null) {\n      Log.warn(TAG, 'menuContext is null, return');\n      return;\n    }\n    let dataSource: ItemDataSource = this.menuContext.dataSource;\n    if (dataSource == null) {\n      this.count = this.menuContext.items.length;\n      this.items = this.menuContext.items;\n    } else {\n      this.count = dataSource.getSelectedCount();\n      this.items = dataSource.getSelectedItems();\n    }\n    if (this.count as number <= 0) {\n      Log.warn(TAG, 'count <= 0, return');\n      return;\n    }\n\n    this.confirmCallback = (): void => this.confirmCallbackBindImpl();\n    this.cancelCallback = (): void => this.cancelCallbackBindImpl();\n\n    let deleteResource: Resource = $r('app.string.dialog_delete');\n    this.getDialogTitle().then<void, void>((dialogTitle: Resource): void => {\n      this.menuContext.broadCast.emit(BroadcastConstants.SHOW_DELETE_DIALOG, [dialogTitle, deleteResource, this.confirmCallback, this.cancelCallback]);\n    })\n  }\n\n  private async getDialogTitle(): Promise<Resource> {\n    let videoCount = 0;\n    let photoCount = 0;\n    for (let i = 0; i < this.items.length; i++) {\n      let itemVideoCount = await  (this.items[i] as AlbumDataItem).getVideoCount();\n      videoCount += itemVideoCount;\n      photoCount += ((this.items[i] as AlbumDataItem).count - itemVideoCount);\n    }\n\n    if (this.count as number === 1) {\n      if (videoCount > 0 && photoCount > 0) {\n        return $r('app.string.recycle_single_album_tips', photoCount, videoCount);\n      }\n      if (videoCount > 0 && photoCount <= 0) {\n        return $r('app.string.recycle_single_album_with_videos_tips', videoCount);\n      }\n      if (videoCount <= 0 && photoCount > 0) {\n        return $r('app.string.recycle_single_album_with_photos_tips', photoCount);\n      }\n    } else {\n      if (videoCount > 0 && photoCount > 0) {\n        return $r('app.string.recycle_albums_tips', this.count, photoCount, videoCount);\n      }\n      if (videoCount > 0 && photoCount <= 0) {\n        return $r('app.string.recycle_albums_with_videos_tips', this.count, videoCount);\n      }\n      if (videoCount <= 0 && photoCount > 0) {\n        return $r('app.string.recycle_albums_with_photos_tips', this.count, photoCount);\n      }\n    }\n  }\n\n  requestOneBatchOperation(): void {\n    let item = this.items[this.currentBatch] as AlbumDataItem;\n    let promise: Promise<boolean> = item.onDelete();\n    promise.then<void, void>((): void => {\n      this.currentBatch++;\n      this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);\n      this.cyclicOperation();\n    }).catch<void>((): void => {\n      this.onError();\n    })\n    }\n\n  private confirmCallback(): void {\n    this.confirmCallbackBindImpl();\n  }\n\n  private confirmCallbackBindImpl(): void {\n    Log.info(TAG, 'AlbumSet delete confirm');\n    this.onOperationEnd = this.menuContext.onOperationEnd;\n    let onOperationStart: Function = this.menuContext.onOperationStart;\n\n    if (onOperationStart != null) onOperationStart();\n\n    this.menuContext.broadCast.emit(BroadcastConstants.DELETE_PROGRESS_DIALOG, [$r('app.string.action_delete'), this.count]);\n    this.processOperation();\n  }\n\n  private cancelCallback(): void {\n    this.cancelCallbackBindImpl();\n  }\n\n  private cancelCallbackBindImpl(): void {\n    Log.info(TAG, 'AlbumSet delete cancel');\n  }\n}"
    }
  ],
  "functions": [],
  "blocks": [],
  "simplified_code": "/*\n * Copyright (c) 2023 Shenzhen Kaihong Digital Industry Development Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Log } from '../utils/Log';\nimport { BroadcastConstants } from '../constants/BroadcastConstants';\nimport { ItemDataSource } from '../common/ItemDataSource';\nimport { AlbumDataItem } from '../common/AlbumDataItem';\nimport { MenuContext } from './MenuContext';\nimport { ProcessMenuOperation } from './ProcessMenuOperation';\n\nconst TAG = 'AlbumSetDeleteMenuOperation';\n\nexport class AlbumSetDeleteMenuOperation extends ProcessMenuOperation {\n  constructor(menuContext: MenuContext) {\n    super(menuContext);\n  }\n\n  doAction(): void {\n    if (this.menuContext == null) {\n      Log.warn(TAG, 'menuContext is null, return');\n      return;\n    }\n    let dataSource: ItemDataSource = this.menuContext.dataSource;\n    if (dataSource == null) {\n      this.count = this.menuContext.items.length;\n      this.items = this.menuContext.items;\n    } else {\n      this.count = dataSource.getSelectedCount();\n      this.items = dataSource.getSelectedItems();\n    }\n    if (this.count as number <= 0) {\n      Log.warn(TAG, 'count <= 0, return');\n      return;\n    }\n\n    this.confirmCallback = (): void => this.confirmCallbackBindImpl();\n    this.cancelCallback = (): void => this.cancelCallbackBindImpl();\n\n    let deleteResource: Resource = $r('app.string.dialog_delete');\n    this.getDialogTitle().then<void, void>((dialogTitle: Resource): void => {\n      this.menuContext.broadCast.emit(BroadcastConstants.SHOW_DELETE_DIALOG, [dialogTitle, deleteResource, this.confirmCallback, this.cancelCallback]);\n    })\n  }\n\n  private async getDialogTitle(): Promise<Resource> {\n    let videoCount = 0;\n    let photoCount = 0;\n    for (let i = 0; i < this.items.length; i++) {\n      let itemVideoCount = await  (this.items[i] as AlbumDataItem).getVideoCount();\n      videoCount += itemVideoCount;\n      photoCount += ((this.items[i] as AlbumDataItem).count - itemVideoCount);\n    }\n\n    if (this.count as number === 1) {\n      if (videoCount > 0 && photoCount > 0) {\n        return $r('app.string.recycle_single_album_tips', photoCount, videoCount);\n      }\n      if (videoCount > 0 && photoCount <= 0) {\n        return $r('app.string.recycle_single_album_with_videos_tips', videoCount);\n      }\n      if (videoCount <= 0 && photoCount > 0) {\n        return $r('app.string.recycle_single_album_with_photos_tips', photoCount);\n      }\n    } else {\n      if (videoCount > 0 && photoCount > 0) {\n        return $r('app.string.recycle_albums_tips', this.count, photoCount, videoCount);\n      }\n      if (videoCount > 0 && photoCount <= 0) {\n        return $r('app.string.recycle_albums_with_videos_tips', this.count, videoCount);\n      }\n      if (videoCount <= 0 && photoCount > 0) {\n        return $r('app.string.recycle_albums_with_photos_tips', this.count, photoCount);\n      }\n    }\n  }\n\n  requestOneBatchOperation(): void {\n    let item = this.items[this.currentBatch] as AlbumDataItem;\n    let promise: Promise<boolean> = item.onDelete();\n    promise.then<void, void>((): void => {\n      this.currentBatch++;\n      this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);\n      this.cyclicOperation();\n    }).catch<void>((): void => {\n      this.onError();\n    })\n    }\n\n  private confirmCallback(): void {\n    this.confirmCallbackBindImpl();\n  }\n\n  private confirmCallbackBindImpl(): void {\n    Log.info(TAG, 'AlbumSet delete confirm');\n    this.onOperationEnd = this.menuContext.onOperationEnd;\n    let onOperationStart: Function = this.menuContext.onOperationStart;\n\n    if (onOperationStart != null) onOperationStart();\n\n    this.menuContext.broadCast.emit(BroadcastConstants.DELETE_PROGRESS_DIALOG, [$r('app.string.action_delete'), this.count]);\n    this.processOperation();\n  }\n\n  private cancelCallback(): void {\n    this.cancelCallbackBindImpl();\n  }\n\n  private cancelCallbackBindImpl(): void {\n    Log.info(TAG, 'AlbumSet delete cancel');\n  }\n}\n"
}