{
  "type": "file",
  "name": "151.ts",
  "label": "151.ts",
  "start_line": -1,
  "end_line": 94,
  "classes": [
    {
      "type": "class",
      "name": "%dflt",
      "label": "%dflt",
      "start_line": -1,
      "end_line": 94,
      "functions": [
        {
          "type": "function",
          "name": "%dflt",
          "label": "%dflt",
          "start_line": -1,
          "end_line": 94,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/151.ts: %dflt\nreturn",
              "start_line": 1,
              "end_line": 94,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": ""
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": ""
    },
    {
      "type": "class",
      "name": "%AC$0",
      "label": "%AC$0",
      "start_line": 19,
      "end_line": 19,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n      accountSid?: string;\n      authToken?: string;\n      from?: string;\n    }"
    },
    {
      "type": "class",
      "name": "PlivoSmsProvider",
      "label": "PlivoSmsProvider",
      "start_line": 1,
      "end_line": 94,
      "functions": [
        {
          "type": "function",
          "name": "constructor",
          "label": "constructor",
          "start_line": 1,
          "end_line": 94,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "instanceinvoke this.<@ts_files/151.ts: PlivoSmsProvider.%instInit()>()\nconfig = parameter0: @ts_files/151.ts: %AC$0\nthis = this: @ts_files/151.ts: PlivoSmsProvider\nstaticinvoke <@%unk/%unk: .super()>()\n%0 = new @%unk/%unk: PlivoClient\n%1 = config.<@ts_files/151.ts: %AC$0.accountSid>\n%2 = config.<@ts_files/151.ts: %AC$0.authToken>\ninstanceinvoke %0.<@%unk/%unk: PlivoClient.constructor()>(%1, %2)\nthis.<@ts_files/151.ts: PlivoSmsProvider.plivoClient> = %0\nreturn",
              "start_line": 1,
              "end_line": 94,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "constructor(\n    private config: {\n      accountSid?: string;\n      authToken?: string;\n      from?: string;\n    },\n  ) {\n    super();\n    this.plivoClient = new PlivoClient(config.accountSid, config.authToken);\n  }"
        },
        {
          "type": "function",
          "name": "sendMessage",
          "label": "sendMessage",
          "start_line": 1,
          "end_line": 28,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "options = parameter0: ISmsOptions\nbridgeProviderData = parameter1: WithPassthrough<Record<string,UnknownKeyword>>\nthis = this: @ts_files/151.ts: PlivoSmsProvider\n%0 = new @ts_files/151.ts: %AC$PlivoSmsProvider$sendMessage$1\ninstanceinvoke %0.<@ts_files/151.ts: %AC$PlivoSmsProvider$sendMessage$1.constructor()>()\ntransformedData = instanceinvoke this.<@%unk/%unk: .transform()>(bridgeProviderData, %0)\n%1 = transformedData.<@%unk/%unk: .body>\n%2 = %1.<@%unk/%unk: .src>\n%3 = transformedData.<@%unk/%unk: .body>\n%4 = %3.<@%unk/%unk: .dst>\n%5 = transformedData.<@%unk/%unk: .body>\n%6 = %5.<@%unk/%unk: .text>\n%7 = <string>%6\n%8 = transformedData.<@%unk/%unk: .body>\n%9 = %8.<@%unk/%unk: .optionalParams>\n%10 = <unknown>%9\n%11 = transformedData.<@%unk/%unk: .body>\n%12 = %11.<@%unk/%unk: .powerpackUUID>\n%13 = <string>%12\n%14 = this.<@ts_files/151.ts: PlivoSmsProvider.plivoClient>\n%15 = %14.<@%unk/%unk: .messages>\n%16 = instanceinvoke %15.<@%unk/%unk: .create()>(%2, %4, %7, %10, %13)\nplivoResponse = await %16\n%17 = new @ts_files/151.ts: %AC$PlivoSmsProvider$sendMessage$2\ninstanceinvoke %17.<@ts_files/151.ts: %AC$PlivoSmsProvider$sendMessage$2.constructor()>()\nreturn %17",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "async sendMessage(\n    options: ISmsOptions,\n    bridgeProviderData: WithPassthrough<Record<string, unknown>> = {},\n  ): Promise<ISendMessageSuccessResponse> {\n    const transformedData = this.transform(bridgeProviderData, {\n      src: options.from || this.config.from,\n      dst: options.to,\n      text: options.content,\n    });\n    const plivoResponse = await this.plivoClient.messages.create(\n      transformedData.body.src,\n      transformedData.body.dst,\n      transformedData.body.text as string,\n      transformedData.body.optionalParams as object,\n      transformedData.body.powerpackUUID as string,\n    );\n    return {\n      ids: plivoResponse.messageUuid,\n      date: new Date().toISOString(),\n    };\n  }"
        },
        {
          "type": "function",
          "name": "getMessageId",
          "label": "getMessageId",
          "start_line": 1,
          "end_line": 49,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "body = parameter0: any|any[]\nthis = this: @ts_files/151.ts: PlivoSmsProvider\n%0 = instanceinvoke Array.<@%unk/%unk: .isArray()>(body)\nif %0 != 0",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%1 = instanceinvoke body.<@%unk/%unk: .map()>(%AM0$getMessageId)\nreturn %1",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": []
                },
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%2 = body.<@%unk/%unk: .messageUuid>\n%3 = newarray (unknown)[1]\n%3[0] = %2\nreturn %3",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": []
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "getMessageId(body: any | any[]): string[] {\n    if (Array.isArray(body)) {\n      return body.map((item) => item.messageUuid);\n    }\n    return [body.messageUuid];\n  }"
        },
        {
          "type": "function",
          "name": "parseEventBody",
          "label": "parseEventBody",
          "start_line": 1,
          "end_line": 55,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "body = parameter0: any|any[]\nidentifier = parameter1: string\nthis = this: @ts_files/151.ts: PlivoSmsProvider\n%0 = instanceinvoke Array.<@%unk/%unk: .isArray()>(body)\nif %0 != 0",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "body = instanceinvoke body.<@%unk/%unk: .find()>(%AM1$parseEventBody)",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "%1 = !body\nif %1 != 0",
                      "start_line": 1,
                      "end_line": 1,
                      "successors": [
                        {
                          "type": "block",
                          "name": "Block?",
                          "label": "return undefined",
                          "start_line": 64,
                          "end_line": 94,
                          "successors": []
                        },
                        {
                          "type": "block",
                          "name": "Block?",
                          "label": "%2 = body.<@%unk/%unk: .status>\nstatus = instanceinvoke this.<@ts_files/151.ts: PlivoSmsProvider.getStatus(string)>(%2)\nif status === undefined",
                          "start_line": 1,
                          "end_line": 1,
                          "successors": [
                            {
                              "type": "block",
                              "name": "Block?",
                              "label": "return undefined",
                              "start_line": 64,
                              "end_line": 94,
                              "successors": []
                            },
                            {
                              "type": "block",
                              "name": "Block?",
                              "label": "%3 = new @ts_files/151.ts: %AC$PlivoSmsProvider$parseEventBody$3\ninstanceinvoke %3.<@ts_files/151.ts: %AC$PlivoSmsProvider$parseEventBody$3.constructor()>()\nreturn %3",
                              "start_line": 1,
                              "end_line": 1,
                              "successors": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "blockRef",
                  "label": "(RepeatedBlock)"
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "parseEventBody(\n    body: any | any[],\n    identifier: string,\n  ): ISMSEventBody | undefined {\n    if (Array.isArray(body)) {\n      // eslint-disable-next-line no-param-reassign\n      body = body.find((item) => item.messageUuid === identifier);\n    }\n    if (!body) {\n      return undefined;\n    }\n    const status = this.getStatus(body.status);\n    if (status === undefined) {\n      return undefined;\n    }\n    return {\n      status,\n      date: new Date().toISOString(),\n      externalId: body.messageUuid,\n      attempts: body.attempt ? parseInt(body.attempt, 10) : 1,\n      response: body.response ?? '',\n      row: body,\n    };\n  }"
        },
        {
          "type": "function",
          "name": "getStatus",
          "label": "getStatus",
          "start_line": 1,
          "end_line": 79,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "event = parameter0: string\nthis = this: @ts_files/151.ts: PlivoSmsProvider\nif event == 'queued'",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%0 = SmsEventStatusEnum.<@%unk/%unk: .QUEUED>\nreturn %0",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": []
                },
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "if event == 'sent'",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "%1 = SmsEventStatusEnum.<@%unk/%unk: .SENT>\nreturn %1",
                      "start_line": 1,
                      "end_line": 1,
                      "successors": []
                    },
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "if event == 'failed'",
                      "start_line": 1,
                      "end_line": 1,
                      "successors": [
                        {
                          "type": "block",
                          "name": "Block?",
                          "label": "%2 = SmsEventStatusEnum.<@%unk/%unk: .FAILED>\nreturn %2",
                          "start_line": 1,
                          "end_line": 1,
                          "successors": []
                        },
                        {
                          "type": "block",
                          "name": "Block?",
                          "label": "if event == 'undelivered'",
                          "start_line": 1,
                          "end_line": 1,
                          "successors": [
                            {
                              "type": "block",
                              "name": "Block?",
                              "label": "%3 = SmsEventStatusEnum.<@%unk/%unk: .UNDELIVERED>\nreturn %3",
                              "start_line": 1,
                              "end_line": 1,
                              "successors": []
                            },
                            {
                              "type": "block",
                              "name": "Block?",
                              "label": "if event == 'delivered'",
                              "start_line": 1,
                              "end_line": 1,
                              "successors": [
                                {
                                  "type": "block",
                                  "name": "Block?",
                                  "label": "%4 = SmsEventStatusEnum.<@%unk/%unk: .DELIVERED>\nreturn %4",
                                  "start_line": 1,
                                  "end_line": 1,
                                  "successors": []
                                },
                                {
                                  "type": "block",
                                  "name": "Block?",
                                  "label": "if event == 'rejected'",
                                  "start_line": 1,
                                  "end_line": 1,
                                  "successors": [
                                    {
                                      "type": "block",
                                      "name": "Block?",
                                      "label": "%5 = SmsEventStatusEnum.<@%unk/%unk: .REJECTED>\nreturn %5",
                                      "start_line": 1,
                                      "end_line": 1,
                                      "successors": []
                                    },
                                    {
                                      "type": "block",
                                      "name": "Block?",
                                      "label": "return undefined",
                                      "start_line": 64,
                                      "end_line": 94,
                                      "successors": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "private getStatus(event: string): SmsEventStatusEnum | undefined {\n    switch (event) {\n      case 'queued':\n        return SmsEventStatusEnum.QUEUED;\n      case 'sent':\n        return SmsEventStatusEnum.SENT;\n      case 'failed':\n        return SmsEventStatusEnum.FAILED;\n      case 'undelivered':\n        return SmsEventStatusEnum.UNDELIVERED;\n      case 'delivered':\n        return SmsEventStatusEnum.DELIVERED;\n      case 'rejected':\n        return SmsEventStatusEnum.REJECTED;\n      default:\n        return undefined;\n    }\n  }"
        },
        {
          "type": "function",
          "name": "%AM0$getMessageId",
          "label": "%AM0$getMessageId",
          "start_line": 1,
          "end_line": 51,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "item = parameter0: unknown\nthis = this: @ts_files/151.ts: PlivoSmsProvider\n%0 = item.<@%unk/%unk: .messageUuid>\nreturn %0",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(item) => item.messageUuid"
        },
        {
          "type": "function",
          "name": "%AM1$parseEventBody",
          "label": "%AM1$parseEventBody",
          "start_line": 1,
          "end_line": 61,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "%closures0 = parameter0: [identifier]\nitem = parameter1: unknown\nidentifier = %closures0.identifier\nthis = this: @ts_files/151.ts: PlivoSmsProvider\n%0 = item.<@%unk/%unk: .messageUuid>\n%1 = %0 === identifier\nreturn %1",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(item) => item.messageUuid === identifier"
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": "export class PlivoSmsProvider extends BaseProvider implements ISmsProvider {\n  id = SmsProviderIdEnum.Plivo;\n  channelType = ChannelTypeEnum.SMS as ChannelTypeEnum.SMS;\n  protected casing = CasingEnum.CAMEL_CASE;\n  private plivoClient: PlivoClient;\n  constructor(\n    private config: {\n      accountSid?: string;\n      authToken?: string;\n      from?: string;\n    },\n  ) {\n    super();\n    this.plivoClient = new PlivoClient(config.accountSid, config.authToken);\n  }\n  async sendMessage(\n    options: ISmsOptions,\n    bridgeProviderData: WithPassthrough<Record<string, unknown>> = {},\n  ): Promise<ISendMessageSuccessResponse> {\n    const transformedData = this.transform(bridgeProviderData, {\n      src: options.from || this.config.from,\n      dst: options.to,\n      text: options.content,\n    });\n    const plivoResponse = await this.plivoClient.messages.create(\n      transformedData.body.src,\n      transformedData.body.dst,\n      transformedData.body.text as string,\n      transformedData.body.optionalParams as object,\n      transformedData.body.powerpackUUID as string,\n    );\n    return {\n      ids: plivoResponse.messageUuid,\n      date: new Date().toISOString(),\n    };\n  }\n  getMessageId(body: any | any[]): string[] {\n    if (Array.isArray(body)) {\n      return body.map((item) => item.messageUuid);\n    }\n    return [body.messageUuid];\n  }\n  parseEventBody(\n    body: any | any[],\n    identifier: string,\n  ): ISMSEventBody | undefined {\n    if (Array.isArray(body)) {\n      // eslint-disable-next-line no-param-reassign\n      body = body.find((item) => item.messageUuid === identifier);\n    }\n    if (!body) {\n      return undefined;\n    }\n    const status = this.getStatus(body.status);\n    if (status === undefined) {\n      return undefined;\n    }\n    return {\n      status,\n      date: new Date().toISOString(),\n      externalId: body.messageUuid,\n      attempts: body.attempt ? parseInt(body.attempt, 10) : 1,\n      response: body.response ?? '',\n      row: body,\n    };\n  }\n  private getStatus(event: string): SmsEventStatusEnum | undefined {\n    switch (event) {\n      case 'queued':\n        return SmsEventStatusEnum.QUEUED;\n      case 'sent':\n        return SmsEventStatusEnum.SENT;\n      case 'failed':\n        return SmsEventStatusEnum.FAILED;\n      case 'undelivered':\n        return SmsEventStatusEnum.UNDELIVERED;\n      case 'delivered':\n        return SmsEventStatusEnum.DELIVERED;\n      case 'rejected':\n        return SmsEventStatusEnum.REJECTED;\n      default:\n        return undefined;\n    }\n  }\n}"
    },
    {
      "type": "class",
      "name": "%AC$PlivoSmsProvider$sendMessage$1",
      "label": "%AC$PlivoSmsProvider$sendMessage$1",
      "start_line": 32,
      "end_line": 32,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n      src: options.from || this.config.from,\n      dst: options.to,\n      text: options.content,\n    }"
    },
    {
      "type": "class",
      "name": "%AC$PlivoSmsProvider$sendMessage$2",
      "label": "%AC$PlivoSmsProvider$sendMessage$2",
      "start_line": 44,
      "end_line": 44,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n      ids: plivoResponse.messageUuid,\n      date: new Date().toISOString(),\n    }"
    },
    {
      "type": "class",
      "name": "%AC$PlivoSmsProvider$parseEventBody$3",
      "label": "%AC$PlivoSmsProvider$parseEventBody$3",
      "start_line": 70,
      "end_line": 70,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n      status,\n      date: new Date().toISOString(),\n      externalId: body.messageUuid,\n      attempts: body.attempt ? parseInt(body.attempt, 10) : 1,\n      response: body.response ?? '',\n      row: body,\n    }"
    }
  ],
  "functions": [],
  "blocks": [],
  "simplified_code": "import { SmsProviderIdEnum } from '@novu/shared';\nimport {\n  ChannelTypeEnum,\n  ISendMessageSuccessResponse,\n  ISMSEventBody,\n  ISmsOptions,\n  ISmsProvider,\n  SmsEventStatusEnum,\n} from '@novu/stateless';\nimport { Client as PlivoClient } from 'plivo';\nimport { BaseProvider, CasingEnum } from '../../../base.provider';\nimport { WithPassthrough } from '../../../utils/types';\nexport class PlivoSmsProvider extends BaseProvider implements ISmsProvider {\n  id = SmsProviderIdEnum.Plivo;\n  channelType = ChannelTypeEnum.SMS as ChannelTypeEnum.SMS;\n  protected casing = CasingEnum.CAMEL_CASE;\n  private plivoClient: PlivoClient;\n  constructor(\n    private config: {\n      accountSid?: string;\n      authToken?: string;\n      from?: string;\n    },\n  ) {\n    super();\n    this.plivoClient = new PlivoClient(config.accountSid, config.authToken);\n  }\n  async sendMessage(\n    options: ISmsOptions,\n    bridgeProviderData: WithPassthrough<Record<string, unknown>> = {},\n  ): Promise<ISendMessageSuccessResponse> {\n    const transformedData = this.transform(bridgeProviderData, {\n      src: options.from || this.config.from,\n      dst: options.to,\n      text: options.content,\n    });\n    const plivoResponse = await this.plivoClient.messages.create(\n      transformedData.body.src,\n      transformedData.body.dst,\n      transformedData.body.text as string,\n      transformedData.body.optionalParams as object,\n      transformedData.body.powerpackUUID as string,\n    );\n    return {\n      ids: plivoResponse.messageUuid,\n      date: new Date().toISOString(),\n    };\n  }\n  getMessageId(body: any | any[]): string[] {\n    if (Array.isArray(body)) {\n      return body.map((item) => item.messageUuid);\n    }\n    return [body.messageUuid];\n  }\n  parseEventBody(\n    body: any | any[],\n    identifier: string,\n  ): ISMSEventBody | undefined {\n    if (Array.isArray(body)) {\n      // eslint-disable-next-line no-param-reassign\n      body = body.find((item) => item.messageUuid === identifier);\n    }\n    if (!body) {\n      return undefined;\n    }\n    const status = this.getStatus(body.status);\n    if (status === undefined) {\n      return undefined;\n    }\n    return {\n      status,\n      date: new Date().toISOString(),\n      externalId: body.messageUuid,\n      attempts: body.attempt ? parseInt(body.attempt, 10) : 1,\n      response: body.response ?? '',\n      row: body,\n    };\n  }\n  private getStatus(event: string): SmsEventStatusEnum | undefined {\n    switch (event) {\n      case 'queued':\n        return SmsEventStatusEnum.QUEUED;\n      case 'sent':\n        return SmsEventStatusEnum.SENT;\n      case 'failed':\n        return SmsEventStatusEnum.FAILED;\n      case 'undelivered':\n        return SmsEventStatusEnum.UNDELIVERED;\n      case 'delivered':\n        return SmsEventStatusEnum.DELIVERED;\n      case 'rejected':\n        return SmsEventStatusEnum.REJECTED;\n      default:\n        return undefined;\n    }\n  }\n}"
}