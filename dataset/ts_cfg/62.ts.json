{
  "type": "file",
  "name": "62.ts",
  "label": "62.ts",
  "start_line": -1,
  "end_line": 40,
  "classes": [
    {
      "type": "class",
      "name": "%dflt",
      "label": "%dflt",
      "start_line": -1,
      "end_line": 37,
      "functions": [
        {
          "type": "function",
          "name": "%dflt",
          "label": "%dflt",
          "start_line": -1,
          "end_line": 37,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/62.ts: %dflt\nTAG = 'TrashUserFileDataItemCache'\n%0 = new @ts_files/62.ts: TrashUserFileDataItemCache\ninstanceinvoke %0.<@ts_files/62.ts: TrashUserFileDataItemCache.constructor()>()\ntrashUserFileDataItemCache = staticinvoke <@%unk/%unk: .stashOrGetObject()>(%0, TAG)\nreturn",
              "start_line": 1,
              "end_line": 37,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": ""
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": ""
    },
    {
      "type": "class",
      "name": "TrashUserFileDataItemCache",
      "label": "TrashUserFileDataItemCache",
      "start_line": 1,
      "end_line": 40,
      "functions": [
        {
          "type": "function",
          "name": "hasKey",
          "label": "hasKey",
          "start_line": 1,
          "end_line": 24,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "key = parameter0: string\nthis = this: @ts_files/62.ts: TrashUserFileDataItemCache\n%0 = this.<@ts_files/62.ts: TrashUserFileDataItemCache.trashMediaDataItemMap>\n%1 = instanceinvoke %0.<@%unk/%unk: .has()>(key)\nreturn %1",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "hasKey(key: string): boolean {\n    return this.trashMediaDataItemMap.has(key);\n  }"
        },
        {
          "type": "function",
          "name": "deleteKey",
          "label": "deleteKey",
          "start_line": 1,
          "end_line": 28,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "key = parameter0: string\nthis = this: @ts_files/62.ts: TrashUserFileDataItemCache\n%0 = this.<@ts_files/62.ts: TrashUserFileDataItemCache.trashMediaDataItemMap>\n%1 = instanceinvoke %0.<@%unk/%unk: .delete()>(key)\nreturn %1",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "deleteKey(key: string): boolean {\n    return this.trashMediaDataItemMap.delete(key);\n  }"
        },
        {
          "type": "function",
          "name": "set",
          "label": "set",
          "start_line": 1,
          "end_line": 37,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "key = parameter0: string\nvalue = parameter1: TrashUserFileDataItem\nthis = this: @ts_files/62.ts: TrashUserFileDataItemCache\n%0 = this.<@ts_files/62.ts: TrashUserFileDataItemCache.trashMediaDataItemMap>\ninstanceinvoke %0.<@ts_files/62.ts: TrashUserFileDataItemCache.set(string, TrashUserFileDataItem)>(key, value)\nreturn",
              "start_line": 1,
              "end_line": 37,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "set(key: string, value: TrashUserFileDataItem): void {\n    this.trashMediaDataItemMap.set(key, value);\n  }"
        },
        {
          "type": "function",
          "name": "get",
          "label": "get",
          "start_line": 1,
          "end_line": 36,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "key = parameter0: string\nthis = this: @ts_files/62.ts: TrashUserFileDataItemCache\n%0 = this.<@ts_files/62.ts: TrashUserFileDataItemCache.trashMediaDataItemMap>\n%1 = instanceinvoke %0.<@ts_files/62.ts: TrashUserFileDataItemCache.get(string)>(key)\nreturn %1",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "get(key: string): TrashUserFileDataItem {\n    return this.trashMediaDataItemMap.get(key);\n  }"
        },
        {
          "type": "function",
          "name": "clearAll",
          "label": "clearAll",
          "start_line": 1,
          "end_line": 40,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/62.ts: TrashUserFileDataItemCache\n%0 = this.<@ts_files/62.ts: TrashUserFileDataItemCache.trashMediaDataItemMap>\ninstanceinvoke %0.<@%unk/%unk: .clear()>()\nreturn",
              "start_line": 1,
              "end_line": 37,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "clearAll(): void {\n    this.trashMediaDataItemMap.clear();\n  }"
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": "class TrashUserFileDataItemCache {\n  private trashMediaDataItemMap = new Map<string, TrashUserFileDataItem>();\n\n  hasKey(key: string): boolean {\n    return this.trashMediaDataItemMap.has(key);\n  }\n\n  deleteKey(key: string): boolean {\n    return this.trashMediaDataItemMap.delete(key);\n  }\n\n  set(key: string, value: TrashUserFileDataItem): void {\n    this.trashMediaDataItemMap.set(key, value);\n  }\n\n  get(key: string): TrashUserFileDataItem {\n    return this.trashMediaDataItemMap.get(key);\n  }\n\n  clearAll(): void {\n    this.trashMediaDataItemMap.clear();\n  }\n}"
    }
  ],
  "functions": [],
  "blocks": [],
  "simplified_code": "/*\n * Copyright (c) 2023 Shenzhen Kaihong Digital Industry Development Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TrashUserFileDataItem } from './TrashUserFileDataItem';\nimport { stashOrGetObject } from '../utils/SingleInstanceUtils';\n\nconst TAG = 'TrashUserFileDataItemCache';\n\nclass TrashUserFileDataItemCache {\n  private trashMediaDataItemMap = new Map<string, TrashUserFileDataItem>();\n\n  hasKey(key: string): boolean {\n    return this.trashMediaDataItemMap.has(key);\n  }\n\n  deleteKey(key: string): boolean {\n    return this.trashMediaDataItemMap.delete(key);\n  }\n\n  set(key: string, value: TrashUserFileDataItem): void {\n    this.trashMediaDataItemMap.set(key, value);\n  }\n\n  get(key: string): TrashUserFileDataItem {\n    return this.trashMediaDataItemMap.get(key);\n  }\n\n  clearAll(): void {\n    this.trashMediaDataItemMap.clear();\n  }\n}\n\nexport let trashUserFileDataItemCache: TrashUserFileDataItemCache = stashOrGetObject<TrashUserFileDataItemCache>(new TrashUserFileDataItemCache(), TAG);\n"
}