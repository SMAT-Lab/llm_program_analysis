digraph "187.ts" {
subgraph "cluster_@ts_files/187.ts: %dflt.[static]%dflt()" {
  label="@ts_files/187.ts: %dflt.[static]%dflt()";
  Node33800 [label="id:0
      this = this: @ts_files/187.ts: %dflt
      %0 = new @ts_files/187.ts: %AC$%dflt$%dflt$0
      instanceinvoke %0.<@ts_files/187.ts: %AC$%dflt$%dflt$0.constructor()>()
      mockConfig = %0
      instanceinvoke jest.<@%unk/%unk: .mock()>('axios')
      staticinvoke <@%unk/%unk: .describe()>('test use of novus node package - InboundParse class', %AM0)
      return"];
}
subgraph "cluster_@ts_files/187.ts: %dflt.%AM1$%AM0()" {
  label="@ts_files/187.ts: %dflt.%AM1$%AM0()";
  Node25760 [label="id:0
      this = this: @ts_files/187.ts: %dflt
      %0 = mockedAxios.<@%unk/%unk: .create>
      instanceinvoke %0.<@%unk/%unk: .mockReturnThis()>()
      %1 = new @%unk/%unk: Novu
      %2 = mockConfig.<@ts_files/187.ts: %AC$%dflt$%dflt$0.apiKey>
      instanceinvoke %1.<@%unk/%unk: Novu.constructor()>(%2)
      novu = %1
      return"];
}
subgraph "cluster_@ts_files/187.ts: %dflt.%AM2$%AM0()" {
  label="@ts_files/187.ts: %dflt.%AM2$%AM0()";
  Node25770 [label="id:0
      this = this: @ts_files/187.ts: %dflt
      %0 = new @ts_files/187.ts: %AC$%dflt$%AM2$%AM0$1
      instanceinvoke %0.<@ts_files/187.ts: %AC$%dflt$%AM2$%AM0$1.constructor()>()
      %1 = mockedAxios.<@%unk/%unk: .get>
      instanceinvoke %1.<@%unk/%unk: .mockResolvedValue()>(%0)
      %2 = novu.<@%unk/%unk: .inboundParse>
      %3 = instanceinvoke %2.<@%unk/%unk: .getMxStatus()>()
      %4 = await %3
      %5 = mockedAxios.<@%unk/%unk: .get>
      %6 = staticinvoke <@%unk/%unk: .expect()>(%5)
      instanceinvoke %6.<@%unk/%unk: .toHaveBeenCalled()>()
      %7 = mockedAxios.<@%unk/%unk: .get>
      %8 = staticinvoke <@%unk/%unk: .expect()>(%7)
      instanceinvoke %8.<@%unk/%unk: .toHaveBeenCalledWith()>('/inbound-parse/mx/status')
      return"];
}
subgraph "cluster_@ts_files/187.ts: %dflt.%AM0()" {
  label="@ts_files/187.ts: %dflt.%AM0()";
  Node23120 [label="id:0
      this = this: @ts_files/187.ts: %dflt
      mockedAxios = <jest.Mocked<unknown>>axios
      novu = undefined
      staticinvoke <@%unk/%unk: .beforeEach()>(%AM1$%AM0)
      staticinvoke <@%unk/%unk: .test()>('should get inbound parse correctly', %AM2$%AM0)
      return"];
}
}
