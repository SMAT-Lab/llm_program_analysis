{
  "type": "file",
  "name": "57.ts",
  "label": "57.ts",
  "start_line": -1,
  "end_line": 26,
  "classes": [
    {
      "type": "class",
      "name": "%dflt",
      "label": "%dflt",
      "start_line": -1,
      "end_line": 23,
      "functions": [
        {
          "type": "function",
          "name": "%dflt",
          "label": "%dflt",
          "start_line": -1,
          "end_line": 1,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/57.ts: %dflt\nTAG = 'UiUtil'\nTOAST_DURATION = 3000\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": ""
        },
        {
          "type": "function",
          "name": "showToast",
          "label": "showToast",
          "start_line": 1,
          "end_line": 23,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "message = parameter0: string\nthis = this: @ts_files/57.ts: %dflt\nnaviBarHeight = instanceinvoke screenManager.<@%unk/%unk: .getNaviBarHeight()>()\n%0 = 'showToast: ' + message\ninstanceinvoke Log.<@%unk/%unk: .debug()>(TAG, %0)\n%1 = new @ts_files/57.ts: %AC$%dflt$showToast$0\ninstanceinvoke %1.<@ts_files/57.ts: %AC$%dflt$showToast$0.constructor()>()\nshowToastOptions = %1\ninstanceinvoke prompt.<@%unk/%unk: .showToast()>(showToastOptions)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "export function showToast(message: string): void {\n  let naviBarHeight = screenManager.getNaviBarHeight()\n  Log.debug(TAG, 'showToast: ' + message);\n  let showToastOptions: ShowToastOptions = {\n    message: message,\n    duration: TOAST_DURATION,\n    bottom: (64 + naviBarHeight) + 'vp'\n  };\n  prompt.showToast(showToastOptions);\n}"
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": ""
    },
    {
      "type": "class",
      "name": "%AC$%dflt$showToast$0",
      "label": "%AC$%dflt$showToast$0",
      "start_line": 26,
      "end_line": 26,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n    message: message,\n    duration: TOAST_DURATION,\n    bottom: (64 + naviBarHeight) + 'vp'\n  }"
    }
  ],
  "functions": [],
  "blocks": [],
  "simplified_code": "/*\n * Copyright (c) 2023 Shenzhen Kaihong Digital Industry Development Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport prompt, { ShowToastOptions } from '@system.prompt';\nimport { Log } from './Log';\nimport { screenManager } from '../common/ScreenManager';\n\nconst TAG = 'UiUtil';\nconst TOAST_DURATION = 3000;\n\nexport function showToast(message: string): void {\n  let naviBarHeight = screenManager.getNaviBarHeight()\n  Log.debug(TAG, 'showToast: ' + message);\n  let showToastOptions: ShowToastOptions = {\n    message: message,\n    duration: TOAST_DURATION,\n    bottom: (64 + naviBarHeight) + 'vp'\n  };\n  prompt.showToast(showToastOptions);\n}\n"
}