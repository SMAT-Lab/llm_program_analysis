{
  "type": "file",
  "name": "183.ts",
  "label": "183.ts",
  "start_line": -1,
  "end_line": 167,
  "classes": [
    {
      "type": "class",
      "name": "%dflt",
      "label": "%dflt",
      "start_line": -1,
      "end_line": 162,
      "functions": [
        {
          "type": "function",
          "name": "%dflt",
          "label": "%dflt",
          "start_line": -1,
          "end_line": 162,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/183.ts: %dflt\nstaticinvoke <@%unk/%unk: .describe()>('TeamsUpdateMemberProps (definition/rest/v1)', %AM0)\nreturn",
              "start_line": 1,
              "end_line": 162,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": ""
        },
        {
          "type": "function",
          "name": "%AM2$%AM1$%AM0",
          "label": "%AM2$%AM1$%AM0",
          "start_line": 1,
          "end_line": 162,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/183.ts: %dflt\ninstanceinvoke assert.<@%unk/%unk: .isFunction()>(isTeamsUpdateProps)\nreturn",
              "start_line": 1,
              "end_line": 162,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "() => {\n\t\t\tassert.isFunction(isTeamsUpdateProps);\n\t\t}"
        },
        {
          "type": "function",
          "name": "%AM3$%AM1$%AM0",
          "label": "%AM3$%AM1$%AM0",
          "start_line": 1,
          "end_line": 162,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/183.ts: %dflt\n%0 = staticinvoke <@%unk/%unk: .isTeamsUpdateProps()>(undefined)\ninstanceinvoke assert.<@%unk/%unk: .isFalse()>(%0)\n%1 = staticinvoke <@%unk/%unk: .isTeamsUpdateProps()>(null)\ninstanceinvoke assert.<@%unk/%unk: .isFalse()>(%1)\n%2 = staticinvoke <@%unk/%unk: .isTeamsUpdateProps()>('')\ninstanceinvoke assert.<@%unk/%unk: .isFalse()>(%2)\n%3 = staticinvoke <@%unk/%unk: .isTeamsUpdateProps()>(123)\ninstanceinvoke assert.<@%unk/%unk: .isFalse()>(%3)\n%4 = new @ts_files/183.ts: %AC$%dflt$%AM3$%AM1$%AM0$0\ninstanceinvoke %4.<@ts_files/183.ts: %AC$%dflt$%AM3$%AM1$%AM0$0.constructor()>()\n%5 = staticinvoke <@%unk/%unk: .isTeamsUpdateProps()>(%4)\ninstanceinvoke assert.<@%unk/%unk: .isFalse()>(%5)\n%6 = newarray (any)[0]\n%7 = staticinvoke <@%unk/%unk: .isTeamsUpdateProps()>(%6)\ninstanceinvoke assert.<@%unk/%unk: .isFalse()>(%7)\n%8 = new @%unk/%unk: Date\ninstanceinvoke %8.<@%unk/%unk: Date.constructor()>()\n%9 = staticinvoke <@%unk/%unk: .isTeamsUpdateProps()>(%8)\ninstanceinvoke assert.<@%unk/%unk: .isFalse()>(%9)\n%10 = new @%unk/%unk: Error\ninstanceinvoke %10.<@%unk/%unk: Error.constructor()>()\n%11 = staticinvoke <@%unk/%unk: .isTeamsUpdateProps()>(%10)\ninstanceinvoke assert.<@%unk/%unk: .isFalse()>(%11)\nreturn",
              "start_line": 1,
              "end_line": 162,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "() => {\n\t\t\tassert.isFalse(isTeamsUpdateProps(undefined));\n\t\t\tassert.isFalse(isTeamsUpdateProps(null));\n\t\t\tassert.isFalse(isTeamsUpdateProps(''));\n\t\t\tassert.isFalse(isTeamsUpdateProps(123));\n\t\t\tassert.isFalse(isTeamsUpdateProps({}));\n\t\t\tassert.isFalse(isTeamsUpdateProps([]));\n\t\t\tassert.isFalse(isTeamsUpdateProps(new Date()));\n\t\t\tassert.isFalse(isTeamsUpdateProps(new Error()));\n\t\t}"
        },
        {
          "type": "function",
          "name": "%AM4$%AM1$%AM0",
          "label": "%AM4$%AM1$%AM0",
          "start_line": 1,
          "end_line": 162,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/183.ts: %dflt\n%0 = new @ts_files/183.ts: %AC$%dflt$%AM4$%AM1$%AM0$1\ninstanceinvoke %0.<@ts_files/183.ts: %AC$%dflt$%AM4$%AM1$%AM0$1.constructor()>()\n%1 = staticinvoke <@%unk/%unk: .isTeamsUpdateProps()>(%0)\ninstanceinvoke assert.<@%unk/%unk: .isFalse()>(%1)\nreturn",
              "start_line": 1,
              "end_line": 162,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "() => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t}),\n\t\t\t);\n\t\t}"
        },
        {
          "type": "function",
          "name": "%AM5$%AM1$%AM0",
          "label": "%AM5$%AM1$%AM0",
          "start_line": 1,
          "end_line": 162,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/183.ts: %dflt\n%0 = new @ts_files/183.ts: %AC$%dflt$%AM5$%AM1$%AM0$2\ninstanceinvoke %0.<@ts_files/183.ts: %AC$%dflt$%AM5$%AM1$%AM0$2.constructor()>()\n%1 = staticinvoke <@%unk/%unk: .isTeamsUpdateProps()>(%0)\ninstanceinvoke assert.<@%unk/%unk: .isFalse()>(%1)\nreturn",
              "start_line": 1,
              "end_line": 162,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "() => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t}),\n\t\t\t);\n\t\t}"
        },
        {
          "type": "function",
          "name": "%AM6$%AM1$%AM0",
          "label": "%AM6$%AM1$%AM0",
          "start_line": 1,
          "end_line": 162,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/183.ts: %dflt\n%0 = new @ts_files/183.ts: %AC$%dflt$%AM6$%AM1$%AM0$3\ninstanceinvoke %0.<@ts_files/183.ts: %AC$%dflt$%AM6$%AM1$%AM0$3.constructor()>()\n%1 = staticinvoke <@%unk/%unk: .isTeamsUpdateProps()>(%0)\ninstanceinvoke assert.<@%unk/%unk: .isFalse()>(%1)\nreturn",
              "start_line": 1,
              "end_line": 162,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "() => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t\tdata: {},\n\t\t\t\t}),\n\t\t\t);\n\t\t}"
        },
        {
          "type": "function",
          "name": "%AM7$%AM1$%AM0",
          "label": "%AM7$%AM1$%AM0",
          "start_line": 1,
          "end_line": 162,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/183.ts: %dflt\n%0 = new @ts_files/183.ts: %AC$%dflt$%AM7$%AM1$%AM0$5\ninstanceinvoke %0.<@ts_files/183.ts: %AC$%dflt$%AM7$%AM1$%AM0$5.constructor()>()\n%1 = staticinvoke <@%unk/%unk: .isTeamsUpdateProps()>(%0)\ninstanceinvoke assert.<@%unk/%unk: .isFalse()>(%1)\nreturn",
              "start_line": 1,
              "end_line": 162,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "() => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t\tdata: {},\n\t\t\t\t}),\n\t\t\t);\n\t\t}"
        },
        {
          "type": "function",
          "name": "%AM8$%AM1$%AM0",
          "label": "%AM8$%AM1$%AM0",
          "start_line": 1,
          "end_line": 162,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/183.ts: %dflt\n%0 = new @ts_files/183.ts: %AC$%dflt$%AM8$%AM1$%AM0$7\ninstanceinvoke %0.<@ts_files/183.ts: %AC$%dflt$%AM8$%AM1$%AM0$7.constructor()>()\n%1 = staticinvoke <@%unk/%unk: .isTeamsUpdateProps()>(%0)\ninstanceinvoke assert.<@%unk/%unk: .isFalse()>(%1)\nreturn",
              "start_line": 1,
              "end_line": 162,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "() => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t\tdata: 'data',\n\t\t\t\t}),\n\t\t\t);\n\t\t}"
        },
        {
          "type": "function",
          "name": "%AM9$%AM1$%AM0",
          "label": "%AM9$%AM1$%AM0",
          "start_line": 1,
          "end_line": 162,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/183.ts: %dflt\n%0 = new @ts_files/183.ts: %AC$%dflt$%AM9$%AM1$%AM0$8\ninstanceinvoke %0.<@ts_files/183.ts: %AC$%dflt$%AM9$%AM1$%AM0$8.constructor()>()\n%1 = staticinvoke <@%unk/%unk: .isTeamsUpdateProps()>(%0)\ninstanceinvoke assert.<@%unk/%unk: .isFalse()>(%1)\nreturn",
              "start_line": 1,
              "end_line": 162,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "() => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t\tdata: 'data',\n\t\t\t\t}),\n\t\t\t);\n\t\t}"
        },
        {
          "type": "function",
          "name": "%AM10$%AM1$%AM0",
          "label": "%AM10$%AM1$%AM0",
          "start_line": 1,
          "end_line": 162,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/183.ts: %dflt\n%0 = new @ts_files/183.ts: %AC$%dflt$%AM10$%AM1$%AM0$9\ninstanceinvoke %0.<@ts_files/183.ts: %AC$%dflt$%AM10$%AM1$%AM0$9.constructor()>()\n%1 = staticinvoke <@%unk/%unk: .isTeamsUpdateProps()>(%0)\ninstanceinvoke assert.<@%unk/%unk: .isTrue()>(%1)\nreturn",
              "start_line": 1,
              "end_line": 162,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "() => {\n\t\t\tassert.isTrue(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t}"
        },
        {
          "type": "function",
          "name": "%AM11$%AM1$%AM0",
          "label": "%AM11$%AM1$%AM0",
          "start_line": 1,
          "end_line": 162,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/183.ts: %dflt\n%0 = new @ts_files/183.ts: %AC$%dflt$%AM11$%AM1$%AM0$11\ninstanceinvoke %0.<@ts_files/183.ts: %AC$%dflt$%AM11$%AM1$%AM0$11.constructor()>()\n%1 = staticinvoke <@%unk/%unk: .isTeamsUpdateProps()>(%0)\ninstanceinvoke assert.<@%unk/%unk: .isTrue()>(%1)\nreturn",
              "start_line": 1,
              "end_line": 162,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "() => {\n\t\t\tassert.isTrue(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t}"
        },
        {
          "type": "function",
          "name": "%AM12$%AM1$%AM0",
          "label": "%AM12$%AM1$%AM0",
          "start_line": 1,
          "end_line": 162,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/183.ts: %dflt\n%0 = new @ts_files/183.ts: %AC$%dflt$%AM12$%AM1$%AM0$13\ninstanceinvoke %0.<@ts_files/183.ts: %AC$%dflt$%AM12$%AM1$%AM0$13.constructor()>()\n%1 = staticinvoke <@%unk/%unk: .isTeamsUpdateProps()>(%0)\ninstanceinvoke assert.<@%unk/%unk: .isTrue()>(%1)\nreturn",
              "start_line": 1,
              "end_line": 162,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "() => {\n\t\t\tassert.isTrue(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t}"
        },
        {
          "type": "function",
          "name": "%AM13$%AM1$%AM0",
          "label": "%AM13$%AM1$%AM0",
          "start_line": 1,
          "end_line": 162,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/183.ts: %dflt\n%0 = new @ts_files/183.ts: %AC$%dflt$%AM13$%AM1$%AM0$15\ninstanceinvoke %0.<@ts_files/183.ts: %AC$%dflt$%AM13$%AM1$%AM0$15.constructor()>()\n%1 = staticinvoke <@%unk/%unk: .isTeamsUpdateProps()>(%0)\ninstanceinvoke assert.<@%unk/%unk: .isTrue()>(%1)\nreturn",
              "start_line": 1,
              "end_line": 162,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "() => {\n\t\t\tassert.isTrue(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t}"
        },
        {
          "type": "function",
          "name": "%AM14$%AM1$%AM0",
          "label": "%AM14$%AM1$%AM0",
          "start_line": 1,
          "end_line": 162,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/183.ts: %dflt\n%0 = new @ts_files/183.ts: %AC$%dflt$%AM14$%AM1$%AM0$17\ninstanceinvoke %0.<@ts_files/183.ts: %AC$%dflt$%AM14$%AM1$%AM0$17.constructor()>()\n%1 = staticinvoke <@%unk/%unk: .isTeamsUpdateProps()>(%0)\ninstanceinvoke assert.<@%unk/%unk: .isTrue()>(%1)\nreturn",
              "start_line": 1,
              "end_line": 162,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "() => {\n\t\t\tassert.isTrue(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t}"
        },
        {
          "type": "function",
          "name": "%AM15$%AM1$%AM0",
          "label": "%AM15$%AM1$%AM0",
          "start_line": 1,
          "end_line": 162,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/183.ts: %dflt\n%0 = new @ts_files/183.ts: %AC$%dflt$%AM15$%AM1$%AM0$19\ninstanceinvoke %0.<@ts_files/183.ts: %AC$%dflt$%AM15$%AM1$%AM0$19.constructor()>()\n%1 = staticinvoke <@%unk/%unk: .isTeamsUpdateProps()>(%0)\ninstanceinvoke assert.<@%unk/%unk: .isTrue()>(%1)\nreturn",
              "start_line": 1,
              "end_line": 162,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "() => {\n\t\t\tassert.isTrue(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t}"
        },
        {
          "type": "function",
          "name": "%AM16$%AM1$%AM0",
          "label": "%AM16$%AM1$%AM0",
          "start_line": 1,
          "end_line": 162,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/183.ts: %dflt\n%0 = new @ts_files/183.ts: %AC$%dflt$%AM16$%AM1$%AM0$21\ninstanceinvoke %0.<@ts_files/183.ts: %AC$%dflt$%AM16$%AM1$%AM0$21.constructor()>()\n%1 = staticinvoke <@%unk/%unk: .isTeamsUpdateProps()>(%0)\ninstanceinvoke assert.<@%unk/%unk: .isFalse()>(%1)\nreturn",
              "start_line": 1,
              "end_line": 162,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "() => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t\textra: 'extra',\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t}"
        },
        {
          "type": "function",
          "name": "%AM17$%AM1$%AM0",
          "label": "%AM17$%AM1$%AM0",
          "start_line": 1,
          "end_line": 162,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/183.ts: %dflt\n%0 = new @ts_files/183.ts: %AC$%dflt$%AM17$%AM1$%AM0$23\ninstanceinvoke %0.<@ts_files/183.ts: %AC$%dflt$%AM17$%AM1$%AM0$23.constructor()>()\n%1 = staticinvoke <@%unk/%unk: .isTeamsUpdateProps()>(%0)\ninstanceinvoke assert.<@%unk/%unk: .isFalse()>(%1)\nreturn",
              "start_line": 1,
              "end_line": 162,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "() => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t\textra: 'extra',\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t}"
        },
        {
          "type": "function",
          "name": "%AM18$%AM1$%AM0",
          "label": "%AM18$%AM1$%AM0",
          "start_line": 1,
          "end_line": 162,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/183.ts: %dflt\n%0 = new @ts_files/183.ts: %AC$%dflt$%AM18$%AM1$%AM0$25\ninstanceinvoke %0.<@ts_files/183.ts: %AC$%dflt$%AM18$%AM1$%AM0$25.constructor()>()\n%1 = staticinvoke <@%unk/%unk: .isTeamsUpdateProps()>(%0)\ninstanceinvoke assert.<@%unk/%unk: .isFalse()>(%1)\nreturn",
              "start_line": 1,
              "end_line": 162,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "() => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t\textra: 'extra',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t}"
        },
        {
          "type": "function",
          "name": "%AM19$%AM1$%AM0",
          "label": "%AM19$%AM1$%AM0",
          "start_line": 1,
          "end_line": 162,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/183.ts: %dflt\n%0 = new @ts_files/183.ts: %AC$%dflt$%AM19$%AM1$%AM0$27\ninstanceinvoke %0.<@ts_files/183.ts: %AC$%dflt$%AM19$%AM1$%AM0$27.constructor()>()\n%1 = staticinvoke <@%unk/%unk: .isTeamsUpdateProps()>(%0)\ninstanceinvoke assert.<@%unk/%unk: .isFalse()>(%1)\nreturn",
              "start_line": 1,
              "end_line": 162,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "() => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t\textra: 'extra',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t}"
        },
        {
          "type": "function",
          "name": "%AM1$%AM0",
          "label": "%AM1$%AM0",
          "start_line": 1,
          "end_line": 162,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/183.ts: %dflt\nstaticinvoke <@%unk/%unk: .it()>('should be a function', %AM2$%AM1$%AM0)\nstaticinvoke <@%unk/%unk: .it()>('should return false when provided anything that is not an TeamsUpdateProps', %AM3$%AM1$%AM0)\nstaticinvoke <@%unk/%unk: .it()>('should return false when only teamName is provided to TeamsUpdateProps', %AM4$%AM1$%AM0)\nstaticinvoke <@%unk/%unk: .it()>('should return false when only teamId is provided to TeamsUpdateProps', %AM5$%AM1$%AM0)\nstaticinvoke <@%unk/%unk: .it()>('should return false when teamName and data are provided to TeamsUpdateProps but data is an empty object', %AM6$%AM1$%AM0)\nstaticinvoke <@%unk/%unk: .it()>('should return false when teamId and data are provided to TeamsUpdateProps but data is an empty object', %AM7$%AM1$%AM0)\nstaticinvoke <@%unk/%unk: .it()>('should return false when teamName and data are provided to TeamsUpdateProps but data is not an object', %AM8$%AM1$%AM0)\nstaticinvoke <@%unk/%unk: .it()>('should return false when teamId and data are provided to TeamsUpdateProps but data is not an object', %AM9$%AM1$%AM0)\nstaticinvoke <@%unk/%unk: .it()>('should return true when teamName and data.name are provided to TeamsUpdateProps', %AM10$%AM1$%AM0)\nstaticinvoke <@%unk/%unk: .it()>('should return true when teamId and data.name are provided to TeamsUpdateProps', %AM11$%AM1$%AM0)\nstaticinvoke <@%unk/%unk: .it()>('should return true when teamName and data.type are provided to TeamsUpdateProps', %AM12$%AM1$%AM0)\nstaticinvoke <@%unk/%unk: .it()>('should return true when teamId and data.type are provided to TeamsUpdateProps', %AM13$%AM1$%AM0)\nstaticinvoke <@%unk/%unk: .it()>('should return true when teamName and data.name and data.type are provided to TeamsUpdateProps', %AM14$%AM1$%AM0)\nstaticinvoke <@%unk/%unk: .it()>('should return true when teamId and data.name and data.type are provided to TeamsUpdateProps', %AM15$%AM1$%AM0)\nstaticinvoke <@%unk/%unk: .it()>('should return false when teamName, data.name, data.type are some more extra data  are provided to TeamsUpdateProps', %AM16$%AM1$%AM0)\nstaticinvoke <@%unk/%unk: .it()>('should return false when teamId, data.name, data.type are some more extra data  are provided to TeamsUpdateProps', %AM17$%AM1$%AM0)\nstaticinvoke <@%unk/%unk: .it()>('should return false when teamName, data.name, data.type are some more extra parameter are provided to TeamsUpdateProps', %AM18$%AM1$%AM0)\nstaticinvoke <@%unk/%unk: .it()>('should return false when teamId, data.name, data.type are some more extra parameter are provided to TeamsUpdateProps', %AM19$%AM1$%AM0)\nreturn",
              "start_line": 1,
              "end_line": 162,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "() => {\n\t\tit('should be a function', () => {\n\t\t\tassert.isFunction(isTeamsUpdateProps);\n\t\t});\n\t\tit('should return false when provided anything that is not an TeamsUpdateProps', () => {\n\t\t\tassert.isFalse(isTeamsUpdateProps(undefined));\n\t\t\tassert.isFalse(isTeamsUpdateProps(null));\n\t\t\tassert.isFalse(isTeamsUpdateProps(''));\n\t\t\tassert.isFalse(isTeamsUpdateProps(123));\n\t\t\tassert.isFalse(isTeamsUpdateProps({}));\n\t\t\tassert.isFalse(isTeamsUpdateProps([]));\n\t\t\tassert.isFalse(isTeamsUpdateProps(new Date()));\n\t\t\tassert.isFalse(isTeamsUpdateProps(new Error()));\n\t\t});\n\t\tit('should return false when only teamName is provided to TeamsUpdateProps', () => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return false when only teamId is provided to TeamsUpdateProps', () => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return false when teamName and data are provided to TeamsUpdateProps but data is an empty object', () => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t\tdata: {},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return false when teamId and data are provided to TeamsUpdateProps but data is an empty object', () => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t\tdata: {},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return false when teamName and data are provided to TeamsUpdateProps but data is not an object', () => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t\tdata: 'data',\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return false when teamId and data are provided to TeamsUpdateProps but data is not an object', () => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t\tdata: 'data',\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return true when teamName and data.name are provided to TeamsUpdateProps', () => {\n\t\t\tassert.isTrue(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return true when teamId and data.name are provided to TeamsUpdateProps', () => {\n\t\t\tassert.isTrue(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return true when teamName and data.type are provided to TeamsUpdateProps', () => {\n\t\t\tassert.isTrue(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return true when teamId and data.type are provided to TeamsUpdateProps', () => {\n\t\t\tassert.isTrue(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return true when teamName and data.name and data.type are provided to TeamsUpdateProps', () => {\n\t\t\tassert.isTrue(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return true when teamId and data.name and data.type are provided to TeamsUpdateProps', () => {\n\t\t\tassert.isTrue(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return false when teamName, data.name, data.type are some more extra data  are provided to TeamsUpdateProps', () => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t\textra: 'extra',\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return false when teamId, data.name, data.type are some more extra data  are provided to TeamsUpdateProps', () => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t\textra: 'extra',\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return false when teamName, data.name, data.type are some more extra parameter are provided to TeamsUpdateProps', () => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t\textra: 'extra',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return false when teamId, data.name, data.type are some more extra parameter are provided to TeamsUpdateProps', () => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t\textra: 'extra',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t}"
        },
        {
          "type": "function",
          "name": "%AM0",
          "label": "%AM0",
          "start_line": 1,
          "end_line": 162,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/183.ts: %dflt\nstaticinvoke <@%unk/%unk: .describe()>('isTeamsUpdateProps', %AM1$%AM0)\nreturn",
              "start_line": 1,
              "end_line": 162,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "() => {\n\tdescribe('isTeamsUpdateProps', () => {\n\t\tit('should be a function', () => {\n\t\t\tassert.isFunction(isTeamsUpdateProps);\n\t\t});\n\t\tit('should return false when provided anything that is not an TeamsUpdateProps', () => {\n\t\t\tassert.isFalse(isTeamsUpdateProps(undefined));\n\t\t\tassert.isFalse(isTeamsUpdateProps(null));\n\t\t\tassert.isFalse(isTeamsUpdateProps(''));\n\t\t\tassert.isFalse(isTeamsUpdateProps(123));\n\t\t\tassert.isFalse(isTeamsUpdateProps({}));\n\t\t\tassert.isFalse(isTeamsUpdateProps([]));\n\t\t\tassert.isFalse(isTeamsUpdateProps(new Date()));\n\t\t\tassert.isFalse(isTeamsUpdateProps(new Error()));\n\t\t});\n\t\tit('should return false when only teamName is provided to TeamsUpdateProps', () => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return false when only teamId is provided to TeamsUpdateProps', () => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return false when teamName and data are provided to TeamsUpdateProps but data is an empty object', () => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t\tdata: {},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return false when teamId and data are provided to TeamsUpdateProps but data is an empty object', () => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t\tdata: {},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return false when teamName and data are provided to TeamsUpdateProps but data is not an object', () => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t\tdata: 'data',\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return false when teamId and data are provided to TeamsUpdateProps but data is not an object', () => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t\tdata: 'data',\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return true when teamName and data.name are provided to TeamsUpdateProps', () => {\n\t\t\tassert.isTrue(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return true when teamId and data.name are provided to TeamsUpdateProps', () => {\n\t\t\tassert.isTrue(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return true when teamName and data.type are provided to TeamsUpdateProps', () => {\n\t\t\tassert.isTrue(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return true when teamId and data.type are provided to TeamsUpdateProps', () => {\n\t\t\tassert.isTrue(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return true when teamName and data.name and data.type are provided to TeamsUpdateProps', () => {\n\t\t\tassert.isTrue(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return true when teamId and data.name and data.type are provided to TeamsUpdateProps', () => {\n\t\t\tassert.isTrue(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return false when teamName, data.name, data.type are some more extra data  are provided to TeamsUpdateProps', () => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t\textra: 'extra',\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return false when teamId, data.name, data.type are some more extra data  are provided to TeamsUpdateProps', () => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t\textra: 'extra',\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return false when teamName, data.name, data.type are some more extra parameter are provided to TeamsUpdateProps', () => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t\textra: 'extra',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return false when teamId, data.name, data.type are some more extra parameter are provided to TeamsUpdateProps', () => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t\textra: 'extra',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t});\n}"
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": ""
    },
    {
      "type": "class",
      "name": "%AC$%dflt$%AM3$%AM1$%AM0$0",
      "label": "%AC$%dflt$%AM3$%AM1$%AM0$0",
      "start_line": 13,
      "end_line": 13,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{}"
    },
    {
      "type": "class",
      "name": "%AC$%dflt$%AM4$%AM1$%AM0$1",
      "label": "%AC$%dflt$%AM4$%AM1$%AM0$1",
      "start_line": 20,
      "end_line": 20,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t}"
    },
    {
      "type": "class",
      "name": "%AC$%dflt$%AM5$%AM1$%AM0$2",
      "label": "%AC$%dflt$%AM5$%AM1$%AM0$2",
      "start_line": 27,
      "end_line": 27,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t}"
    },
    {
      "type": "class",
      "name": "%AC$%AC$%dflt$%AM6$%AM1$%AM0$3$%instInit$4",
      "label": "%AC$%AC$%dflt$%AM6$%AM1$%AM0$3$%instInit$4",
      "start_line": 36,
      "end_line": 36,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{}"
    },
    {
      "type": "class",
      "name": "%AC$%dflt$%AM6$%AM1$%AM0$3",
      "label": "%AC$%dflt$%AM6$%AM1$%AM0$3",
      "start_line": 34,
      "end_line": 34,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t\tdata: {},\n\t\t\t\t}"
    },
    {
      "type": "class",
      "name": "%AC$%AC$%dflt$%AM7$%AM1$%AM0$5$%instInit$6",
      "label": "%AC$%AC$%dflt$%AM7$%AM1$%AM0$5$%instInit$6",
      "start_line": 44,
      "end_line": 44,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{}"
    },
    {
      "type": "class",
      "name": "%AC$%dflt$%AM7$%AM1$%AM0$5",
      "label": "%AC$%dflt$%AM7$%AM1$%AM0$5",
      "start_line": 42,
      "end_line": 42,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t\tdata: {},\n\t\t\t\t}"
    },
    {
      "type": "class",
      "name": "%AC$%dflt$%AM8$%AM1$%AM0$7",
      "label": "%AC$%dflt$%AM8$%AM1$%AM0$7",
      "start_line": 50,
      "end_line": 50,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t\tdata: 'data',\n\t\t\t\t}"
    },
    {
      "type": "class",
      "name": "%AC$%dflt$%AM9$%AM1$%AM0$8",
      "label": "%AC$%dflt$%AM9$%AM1$%AM0$8",
      "start_line": 58,
      "end_line": 58,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t\tdata: 'data',\n\t\t\t\t}"
    },
    {
      "type": "class",
      "name": "%AC$%AC$%dflt$%AM10$%AM1$%AM0$9$%instInit$10",
      "label": "%AC$%AC$%dflt$%AM10$%AM1$%AM0$9$%instInit$10",
      "start_line": 68,
      "end_line": 68,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t}"
    },
    {
      "type": "class",
      "name": "%AC$%dflt$%AM10$%AM1$%AM0$9",
      "label": "%AC$%dflt$%AM10$%AM1$%AM0$9",
      "start_line": 66,
      "end_line": 66,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t},\n\t\t\t\t}"
    },
    {
      "type": "class",
      "name": "%AC$%AC$%dflt$%AM11$%AM1$%AM0$11$%instInit$12",
      "label": "%AC$%AC$%dflt$%AM11$%AM1$%AM0$11$%instInit$12",
      "start_line": 78,
      "end_line": 78,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t}"
    },
    {
      "type": "class",
      "name": "%AC$%dflt$%AM11$%AM1$%AM0$11",
      "label": "%AC$%dflt$%AM11$%AM1$%AM0$11",
      "start_line": 76,
      "end_line": 76,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t},\n\t\t\t\t}"
    },
    {
      "type": "class",
      "name": "%AC$%AC$%dflt$%AM12$%AM1$%AM0$13$%instInit$14",
      "label": "%AC$%AC$%dflt$%AM12$%AM1$%AM0$13$%instInit$14",
      "start_line": 88,
      "end_line": 88,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t}"
    },
    {
      "type": "class",
      "name": "%AC$%dflt$%AM12$%AM1$%AM0$13",
      "label": "%AC$%dflt$%AM12$%AM1$%AM0$13",
      "start_line": 86,
      "end_line": 86,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t},\n\t\t\t\t}"
    },
    {
      "type": "class",
      "name": "%AC$%AC$%dflt$%AM13$%AM1$%AM0$15$%instInit$16",
      "label": "%AC$%AC$%dflt$%AM13$%AM1$%AM0$15$%instInit$16",
      "start_line": 98,
      "end_line": 98,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t}"
    },
    {
      "type": "class",
      "name": "%AC$%dflt$%AM13$%AM1$%AM0$15",
      "label": "%AC$%dflt$%AM13$%AM1$%AM0$15",
      "start_line": 96,
      "end_line": 96,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t},\n\t\t\t\t}"
    },
    {
      "type": "class",
      "name": "%AC$%AC$%dflt$%AM14$%AM1$%AM0$17$%instInit$18",
      "label": "%AC$%AC$%dflt$%AM14$%AM1$%AM0$17$%instInit$18",
      "start_line": 108,
      "end_line": 108,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t}"
    },
    {
      "type": "class",
      "name": "%AC$%dflt$%AM14$%AM1$%AM0$17",
      "label": "%AC$%dflt$%AM14$%AM1$%AM0$17",
      "start_line": 106,
      "end_line": 106,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t},\n\t\t\t\t}"
    },
    {
      "type": "class",
      "name": "%AC$%AC$%dflt$%AM15$%AM1$%AM0$19$%instInit$20",
      "label": "%AC$%AC$%dflt$%AM15$%AM1$%AM0$19$%instInit$20",
      "start_line": 119,
      "end_line": 119,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t}"
    },
    {
      "type": "class",
      "name": "%AC$%dflt$%AM15$%AM1$%AM0$19",
      "label": "%AC$%dflt$%AM15$%AM1$%AM0$19",
      "start_line": 117,
      "end_line": 117,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t},\n\t\t\t\t}"
    },
    {
      "type": "class",
      "name": "%AC$%AC$%dflt$%AM16$%AM1$%AM0$21$%instInit$22",
      "label": "%AC$%AC$%dflt$%AM16$%AM1$%AM0$21$%instInit$22",
      "start_line": 130,
      "end_line": 130,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t\textra: 'extra',\n\t\t\t\t\t}"
    },
    {
      "type": "class",
      "name": "%AC$%dflt$%AM16$%AM1$%AM0$21",
      "label": "%AC$%dflt$%AM16$%AM1$%AM0$21",
      "start_line": 128,
      "end_line": 128,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t\textra: 'extra',\n\t\t\t\t\t},\n\t\t\t\t}"
    },
    {
      "type": "class",
      "name": "%AC$%AC$%dflt$%AM17$%AM1$%AM0$23$%instInit$24",
      "label": "%AC$%AC$%dflt$%AM17$%AM1$%AM0$23$%instInit$24",
      "start_line": 142,
      "end_line": 142,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t\textra: 'extra',\n\t\t\t\t\t}"
    },
    {
      "type": "class",
      "name": "%AC$%dflt$%AM17$%AM1$%AM0$23",
      "label": "%AC$%dflt$%AM17$%AM1$%AM0$23",
      "start_line": 140,
      "end_line": 140,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t\textra: 'extra',\n\t\t\t\t\t},\n\t\t\t\t}"
    },
    {
      "type": "class",
      "name": "%AC$%AC$%dflt$%AM18$%AM1$%AM0$25$%instInit$26",
      "label": "%AC$%AC$%dflt$%AM18$%AM1$%AM0$25$%instInit$26",
      "start_line": 155,
      "end_line": 155,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t}"
    },
    {
      "type": "class",
      "name": "%AC$%dflt$%AM18$%AM1$%AM0$25",
      "label": "%AC$%dflt$%AM18$%AM1$%AM0$25",
      "start_line": 152,
      "end_line": 152,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t\textra: 'extra',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t},\n\t\t\t\t}"
    },
    {
      "type": "class",
      "name": "%AC$%AC$%dflt$%AM19$%AM1$%AM0$27$%instInit$28",
      "label": "%AC$%AC$%dflt$%AM19$%AM1$%AM0$27$%instInit$28",
      "start_line": 167,
      "end_line": 167,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t}"
    },
    {
      "type": "class",
      "name": "%AC$%dflt$%AM19$%AM1$%AM0$27",
      "label": "%AC$%dflt$%AM19$%AM1$%AM0$27",
      "start_line": 164,
      "end_line": 164,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t\textra: 'extra',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t},\n\t\t\t\t}"
    }
  ],
  "functions": [],
  "blocks": [],
  "simplified_code": "import { isTeamsUpdateProps } from '@rocket.chat/rest-typings';\nimport { assert } from 'chai';\ndescribe('TeamsUpdateMemberProps (definition/rest/v1)', () => {\n\tdescribe('isTeamsUpdateProps', () => {\n\t\tit('should be a function', () => {\n\t\t\tassert.isFunction(isTeamsUpdateProps);\n\t\t});\n\t\tit('should return false when provided anything that is not an TeamsUpdateProps', () => {\n\t\t\tassert.isFalse(isTeamsUpdateProps(undefined));\n\t\t\tassert.isFalse(isTeamsUpdateProps(null));\n\t\t\tassert.isFalse(isTeamsUpdateProps(''));\n\t\t\tassert.isFalse(isTeamsUpdateProps(123));\n\t\t\tassert.isFalse(isTeamsUpdateProps({}));\n\t\t\tassert.isFalse(isTeamsUpdateProps([]));\n\t\t\tassert.isFalse(isTeamsUpdateProps(new Date()));\n\t\t\tassert.isFalse(isTeamsUpdateProps(new Error()));\n\t\t});\n\t\tit('should return false when only teamName is provided to TeamsUpdateProps', () => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return false when only teamId is provided to TeamsUpdateProps', () => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return false when teamName and data are provided to TeamsUpdateProps but data is an empty object', () => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t\tdata: {},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return false when teamId and data are provided to TeamsUpdateProps but data is an empty object', () => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t\tdata: {},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return false when teamName and data are provided to TeamsUpdateProps but data is not an object', () => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t\tdata: 'data',\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return false when teamId and data are provided to TeamsUpdateProps but data is not an object', () => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t\tdata: 'data',\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return true when teamName and data.name are provided to TeamsUpdateProps', () => {\n\t\t\tassert.isTrue(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return true when teamId and data.name are provided to TeamsUpdateProps', () => {\n\t\t\tassert.isTrue(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return true when teamName and data.type are provided to TeamsUpdateProps', () => {\n\t\t\tassert.isTrue(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return true when teamId and data.type are provided to TeamsUpdateProps', () => {\n\t\t\tassert.isTrue(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return true when teamName and data.name and data.type are provided to TeamsUpdateProps', () => {\n\t\t\tassert.isTrue(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return true when teamId and data.name and data.type are provided to TeamsUpdateProps', () => {\n\t\t\tassert.isTrue(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return false when teamName, data.name, data.type are some more extra data  are provided to TeamsUpdateProps', () => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t\textra: 'extra',\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return false when teamId, data.name, data.type are some more extra data  are provided to TeamsUpdateProps', () => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t\textra: 'extra',\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return false when teamName, data.name, data.type are some more extra parameter are provided to TeamsUpdateProps', () => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamName: 'teamName',\n\t\t\t\t\textra: 'extra',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t\tit('should return false when teamId, data.name, data.type are some more extra parameter are provided to TeamsUpdateProps', () => {\n\t\t\tassert.isFalse(\n\t\t\t\tisTeamsUpdateProps({\n\t\t\t\t\tteamId: 'teamId',\n\t\t\t\t\textra: 'extra',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 0,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t});\n});"
}