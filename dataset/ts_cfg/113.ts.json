{
  "type": "file",
  "name": "113.ts",
  "label": "113.ts",
  "start_line": -1,
  "end_line": 56,
  "classes": [
    {
      "type": "class",
      "name": "%dflt",
      "label": "%dflt",
      "start_line": -1,
      "end_line": 1,
      "functions": [
        {
          "type": "function",
          "name": "%dflt",
          "label": "%dflt",
          "start_line": -1,
          "end_line": 1,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/113.ts: %dflt\n%0 = new @ts_files/113.ts: Logger\ninstanceinvoke %0.<@ts_files/113.ts: Logger.constructor(string)>('[stageuiabilitydevelop]')\ndefault = %0\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": ""
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": ""
    },
    {
      "type": "class",
      "name": "Logger",
      "label": "Logger",
      "start_line": 1,
      "end_line": 56,
      "functions": [
        {
          "type": "function",
          "name": "constructor",
          "label": "constructor",
          "start_line": 1,
          "end_line": 23,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "instanceinvoke this.<@ts_files/113.ts: Logger.%instInit()>()\nprefix = parameter0: string\nthis = this: @ts_files/113.ts: Logger\nthis.<@ts_files/113.ts: Logger.prefix> = prefix\nthis.<@ts_files/113.ts: Logger.domain> = 65280\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "constructor(prefix: string) {\n    this.prefix = prefix;\n    this.domain = 0xFF00;\n  }"
        },
        {
          "type": "function",
          "name": "debug",
          "label": "debug",
          "start_line": 1,
          "end_line": 32,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "args = parameter0: string[]\nthis = this: @ts_files/113.ts: Logger\n%0 = this.<@ts_files/113.ts: Logger.domain>\n%1 = this.<@ts_files/113.ts: Logger.prefix>\n%2 = this.<@ts_files/113.ts: Logger.format>\ninstanceinvoke hilog.<@%unk/%unk: .debug()>(%0, %1, %2, args)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "debug(...args: string[]): void {\n    hilog.debug(this.domain, this.prefix, this.format, args);\n  }"
        },
        {
          "type": "function",
          "name": "info",
          "label": "info",
          "start_line": 1,
          "end_line": 40,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "args = parameter0: string[]\nthis = this: @ts_files/113.ts: Logger\n%0 = this.<@ts_files/113.ts: Logger.domain>\n%1 = this.<@ts_files/113.ts: Logger.prefix>\n%2 = this.<@ts_files/113.ts: Logger.format>\ninstanceinvoke hilog.<@%unk/%unk: .info()>(%0, %1, %2, args)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "info(...args: string[]): void {\n    hilog.info(this.domain, this.prefix, this.format, args);\n  }"
        },
        {
          "type": "function",
          "name": "warn",
          "label": "warn",
          "start_line": 1,
          "end_line": 48,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "args = parameter0: string[]\nthis = this: @ts_files/113.ts: Logger\n%0 = this.<@ts_files/113.ts: Logger.domain>\n%1 = this.<@ts_files/113.ts: Logger.prefix>\n%2 = this.<@ts_files/113.ts: Logger.format>\ninstanceinvoke hilog.<@%unk/%unk: .warn()>(%0, %1, %2, args)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "warn(...args: string[]): void {\n    hilog.warn(this.domain, this.prefix, this.format, args);\n  }"
        },
        {
          "type": "function",
          "name": "error",
          "label": "error",
          "start_line": 1,
          "end_line": 56,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "args = parameter0: string[]\nthis = this: @ts_files/113.ts: Logger\n%0 = this.<@ts_files/113.ts: Logger.domain>\n%1 = this.<@ts_files/113.ts: Logger.prefix>\n%2 = this.<@ts_files/113.ts: Logger.format>\ninstanceinvoke hilog.<@%unk/%unk: .error()>(%0, %1, %2, args)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "error(...args: string[]): void {\n    hilog.error(this.domain, this.prefix, this.format, args);\n  }"
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": "class Logger {\n  private domain: number;\n  private prefix: string;\n  private format: string = '%{public}s, %{public}s';\n\n  constructor(prefix: string) {\n    this.prefix = prefix;\n    this.domain = 0xFF00;\n  }\n\n  /**\n   * debug\n   * @param args\n   */\n  debug(...args: string[]): void {\n    hilog.debug(this.domain, this.prefix, this.format, args);\n  }\n\n  /**\n   * info\n   * @param args\n   */\n  info(...args: string[]): void {\n    hilog.info(this.domain, this.prefix, this.format, args);\n  }\n\n  /**\n   * warn\n   * @param args\n   */\n  warn(...args: string[]): void {\n    hilog.warn(this.domain, this.prefix, this.format, args);\n  }\n\n  /**\n   * error\n   * @param args\n   */\n  error(...args: string[]): void {\n    hilog.error(this.domain, this.prefix, this.format, args);\n  }\n}"
    }
  ],
  "functions": [],
  "blocks": [],
  "simplified_code": "/*\n * Copyright (c) 2023 Huawei Device Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport hilog from '@ohos.hilog';\n\nclass Logger {\n  private domain: number;\n  private prefix: string;\n  private format: string = '%{public}s, %{public}s';\n\n  constructor(prefix: string) {\n    this.prefix = prefix;\n    this.domain = 0xFF00;\n  }\n\n  /**\n   * debug\n   * @param args\n   */\n  debug(...args: string[]): void {\n    hilog.debug(this.domain, this.prefix, this.format, args);\n  }\n\n  /**\n   * info\n   * @param args\n   */\n  info(...args: string[]): void {\n    hilog.info(this.domain, this.prefix, this.format, args);\n  }\n\n  /**\n   * warn\n   * @param args\n   */\n  warn(...args: string[]): void {\n    hilog.warn(this.domain, this.prefix, this.format, args);\n  }\n\n  /**\n   * error\n   * @param args\n   */\n  error(...args: string[]): void {\n    hilog.error(this.domain, this.prefix, this.format, args);\n  }\n}\n\nexport default new Logger('[stageuiabilitydevelop]');"
}