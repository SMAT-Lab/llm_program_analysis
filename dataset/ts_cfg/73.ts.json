{
  "type": "file",
  "name": "73.ts",
  "label": "73.ts",
  "start_line": -1,
  "end_line": 30,
  "classes": [
    {
      "type": "class",
      "name": "%dflt",
      "label": "%dflt",
      "start_line": -1,
      "end_line": 30,
      "functions": [
        {
          "type": "function",
          "name": "%dflt",
          "label": "%dflt",
          "start_line": -1,
          "end_line": 30,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/73.ts: %dflt\nreturn",
              "start_line": 1,
              "end_line": 30,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": ""
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": ""
    },
    {
      "type": "class",
      "name": "NewAlbumBarModel",
      "label": "NewAlbumBarModel",
      "start_line": 1,
      "end_line": 21,
      "functions": [
        {
          "type": "function",
          "name": "createActionBar",
          "label": "createActionBar",
          "start_line": 1,
          "end_line": 21,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "isSelectedMode = parameter0: boolean\nselectedCount = parameter1: number\nthis = this: @ts_files/73.ts: NewAlbumBarModel\n%0 = newarray (any)[0]\nmenuList = %0\n%1 = new @%unk/%unk: ActionBarProp\ninstanceinvoke %1.<@%unk/%unk: ActionBarProp.constructor()>()\nactionBarProp = %1\n%2 = new @%unk/%unk: Boolean\ninstanceinvoke %2.<@%unk/%unk: Boolean.constructor()>(selectedCount)\nif %2 != undefined",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%3 = Action.<@%unk/%unk: .OK>",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "instanceinvoke menuList.<@%unk/%unk: .push()>(%3)\n%4 = ActionBarSelectionMode.<@%unk/%unk: .MULTI>\n%5 = ActionBarMode.<@%unk/%unk: .SELECTION_MODE>\n%6 = Action.<@%unk/%unk: .CANCEL>\n%7 = instanceinvoke actionBarProp.<@%unk/%unk: .setLeftAction()>(%6)\n%8 = instanceinvoke %7.<@%unk/%unk: .setMode()>(%5)\n%9 = instanceinvoke %8.<@%unk/%unk: .setSelectionMode()>(%4)\ninstanceinvoke %9.<@%unk/%unk: .setMenuList()>(menuList)\nreturn actionBarProp",
                      "start_line": 1,
                      "end_line": 30,
                      "successors": []
                    }
                  ]
                },
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%3 = Action.<@%unk/%unk: .OK_DISABLE>",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "blockRef",
                      "label": "(RepeatedBlock)"
                    }
                  ]
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "createActionBar(isSelectedMode: boolean, selectedCount: number): ActionBarProp {\n    let menuList: Action[] = [];\n    let actionBarProp: ActionBarProp = new ActionBarProp();\n    menuList.push((new Boolean(selectedCount)) ? Action.OK : Action.OK_DISABLE)\n    actionBarProp\n      .setLeftAction(Action.CANCEL)\n      .setMode(ActionBarMode.SELECTION_MODE)\n      .setSelectionMode(ActionBarSelectionMode.MULTI)\n      .setMenuList(menuList);\n    return actionBarProp;\n  }"
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": "export class NewAlbumBarModel {\n  createActionBar(isSelectedMode: boolean, selectedCount: number): ActionBarProp {\n    let menuList: Action[] = [];\n    let actionBarProp: ActionBarProp = new ActionBarProp();\n    menuList.push((new Boolean(selectedCount)) ? Action.OK : Action.OK_DISABLE)\n    actionBarProp\n      .setLeftAction(Action.CANCEL)\n      .setMode(ActionBarMode.SELECTION_MODE)\n      .setSelectionMode(ActionBarSelectionMode.MULTI)\n      .setMenuList(menuList);\n    return actionBarProp;\n  }\n}"
    }
  ],
  "functions": [],
  "blocks": [],
  "simplified_code": "/*\n * Copyright (c) 2023 Shenzhen Kaihong Digital Industry Development Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Action } from './Action';\nimport { ActionBarMode, ActionBarSelectionMode } from './ActionBarMode';\nimport { ActionBarProp } from '../common/ActionBarProp';\n\nexport class NewAlbumBarModel {\n  createActionBar(isSelectedMode: boolean, selectedCount: number): ActionBarProp {\n    let menuList: Action[] = [];\n    let actionBarProp: ActionBarProp = new ActionBarProp();\n    menuList.push((new Boolean(selectedCount)) ? Action.OK : Action.OK_DISABLE)\n    actionBarProp\n      .setLeftAction(Action.CANCEL)\n      .setMode(ActionBarMode.SELECTION_MODE)\n      .setSelectionMode(ActionBarSelectionMode.MULTI)\n      .setMenuList(menuList);\n    return actionBarProp;\n  }\n}\n"
}