digraph "209.ts" {
subgraph "cluster_@ts_files/209.ts: %dflt.[static]%dflt()" {
  label="@ts_files/209.ts: %dflt.[static]%dflt()";
  Node33750 [label="id:0
      this = this: @ts_files/209.ts: %dflt
      return"];
}
subgraph "cluster_@ts_files/209.ts: Frustum.[static]GetPlanes(DeepImmutable<Matrix>)" {
  label="@ts_files/209.ts: Frustum.[static]GetPlanes(DeepImmutable<Matrix>)";
  Node61670 [label="id:0
      transform = parameter0: DeepImmutable<Matrix>
      this = this: @ts_files/209.ts: Frustum
      %0 = newarray (any)[0]
      frustumPlanes = %0
      index = 0"];
  Node61671 [label="id:1
      if index < 6"];
  Node61672 [label="id:2
      %1 = new @%unk/%unk: Plane
      instanceinvoke %1.<@%unk/%unk: Plane.constructor()>(0, 0, 0, 0)
      instanceinvoke frustumPlanes.<@%unk/%unk: .push()>(%1)
      index = index + 1"];
  Node61673 [label="id:3
      staticinvoke <@ts_files/209.ts: Frustum.[static]GetPlanesToRef(DeepImmutable<Matrix>, Plane[])>(transform, frustumPlanes)
      return frustumPlanes"];
  Node61670 -> Node61671;
  Node61671 -> Node61672;
  Node61671 -> Node61673;
  Node61672 -> Node61671;
}
subgraph "cluster_@ts_files/209.ts: Frustum.[static]GetNearPlaneToRef(DeepImmutable<Matrix>, Plane)" {
  label="@ts_files/209.ts: Frustum.[static]GetNearPlaneToRef(DeepImmutable<Matrix>, Plane)";
  Node74940 [label="id:0
      transform = parameter0: DeepImmutable<Matrix>
      frustumPlane = parameter1: Plane
      this = this: @ts_files/209.ts: Frustum
      m = transform.<@%unk/%unk: .m>
      %1 = m.<@%unk/%unk: .3>
      %2 = m.<@%unk/%unk: .2>
      %3 = %1 + %2
      %0 = frustumPlane.<@%unk/%unk: .normal>
      %0.<@%unk/%unk: .x> = %3
      %5 = m.<@%unk/%unk: .7>
      %6 = m.<@%unk/%unk: .6>
      %7 = %5 + %6
      %4 = frustumPlane.<@%unk/%unk: .normal>
      %4.<@%unk/%unk: .y> = %7
      %9 = m.<@%unk/%unk: .11>
      %10 = m.<@%unk/%unk: .10>
      %11 = %9 + %10
      %8 = frustumPlane.<@%unk/%unk: .normal>
      %8.<@%unk/%unk: .z> = %11
      %12 = m.<@%unk/%unk: .15>
      %13 = m.<@%unk/%unk: .14>
      %14 = %12 + %13
      frustumPlane.<@%unk/%unk: .d> = %14
      instanceinvoke frustumPlane.<@%unk/%unk: .normalize()>()
      return"];
}
subgraph "cluster_@ts_files/209.ts: Frustum.[static]GetFarPlaneToRef(DeepImmutable<Matrix>, Plane)" {
  label="@ts_files/209.ts: Frustum.[static]GetFarPlaneToRef(DeepImmutable<Matrix>, Plane)";
  Node73850 [label="id:0
      transform = parameter0: DeepImmutable<Matrix>
      frustumPlane = parameter1: Plane
      this = this: @ts_files/209.ts: Frustum
      m = transform.<@%unk/%unk: .m>
      %1 = m.<@%unk/%unk: .3>
      %2 = m.<@%unk/%unk: .2>
      %3 = %1 - %2
      %0 = frustumPlane.<@%unk/%unk: .normal>
      %0.<@%unk/%unk: .x> = %3
      %5 = m.<@%unk/%unk: .7>
      %6 = m.<@%unk/%unk: .6>
      %7 = %5 - %6
      %4 = frustumPlane.<@%unk/%unk: .normal>
      %4.<@%unk/%unk: .y> = %7
      %9 = m.<@%unk/%unk: .11>
      %10 = m.<@%unk/%unk: .10>
      %11 = %9 - %10
      %8 = frustumPlane.<@%unk/%unk: .normal>
      %8.<@%unk/%unk: .z> = %11
      %12 = m.<@%unk/%unk: .15>
      %13 = m.<@%unk/%unk: .14>
      %14 = %12 - %13
      frustumPlane.<@%unk/%unk: .d> = %14
      instanceinvoke frustumPlane.<@%unk/%unk: .normalize()>()
      return"];
}
subgraph "cluster_@ts_files/209.ts: Frustum.[static]GetLeftPlaneToRef(DeepImmutable<Matrix>, Plane)" {
  label="@ts_files/209.ts: Frustum.[static]GetLeftPlaneToRef(DeepImmutable<Matrix>, Plane)";
  Node74990 [label="id:0
      transform = parameter0: DeepImmutable<Matrix>
      frustumPlane = parameter1: Plane
      this = this: @ts_files/209.ts: Frustum
      m = transform.<@%unk/%unk: .m>
      %1 = m.<@%unk/%unk: .3>
      %2 = m.<@%unk/%unk: .0>
      %3 = %1 + %2
      %0 = frustumPlane.<@%unk/%unk: .normal>
      %0.<@%unk/%unk: .x> = %3
      %5 = m.<@%unk/%unk: .7>
      %6 = m.<@%unk/%unk: .4>
      %7 = %5 + %6
      %4 = frustumPlane.<@%unk/%unk: .normal>
      %4.<@%unk/%unk: .y> = %7
      %9 = m.<@%unk/%unk: .11>
      %10 = m.<@%unk/%unk: .8>
      %11 = %9 + %10
      %8 = frustumPlane.<@%unk/%unk: .normal>
      %8.<@%unk/%unk: .z> = %11
      %12 = m.<@%unk/%unk: .15>
      %13 = m.<@%unk/%unk: .12>
      %14 = %12 + %13
      frustumPlane.<@%unk/%unk: .d> = %14
      instanceinvoke frustumPlane.<@%unk/%unk: .normalize()>()
      return"];
}
subgraph "cluster_@ts_files/209.ts: Frustum.[static]GetRightPlaneToRef(DeepImmutable<Matrix>, Plane)" {
  label="@ts_files/209.ts: Frustum.[static]GetRightPlaneToRef(DeepImmutable<Matrix>, Plane)";
  Node76140 [label="id:0
      transform = parameter0: DeepImmutable<Matrix>
      frustumPlane = parameter1: Plane
      this = this: @ts_files/209.ts: Frustum
      m = transform.<@%unk/%unk: .m>
      %1 = m.<@%unk/%unk: .3>
      %2 = m.<@%unk/%unk: .0>
      %3 = %1 - %2
      %0 = frustumPlane.<@%unk/%unk: .normal>
      %0.<@%unk/%unk: .x> = %3
      %5 = m.<@%unk/%unk: .7>
      %6 = m.<@%unk/%unk: .4>
      %7 = %5 - %6
      %4 = frustumPlane.<@%unk/%unk: .normal>
      %4.<@%unk/%unk: .y> = %7
      %9 = m.<@%unk/%unk: .11>
      %10 = m.<@%unk/%unk: .8>
      %11 = %9 - %10
      %8 = frustumPlane.<@%unk/%unk: .normal>
      %8.<@%unk/%unk: .z> = %11
      %12 = m.<@%unk/%unk: .15>
      %13 = m.<@%unk/%unk: .12>
      %14 = %12 - %13
      frustumPlane.<@%unk/%unk: .d> = %14
      instanceinvoke frustumPlane.<@%unk/%unk: .normalize()>()
      return"];
}
subgraph "cluster_@ts_files/209.ts: Frustum.[static]GetTopPlaneToRef(DeepImmutable<Matrix>, Plane)" {
  label="@ts_files/209.ts: Frustum.[static]GetTopPlaneToRef(DeepImmutable<Matrix>, Plane)";
  Node74110 [label="id:0
      transform = parameter0: DeepImmutable<Matrix>
      frustumPlane = parameter1: Plane
      this = this: @ts_files/209.ts: Frustum
      m = transform.<@%unk/%unk: .m>
      %1 = m.<@%unk/%unk: .3>
      %2 = m.<@%unk/%unk: .1>
      %3 = %1 - %2
      %0 = frustumPlane.<@%unk/%unk: .normal>
      %0.<@%unk/%unk: .x> = %3
      %5 = m.<@%unk/%unk: .7>
      %6 = m.<@%unk/%unk: .5>
      %7 = %5 - %6
      %4 = frustumPlane.<@%unk/%unk: .normal>
      %4.<@%unk/%unk: .y> = %7
      %9 = m.<@%unk/%unk: .11>
      %10 = m.<@%unk/%unk: .9>
      %11 = %9 - %10
      %8 = frustumPlane.<@%unk/%unk: .normal>
      %8.<@%unk/%unk: .z> = %11
      %12 = m.<@%unk/%unk: .15>
      %13 = m.<@%unk/%unk: .13>
      %14 = %12 - %13
      frustumPlane.<@%unk/%unk: .d> = %14
      instanceinvoke frustumPlane.<@%unk/%unk: .normalize()>()
      return"];
}
subgraph "cluster_@ts_files/209.ts: Frustum.[static]GetBottomPlaneToRef(DeepImmutable<Matrix>, Plane)" {
  label="@ts_files/209.ts: Frustum.[static]GetBottomPlaneToRef(DeepImmutable<Matrix>, Plane)";
  Node77330 [label="id:0
      transform = parameter0: DeepImmutable<Matrix>
      frustumPlane = parameter1: Plane
      this = this: @ts_files/209.ts: Frustum
      m = transform.<@%unk/%unk: .m>
      %1 = m.<@%unk/%unk: .3>
      %2 = m.<@%unk/%unk: .1>
      %3 = %1 + %2
      %0 = frustumPlane.<@%unk/%unk: .normal>
      %0.<@%unk/%unk: .x> = %3
      %5 = m.<@%unk/%unk: .7>
      %6 = m.<@%unk/%unk: .5>
      %7 = %5 + %6
      %4 = frustumPlane.<@%unk/%unk: .normal>
      %4.<@%unk/%unk: .y> = %7
      %9 = m.<@%unk/%unk: .11>
      %10 = m.<@%unk/%unk: .9>
      %11 = %9 + %10
      %8 = frustumPlane.<@%unk/%unk: .normal>
      %8.<@%unk/%unk: .z> = %11
      %12 = m.<@%unk/%unk: .15>
      %13 = m.<@%unk/%unk: .13>
      %14 = %12 + %13
      frustumPlane.<@%unk/%unk: .d> = %14
      instanceinvoke frustumPlane.<@%unk/%unk: .normalize()>()
      return"];
}
subgraph "cluster_@ts_files/209.ts: Frustum.[static]GetPlanesToRef(DeepImmutable<Matrix>, Plane[])" {
  label="@ts_files/209.ts: Frustum.[static]GetPlanesToRef(DeepImmutable<Matrix>, Plane[])";
  Node74030 [label="id:0
      transform = parameter0: DeepImmutable<Matrix>
      frustumPlanes = parameter1: Plane[]
      this = this: @ts_files/209.ts: Frustum
      %0 = frustumPlanes[0]
      staticinvoke <@ts_files/209.ts: Frustum.[static]GetNearPlaneToRef(DeepImmutable<Matrix>, Plane)>(transform, %0)
      %1 = frustumPlanes[1]
      staticinvoke <@ts_files/209.ts: Frustum.[static]GetFarPlaneToRef(DeepImmutable<Matrix>, Plane)>(transform, %1)
      %2 = frustumPlanes[2]
      staticinvoke <@ts_files/209.ts: Frustum.[static]GetLeftPlaneToRef(DeepImmutable<Matrix>, Plane)>(transform, %2)
      %3 = frustumPlanes[3]
      staticinvoke <@ts_files/209.ts: Frustum.[static]GetRightPlaneToRef(DeepImmutable<Matrix>, Plane)>(transform, %3)
      %4 = frustumPlanes[4]
      staticinvoke <@ts_files/209.ts: Frustum.[static]GetTopPlaneToRef(DeepImmutable<Matrix>, Plane)>(transform, %4)
      %5 = frustumPlanes[5]
      staticinvoke <@ts_files/209.ts: Frustum.[static]GetBottomPlaneToRef(DeepImmutable<Matrix>, Plane)>(transform, %5)
      return"];
}
subgraph "cluster_@ts_files/209.ts: Frustum.[static]IsPointInFrustum(Vector3, DeepImmutable<Plane>[])" {
  label="@ts_files/209.ts: Frustum.[static]IsPointInFrustum(Vector3, DeepImmutable<Plane>[])";
  Node77240 [label="id:0
      point = parameter0: Vector3
      frustumPlanes = parameter1: DeepImmutable<Plane>[]
      this = this: @ts_files/209.ts: Frustum
      i = 0"];
  Node77241 [label="id:1
      if i < 6"];
  Node77242 [label="id:2
      %0 = frustumPlanes[i]
      %1 = instanceinvoke %0.<@%unk/%unk: .dotCoordinate()>(point)
      if %1 < 0
      i = i + 1"];
  Node77243 [label="id:3
      return false"];
  Node77244 [label="id:4
      return true"];
  Node77240 -> Node77241;
  Node77241 -> Node77242;
  Node77241 -> Node77244;
  Node77242 -> Node77243;
  Node77242 -> Node77241;
}
}
