{
  "type": "file",
  "name": "65.ts",
  "label": "65.ts",
  "start_line": -1,
  "end_line": 44,
  "classes": [
    {
      "type": "class",
      "name": "%dflt",
      "label": "%dflt",
      "start_line": -1,
      "end_line": 44,
      "functions": [
        {
          "type": "function",
          "name": "%dflt",
          "label": "%dflt",
          "start_line": -1,
          "end_line": 44,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/65.ts: %dflt\nreturn",
              "start_line": 1,
              "end_line": 44,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": ""
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": ""
    },
    {
      "type": "class",
      "name": "InnerUserFileDataItem",
      "label": "InnerUserFileDataItem",
      "start_line": 1,
      "end_line": 44,
      "functions": [
        {
          "type": "function",
          "name": "constructor",
          "label": "constructor",
          "start_line": 1,
          "end_line": 44,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "instanceinvoke this.<@ts_files/65.ts: InnerUserFileDataItem.%instInit()>()\nuri = parameter0: string\nindex = parameter1: number\nthis = this: @ts_files/65.ts: InnerUserFileDataItem\n%0 = newarray (any)[0]\n%1 = <any[]>%0\nstaticinvoke <@%unk/%unk: .super()>('', %1, '', index)\n%2 = photoAccessHelper.<@%unk/%unk: .PhotoType>\n%3 = %2.<@%unk/%unk: .IMAGE>\nthis.<@ts_files/65.ts: InnerUserFileDataItem.mediaType> = %3\nthis.<@ts_files/65.ts: InnerUserFileDataItem.uri> = uri\nthis.<@ts_files/65.ts: InnerUserFileDataItem.size> = 256\nthis.<@ts_files/65.ts: InnerUserFileDataItem.orientation> = 0\nreturn",
              "start_line": 1,
              "end_line": 44,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "constructor(uri: string, index: number) {\n    super('', [] as string[], '', index);\n    this.mediaType = photoAccessHelper.PhotoType.IMAGE;\n    this.uri = uri;\n    this.size = 256;\n    this.orientation = 0;\n  }"
        },
        {
          "type": "function",
          "name": "load",
          "label": "load",
          "start_line": 1,
          "end_line": 44,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "return",
              "start_line": 32,
              "end_line": 44,
              "successors": []
            },
            {
              "type": "block",
              "name": "Block?",
              "label": "%2 = instanceinvoke screenManager.<@%unk/%unk: .getWinWidth()>()\n%3 = staticinvoke <@%unk/%unk: .vp2px()>(%2)\nthis.<@ts_files/65.ts: InnerUserFileDataItem.width> = %3\n%4 = instanceinvoke screenManager.<@%unk/%unk: .getWinHeight()>()\n%5 = staticinvoke <@%unk/%unk: .vp2px()>(%4)\nthis.<@ts_files/65.ts: InnerUserFileDataItem.height> = %5\n%6 = this.<@ts_files/65.ts: InnerUserFileDataItem.width>\n%7 = %6 === 0\n%8 = this.<@ts_files/65.ts: InnerUserFileDataItem.height>\n%9 = %8 === 0\n%10 = %7 || %9\nif %10 != false",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%11 = MediaConstants.<@%unk/%unk: .PART_LOADED>\nthis.<@ts_files/65.ts: InnerUserFileDataItem.status> = %11",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "return",
                      "start_line": 32,
                      "end_line": 44,
                      "successors": []
                    }
                  ]
                },
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%12 = MediaConstants.<@%unk/%unk: .LOADED>\nthis.<@ts_files/65.ts: InnerUserFileDataItem.status> = %12",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "blockRef",
                      "label": "(RepeatedBlock)"
                    }
                  ]
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "block",
              "name": "Block?",
              "label": "isForce = parameter0: boolean\nthis = this: @ts_files/65.ts: InnerUserFileDataItem\n%0 = this.<@ts_files/65.ts: InnerUserFileDataItem.status>\nif isForce != false",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%1 = MediaConstants.<@%unk/%unk: .PART_LOADED>",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "if %0 > %1",
                      "start_line": 1,
                      "end_line": 1,
                      "successors": [
                        {
                          "type": "blockRef",
                          "label": "(RepeatedBlock)"
                        },
                        {
                          "type": "blockRef",
                          "label": "(RepeatedBlock)"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%1 = MediaConstants.<@%unk/%unk: .UNDEFINED>",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "blockRef",
                      "label": "(RepeatedBlock)"
                    }
                  ]
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "async load(isForce: boolean): Promise<void> {\n    if (this.status > (isForce ? MediaConstants.PART_LOADED : MediaConstants.UNDEFINED)) {\n      return;\n    }\n    this.width = vp2px(screenManager.getWinWidth());\n    this.height = vp2px(screenManager.getWinHeight());\n    if (this.width === 0 || this.height === 0) {\n      this.status = MediaConstants.PART_LOADED;\n    } else {\n      this.status = MediaConstants.LOADED;\n    }\n  }"
        },
        {
          "type": "function",
          "name": "isFavor",
          "label": "isFavor",
          "start_line": 1,
          "end_line": 44,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/65.ts: InnerUserFileDataItem\nreturn false",
              "start_line": 1,
              "end_line": 44,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "async isFavor(): Promise<boolean> {\n    return false;\n  }"
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": "export class InnerUserFileDataItem extends UserFileDataItem {\n  constructor(uri: string, index: number) {\n    super('', [] as string[], '', index);\n    this.mediaType = photoAccessHelper.PhotoType.IMAGE;\n    this.uri = uri;\n    this.size = 256;\n    this.orientation = 0;\n  }\n\n  async load(isForce: boolean): Promise<void> {\n    if (this.status > (isForce ? MediaConstants.PART_LOADED : MediaConstants.UNDEFINED)) {\n      return;\n    }\n    this.width = vp2px(screenManager.getWinWidth());\n    this.height = vp2px(screenManager.getWinHeight());\n    if (this.width === 0 || this.height === 0) {\n      this.status = MediaConstants.PART_LOADED;\n    } else {\n      this.status = MediaConstants.LOADED;\n    }\n  }\n\n  async isFavor(): Promise<boolean> {\n    return false;\n  }\n}"
    }
  ],
  "functions": [],
  "blocks": [],
  "simplified_code": "/*\n * Copyright (c) 2023 Shenzhen Kaihong Digital Industry Development Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport photoAccessHelper from '@ohos.file.photoAccessHelper';\nimport { MediaConstants } from '../constants/MediaConstants';\nimport { UserFileDataItem } from './UserFileDataItem';\nimport { screenManager } from '../common/ScreenManager';\n\nexport class InnerUserFileDataItem extends UserFileDataItem {\n  constructor(uri: string, index: number) {\n    super('', [] as string[], '', index);\n    this.mediaType = photoAccessHelper.PhotoType.IMAGE;\n    this.uri = uri;\n    this.size = 256;\n    this.orientation = 0;\n  }\n\n  async load(isForce: boolean): Promise<void> {\n    if (this.status > (isForce ? MediaConstants.PART_LOADED : MediaConstants.UNDEFINED)) {\n      return;\n    }\n    this.width = vp2px(screenManager.getWinWidth());\n    this.height = vp2px(screenManager.getWinHeight());\n    if (this.width === 0 || this.height === 0) {\n      this.status = MediaConstants.PART_LOADED;\n    } else {\n      this.status = MediaConstants.LOADED;\n    }\n  }\n\n  async isFavor(): Promise<boolean> {\n    return false;\n  }\n}"
}