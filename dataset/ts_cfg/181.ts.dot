digraph "181.ts" {
subgraph "cluster_@ts_files/181.ts: %dflt.[static]%dflt()" {
  label="@ts_files/181.ts: %dflt.[static]%dflt()";
  Node33740 [label="id:0
      this = this: @ts_files/181.ts: %dflt
      staticinvoke <@%unk/%unk: .describe()>('MenuStack', %AM0)
      return"];
}
subgraph "cluster_@ts_files/181.ts: %dflt.%getElementsForTesting$%AM0()" {
  label="@ts_files/181.ts: %dflt.%getElementsForTesting$%AM0()";
  Node45570 [label="id:0
      this = this: @ts_files/181.ts: %dflt
      instanceinvoke fixture.<@%unk/%unk: .detectChanges()>()
      %0 = fixture.<@%unk/%unk: .componentInstance>
      %1 = %0.<@%unk/%unk: .triggers>
      triggers = instanceinvoke %1.<@%unk/%unk: .toArray()>()
      %2 = fixture.<@%unk/%unk: .componentInstance>
      %3 = %2.<@%unk/%unk: .menus>
      menus = instanceinvoke %3.<@%unk/%unk: .toArray()>()
      %4 = fixture.<@%unk/%unk: .componentInstance>
      %5 = %4.<@%unk/%unk: .menuBar>
      menuStack = %5.<@%unk/%unk: .menuStack>
      return"];
}
subgraph "cluster_@ts_files/181.ts: %dflt.%AM1$%AM0()" {
  label="@ts_files/181.ts: %dflt.%AM1$%AM0()";
  Node25700 [label="id:0
      this = this: @ts_files/181.ts: %dflt
      %0 = new @ts_files/181.ts: %AC$%dflt$%AM1$%AM0$0
      instanceinvoke %0.<@ts_files/181.ts: %AC$%dflt$%AM1$%AM0$0.constructor()>()
      instanceinvoke TestBed.<@%unk/%unk: .configureTestingModule()>(%0)
      return"];
}
subgraph "cluster_@ts_files/181.ts: %dflt.%AM2$%AM0()" {
  label="@ts_files/181.ts: %dflt.%AM2$%AM0()";
  Node25710 [label="id:0
      this = this: @ts_files/181.ts: %dflt
      fixture = instanceinvoke TestBed.<@%unk/%unk: .createComponent()>(MultiMenuWithSubmenu)
      instanceinvoke fixture.<@%unk/%unk: .detectChanges()>()
      staticinvoke <@%unk/%unk: .getElementsForTesting()>()
      return"];
}
subgraph "cluster_@ts_files/181.ts: %dflt.%openAllMenus$%AM0()" {
  label="@ts_files/181.ts: %dflt.%openAllMenus$%AM0()";
  Node36140 [label="id:0
      this = this: @ts_files/181.ts: %dflt
      %0 = triggers.<@%unk/%unk: .0>
      instanceinvoke %0.<@%unk/%unk: .open()>()
      staticinvoke <@%unk/%unk: .getElementsForTesting()>()
      %1 = triggers.<@%unk/%unk: .1>
      instanceinvoke %1.<@%unk/%unk: .open()>()
      staticinvoke <@%unk/%unk: .getElementsForTesting()>()
      %2 = triggers.<@%unk/%unk: .2>
      instanceinvoke %2.<@%unk/%unk: .open()>()
      staticinvoke <@%unk/%unk: .getElementsForTesting()>()
      return"];
}
subgraph "cluster_@ts_files/181.ts: %dflt.%AM4$%AM3$%AM0(jasmine.CallInfo<jasmine.Func>)" {
  label="@ts_files/181.ts: %dflt.%AM4$%AM3$%AM0(jasmine.CallInfo<jasmine.Func>)";
  Node57110 [label="id:0
      v = parameter0: jasmine.CallInfo<jasmine.Func>
      this = this: @ts_files/181.ts: %dflt
      %0 = v.<@%unk/%unk: .args>
      %1 = %0.<@%unk/%unk: .0>
      %2 = %1.<@%unk/%unk: .item>
      return %2"];
}
subgraph "cluster_@ts_files/181.ts: %dflt.%AM3$%AM0()" {
  label="@ts_files/181.ts: %dflt.%AM3$%AM0()";
  Node25720 [label="id:0
      this = this: @ts_files/181.ts: %dflt
      staticinvoke <@%unk/%unk: .openAllMenus()>()
      %0 = menus.<@%unk/%unk: .length>
      %1 = staticinvoke <@%unk/%unk: .expect()>(%0)
      instanceinvoke %1.<@%unk/%unk: .toBe()>(3)
      spy = instanceinvoke jasmine.<@%unk/%unk: .createSpy()>('menu stack closed spy')
      %2 = menuStack.<@%unk/%unk: .closed>
      instanceinvoke %2.<@%unk/%unk: .subscribe()>(spy)
      instanceinvoke menuStack.<@%unk/%unk: .closeAll()>()
      %3 = staticinvoke <@%unk/%unk: .expect()>(spy)
      instanceinvoke %3.<@%unk/%unk: .toHaveBeenCalledTimes()>(3)
      %4 = spy.<@%unk/%unk: .calls>
      %5 = instanceinvoke %4.<@%unk/%unk: .all()>()
      callArgs = instanceinvoke %5.<@%unk/%unk: .map()>(%AM4$%AM3$%AM0)
      %6 = instanceinvoke menus.<@%unk/%unk: .reverse()>()
      %7 = staticinvoke <@%unk/%unk: .expect()>(callArgs)
      instanceinvoke %7.<@%unk/%unk: .toEqual()>(%6)
      %8 = instanceinvoke menuStack.<@%unk/%unk: .isEmpty()>()
      %9 = staticinvoke <@%unk/%unk: .expect()>(%8)
      instanceinvoke %9.<@%unk/%unk: .toBeTrue()>()
      return"];
}
subgraph "cluster_@ts_files/181.ts: %dflt.%AM5$%AM0()" {
  label="@ts_files/181.ts: %dflt.%AM5$%AM0()";
  Node25740 [label="id:0
      this = this: @ts_files/181.ts: %dflt
      staticinvoke <@%unk/%unk: .openAllMenus()>()
      %0 = menus.<@%unk/%unk: .length>
      %1 = staticinvoke <@%unk/%unk: .expect()>(%0)
      instanceinvoke %1.<@%unk/%unk: .toBe()>(3)
      %2 = triggers.<@%unk/%unk: .1>
      instanceinvoke %2.<@%unk/%unk: .toggle()>()
      staticinvoke <@%unk/%unk: .getElementsForTesting()>()
      %3 = menus.<@%unk/%unk: .length>
      %4 = staticinvoke <@%unk/%unk: .expect()>(%3)
      instanceinvoke %4.<@%unk/%unk: .toBe()>(1)
      %5 = instanceinvoke menuStack.<@%unk/%unk: .length()>()
      %6 = staticinvoke <@%unk/%unk: .expect()>(%5)
      %7 = instanceinvoke %6.<@%unk/%unk: .withContext()>('menu stack should only have the single menu')
      instanceinvoke %7.<@%unk/%unk: .toBe()>(1)
      %8 = menus.<@%unk/%unk: .0>
      %9 = instanceinvoke menuStack.<@%unk/%unk: .peek()>()
      %10 = staticinvoke <@%unk/%unk: .expect()>(%9)
      instanceinvoke %10.<@%unk/%unk: .toEqual()>(%8)
      return"];
}
subgraph "cluster_@ts_files/181.ts: %dflt.%AM0()" {
  label="@ts_files/181.ts: %dflt.%AM0()";
  Node23060 [label="id:0
      this = this: @ts_files/181.ts: %dflt
      fixture = undefined
      menuStack = undefined
      triggers = undefined
      menus = undefined
      %0 = staticinvoke <@%unk/%unk: .waitForAsync()>(%AM1$%AM0)
      staticinvoke <@%unk/%unk: .beforeEach()>(%0)
      staticinvoke <@%unk/%unk: .beforeEach()>(%AM2$%AM0)
      %1 = 'should fill the menu stack with the latest menu at the end of the stack and oldest at' + ' the start of the stack'
      staticinvoke <@%unk/%unk: .it()>(%1, %AM3$%AM0)
      staticinvoke <@%unk/%unk: .it()>('should close triggering menu and all menus below it', %AM5$%AM0)
      return"];
}
}
