{
  "type": "file",
  "name": "177.ts",
  "label": "177.ts",
  "start_line": -1,
  "end_line": 50,
  "classes": [
    {
      "type": "class",
      "name": "%dflt",
      "label": "%dflt",
      "start_line": -1,
      "end_line": 50,
      "functions": [
        {
          "type": "function",
          "name": "%dflt",
          "label": "%dflt",
          "start_line": -1,
          "end_line": 50,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/177.ts: %dflt\nreturn",
              "start_line": 1,
              "end_line": 50,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": ""
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": ""
    }
  ],
  "functions": [],
  "blocks": [],
  "simplified_code": "// ==ORIGINAL==\nnamespace A {\n    let y = 1;\n    class C {\n        b() {}\n        a() {\n            let z = 1;\n            let a1 = { x: 1 };\n            y = 10;\n            z = 42;\n            this.b();\n            return a1.x + 10;\n        }\n    }\n}\n// ==SCOPE::Extract to inner function in method 'a'==\nnamespace A {\n    let y = 1;\n    class C {\n        b() {}\n        a() {\n            let z = 1;\n            return newFunction();\n            function newFunction() {\n                let a1 = { x: 1 };\n                y = 10;\n                z = 42;\n                this.b();\n                return a1.x + 10;\n            }\n        }\n    }\n}\n// ==SCOPE::Extract to method in class 'C'==\nnamespace A {\n    let y = 1;\n    class C {\n        b() {}\n        a() {\n            let z = 1;\n            let __return;\n            ({ __return, z } = this.newMethod(z));\n            return __return;\n        }\n        private newMethod(z: number) {\n            let a1 = { x: 1 };\n            y = 10;\n            z = 42;\n            this.b();\n            return { __return: a1.x + 10, z };\n        }\n    }\n}"
}