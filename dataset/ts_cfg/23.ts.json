{
  "type": "file",
  "name": "23.ts",
  "label": "23.ts",
  "start_line": -1,
  "end_line": 66,
  "classes": [
    {
      "type": "class",
      "name": "%dflt",
      "label": "%dflt",
      "start_line": -1,
      "end_line": 45,
      "functions": [
        {
          "type": "function",
          "name": "%dflt",
          "label": "%dflt",
          "start_line": -1,
          "end_line": 45,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/23.ts: %dflt\nTAG = 'BatchRecoverMenuOperation'\nreturn",
              "start_line": 1,
              "end_line": 45,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": ""
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": ""
    },
    {
      "type": "class",
      "name": "BatchRecoverMenuOperation",
      "label": "BatchRecoverMenuOperation",
      "start_line": 1,
      "end_line": 66,
      "functions": [
        {
          "type": "function",
          "name": "constructor",
          "label": "constructor",
          "start_line": 1,
          "end_line": 45,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "instanceinvoke this.<@ts_files/23.ts: BatchRecoverMenuOperation.%instInit()>()\nmenuContext = parameter0: MenuContext\nthis = this: @ts_files/23.ts: BatchRecoverMenuOperation\nstaticinvoke <@%unk/%unk: .super()>(menuContext)\nreturn",
              "start_line": 1,
              "end_line": 45,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "constructor(menuContext: MenuContext) {\n    super(menuContext);\n  }"
        },
        {
          "type": "function",
          "name": "doAction",
          "label": "doAction",
          "start_line": 1,
          "end_line": 30,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/23.ts: BatchRecoverMenuOperation\ninstanceinvoke Log.<@%unk/%unk: .info()>(TAG, 'delete doAction')\n%0 = this.<@ts_files/23.ts: BatchRecoverMenuOperation.menuContext>\nif %0 == null",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "instanceinvoke Log.<@%unk/%unk: .warn()>(TAG, 'menuContext is null, return')\nreturn",
                  "start_line": 1,
                  "end_line": 45,
                  "successors": []
                },
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%1 = this.<@ts_files/23.ts: BatchRecoverMenuOperation.menuContext>\ndataSource = %1.<@%unk/%unk: .dataSource>\nif dataSource == null",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "%2 = this.<@ts_files/23.ts: BatchRecoverMenuOperation.menuContext>\n%3 = %2.<@%unk/%unk: .items>\n%4 = %3.<@%unk/%unk: .length>\nthis.<@ts_files/23.ts: BatchRecoverMenuOperation.count> = %4",
                      "start_line": 1,
                      "end_line": 1,
                      "successors": [
                        {
                          "type": "block",
                          "name": "Block?",
                          "label": "%6 = this.<@ts_files/23.ts: BatchRecoverMenuOperation.count>\nif %6 <= 0",
                          "start_line": 1,
                          "end_line": 1,
                          "successors": [
                            {
                              "type": "block",
                              "name": "Block?",
                              "label": "instanceinvoke Log.<@%unk/%unk: .warn()>(TAG, 'count <= 0, return')\nreturn",
                              "start_line": 1,
                              "end_line": 45,
                              "successors": []
                            },
                            {
                              "type": "block",
                              "name": "Block?",
                              "label": "%7 = this.<@ts_files/23.ts: BatchRecoverMenuOperation.menuContext>\n%8 = %7.<@%unk/%unk: .onOperationEnd>\nthis.<@ts_files/23.ts: BatchRecoverMenuOperation.onOperationEnd> = %8\n%9 = this.<@ts_files/23.ts: BatchRecoverMenuOperation.menuContext>\nonOperationStart = %9.<@%unk/%unk: .onOperationStart>\nif onOperationStart != null",
                              "start_line": 1,
                              "end_line": 1,
                              "successors": [
                                {
                                  "type": "block",
                                  "name": "Block?",
                                  "label": "staticinvoke <@%unk/%unk: .onOperationStart()>()",
                                  "start_line": 1,
                                  "end_line": 1,
                                  "successors": [
                                    {
                                      "type": "block",
                                      "name": "Block?",
                                      "label": "%10 = BroadcastConstants.<@%unk/%unk: .DELETE_PROGRESS_DIALOG>\n%11 = staticinvoke <@%unk/%unk: .$r()>('app.string.action_recover')\n%12 = this.<@ts_files/23.ts: BatchRecoverMenuOperation.count>\n%13 = newarray (unknown)[2]\n%13[0] = %11\n%13[1] = %12\n%14 = this.<@ts_files/23.ts: BatchRecoverMenuOperation.menuContext>\n%15 = %14.<@%unk/%unk: .broadCast>\ninstanceinvoke %15.<@%unk/%unk: .emit()>(%10, %13)\nif dataSource == null",
                                      "start_line": 1,
                                      "end_line": 1,
                                      "successors": [
                                        {
                                          "type": "block",
                                          "name": "Block?",
                                          "label": "%16 = this.<@ts_files/23.ts: BatchRecoverMenuOperation.menuContext>\n%17 = %16.<@%unk/%unk: .items>\nthis.<@ts_files/23.ts: BatchRecoverMenuOperation.items> = %17",
                                          "start_line": 1,
                                          "end_line": 1,
                                          "successors": [
                                            {
                                              "type": "block",
                                              "name": "Block?",
                                              "label": "instanceinvoke this.<@%unk/%unk: .processOperation()>()\nreturn",
                                              "start_line": 1,
                                              "end_line": 45,
                                              "successors": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "block",
                                          "name": "Block?",
                                          "label": "%18 = instanceinvoke dataSource.<@%unk/%unk: .getSelectedItems()>()\nthis.<@ts_files/23.ts: BatchRecoverMenuOperation.items> = %18",
                                          "start_line": 1,
                                          "end_line": 1,
                                          "successors": [
                                            {
                                              "type": "blockRef",
                                              "label": "(RepeatedBlock)"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "blockRef",
                                  "label": "(RepeatedBlock)"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "%5 = instanceinvoke dataSource.<@%unk/%unk: .getSelectedCount()>()\nthis.<@ts_files/23.ts: BatchRecoverMenuOperation.count> = %5",
                      "start_line": 1,
                      "end_line": 1,
                      "successors": [
                        {
                          "type": "blockRef",
                          "label": "(RepeatedBlock)"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "doAction(): void {\n    Log.info(TAG, 'delete doAction');\n    if (this.menuContext == null) {\n      Log.warn(TAG, 'menuContext is null, return');\n      return;\n    }\n\n    let dataSource: ItemDataSource = this.menuContext.dataSource;\n    if (dataSource == null) {\n      this.count = this.menuContext.items.length;\n    } else {\n      this.count = dataSource.getSelectedCount();\n    }\n    if (this.count <= 0) {\n      Log.warn(TAG, 'count <= 0, return');\n      return;\n    }\n\n    this.onOperationEnd = this.menuContext.onOperationEnd;\n    let onOperationStart = this.menuContext.onOperationStart;\n    if (onOperationStart != null) onOperationStart();\n\n    this.menuContext.broadCast.emit(BroadcastConstants.DELETE_PROGRESS_DIALOG,\n      [$r('app.string.action_recover'), this.count]);\n\n    if (dataSource == null) {\n      this.items = this.menuContext.items;\n    } else {\n      this.items = dataSource.getSelectedItems();\n    }\n    this.processOperation();\n  }"
        },
        {
          "type": "function",
          "name": "requestOneBatchOperation",
          "label": "requestOneBatchOperation",
          "start_line": 1,
          "end_line": 64,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/23.ts: BatchRecoverMenuOperation\n%0 = this.<@ts_files/23.ts: BatchRecoverMenuOperation.items>\n%1 = this.<@ts_files/23.ts: BatchRecoverMenuOperation.currentBatch>\n%2 = %0.<@%unk/%unk: .%1>\nitem = <TrashUserFileDataItem>%2\n%3 = instanceinvoke item.<@%unk/%unk: .onRecover()>()\ninstanceinvoke %3.<@%unk/%unk: .then()>(%AM0$requestOneBatchOperation)\nreturn",
              "start_line": 1,
              "end_line": 45,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "requestOneBatchOperation(): void {\n    let item = this.items[this.currentBatch] as TrashUserFileDataItem;\n    item.onRecover().then<void, void>((): void => {\n      this.currentBatch++;\n      this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);\n      this.cyclicOperation();\n    })\n  }"
        },
        {
          "type": "function",
          "name": "%AM0$requestOneBatchOperation",
          "label": "%AM0$requestOneBatchOperation",
          "start_line": 1,
          "end_line": 66,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/23.ts: BatchRecoverMenuOperation\n%0 = this.<@ts_files/23.ts: BatchRecoverMenuOperation.currentBatch>\n%0 = %0 + 1\n%1 = BroadcastConstants.<@%unk/%unk: .UPDATE_PROGRESS>\n%2 = instanceinvoke this.<@%unk/%unk: .getExpectProgress()>()\n%3 = this.<@ts_files/23.ts: BatchRecoverMenuOperation.currentBatch>\n%4 = newarray (unknown)[2]\n%4[0] = %2\n%4[1] = %3\n%5 = this.<@ts_files/23.ts: BatchRecoverMenuOperation.menuContext>\n%6 = %5.<@%unk/%unk: .broadCast>\ninstanceinvoke %6.<@%unk/%unk: .emit()>(%1, %4)\ninstanceinvoke this.<@%unk/%unk: .cyclicOperation()>()\nreturn",
              "start_line": 1,
              "end_line": 45,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(): void => {\n      this.currentBatch++;\n      this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);\n      this.cyclicOperation();\n    }"
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": "export class BatchRecoverMenuOperation extends ProcessMenuOperation {\n  constructor(menuContext: MenuContext) {\n    super(menuContext);\n  }\n\n  doAction(): void {\n    Log.info(TAG, 'delete doAction');\n    if (this.menuContext == null) {\n      Log.warn(TAG, 'menuContext is null, return');\n      return;\n    }\n\n    let dataSource: ItemDataSource = this.menuContext.dataSource;\n    if (dataSource == null) {\n      this.count = this.menuContext.items.length;\n    } else {\n      this.count = dataSource.getSelectedCount();\n    }\n    if (this.count <= 0) {\n      Log.warn(TAG, 'count <= 0, return');\n      return;\n    }\n\n    this.onOperationEnd = this.menuContext.onOperationEnd;\n    let onOperationStart = this.menuContext.onOperationStart;\n    if (onOperationStart != null) onOperationStart();\n\n    this.menuContext.broadCast.emit(BroadcastConstants.DELETE_PROGRESS_DIALOG,\n      [$r('app.string.action_recover'), this.count]);\n\n    if (dataSource == null) {\n      this.items = this.menuContext.items;\n    } else {\n      this.items = dataSource.getSelectedItems();\n    }\n    this.processOperation();\n  }\n\n  // Delete a batch of data\n  requestOneBatchOperation(): void {\n    let item = this.items[this.currentBatch] as TrashUserFileDataItem;\n    item.onRecover().then<void, void>((): void => {\n      this.currentBatch++;\n      this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);\n      this.cyclicOperation();\n    })\n  }\n}"
    }
  ],
  "functions": [],
  "blocks": [],
  "simplified_code": "/*\n * Copyright (c) 2023 Shenzhen Kaihong Digital Industry Development Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TrashUserFileDataItem } from '../base/TrashUserFileDataItem';\nimport { Log } from '../utils/Log';\nimport { ItemDataSource } from '../common/ItemDataSource';\nimport { MenuContext } from './MenuContext'\nimport { ProcessMenuOperation } from './ProcessMenuOperation';\nimport { BroadcastConstants } from '../constants/BroadcastConstants';\n\nconst TAG = 'BatchRecoverMenuOperation';\n\nexport class BatchRecoverMenuOperation extends ProcessMenuOperation {\n  constructor(menuContext: MenuContext) {\n    super(menuContext);\n  }\n\n  doAction(): void {\n    Log.info(TAG, 'delete doAction');\n    if (this.menuContext == null) {\n      Log.warn(TAG, 'menuContext is null, return');\n      return;\n    }\n\n    let dataSource: ItemDataSource = this.menuContext.dataSource;\n    if (dataSource == null) {\n      this.count = this.menuContext.items.length;\n    } else {\n      this.count = dataSource.getSelectedCount();\n    }\n    if (this.count <= 0) {\n      Log.warn(TAG, 'count <= 0, return');\n      return;\n    }\n\n    this.onOperationEnd = this.menuContext.onOperationEnd;\n    let onOperationStart = this.menuContext.onOperationStart;\n    if (onOperationStart != null) onOperationStart();\n\n    this.menuContext.broadCast.emit(BroadcastConstants.DELETE_PROGRESS_DIALOG,\n      [$r('app.string.action_recover'), this.count]);\n\n    if (dataSource == null) {\n      this.items = this.menuContext.items;\n    } else {\n      this.items = dataSource.getSelectedItems();\n    }\n    this.processOperation();\n  }\n\n  // Delete a batch of data\n  requestOneBatchOperation(): void {\n    let item = this.items[this.currentBatch] as TrashUserFileDataItem;\n    item.onRecover().then<void, void>((): void => {\n      this.currentBatch++;\n      this.menuContext.broadCast.emit(BroadcastConstants.UPDATE_PROGRESS, [this.getExpectProgress(), this.currentBatch]);\n      this.cyclicOperation();\n    })\n  }\n}\n"
}