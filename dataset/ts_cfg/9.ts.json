{
  "type": "file",
  "name": "9.ts",
  "label": "9.ts",
  "start_line": -1,
  "end_line": 84,
  "classes": [
    {
      "type": "class",
      "name": "%dflt",
      "label": "%dflt",
      "start_line": -1,
      "end_line": 1,
      "functions": [
        {
          "type": "function",
          "name": "%dflt",
          "label": "%dflt",
          "start_line": -1,
          "end_line": 1,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/9.ts: %dflt\nTAG = 'EntryAbility'\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": ""
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": ""
    },
    {
      "type": "class",
      "name": "EntryAbility",
      "label": "EntryAbility",
      "start_line": 1,
      "end_line": 84,
      "functions": [
        {
          "type": "function",
          "name": "onCreate",
          "label": "onCreate",
          "start_line": 1,
          "end_line": 31,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "want = parameter0: Want\nlaunchParam = parameter1: AbilityConstant.LaunchParam\nthis = this: @ts_files/9.ts: EntryAbility\ninstanceinvoke Logger.<@%unk/%unk: .info()>(TAG, 'Ability onCreate')\n%0 = instanceinvoke JSON.<@%unk/%unk: .stringify()>(want)\n%1 = 'want param: ' + %0\ninstanceinvoke Logger.<@%unk/%unk: .debug()>(TAG, %1)\n%2 = instanceinvoke JSON.<@%unk/%unk: .stringify()>(launchParam)\n%3 = 'launchParam: ' + %2\ninstanceinvoke Logger.<@%unk/%unk: .debug()>(TAG, %3)\n%4 = this.<@ts_files/9.ts: EntryAbility.context>\n%5 = instanceinvoke GlobalContext.<@%unk/%unk: .get()>()\ninstanceinvoke %5.<@%unk/%unk: .setCameraSettingContext()>(%4)\n%6 = instanceinvoke GlobalContext.<@%unk/%unk: .get()>()\ninstanceinvoke %6.<@%unk/%unk: .getCameraSettingContext()>()\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "onCreate(want: Want, launchParam: AbilityConstant.LaunchParam): void {\n    Logger.info(TAG, 'Ability onCreate');\n    Logger.debug(TAG, `want param: ${JSON.stringify(want)}`);\n    Logger.debug(TAG, `launchParam: ${JSON.stringify(launchParam)}`);\n    GlobalContext.get().setCameraSettingContext(this.context);\n    GlobalContext.get().getCameraSettingContext();\n  }"
        },
        {
          "type": "function",
          "name": "onDestroy",
          "label": "onDestroy",
          "start_line": 1,
          "end_line": 39,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/9.ts: EntryAbility\ninstanceinvoke Logger.<@%unk/%unk: .info()>(TAG, 'Ability onDestroy')\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "onDestroy(): void {\n    Logger.info(TAG, 'Ability onDestroy');\n  }"
        },
        {
          "type": "function",
          "name": "onWindowStageCreate",
          "label": "onWindowStageCreate",
          "start_line": 1,
          "end_line": 43,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "windowStage = parameter0: window.WindowStage\nthis = this: @ts_files/9.ts: EntryAbility\ninstanceinvoke Logger.<@%unk/%unk: .info()>(TAG, 'Ability onWindowStageCreate')\ninstanceinvoke windowStage.<@%unk/%unk: .loadContent()>('pages/Index', %AM0$onWindowStageCreate)\ninstanceinvoke this.<@ts_files/9.ts: EntryAbility.requestPermissionsFn()>()\n%0 = deviceInfo.<@%unk/%unk: .deviceType>\ninstanceinvoke AppStorage.<@%unk/%unk: .setOrCreate()>('deviceType', %0)\n%1 = instanceinvoke windowStage.<@%unk/%unk: .getMainWindow()>()\ninstanceinvoke %1.<@%unk/%unk: .then()>(%AM1$onWindowStageCreate)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "onWindowStageCreate(windowStage: window.WindowStage): void {\n    // Main window is created, set main page for this ability\n    Logger.info(TAG, 'Ability onWindowStageCreate');\n    windowStage.loadContent('pages/Index', (): void => {\n      Logger.info(TAG, 'Succeeded in loading the content.');\n    });\n    this.requestPermissionsFn();\n    AppStorage.setOrCreate<string>('deviceType', deviceInfo.deviceType);\n    windowStage.getMainWindow().then((win: window.Window): void => {\n      GlobalContext.get().setPromptAction(win.getUIContext().getPromptAction());\n      Logger.debug(TAG, 'Succeeded get promptAction.');\n      if (deviceInfo.deviceType === Constants.TABLET) {\n        win.setWindowLayoutFullScreen(true).then((): void => {\n          win.setWindowSystemBarEnable(['navigation']).then((): void => {\n          });\n        });\n        win.setWindowSystemBarProperties({\n          navigationBarColor: '#00000000',\n          navigationBarContentColor: '#B3B3B3'\n        })\n          .then((): void => {\n          });\n      }\n    });\n  }"
        },
        {
          "type": "function",
          "name": "requestPermissionsFn",
          "label": "requestPermissionsFn",
          "start_line": 1,
          "end_line": 72,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/9.ts: EntryAbility\natManager = instanceinvoke abilityAccessCtrl.<@%unk/%unk: .createAtManager()>()\n%0 = this.<@ts_files/9.ts: EntryAbility.context>\n%1 = newarray (string)[6]\n%1[0] = 'ohos.permission.CAMERA'\n%1[1] = 'ohos.permission.MICROPHONE'\n%1[2] = 'ohos.permission.READ_MEDIA'\n%1[3] = 'ohos.permission.WRITE_MEDIA'\n%1[4] = 'ohos.permission.READ_IMAGEVIDEO'\n%1[5] = 'ohos.permission.WRITE_IMAGEVIDEO'\n%2 = instanceinvoke atManager.<@%unk/%unk: .requestPermissionsFromUser()>(%0, %1)\n%3 = instanceinvoke %2.<@%unk/%unk: .then()>(%AM6$requestPermissionsFn)\ninstanceinvoke %3.<@%unk/%unk: .catch()>(%AM5$requestPermissionsFn)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "requestPermissionsFn(): void {\n    let atManager = abilityAccessCtrl.createAtManager();\n    atManager.requestPermissionsFromUser(this.context, [\n      'ohos.permission.CAMERA',\n      'ohos.permission.MICROPHONE',\n      'ohos.permission.READ_MEDIA',\n      'ohos.permission.WRITE_MEDIA',\n      'ohos.permission.READ_IMAGEVIDEO',\n      'ohos.permission.WRITE_IMAGEVIDEO'\n    ]).then((): void => {\n      AppStorage.setOrCreate<boolean>('isShow', true);\n      Logger.info(TAG, 'request Permissions success!');\n    }).catch((error: BusinessError): void => {\n      Logger.info(TAG, `requestPermissionsFromUser call Failed! error: ${error.code}`);\n    });\n  }"
        },
        {
          "type": "function",
          "name": "%AM0$onWindowStageCreate",
          "label": "%AM0$onWindowStageCreate",
          "start_line": 1,
          "end_line": 46,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/9.ts: EntryAbility\ninstanceinvoke Logger.<@%unk/%unk: .info()>(TAG, 'Succeeded in loading the content.')\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(): void => {\n      Logger.info(TAG, 'Succeeded in loading the content.');\n    }"
        },
        {
          "type": "function",
          "name": "%AM3$%AM2$%AM1$onWindowStageCreate",
          "label": "%AM3$%AM2$%AM1$onWindowStageCreate",
          "start_line": 1,
          "end_line": 56,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/9.ts: EntryAbility\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(): void => {\n          }"
        },
        {
          "type": "function",
          "name": "%AM2$%AM1$onWindowStageCreate",
          "label": "%AM2$%AM1$onWindowStageCreate",
          "start_line": 1,
          "end_line": 55,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/9.ts: EntryAbility\n%0 = newarray (string)[1]\n%0[0] = 'navigation'\n%1 = instanceinvoke win.<@%unk/%unk: .setWindowSystemBarEnable()>(%0)\ninstanceinvoke %1.<@%unk/%unk: .then()>(%AM3$%AM2$%AM1$onWindowStageCreate)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(): void => {\n          win.setWindowSystemBarEnable(['navigation']).then((): void => {\n          });\n        }"
        },
        {
          "type": "function",
          "name": "%AM4$%AM1$onWindowStageCreate",
          "label": "%AM4$%AM1$onWindowStageCreate",
          "start_line": 1,
          "end_line": 63,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/9.ts: EntryAbility\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(): void => {\n          }"
        },
        {
          "type": "function",
          "name": "%AM1$onWindowStageCreate",
          "label": "%AM1$onWindowStageCreate",
          "start_line": 1,
          "end_line": 51,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "win = parameter0: window.Window\nthis = this: @ts_files/9.ts: EntryAbility\n%0 = instanceinvoke win.<@%unk/%unk: .getUIContext()>()\n%1 = instanceinvoke %0.<@%unk/%unk: .getPromptAction()>()\n%2 = instanceinvoke GlobalContext.<@%unk/%unk: .get()>()\ninstanceinvoke %2.<@%unk/%unk: .setPromptAction()>(%1)\ninstanceinvoke Logger.<@%unk/%unk: .debug()>(TAG, 'Succeeded get promptAction.')\n%3 = deviceInfo.<@%unk/%unk: .deviceType>\n%4 = Constants.<@%unk/%unk: .TABLET>\nif %3 === %4",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%5 = instanceinvoke win.<@%unk/%unk: .setWindowLayoutFullScreen()>(true)\ninstanceinvoke %5.<@%unk/%unk: .then()>(%AM2$%AM1$onWindowStageCreate)\n%6 = new @ts_files/9.ts: %AC$EntryAbility$%AM1$onWindowStageCreate$0\ninstanceinvoke %6.<@ts_files/9.ts: %AC$EntryAbility$%AM1$onWindowStageCreate$0.constructor()>()\n%7 = instanceinvoke win.<@%unk/%unk: .setWindowSystemBarProperties()>(%6)\ninstanceinvoke %7.<@%unk/%unk: .then()>(%AM4$%AM1$onWindowStageCreate)",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "return",
                      "start_line": 1,
                      "end_line": 1,
                      "successors": []
                    }
                  ]
                },
                {
                  "type": "blockRef",
                  "label": "(RepeatedBlock)"
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(win: window.Window): void => {\n      GlobalContext.get().setPromptAction(win.getUIContext().getPromptAction());\n      Logger.debug(TAG, 'Succeeded get promptAction.');\n      if (deviceInfo.deviceType === Constants.TABLET) {\n        win.setWindowLayoutFullScreen(true).then((): void => {\n          win.setWindowSystemBarEnable(['navigation']).then((): void => {\n          });\n        });\n        win.setWindowSystemBarProperties({\n          navigationBarColor: '#00000000',\n          navigationBarContentColor: '#B3B3B3'\n        })\n          .then((): void => {\n          });\n      }\n    }"
        },
        {
          "type": "function",
          "name": "%AM5$requestPermissionsFn",
          "label": "%AM5$requestPermissionsFn",
          "start_line": 1,
          "end_line": 84,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "error = parameter0: BusinessError\nthis = this: @ts_files/9.ts: EntryAbility\n%0 = error.<@%unk/%unk: .code>\n%1 = 'requestPermissionsFromUser call Failed! error: ' + %0\ninstanceinvoke Logger.<@%unk/%unk: .info()>(TAG, %1)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(error: BusinessError): void => {\n      Logger.info(TAG, `requestPermissionsFromUser call Failed! error: ${error.code}`);\n    }"
        },
        {
          "type": "function",
          "name": "%AM6$requestPermissionsFn",
          "label": "%AM6$requestPermissionsFn",
          "start_line": 1,
          "end_line": 81,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/9.ts: EntryAbility\ninstanceinvoke AppStorage.<@%unk/%unk: .setOrCreate()>('isShow', true)\ninstanceinvoke Logger.<@%unk/%unk: .info()>(TAG, 'request Permissions success!')\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(): void => {\n      AppStorage.setOrCreate<boolean>('isShow', true);\n      Logger.info(TAG, 'request Permissions success!');\n    }"
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": "export default class EntryAbility extends UIAbility {\n\n  onCreate(want: Want, launchParam: AbilityConstant.LaunchParam): void {\n    Logger.info(TAG, 'Ability onCreate');\n    Logger.debug(TAG, `want param: ${JSON.stringify(want)}`);\n    Logger.debug(TAG, `launchParam: ${JSON.stringify(launchParam)}`);\n    GlobalContext.get().setCameraSettingContext(this.context);\n    GlobalContext.get().getCameraSettingContext();\n  }\n\n  onDestroy(): void {\n    Logger.info(TAG, 'Ability onDestroy');\n  }\n\n  onWindowStageCreate(windowStage: window.WindowStage): void {\n    // Main window is created, set main page for this ability\n    Logger.info(TAG, 'Ability onWindowStageCreate');\n    windowStage.loadContent('pages/Index', (): void => {\n      Logger.info(TAG, 'Succeeded in loading the content.');\n    });\n    this.requestPermissionsFn();\n    AppStorage.setOrCreate<string>('deviceType', deviceInfo.deviceType);\n    windowStage.getMainWindow().then((win: window.Window): void => {\n      GlobalContext.get().setPromptAction(win.getUIContext().getPromptAction());\n      Logger.debug(TAG, 'Succeeded get promptAction.');\n      if (deviceInfo.deviceType === Constants.TABLET) {\n        win.setWindowLayoutFullScreen(true).then((): void => {\n          win.setWindowSystemBarEnable(['navigation']).then((): void => {\n          });\n        });\n        win.setWindowSystemBarProperties({\n          navigationBarColor: '#00000000',\n          navigationBarContentColor: '#B3B3B3'\n        })\n          .then((): void => {\n          });\n      }\n    });\n  }\n\n  /**\n   * 获取权限\n   */\n  requestPermissionsFn(): void {\n    let atManager = abilityAccessCtrl.createAtManager();\n    atManager.requestPermissionsFromUser(this.context, [\n      'ohos.permission.CAMERA',\n      'ohos.permission.MICROPHONE',\n      'ohos.permission.READ_MEDIA',\n      'ohos.permission.WRITE_MEDIA',\n      'ohos.permission.READ_IMAGEVIDEO',\n      'ohos.permission.WRITE_IMAGEVIDEO'\n    ]).then((): void => {\n      AppStorage.setOrCreate<boolean>('isShow', true);\n      Logger.info(TAG, 'request Permissions success!');\n    }).catch((error: BusinessError): void => {\n      Logger.info(TAG, `requestPermissionsFromUser call Failed! error: ${error.code}`);\n    });\n  }\n}"
    },
    {
      "type": "class",
      "name": "%AC$EntryAbility$%AM1$onWindowStageCreate$0",
      "label": "%AC$EntryAbility$%AM1$onWindowStageCreate$0",
      "start_line": 59,
      "end_line": 59,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n          navigationBarColor: '#00000000',\n          navigationBarContentColor: '#B3B3B3'\n        }"
    }
  ],
  "functions": [],
  "blocks": [],
  "simplified_code": "/*\n * Copyright (c) 2023-2024 Huawei Device Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type window from '@ohos.window';\nimport deviceInfo from '@ohos.deviceInfo';\nimport abilityAccessCtrl from '@ohos.abilityAccessCtrl';\nimport type Want from '@ohos.app.ability.Want';\nimport type AbilityConstant from '@ohos.app.ability.AbilityConstant';\nimport { BusinessError } from '@ohos.base';\nimport Logger from '../model/Logger';\nimport { Constants } from '../common/Constants';\nimport UIAbility from '@ohos.app.ability.UIAbility';\nimport { GlobalContext } from '../common/GlobalContext';\n\nconst TAG: string = 'EntryAbility';\n\nexport default class EntryAbility extends UIAbility {\n\n  onCreate(want: Want, launchParam: AbilityConstant.LaunchParam): void {\n    Logger.info(TAG, 'Ability onCreate');\n    Logger.debug(TAG, `want param: ${JSON.stringify(want)}`);\n    Logger.debug(TAG, `launchParam: ${JSON.stringify(launchParam)}`);\n    GlobalContext.get().setCameraSettingContext(this.context);\n    GlobalContext.get().getCameraSettingContext();\n  }\n\n  onDestroy(): void {\n    Logger.info(TAG, 'Ability onDestroy');\n  }\n\n  onWindowStageCreate(windowStage: window.WindowStage): void {\n    // Main window is created, set main page for this ability\n    Logger.info(TAG, 'Ability onWindowStageCreate');\n    windowStage.loadContent('pages/Index', (): void => {\n      Logger.info(TAG, 'Succeeded in loading the content.');\n    });\n    this.requestPermissionsFn();\n    AppStorage.setOrCreate<string>('deviceType', deviceInfo.deviceType);\n    windowStage.getMainWindow().then((win: window.Window): void => {\n      GlobalContext.get().setPromptAction(win.getUIContext().getPromptAction());\n      Logger.debug(TAG, 'Succeeded get promptAction.');\n      if (deviceInfo.deviceType === Constants.TABLET) {\n        win.setWindowLayoutFullScreen(true).then((): void => {\n          win.setWindowSystemBarEnable(['navigation']).then((): void => {\n          });\n        });\n        win.setWindowSystemBarProperties({\n          navigationBarColor: '#00000000',\n          navigationBarContentColor: '#B3B3B3'\n        })\n          .then((): void => {\n          });\n      }\n    });\n  }\n\n  /**\n   * 获取权限\n   */\n  requestPermissionsFn(): void {\n    let atManager = abilityAccessCtrl.createAtManager();\n    atManager.requestPermissionsFromUser(this.context, [\n      'ohos.permission.CAMERA',\n      'ohos.permission.MICROPHONE',\n      'ohos.permission.READ_MEDIA',\n      'ohos.permission.WRITE_MEDIA',\n      'ohos.permission.READ_IMAGEVIDEO',\n      'ohos.permission.WRITE_IMAGEVIDEO'\n    ]).then((): void => {\n      AppStorage.setOrCreate<boolean>('isShow', true);\n      Logger.info(TAG, 'request Permissions success!');\n    }).catch((error: BusinessError): void => {\n      Logger.info(TAG, `requestPermissionsFromUser call Failed! error: ${error.code}`);\n    });\n  }\n}\n"
}