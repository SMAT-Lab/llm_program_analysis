digraph "201.ts" {
subgraph "cluster_@ts_files/201.ts: %dflt.[static]%dflt()" {
  label="@ts_files/201.ts: %dflt.[static]%dflt()";
  Node33670 [label="id:0
      this = this: @ts_files/201.ts: %dflt
      GRID_DENSITY_MIGRATION_V1 = 4
      return"];
}
subgraph "cluster_@ts_files/201.ts: %dflt.migrateInputWidgetsMultiLineInputType(DSLWidget)" {
  label="@ts_files/201.ts: %dflt.migrateInputWidgetsMultiLineInputType(DSLWidget)";
  Node67720 [label="id:0
      currentDSL = parameter0: DSLWidget
      this = this: @ts_files/201.ts: %dflt
      %0 = !currentDSL
      if %0 != 0"];
  Node67721 [label="id:1
      return currentDSL"];
  Node67722 [label="id:2
      %1 = staticinvoke <@%unk/%unk: .traverseDSLAndMigrate()>(currentDSL, %AM0$migrateInputWidgetsMultiLineInputType)
      return %1"];
  Node67720 -> Node67721;
  Node67720 -> Node67722;
}
subgraph "cluster_@ts_files/201.ts: %dflt.%AM0$migrateInputWidgetsMultiLineInputType(WidgetProps)" {
  label="@ts_files/201.ts: %dflt.%AM0$migrateInputWidgetsMultiLineInputType(WidgetProps)";
  Node73400 [label="id:0
      widget = parameter0: WidgetProps
      this = this: @ts_files/201.ts: %dflt
      %0 = widget.<@%unk/%unk: .type>
      if %0 === 'INPUT_WIDGET_V2'"];
  Node73401 [label="id:1
      widget.<@%unk/%unk: .inputType> = 'MULTI_LINE_TEXT'"];
  Node73402 [label="id:2
      return"];
  Node73403 [label="id:3
      %1 = widget.<@%unk/%unk: .label>
      %2 = widget.<@%unk/%unk: .tooltip>
      %3 = %1 || %2
      if %3 != false"];
  Node73404 [label="id:4
      minInputSingleLineHeight = GRID_DENSITY_MIGRATION_V1 + 4"];
  Node73405 [label="id:5
      minInputSingleLineHeight = GRID_DENSITY_MIGRATION_V1"];
  Node73406 [label="id:6
      %5 = widget.<@%unk/%unk: .bottomRow>
      %6 = widget.<@%unk/%unk: .topRow>
      %7 = %5 - %6
      %8 = %7 / minInputSingleLineHeight
      %9 = %8 > 1
      %10 = widget.<@%unk/%unk: .inputType>
      %11 = %10 === 'TEXT'
      isMultiLine = %9 && %11
      if isMultiLine != false"];
  Node73400 -> Node73402;
  Node73400 -> Node73403;
  Node73401 -> Node73402;
  Node73403 -> Node73404;
  Node73403 -> Node73405;
  Node73404 -> Node73406;
  Node73405 -> Node73406;
  Node73406 -> Node73401;
  Node73406 -> Node73402;
}
}
