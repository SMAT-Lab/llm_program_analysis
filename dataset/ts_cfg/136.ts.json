{
  "type": "file",
  "name": "136.ts",
  "label": "136.ts",
  "start_line": -1,
  "end_line": 49,
  "classes": [
    {
      "type": "class",
      "name": "%dflt",
      "label": "%dflt",
      "start_line": -1,
      "end_line": 49,
      "functions": [
        {
          "type": "function",
          "name": "%dflt",
          "label": "%dflt",
          "start_line": -1,
          "end_line": 49,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/136.ts: %dflt\nreturn",
              "start_line": 1,
              "end_line": 49,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": ""
        },
        {
          "type": "function",
          "name": "buildServePath",
          "label": "buildServePath",
          "start_line": 1,
          "end_line": 2,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "browserOptions = parameter0: NormalizedWebpackExecutorOptions\nthis = this: @ts_files/136.ts: %dflt\n%0 = browserOptions.<@%unk/%unk: .baseHref>\n%1 = browserOptions.<@%unk/%unk: .deployUrl>\n%2 = staticinvoke <@ts_files/136.ts: %dflt._findDefaultServePath(string, string)>(%0, %1)\nservePath = %2 || '/'\n%3 = instanceinvoke servePath.<@%unk/%unk: .endsWith()>('/')\nif %3 != 0",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%4 = -1\nservePath = instanceinvoke servePath.<@%unk/%unk: .slice()>(0, %4)",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "%5 = instanceinvoke servePath.<@%unk/%unk: .startsWith()>('/')\n%6 = !%5\nif %6 != 0",
                      "start_line": 1,
                      "end_line": 1,
                      "successors": [
                        {
                          "type": "block",
                          "name": "Block?",
                          "label": "%7 = '/' + servePath\nservePath = %7",
                          "start_line": 1,
                          "end_line": 1,
                          "successors": [
                            {
                              "type": "block",
                              "name": "Block?",
                              "label": "return servePath",
                              "start_line": 14,
                              "end_line": 14,
                              "successors": []
                            }
                          ]
                        },
                        {
                          "type": "blockRef",
                          "label": "(RepeatedBlock)"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "blockRef",
                  "label": "(RepeatedBlock)"
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "export function buildServePath(\n  browserOptions: NormalizedWebpackExecutorOptions\n) {\n  let servePath =\n    _findDefaultServePath(browserOptions.baseHref, browserOptions.deployUrl) ||\n    '/';\n  if (servePath.endsWith('/')) {\n    servePath = servePath.slice(0, -1);\n  }\n  if (!servePath.startsWith('/')) {\n    servePath = `/${servePath}`;\n  }\n  return servePath;\n}"
        },
        {
          "type": "function",
          "name": "_findDefaultServePath",
          "label": "_findDefaultServePath",
          "start_line": 1,
          "end_line": 16,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "baseHref = parameter0: string\ndeployUrl = parameter1: string\nthis = this: @ts_files/136.ts: %dflt\n%0 = !baseHref\n%1 = !deployUrl\n%2 = %0 && %1\nif %2 != false",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "return ''",
                  "start_line": 21,
                  "end_line": 21,
                  "successors": []
                },
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%3 = baseHref || ''\n%4 = /^(\\w+:)?\\/\\//\n%5 = instanceinvoke %4.<@%unk/%unk: .test()>(%3)\n%6 = deployUrl || ''\n%7 = /^(\\w+:)?\\/\\//\n%8 = instanceinvoke %7.<@%unk/%unk: .test()>(%6)\n%9 = %5 || %8\nif %9 != false",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "return null",
                      "start_line": 28,
                      "end_line": 44,
                      "successors": []
                    },
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "%10 = baseHref || ''\n%11 = instanceinvoke %10.<@%unk/%unk: .split()>('/')\nbaseHrefParts = instanceinvoke %11.<@%unk/%unk: .filter()>(%AM0$_findDefaultServePath)\n%12 = instanceinvoke baseHref.<@%unk/%unk: .endsWith()>('/')\n%13 = !%12\n%14 = baseHref && %13\nif %14 != false",
                      "start_line": 1,
                      "end_line": 1,
                      "successors": [
                        {
                          "type": "block",
                          "name": "Block?",
                          "label": "instanceinvoke baseHrefParts.<@%unk/%unk: .pop()>()",
                          "start_line": 1,
                          "end_line": 1,
                          "successors": [
                            {
                              "type": "block",
                              "name": "Block?",
                              "label": "%15 = baseHrefParts.<@%unk/%unk: .length>\nif %15 === 0",
                              "start_line": 1,
                              "end_line": 1,
                              "successors": [
                                {
                                  "type": "block",
                                  "name": "Block?",
                                  "label": "normalizedBaseHref = '/'",
                                  "start_line": 1,
                                  "end_line": 1,
                                  "successors": [
                                    {
                                      "type": "block",
                                      "name": "Block?",
                                      "label": "%20 = deployUrl.<@%unk/%unk: .0>\n%21 = %20 === '/'\n%22 = deployUrl && %21\nif %22 != false",
                                      "start_line": 1,
                                      "end_line": 1,
                                      "successors": [
                                        {
                                          "type": "block",
                                          "name": "Block?",
                                          "label": "%23 = baseHref.<@%unk/%unk: .0>\n%24 = %23 === '/'\n%25 = baseHref && %24\n%26 = normalizedBaseHref !== deployUrl\n%27 = %25 && %26\nif %27 != false",
                                          "start_line": 1,
                                          "end_line": 1,
                                          "successors": [
                                            {
                                              "type": "block",
                                              "name": "Block?",
                                              "label": "return null",
                                              "start_line": 28,
                                              "end_line": 44,
                                              "successors": []
                                            },
                                            {
                                              "type": "block",
                                              "name": "Block?",
                                              "label": "return deployUrl",
                                              "start_line": 46,
                                              "end_line": 46,
                                              "successors": []
                                            }
                                          ]
                                        },
                                        {
                                          "type": "block",
                                          "name": "Block?",
                                          "label": "%28 = deployUrl || ''\n%29 = normalizedBaseHref + %28\nreturn %29",
                                          "start_line": 1,
                                          "end_line": 1,
                                          "successors": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "block",
                                  "name": "Block?",
                                  "label": "%17 = instanceinvoke baseHrefParts.<@%unk/%unk: .join()>('/')\n%18 = '/' + %17\n%19 = %18 + '/'",
                                  "start_line": 1,
                                  "end_line": 1,
                                  "successors": [
                                    {
                                      "type": "blockRef",
                                      "label": "(RepeatedBlock)"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "blockRef",
                          "label": "(RepeatedBlock)"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "export function _findDefaultServePath(\n  baseHref?: string,\n  deployUrl?: string\n): string | null {\n  if (!baseHref && !deployUrl) {\n    return '';\n  }\n  if (\n    /^(\\w+:)?\\/\\//.test(baseHref || '') ||\n    /^(\\w+:)?\\/\\//.test(deployUrl || '')\n  ) {\n    // If baseHref or deployUrl is absolute, unsupported by nx serve\n    return null;\n  }\n  // normalize baseHref\n  // for nx serve the starting base is always `/` so a relative\n  // and root relative value are identical\n  const baseHrefParts = (baseHref || '')\n    .split('/')\n    .filter((part) => part !== '');\n  if (baseHref && !baseHref.endsWith('/')) {\n    baseHrefParts.pop();\n  }\n  const normalizedBaseHref =\n    baseHrefParts.length === 0 ? '/' : `/${baseHrefParts.join('/')}/`;\n  if (deployUrl && deployUrl[0] === '/') {\n    if (baseHref && baseHref[0] === '/' && normalizedBaseHref !== deployUrl) {\n      // If baseHref and deployUrl are root relative and not equivalent, unsupported by nx serve\n      return null;\n    }\n    return deployUrl;\n  }\n  // Join together baseHref and deployUrl\n  return `${normalizedBaseHref}${deployUrl || ''}`;\n}"
        },
        {
          "type": "function",
          "name": "%AM0$_findDefaultServePath",
          "label": "%AM0$_findDefaultServePath",
          "start_line": 1,
          "end_line": 35,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "part = parameter0: unknown\nthis = this: @ts_files/136.ts: %dflt\n%0 = part !== ''\nreturn %0",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(part) => part !== ''"
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": ""
    }
  ],
  "functions": [],
  "blocks": [],
  "simplified_code": "import type { NormalizedWebpackExecutorOptions } from '../../webpack/schema';\nexport function buildServePath(\n  browserOptions: NormalizedWebpackExecutorOptions\n) {\n  let servePath =\n    _findDefaultServePath(browserOptions.baseHref, browserOptions.deployUrl) ||\n    '/';\n  if (servePath.endsWith('/')) {\n    servePath = servePath.slice(0, -1);\n  }\n  if (!servePath.startsWith('/')) {\n    servePath = `/${servePath}`;\n  }\n  return servePath;\n}\nexport function _findDefaultServePath(\n  baseHref?: string,\n  deployUrl?: string\n): string | null {\n  if (!baseHref && !deployUrl) {\n    return '';\n  }\n  if (\n    /^(\\w+:)?\\/\\//.test(baseHref || '') ||\n    /^(\\w+:)?\\/\\//.test(deployUrl || '')\n  ) {\n    // If baseHref or deployUrl is absolute, unsupported by nx serve\n    return null;\n  }\n  // normalize baseHref\n  // for nx serve the starting base is always `/` so a relative\n  // and root relative value are identical\n  const baseHrefParts = (baseHref || '')\n    .split('/')\n    .filter((part) => part !== '');\n  if (baseHref && !baseHref.endsWith('/')) {\n    baseHrefParts.pop();\n  }\n  const normalizedBaseHref =\n    baseHrefParts.length === 0 ? '/' : `/${baseHrefParts.join('/')}/`;\n  if (deployUrl && deployUrl[0] === '/') {\n    if (baseHref && baseHref[0] === '/' && normalizedBaseHref !== deployUrl) {\n      // If baseHref and deployUrl are root relative and not equivalent, unsupported by nx serve\n      return null;\n    }\n    return deployUrl;\n  }\n  // Join together baseHref and deployUrl\n  return `${normalizedBaseHref}${deployUrl || ''}`;\n}"
}