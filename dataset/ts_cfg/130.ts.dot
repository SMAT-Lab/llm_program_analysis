digraph "130.ts" {
subgraph "cluster_@ts_files/130.ts: %dflt.[static]%dflt()" {
  label="@ts_files/130.ts: %dflt.[static]%dflt()";
  Node33680 [label="id:0
      this = this: @ts_files/130.ts: %dflt
      withAndroidGradlePluginVersion = %AM0
      return"];
}
subgraph "cluster_@ts_files/130.ts: %dflt.createAgpRegExp()" {
  label="@ts_files/130.ts: %dflt.createAgpRegExp()";
  Node35680 [label="id:0
      this = this: @ts_files/130.ts: %dflt
      return /^(\s*classpath[(\s][\"']com\.android\.tools\.build:gradle:)(\d+\.\d+\.\d+)([\"'][)\s]\s*)$/gm"];
}
subgraph "cluster_@ts_files/130.ts: %dflt.shouldUpdateAgpVersionAsync(string, string)" {
  label="@ts_files/130.ts: %dflt.shouldUpdateAgpVersionAsync(string, string)";
  Node62730 [label="id:0
      projectRoot = parameter0: string
      targetVersion = parameter1: string
      this = this: @ts_files/130.ts: %dflt
      gradlePath = instanceinvoke path.<@%unk/%unk: .join()>(projectRoot, 'android', 'build.gradle')
      %0 = fs.<@%unk/%unk: .promises>
      %1 = instanceinvoke %0.<@%unk/%unk: .readFile()>(gradlePath, 'utf-8')
      content = await %1
      %2 = staticinvoke <@ts_files/130.ts: %dflt.createAgpRegExp()>()
      matchResult = instanceinvoke %2.<@%unk/%unk: .exec()>(content)
      %3 = !matchResult
      if %3 != 0"];
  Node62731 [label="id:1
      instanceinvoke console.<@%unk/%unk: .warn()>('Unrecognized `android/build.gradle` content, will skip the process to update AGP version.')
      return false"];
  Node62732 [label="id:2
      version = matchResult.<@%unk/%unk: .2>
      %4 = !version
      if %4 != 0"];
  Node62733 [label="id:3
      instanceinvoke console.<@%unk/%unk: .warn()>('Unrecognized `android/build.gradle` content, will skip the process to update AGP version.')
      return false"];
  Node62734 [label="id:4
      %5 = staticinvoke <@ts_files/130.ts: %dflt.toSemVer(string)>(version)
      %6 = staticinvoke <@ts_files/130.ts: %dflt.toSemVer(string)>(targetVersion)
      %7 = instanceinvoke semver.<@%unk/%unk: .lt()>(%5, %6)
      return %7"];
  Node62730 -> Node62731;
  Node62730 -> Node62732;
  Node62732 -> Node62733;
  Node62732 -> Node62734;
}
subgraph "cluster_@ts_files/130.ts: %dflt.toSemVer(string)" {
  label="@ts_files/130.ts: %dflt.toSemVer(string)";
  Node35570 [label="id:0
      version = parameter0: string
      this = this: @ts_files/130.ts: %dflt
      %0 = instanceinvoke semver.<@%unk/%unk: .coerce()>(version)
      %1 = new @%unk/%unk: semver.SemVer
      instanceinvoke %1.<@%unk/%unk: semver.SemVer.constructor()>('0.0.0')
      %2 = %0 ?? %1
      return %2"];
}
subgraph "cluster_@ts_files/130.ts: %dflt.%AM2$%AM1$%AM0(unknown, unknown, unknown, unknown)" {
  label="@ts_files/130.ts: %dflt.%AM2$%AM1$%AM0(unknown, unknown, unknown, unknown)";
  Node61930 [label="id:0
      match = parameter0: unknown
      prefix = parameter1: unknown
      versionPart = parameter2: unknown
      suffix = parameter3: unknown
      this = this: @ts_files/130.ts: %dflt
      %0 = prop.<@%unk/%unk: .androidAgpVersion>
      %1 = prefix + %0
      %2 = %1 + suffix
      return %2"];
}
subgraph "cluster_@ts_files/130.ts: %dflt.%AM1$%AM0(unknown)" {
  label="@ts_files/130.ts: %dflt.%AM1$%AM0(unknown)";
  Node33480 [label="id:0
      config = parameter0: unknown
      this = this: @ts_files/130.ts: %dflt
      %0 = config.<@%unk/%unk: .modResults>
      %1 = %0.<@%unk/%unk: .language>
      if %1 !== 'groovy'"];
  Node33481 [label="id:1
      %2 = new @%unk/%unk: Error
      instanceinvoke %2.<@%unk/%unk: Error.constructor()>('Cannot setup kotlin because the build.gradle is not groovy')
      throw %2"];
  Node33482 [label="id:2
      %3 = config.<@%unk/%unk: .modResults>
      %4 = %3.<@%unk/%unk: .contents>
      %5 = staticinvoke <@ts_files/130.ts: %dflt.createAgpRegExp()>()
      matchResult = instanceinvoke %5.<@%unk/%unk: .exec()>(%4)
      if matchResult != 0"];
  Node33483 [label="id:3
      version = matchResult.<@%unk/%unk: .2>
      %6 = staticinvoke <@ts_files/130.ts: %dflt.toSemVer(string)>(version)
      %7 = prop.<@%unk/%unk: .androidAgpVersion>
      %8 = staticinvoke <@ts_files/130.ts: %dflt.toSemVer(string)>(%7)
      %9 = instanceinvoke semver.<@%unk/%unk: .lt()>(%6, %8)
      %10 = version && %9
      if %10 != false"];
  Node33484 [label="id:4
      %12 = staticinvoke <@ts_files/130.ts: %dflt.createAgpRegExp()>()
      %13 = config.<@%unk/%unk: .modResults>
      %14 = %13.<@%unk/%unk: .contents>
      %15 = instanceinvoke %14.<@%unk/%unk: .replace()>(%12, %AM2$%AM1$%AM0)
      %11 = config.<@%unk/%unk: .modResults>
      %11.<@%unk/%unk: .contents> = %15"];
  Node33485 [label="id:5
      return config"];
  Node33480 -> Node33481;
  Node33480 -> Node33482;
  Node33481 -> Node33482;
  Node33482 -> Node33483;
  Node33482 -> Node33485;
  Node33483 -> Node33484;
  Node33483 -> Node33485;
  Node33484 -> Node33485;
}
subgraph "cluster_@ts_files/130.ts: %dflt.%AM0(unknown, unknown)" {
  label="@ts_files/130.ts: %dflt.%AM0(unknown, unknown)";
  Node39440 [label="id:0
      config = parameter0: unknown
      prop = parameter1: unknown
      this = this: @ts_files/130.ts: %dflt
      %0 = staticinvoke <@%unk/%unk: .withProjectBuildGradle()>(config, %AM1$%AM0)
      return %0"];
}
}
