digraph "166.ts" {
subgraph "cluster_@ts_files/166.ts: %dflt.[static]%dflt()" {
  label="@ts_files/166.ts: %dflt.[static]%dflt()";
  Node33770 [label="id:0
      this = this: @ts_files/166.ts: %dflt
      return"];
}
subgraph "cluster_@ts_files/166.ts: GitRepository.constructor(string, @ts_files/166.ts: %AC$1)" {
  label="@ts_files/166.ts: GitRepository.constructor(string, @ts_files/166.ts: %AC$1)";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.destroy()" {
  label="@ts_files/166.ts: GitRepository.destroy()";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.isDestroyed()" {
  label="@ts_files/166.ts: GitRepository.isDestroyed()";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.%AM0()" {
  label="@ts_files/166.ts: GitRepository.%AM0()";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.onDidDestroy(@ts_files/166.ts: GitRepository.%AM0())" {
  label="@ts_files/166.ts: GitRepository.onDidDestroy(@ts_files/166.ts: GitRepository.%AM0())";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.%AM1(@ts_files/166.ts: RepoStatusChangedEvent)" {
  label="@ts_files/166.ts: GitRepository.%AM1(@ts_files/166.ts: RepoStatusChangedEvent)";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.onDidChangeStatus(@ts_files/166.ts: GitRepository.%AM1(@ts_files/166.ts: RepoStatusChangedEvent))" {
  label="@ts_files/166.ts: GitRepository.onDidChangeStatus(@ts_files/166.ts: GitRepository.%AM1(@ts_files/166.ts: RepoStatusChangedEvent))";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.%AM2()" {
  label="@ts_files/166.ts: GitRepository.%AM2()";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.onDidChangeStatuses(@ts_files/166.ts: GitRepository.%AM2())" {
  label="@ts_files/166.ts: GitRepository.onDidChangeStatuses(@ts_files/166.ts: GitRepository.%AM2())";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.getType()" {
  label="@ts_files/166.ts: GitRepository.getType()";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.getPath()" {
  label="@ts_files/166.ts: GitRepository.getPath()";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.getWorkingDirectory()" {
  label="@ts_files/166.ts: GitRepository.getWorkingDirectory()";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.isProjectAtRoot()" {
  label="@ts_files/166.ts: GitRepository.isProjectAtRoot()";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.relativize()" {
  label="@ts_files/166.ts: GitRepository.relativize()";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.hasBranch(string)" {
  label="@ts_files/166.ts: GitRepository.hasBranch(string)";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.getShortHead(string)" {
  label="@ts_files/166.ts: GitRepository.getShortHead(string)";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.isSubmodule(string)" {
  label="@ts_files/166.ts: GitRepository.isSubmodule(string)";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.getAheadBehindCount(string, string)" {
  label="@ts_files/166.ts: GitRepository.getAheadBehindCount(string, string)";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.getCachedUpstreamAheadBehindCount(string)" {
  label="@ts_files/166.ts: GitRepository.getCachedUpstreamAheadBehindCount(string)";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.getConfigValue(string, string)" {
  label="@ts_files/166.ts: GitRepository.getConfigValue(string, string)";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.getOriginURL(string)" {
  label="@ts_files/166.ts: GitRepository.getOriginURL(string)";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.getUpstreamBranch(string)" {
  label="@ts_files/166.ts: GitRepository.getUpstreamBranch(string)";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.getReferences(string)" {
  label="@ts_files/166.ts: GitRepository.getReferences(string)";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.getReferenceTarget(string, string)" {
  label="@ts_files/166.ts: GitRepository.getReferenceTarget(string, string)";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.isPathModified(string)" {
  label="@ts_files/166.ts: GitRepository.isPathModified(string)";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.isPathNew(string)" {
  label="@ts_files/166.ts: GitRepository.isPathNew(string)";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.isPathIgnored(string)" {
  label="@ts_files/166.ts: GitRepository.isPathIgnored(string)";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.getDirectoryStatus(string)" {
  label="@ts_files/166.ts: GitRepository.getDirectoryStatus(string)";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.getPathStatus(string)" {
  label="@ts_files/166.ts: GitRepository.getPathStatus(string)";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.getCachedPathStatus(string)" {
  label="@ts_files/166.ts: GitRepository.getCachedPathStatus(string)";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.isStatusModified(number)" {
  label="@ts_files/166.ts: GitRepository.isStatusModified(number)";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.isStatusNew(number)" {
  label="@ts_files/166.ts: GitRepository.isStatusNew(number)";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.getDiffStats(string)" {
  label="@ts_files/166.ts: GitRepository.getDiffStats(string)";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.getLineDiffs(string, string)" {
  label="@ts_files/166.ts: GitRepository.getLineDiffs(string, string)";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.checkoutHead(string)" {
  label="@ts_files/166.ts: GitRepository.checkoutHead(string)";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.checkoutReference(string, boolean)" {
  label="@ts_files/166.ts: GitRepository.checkoutReference(string, boolean)";
}
subgraph "cluster_@ts_files/166.ts: GitRepository.[static]open(string, @ts_files/166.ts: %AC$0)" {
  label="@ts_files/166.ts: GitRepository.[static]open(string, @ts_files/166.ts: %AC$0)";
}
}
