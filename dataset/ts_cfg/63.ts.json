{
  "type": "file",
  "name": "63.ts",
  "label": "63.ts",
  "start_line": -1,
  "end_line": 34,
  "classes": [
    {
      "type": "class",
      "name": "%dflt",
      "label": "%dflt",
      "start_line": -1,
      "end_line": 34,
      "functions": [
        {
          "type": "function",
          "name": "%dflt",
          "label": "%dflt",
          "start_line": -1,
          "end_line": 34,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/63.ts: %dflt\nreturn",
              "start_line": 1,
              "end_line": 34,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": ""
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": ""
    },
    {
      "type": "class",
      "name": "FavorUserFileDataItem",
      "label": "FavorUserFileDataItem",
      "start_line": 1,
      "end_line": 34,
      "functions": [
        {
          "type": "function",
          "name": "constructor",
          "label": "constructor",
          "start_line": 1,
          "end_line": 34,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "instanceinvoke this.<@ts_files/63.ts: FavorUserFileDataItem.%instInit()>()\nselections = parameter0: string\nselectionArgs = parameter1: string[]\nindex = parameter2: number\nthis = this: @ts_files/63.ts: FavorUserFileDataItem\nstaticinvoke <@%unk/%unk: .super()>(selections, selectionArgs, '', index)\nreturn",
              "start_line": 1,
              "end_line": 34,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "constructor(selections: string, selectionArgs: string[], index: number) {\n    super(selections, selectionArgs, '', index);\n  }"
        },
        {
          "type": "function",
          "name": "loadFileAsset",
          "label": "loadFileAsset",
          "start_line": 1,
          "end_line": 26,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/63.ts: FavorUserFileDataItem\n%0 = this.<@ts_files/63.ts: FavorUserFileDataItem.uri>\n%1 = instanceinvoke userFileModel.<@%unk/%unk: .getMediaItemByUri()>(%0)\nreturn await %1",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "async loadFileAsset(): Promise<photoAccessHelper.PhotoAsset> {\n    return await userFileModel.getMediaItemByUri(this.uri);\n  }"
        },
        {
          "type": "function",
          "name": "setFavor",
          "label": "setFavor",
          "start_line": 1,
          "end_line": 30,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/63.ts: FavorUserFileDataItem\n%0 = instanceinvoke super.<@%unk/%unk: .setFavor()>()\nisSuccess = await %0\n%1 = instanceinvoke super.<@%unk/%unk: .isFavor()>()\nisFavor = await %1\nif isFavor != false",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%2 = this.<@ts_files/63.ts: FavorUserFileDataItem.status>",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "this.<@ts_files/63.ts: FavorUserFileDataItem.status> = %2\nreturn isSuccess",
                      "start_line": 1,
                      "end_line": 34,
                      "successors": []
                    }
                  ]
                },
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%2 = MediaConstants.<@%unk/%unk: .TRASHED>",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "blockRef",
                      "label": "(RepeatedBlock)"
                    }
                  ]
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "async setFavor(): Promise<boolean> {\n    let isSuccess: boolean = await super.setFavor();\n    let isFavor: boolean = await super.isFavor();\n    this.status = isFavor ? this.status : MediaConstants.TRASHED;\n    return isSuccess;\n  }"
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": "export class FavorUserFileDataItem extends UserFileDataItem {\n  constructor(selections: string, selectionArgs: string[], index: number) {\n    super(selections, selectionArgs, '', index);\n  }\n\n  async loadFileAsset(): Promise<photoAccessHelper.PhotoAsset> {\n    return await userFileModel.getMediaItemByUri(this.uri);\n  }\n\n  async setFavor(): Promise<boolean> {\n    let isSuccess: boolean = await super.setFavor();\n    let isFavor: boolean = await super.isFavor();\n    this.status = isFavor ? this.status : MediaConstants.TRASHED;\n    return isSuccess;\n  }\n}"
    }
  ],
  "functions": [],
  "blocks": [],
  "simplified_code": "/*\n * Copyright (c) 2023 Shenzhen Kaihong Digital Industry Development Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport photoAccessHelper from '@ohos.file.photoAccessHelper';\nimport { userFileModel } from './UserFileModel';\nimport { MediaConstants } from '../constants/MediaConstants';\nimport { UserFileDataItem } from './UserFileDataItem';\n\nexport class FavorUserFileDataItem extends UserFileDataItem {\n  constructor(selections: string, selectionArgs: string[], index: number) {\n    super(selections, selectionArgs, '', index);\n  }\n\n  async loadFileAsset(): Promise<photoAccessHelper.PhotoAsset> {\n    return await userFileModel.getMediaItemByUri(this.uri);\n  }\n\n  async setFavor(): Promise<boolean> {\n    let isSuccess: boolean = await super.setFavor();\n    let isFavor: boolean = await super.isFavor();\n    this.status = isFavor ? this.status : MediaConstants.TRASHED;\n    return isSuccess;\n  }\n}\n"
}