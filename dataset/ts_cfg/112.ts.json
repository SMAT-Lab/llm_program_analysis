{
  "type": "file",
  "name": "112.ts",
  "label": "112.ts",
  "start_line": -1,
  "end_line": 54,
  "classes": [
    {
      "type": "class",
      "name": "%dflt",
      "label": "%dflt",
      "start_line": -1,
      "end_line": 49,
      "functions": [
        {
          "type": "function",
          "name": "%dflt",
          "label": "%dflt",
          "start_line": -1,
          "end_line": 49,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/112.ts: %dflt\nTAG = '[MyAbilityStage]'\nDOMAIN_NUMBER = 65280\nsystemLanguage = undefined\nreturn",
              "start_line": 1,
              "end_line": 49,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": ""
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": ""
    },
    {
      "type": "class",
      "name": "MyAbilityStage",
      "label": "MyAbilityStage",
      "start_line": 1,
      "end_line": 54,
      "functions": [
        {
          "type": "function",
          "name": "onNewWant",
          "label": "onNewWant",
          "start_line": 1,
          "end_line": 49,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "want = parameter0: Want\nlaunchParam = parameter1: AbilityConstant.LaunchParam\nthis = this: @ts_files/112.ts: MyAbilityStage\n%0 = want.<@%unk/%unk: .abilityName>\n%1 = 'onNewWant, want: ' + %0\ninstanceinvoke hilog.<@%unk/%unk: .info()>(DOMAIN_NUMBER, TAG, %1)\n%2 = instanceinvoke JSON.<@%unk/%unk: .stringify()>(launchParam)\n%3 = 'onNewWant, launchParam: ' + %2\ninstanceinvoke hilog.<@%unk/%unk: .info()>(DOMAIN_NUMBER, TAG, %3)\nreturn",
              "start_line": 1,
              "end_line": 49,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "onNewWant(want: Want, launchParam: AbilityConstant.LaunchParam): void {\n    hilog.info(DOMAIN_NUMBER, TAG, `onNewWant, want: ${want.abilityName}`);\n    hilog.info(DOMAIN_NUMBER, TAG, `onNewWant, launchParam: ${JSON.stringify(launchParam)}`);\n  }"
        },
        {
          "type": "function",
          "name": "onCreate",
          "label": "onCreate",
          "start_line": 1,
          "end_line": 49,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/112.ts: MyAbilityStage\n%0 = this.<@ts_files/112.ts: MyAbilityStage.context>\n%1 = %0.<@%unk/%unk: .config>\nsystemLanguage = %1.<@%unk/%unk: .language>\n%2 = 'systemLanguage is ' + systemLanguage\ninstanceinvoke hilog.<@%unk/%unk: .info()>(DOMAIN_NUMBER, TAG, %2)\nabilityStageContext = this.<@ts_files/112.ts: MyAbilityStage.context>\nreturn",
              "start_line": 1,
              "end_line": 49,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "onCreate(): void {\n    // 应用的HAP在首次加载的时，为该Module初始化操作\n    systemLanguage = this.context.config.language; // Module首次加载时，获取系统当前语言\n    hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage is ${systemLanguage}`);\n    let abilityStageContext = this.context;\n  }"
        },
        {
          "type": "function",
          "name": "onAcceptWant",
          "label": "onAcceptWant",
          "start_line": 1,
          "end_line": 38,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "want = parameter0: Want\nthis = this: @ts_files/112.ts: MyAbilityStage\ninstanceinvoke hilog.<@%unk/%unk: .info()>(DOMAIN_NUMBER, TAG, 'Succeeded in starting SpecifiedAbility')\n%0 = want.<@%unk/%unk: .abilityName>\n%1 = %0 === 'SpecifiedFirstAbility'\n%2 = want.<@%unk/%unk: .abilityName>\n%3 = %2 === 'SpecifiedSecondAbility'\n%4 = %1 || %3\nif %4 != false",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%5 = want.<@%unk/%unk: .parameters>\nif %5 != 0",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "%6 = want.<@%unk/%unk: .parameters>\n%7 = %6.<@%unk/%unk: .instanceKey>\n%8 = 'SpecifiedAbilityInstance_' + %7\nreturn %8",
                      "start_line": 1,
                      "end_line": 1,
                      "successors": []
                    },
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "return 'MyAbilityStage'",
                      "start_line": 49,
                      "end_line": 49,
                      "successors": []
                    }
                  ]
                },
                {
                  "type": "blockRef",
                  "label": "(RepeatedBlock)"
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "onAcceptWant(want: Want): string {\n    // 仅specified模式下触发\n    hilog.info(DOMAIN_NUMBER, TAG, 'Succeeded in starting SpecifiedAbility');\n    // 在被调用方的AbilityStage中，针对启动模式为specified的UIAbility返回一个UIAbility实例对应的一个Key值\n    // 当前示例指的是module1 Module的SpecifiedAbility\n    if (want.abilityName === 'SpecifiedFirstAbility' || want.abilityName === 'SpecifiedSecondAbility') {\n      // 返回的字符串Key标识为自定义拼接的字符串内容\n      if (want.parameters) {\n        return `SpecifiedAbilityInstance_${want.parameters.instanceKey}`;\n      }\n    }\n    return 'MyAbilityStage';\n  }"
        },
        {
          "type": "function",
          "name": "onMemoryLevel",
          "label": "onMemoryLevel",
          "start_line": 1,
          "end_line": 51,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "level = parameter0: AbilityConstant.MemoryLevel\nthis = this: @ts_files/112.ts: MyAbilityStage\nreturn",
              "start_line": 1,
              "end_line": 49,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "onMemoryLevel(level: AbilityConstant.MemoryLevel): void {\n    // 根据系统可用内存的变化情况，释放不必要的内存\n  }"
        },
        {
          "type": "function",
          "name": "onConfigurationUpdate",
          "label": "onConfigurationUpdate",
          "start_line": 1,
          "end_line": 54,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "newConfig = parameter0: Configuration\nthis = this: @ts_files/112.ts: MyAbilityStage\n%0 = newConfig.<@%unk/%unk: .language>\n%1 = 'onConfigurationUpdate, language: ' + %0\ninstanceinvoke hilog.<@%unk/%unk: .info()>(DOMAIN_NUMBER, TAG, %1)\n%2 = instanceinvoke JSON.<@%unk/%unk: .stringify()>(newConfig)\n%3 = 'onConfigurationUpdated systemLanguage is ' + systemLanguage\n%4 = %3 + ', newConfig: '\n%5 = %4 + %2\ninstanceinvoke hilog.<@%unk/%unk: .info()>(DOMAIN_NUMBER, TAG, %5)\n%6 = newConfig.<@%unk/%unk: .language>\nif systemLanguage !== %6",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%7 = newConfig.<@%unk/%unk: .language>\n%8 = 'systemLanguage from ' + systemLanguage\n%9 = %8 + ' changed to '\n%10 = %9 + %7\ninstanceinvoke hilog.<@%unk/%unk: .info()>(DOMAIN_NUMBER, TAG, %10)\nsystemLanguage = newConfig.<@%unk/%unk: .language>",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "return",
                      "start_line": 46,
                      "end_line": 49,
                      "successors": []
                    }
                  ]
                },
                {
                  "type": "blockRef",
                  "label": "(RepeatedBlock)"
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "onConfigurationUpdate(newConfig: Configuration): void {\n    hilog.info(DOMAIN_NUMBER, TAG, `onConfigurationUpdate, language: ${newConfig.language}`);\n    hilog.info(DOMAIN_NUMBER, TAG, `onConfigurationUpdated systemLanguage is ${systemLanguage}, newConfig: ${JSON.stringify(newConfig)}`);\n\n    if (systemLanguage !== newConfig.language) {\n      hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage from ${systemLanguage} changed to ${newConfig.language}`);\n      systemLanguage = newConfig.language; // 将变化之后的系统语言保存，作为下一次变化前的系统语言\n    }\n  }"
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": "export default class MyAbilityStage extends AbilityStage {\n  onNewWant(want: Want, launchParam: AbilityConstant.LaunchParam): void {\n    hilog.info(DOMAIN_NUMBER, TAG, `onNewWant, want: ${want.abilityName}`);\n    hilog.info(DOMAIN_NUMBER, TAG, `onNewWant, launchParam: ${JSON.stringify(launchParam)}`);\n  }\n  onCreate(): void {\n    // 应用的HAP在首次加载的时，为该Module初始化操作\n    systemLanguage = this.context.config.language; // Module首次加载时，获取系统当前语言\n    hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage is ${systemLanguage}`);\n    let abilityStageContext = this.context;\n  }\n  onAcceptWant(want: Want): string {\n    // 仅specified模式下触发\n    hilog.info(DOMAIN_NUMBER, TAG, 'Succeeded in starting SpecifiedAbility');\n    // 在被调用方的AbilityStage中，针对启动模式为specified的UIAbility返回一个UIAbility实例对应的一个Key值\n    // 当前示例指的是module1 Module的SpecifiedAbility\n    if (want.abilityName === 'SpecifiedFirstAbility' || want.abilityName === 'SpecifiedSecondAbility') {\n      // 返回的字符串Key标识为自定义拼接的字符串内容\n      if (want.parameters) {\n        return `SpecifiedAbilityInstance_${want.parameters.instanceKey}`;\n      }\n    }\n    return 'MyAbilityStage';\n  }\n  onMemoryLevel(level: AbilityConstant.MemoryLevel): void {\n    // 根据系统可用内存的变化情况，释放不必要的内存\n  }\n  onConfigurationUpdate(newConfig: Configuration): void {\n    hilog.info(DOMAIN_NUMBER, TAG, `onConfigurationUpdate, language: ${newConfig.language}`);\n    hilog.info(DOMAIN_NUMBER, TAG, `onConfigurationUpdated systemLanguage is ${systemLanguage}, newConfig: ${JSON.stringify(newConfig)}`);\n\n    if (systemLanguage !== newConfig.language) {\n      hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage from ${systemLanguage} changed to ${newConfig.language}`);\n      systemLanguage = newConfig.language; // 将变化之后的系统语言保存，作为下一次变化前的系统语言\n    }\n  }\n}"
    }
  ],
  "functions": [],
  "blocks": [],
  "simplified_code": "/*\n * Copyright (c) 2023 Huawei Device Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AbilityStage from '@ohos.app.ability.AbilityStage';\nimport type AbilityConstant from '@ohos.app.ability.AbilityConstant';\nimport hilog from '@ohos.hilog';\nimport type Want from '@ohos.app.ability.Want';\nimport type { Configuration } from '@ohos.app.ability.Configuration';\n\nconst TAG: string = '[MyAbilityStage]';\nconst DOMAIN_NUMBER: number = 0xFF00;\n\nlet systemLanguage: string | undefined; // 系统当前语言\n\nexport default class MyAbilityStage extends AbilityStage {\n  onNewWant(want: Want, launchParam: AbilityConstant.LaunchParam): void {\n    hilog.info(DOMAIN_NUMBER, TAG, `onNewWant, want: ${want.abilityName}`);\n    hilog.info(DOMAIN_NUMBER, TAG, `onNewWant, launchParam: ${JSON.stringify(launchParam)}`);\n  }\n  onCreate(): void {\n    // 应用的HAP在首次加载的时，为该Module初始化操作\n    systemLanguage = this.context.config.language; // Module首次加载时，获取系统当前语言\n    hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage is ${systemLanguage}`);\n    let abilityStageContext = this.context;\n  }\n  onAcceptWant(want: Want): string {\n    // 仅specified模式下触发\n    hilog.info(DOMAIN_NUMBER, TAG, 'Succeeded in starting SpecifiedAbility');\n    // 在被调用方的AbilityStage中，针对启动模式为specified的UIAbility返回一个UIAbility实例对应的一个Key值\n    // 当前示例指的是module1 Module的SpecifiedAbility\n    if (want.abilityName === 'SpecifiedFirstAbility' || want.abilityName === 'SpecifiedSecondAbility') {\n      // 返回的字符串Key标识为自定义拼接的字符串内容\n      if (want.parameters) {\n        return `SpecifiedAbilityInstance_${want.parameters.instanceKey}`;\n      }\n    }\n    return 'MyAbilityStage';\n  }\n  onMemoryLevel(level: AbilityConstant.MemoryLevel): void {\n    // 根据系统可用内存的变化情况，释放不必要的内存\n  }\n  onConfigurationUpdate(newConfig: Configuration): void {\n    hilog.info(DOMAIN_NUMBER, TAG, `onConfigurationUpdate, language: ${newConfig.language}`);\n    hilog.info(DOMAIN_NUMBER, TAG, `onConfigurationUpdated systemLanguage is ${systemLanguage}, newConfig: ${JSON.stringify(newConfig)}`);\n\n    if (systemLanguage !== newConfig.language) {\n      hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage from ${systemLanguage} changed to ${newConfig.language}`);\n      systemLanguage = newConfig.language; // 将变化之后的系统语言保存，作为下一次变化前的系统语言\n    }\n  }\n};\n"
}