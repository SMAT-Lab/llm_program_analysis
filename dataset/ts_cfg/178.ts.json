{
  "type": "file",
  "name": "178.ts",
  "label": "178.ts",
  "start_line": -1,
  "end_line": 44,
  "classes": [
    {
      "type": "class",
      "name": "%dflt",
      "label": "%dflt",
      "start_line": -1,
      "end_line": 41,
      "functions": [
        {
          "type": "function",
          "name": "%dflt",
          "label": "%dflt",
          "start_line": -1,
          "end_line": 41,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/178.ts: %dflt\nreturn",
              "start_line": 1,
              "end_line": 41,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": ""
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": ""
    },
    {
      "type": "class",
      "name": "FederatedMouseEvent",
      "label": "FederatedMouseEvent",
      "start_line": 1,
      "end_line": 44,
      "functions": [
        {
          "type": "function",
          "name": "Get-clientX",
          "label": "Get-clientX",
          "start_line": 1,
          "end_line": 18,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/178.ts: FederatedMouseEvent\n%0 = this.<@ts_files/178.ts: FederatedMouseEvent.client>\n%1 = %0.<@%unk/%unk: .x>\nreturn %1",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "public get clientX(): number { return this.client.x; }"
        },
        {
          "type": "function",
          "name": "Get-clientY",
          "label": "Get-clientY",
          "start_line": 1,
          "end_line": 19,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/178.ts: FederatedMouseEvent\n%0 = this.<@ts_files/178.ts: FederatedMouseEvent.client>\n%1 = %0.<@%unk/%unk: .y>\nreturn %1",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "public get clientY(): number { return this.client.y; }"
        },
        {
          "type": "function",
          "name": "Get-x",
          "label": "Get-x",
          "start_line": 1,
          "end_line": 20,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/178.ts: FederatedMouseEvent\n%0 = this.<@ts_files/178.ts: FederatedMouseEvent.clientX>\nreturn %0",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "get x(): number { return this.clientX; }"
        },
        {
          "type": "function",
          "name": "Get-y",
          "label": "Get-y",
          "start_line": 1,
          "end_line": 21,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/178.ts: FederatedMouseEvent\n%0 = this.<@ts_files/178.ts: FederatedMouseEvent.clientY>\nreturn %0",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "get y(): number { return this.clientY; }"
        },
        {
          "type": "function",
          "name": "Get-movementX",
          "label": "Get-movementX",
          "start_line": 1,
          "end_line": 24,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/178.ts: FederatedMouseEvent\n%0 = this.<@ts_files/178.ts: FederatedMouseEvent.movement>\n%1 = %0.<@%unk/%unk: .x>\nreturn %1",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "get movementX(): number { return this.movement.x; }"
        },
        {
          "type": "function",
          "name": "Get-movementY",
          "label": "Get-movementY",
          "start_line": 1,
          "end_line": 25,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/178.ts: FederatedMouseEvent\n%0 = this.<@ts_files/178.ts: FederatedMouseEvent.movement>\n%1 = %0.<@%unk/%unk: .y>\nreturn %1",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "get movementY(): number { return this.movement.y; }"
        },
        {
          "type": "function",
          "name": "Get-offsetX",
          "label": "Get-offsetX",
          "start_line": 1,
          "end_line": 27,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/178.ts: FederatedMouseEvent\n%0 = this.<@ts_files/178.ts: FederatedMouseEvent.offset>\n%1 = %0.<@%unk/%unk: .x>\nreturn %1",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "get offsetX(): number { return this.offset.x; }"
        },
        {
          "type": "function",
          "name": "Get-offsetY",
          "label": "Get-offsetY",
          "start_line": 1,
          "end_line": 28,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/178.ts: FederatedMouseEvent\n%0 = this.<@ts_files/178.ts: FederatedMouseEvent.offset>\n%1 = %0.<@%unk/%unk: .y>\nreturn %1",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "get offsetY(): number { return this.offset.y; }"
        },
        {
          "type": "function",
          "name": "Get-globalX",
          "label": "Get-globalX",
          "start_line": 1,
          "end_line": 30,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/178.ts: FederatedMouseEvent\n%0 = this.<@ts_files/178.ts: FederatedMouseEvent.global>\n%1 = %0.<@%unk/%unk: .x>\nreturn %1",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "get globalX(): number { return this.global.x; }"
        },
        {
          "type": "function",
          "name": "Get-globalY",
          "label": "Get-globalY",
          "start_line": 1,
          "end_line": 31,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/178.ts: FederatedMouseEvent\n%0 = this.<@ts_files/178.ts: FederatedMouseEvent.global>\n%1 = %0.<@%unk/%unk: .y>\nreturn %1",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "get globalY(): number { return this.global.y; }"
        },
        {
          "type": "function",
          "name": "Get-screenX",
          "label": "Get-screenX",
          "start_line": 1,
          "end_line": 33,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/178.ts: FederatedMouseEvent\n%0 = this.<@ts_files/178.ts: FederatedMouseEvent.screen>\n%1 = %0.<@%unk/%unk: .x>\nreturn %1",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "get screenX(): number { return this.screen.x; }"
        },
        {
          "type": "function",
          "name": "Get-screenY",
          "label": "Get-screenY",
          "start_line": 1,
          "end_line": 34,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/178.ts: FederatedMouseEvent\n%0 = this.<@ts_files/178.ts: FederatedMouseEvent.screen>\n%1 = %0.<@%unk/%unk: .y>\nreturn %1",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "get screenY(): number { return this.screen.y; }"
        },
        {
          "type": "function",
          "name": "getLocalPosition",
          "label": "getLocalPosition",
          "start_line": 1,
          "end_line": 35,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "container = parameter0: Container\npoint = parameter1: P extends PointData = Point\nglobalPos = parameter2: PointData\nthis = this: @ts_files/178.ts: FederatedMouseEvent\n%0 = this.<@ts_files/178.ts: FederatedMouseEvent.global>\n%1 = globalPos || %0\n%2 = container.<@%unk/%unk: .worldTransform>\n%3 = instanceinvoke %2.<@%unk/%unk: .applyInverse()>(%1, point)\nreturn %3",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "public getLocalPosition<P extends PointData = Point>(container: Container, point?: P, globalPos?: PointData): P\n    {\n        return container.worldTransform.applyInverse<P>(globalPos || this.global, point);\n    }"
        },
        {
          "type": "function",
          "name": "getModifierState",
          "label": "getModifierState",
          "start_line": 1,
          "end_line": 39,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "key = parameter0: string\nthis = this: @ts_files/178.ts: FederatedMouseEvent\n%0 = this.<@ts_files/178.ts: FederatedMouseEvent.nativeEvent>\n%1 = this.<@ts_files/178.ts: FederatedMouseEvent.nativeEvent>\n%2 = instanceinvoke %1.<@%unk/%unk: .getModifierState()>(key)\n%3 = undefined && %2\nreturn %3",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "public getModifierState(key: string): boolean\n    {\n        return 'getModifierState' in this.nativeEvent && this.nativeEvent.getModifierState(key);\n    }"
        },
        {
          "type": "function",
          "name": "initMouseEvent",
          "label": "initMouseEvent",
          "start_line": 1,
          "end_line": 44,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "_typeArg = parameter0: string\n_canBubbleArg = parameter1: boolean\n_cancelableArg = parameter2: boolean\n_viewArg = parameter3: Window\n_detailArg = parameter4: number\n_screenXArg = parameter5: number\n_screenYArg = parameter6: number\n_clientXArg = parameter7: number\n_clientYArg = parameter8: number\n_ctrlKeyArg = parameter9: boolean\n_altKeyArg = parameter10: boolean\n_shiftKeyArg = parameter11: boolean\n_metaKeyArg = parameter12: boolean\n_buttonArg = parameter13: number\n_relatedTargetArg = parameter14: EventTarget\nthis = this: @ts_files/178.ts: FederatedMouseEvent\n%0 = new @%unk/%unk: Error\ninstanceinvoke %0.<@%unk/%unk: Error.constructor()>('Method not implemented.')\nthrow %0\nreturn",
              "start_line": 1,
              "end_line": 41,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "public initMouseEvent(\n        _typeArg: string,\n        _canBubbleArg: boolean,\n        _cancelableArg: boolean,\n        _viewArg: Window,\n        _detailArg: number,\n        _screenXArg: number,\n        _screenYArg: number,\n        _clientXArg: number,\n        _clientYArg: number,\n        _ctrlKeyArg: boolean,\n        _altKeyArg: boolean,\n        _shiftKeyArg: boolean,\n        _metaKeyArg: boolean,\n        _buttonArg: number,\n        _relatedTargetArg: EventTarget\n    ): void\n    {\n        throw new Error('Method not implemented.');\n    }"
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": "export class FederatedMouseEvent extends FederatedEvent<\nMouseEvent | PointerEvent | PixiTouch\n> implements MouseEvent\n{\n    public altKey: boolean;\n    public button: number;\n    public buttons: number;\n    public ctrlKey: boolean;\n    public metaKey: boolean;\n    public relatedTarget: EventTarget;\n    public shiftKey: boolean;\n    public client: Point = new Point();\n    public get clientX(): number { return this.client.x; }\n    public get clientY(): number { return this.client.y; }\n    get x(): number { return this.clientX; }\n    get y(): number { return this.clientY; }\n    public detail: number;\n    public movement: Point = new Point();\n    get movementX(): number { return this.movement.x; }\n    get movementY(): number { return this.movement.y; }\n    public offset: Point = new Point();\n    get offsetX(): number { return this.offset.x; }\n    get offsetY(): number { return this.offset.y; }\n    public global: Point = new Point();\n    get globalX(): number { return this.global.x; }\n    get globalY(): number { return this.global.y; }\n    public screen: Point = new Point();\n    get screenX(): number { return this.screen.x; }\n    get screenY(): number { return this.screen.y; }\n    public getLocalPosition<P extends PointData = Point>(container: Container, point?: P, globalPos?: PointData): P\n    {\n        return container.worldTransform.applyInverse<P>(globalPos || this.global, point);\n    }\n    public getModifierState(key: string): boolean\n    {\n        return 'getModifierState' in this.nativeEvent && this.nativeEvent.getModifierState(key);\n    }\n    // eslint-disable-next-line max-params\n    public initMouseEvent(\n        _typeArg: string,\n        _canBubbleArg: boolean,\n        _cancelableArg: boolean,\n        _viewArg: Window,\n        _detailArg: number,\n        _screenXArg: number,\n        _screenYArg: number,\n        _clientXArg: number,\n        _clientYArg: number,\n        _ctrlKeyArg: boolean,\n        _altKeyArg: boolean,\n        _shiftKeyArg: boolean,\n        _metaKeyArg: boolean,\n        _buttonArg: number,\n        _relatedTargetArg: EventTarget\n    ): void\n    {\n        throw new Error('Method not implemented.');\n    }\n}"
    }
  ],
  "functions": [],
  "blocks": [],
  "simplified_code": "import { Point } from '../maths/point/Point';\nimport { FederatedEvent } from './FederatedEvent';\nimport type { PointData } from '../maths/point/PointData';\nimport type { Container } from '../scene/container/Container';\nimport type { PixiTouch } from './FederatedEvent';\nexport class FederatedMouseEvent extends FederatedEvent<\nMouseEvent | PointerEvent | PixiTouch\n> implements MouseEvent\n{\n    public altKey: boolean;\n    public button: number;\n    public buttons: number;\n    public ctrlKey: boolean;\n    public metaKey: boolean;\n    public relatedTarget: EventTarget;\n    public shiftKey: boolean;\n    public client: Point = new Point();\n    public get clientX(): number { return this.client.x; }\n    public get clientY(): number { return this.client.y; }\n    get x(): number { return this.clientX; }\n    get y(): number { return this.clientY; }\n    public detail: number;\n    public movement: Point = new Point();\n    get movementX(): number { return this.movement.x; }\n    get movementY(): number { return this.movement.y; }\n    public offset: Point = new Point();\n    get offsetX(): number { return this.offset.x; }\n    get offsetY(): number { return this.offset.y; }\n    public global: Point = new Point();\n    get globalX(): number { return this.global.x; }\n    get globalY(): number { return this.global.y; }\n    public screen: Point = new Point();\n    get screenX(): number { return this.screen.x; }\n    get screenY(): number { return this.screen.y; }\n    public getLocalPosition<P extends PointData = Point>(container: Container, point?: P, globalPos?: PointData): P\n    {\n        return container.worldTransform.applyInverse<P>(globalPos || this.global, point);\n    }\n    public getModifierState(key: string): boolean\n    {\n        return 'getModifierState' in this.nativeEvent && this.nativeEvent.getModifierState(key);\n    }\n    // eslint-disable-next-line max-params\n    public initMouseEvent(\n        _typeArg: string,\n        _canBubbleArg: boolean,\n        _cancelableArg: boolean,\n        _viewArg: Window,\n        _detailArg: number,\n        _screenXArg: number,\n        _screenYArg: number,\n        _clientXArg: number,\n        _clientYArg: number,\n        _ctrlKeyArg: boolean,\n        _altKeyArg: boolean,\n        _shiftKeyArg: boolean,\n        _metaKeyArg: boolean,\n        _buttonArg: number,\n        _relatedTargetArg: EventTarget\n    ): void\n    {\n        throw new Error('Method not implemented.');\n    }\n}"
}