{
  "type": "file",
  "name": "98.ts",
  "label": "98.ts",
  "start_line": -1,
  "end_line": 20,
  "classes": [
    {
      "type": "class",
      "name": "%dflt",
      "label": "%dflt",
      "start_line": -1,
      "end_line": 1,
      "functions": [
        {
          "type": "function",
          "name": "%dflt",
          "label": "%dflt",
          "start_line": -1,
          "end_line": 1,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/98.ts: %dflt\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": ""
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": ""
    },
    {
      "type": "class",
      "name": "ISettingsController",
      "label": "ISettingsController",
      "start_line": 0,
      "end_line": 20,
      "functions": [
        {
          "type": "function",
          "name": "bindComponent",
          "label": "bindComponent",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "bindComponent(component: any): ISettingsController;"
        },
        {
          "type": "function",
          "name": "bindProperties",
          "label": "bindProperties",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "bindProperties(componentProperties: string[], controllerProperties?: string[]): ISettingsController"
        },
        {
          "type": "function",
          "name": "initData",
          "label": "initData",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "initData(): ISettingsController;"
        },
        {
          "type": "function",
          "name": "subscribe",
          "label": "subscribe",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "subscribe(): ISettingsController;"
        },
        {
          "type": "function",
          "name": "unsubscribe",
          "label": "unsubscribe",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "unsubscribe(): ISettingsController;"
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": "export default interface ISettingsController {\n  /**\n   * Bind component.\n   */\n  bindComponent(component: any): ISettingsController;\n\n  /**\n   *  Bind component's properties.\n   */\n  bindProperties(componentProperties: string[], controllerProperties?: string[]): ISettingsController\n\n  /**\n   * Initialize data.\n   */\n  initData(): ISettingsController;\n\n  /**\n   * Subscribe listeners.\n   */\n  subscribe(): ISettingsController;\n\n  /**\n   * Unsubscribe listeners.\n   */\n  unsubscribe(): ISettingsController;\n}"
    }
  ],
  "functions": [],
  "blocks": [],
  "simplified_code": "/**\n * Copyright (c) 2022 Shenzhen Kaihong Digital Industry Development Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n *  ISettingsController of wifi test\n */\n\nexport default interface ISettingsController {\n  /**\n   * Bind component.\n   */\n  bindComponent(component: any): ISettingsController;\n\n  /**\n   *  Bind component's properties.\n   */\n  bindProperties(componentProperties: string[], controllerProperties?: string[]): ISettingsController\n\n  /**\n   * Initialize data.\n   */\n  initData(): ISettingsController;\n\n  /**\n   * Subscribe listeners.\n   */\n  subscribe(): ISettingsController;\n\n  /**\n   * Unsubscribe listeners.\n   */\n  unsubscribe(): ISettingsController;\n}"
}