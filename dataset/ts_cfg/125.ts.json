{
  "type": "file",
  "name": "125.ts",
  "label": "125.ts",
  "start_line": -1,
  "end_line": 46,
  "classes": [
    {
      "type": "class",
      "name": "%dflt",
      "label": "%dflt",
      "start_line": -1,
      "end_line": 27,
      "functions": [
        {
          "type": "function",
          "name": "%dflt",
          "label": "%dflt",
          "start_line": -1,
          "end_line": 27,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/125.ts: %dflt\nreturn",
              "start_line": 1,
              "end_line": 27,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": ""
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": ""
    },
    {
      "type": "class",
      "name": "MainAbility",
      "label": "MainAbility",
      "start_line": 1,
      "end_line": 46,
      "functions": [
        {
          "type": "function",
          "name": "onCreate",
          "label": "onCreate",
          "start_line": 1,
          "end_line": 27,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "want = parameter0: unknown\nlaunchParam = parameter1: unknown\nthis = this: @ts_files/125.ts: MainAbility\n%0 = hilog.<@%unk/%unk: .LogLevel>\n%1 = %0.<@%unk/%unk: .INFO>\ninstanceinvoke hilog.<@%unk/%unk: .isLoggable()>(0, 'testTag', %1)\ninstanceinvoke hilog.<@%unk/%unk: .info()>(0, 'testTag', '%{public}s', 'Ability onCreate')\n%2 = instanceinvoke JSON.<@%unk/%unk: .stringify()>(want)\n%3 = 'want param:' + %2\n%4 = %3 ?? ''\ninstanceinvoke hilog.<@%unk/%unk: .info()>(0, 'testTag', '%{public}s', %4)\n%5 = instanceinvoke JSON.<@%unk/%unk: .stringify()>(launchParam)\n%6 = 'launchParam:' + %5\n%7 = %6 ?? ''\ninstanceinvoke hilog.<@%unk/%unk: .info()>(0, 'testTag', '%{public}s', %7)\nreturn",
              "start_line": 1,
              "end_line": 27,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "onCreate(want, launchParam) {\n        hilog.isLoggable(0x0000, 'testTag', hilog.LogLevel.INFO);\n        hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onCreate');\n        hilog.info(0x0000, 'testTag', '%{public}s', 'want param:' + JSON.stringify(want) ?? '');\n        hilog.info(0x0000, 'testTag', '%{public}s', 'launchParam:' + JSON.stringify(launchParam) ?? '');\n    }"
        },
        {
          "type": "function",
          "name": "onDestroy",
          "label": "onDestroy",
          "start_line": 1,
          "end_line": 27,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/125.ts: MainAbility\n%0 = hilog.<@%unk/%unk: .LogLevel>\n%1 = %0.<@%unk/%unk: .INFO>\ninstanceinvoke hilog.<@%unk/%unk: .isLoggable()>(0, 'testTag', %1)\ninstanceinvoke hilog.<@%unk/%unk: .info()>(0, 'testTag', '%{public}s', 'Ability onDestroy')\nreturn",
              "start_line": 1,
              "end_line": 27,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "onDestroy() {\n        hilog.isLoggable(0x0000, 'testTag', hilog.LogLevel.INFO);\n        hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onDestroy');\n    }"
        },
        {
          "type": "function",
          "name": "onWindowStageCreate",
          "label": "onWindowStageCreate",
          "start_line": 1,
          "end_line": 27,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "windowStage = parameter0: Window.WindowStage\nthis = this: @ts_files/125.ts: MainAbility\n%0 = hilog.<@%unk/%unk: .LogLevel>\n%1 = %0.<@%unk/%unk: .INFO>\ninstanceinvoke hilog.<@%unk/%unk: .isLoggable()>(0, 'testTag', %1)\ninstanceinvoke hilog.<@%unk/%unk: .info()>(0, 'testTag', '%{public}s', 'Ability onWindowStageCreate')\ninstanceinvoke windowStage.<@%unk/%unk: .loadContent()>('pages/index', %AM0$onWindowStageCreate)\nreturn",
              "start_line": 1,
              "end_line": 27,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "onWindowStageCreate(windowStage: Window.WindowStage) {\n        // Main window is created, set main page for this ability\n        hilog.isLoggable(0x0000, 'testTag', hilog.LogLevel.INFO);\n        hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onWindowStageCreate');\n\n        windowStage.loadContent('pages/index', (err, data) => {\n            if (err.code) {\n                hilog.isLoggable(0x0000, 'testTag', hilog.LogLevel.ERROR);\n                hilog.error(0x0000, 'testTag', 'Failed to load the content. Cause: %{public}s', JSON.stringify(err) ?? '');\n                return;\n            }\n            hilog.isLoggable(0x0000, 'testTag', hilog.LogLevel.INFO);\n            hilog.info(0x0000, 'testTag', 'Succeeded in loading the content. Data: %{public}s', JSON.stringify(data) ?? '');\n        });\n    }"
        },
        {
          "type": "function",
          "name": "onWindowStageDestroy",
          "label": "onWindowStageDestroy",
          "start_line": 1,
          "end_line": 34,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/125.ts: MainAbility\n%0 = hilog.<@%unk/%unk: .LogLevel>\n%1 = %0.<@%unk/%unk: .INFO>\ninstanceinvoke hilog.<@%unk/%unk: .isLoggable()>(0, 'testTag', %1)\ninstanceinvoke hilog.<@%unk/%unk: .info()>(0, 'testTag', '%{public}s', 'Ability onWindowStageDestroy')\nreturn",
              "start_line": 1,
              "end_line": 27,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "onWindowStageDestroy() {\n        // Main window is destroyed, release UI related resources\n        hilog.isLoggable(0x0000, 'testTag', hilog.LogLevel.INFO);\n        hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onWindowStageDestroy');\n    }"
        },
        {
          "type": "function",
          "name": "onForeground",
          "label": "onForeground",
          "start_line": 1,
          "end_line": 40,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/125.ts: MainAbility\n%0 = hilog.<@%unk/%unk: .LogLevel>\n%1 = %0.<@%unk/%unk: .INFO>\ninstanceinvoke hilog.<@%unk/%unk: .isLoggable()>(0, 'testTag', %1)\ninstanceinvoke hilog.<@%unk/%unk: .info()>(0, 'testTag', '%{public}s', 'Ability onForeground')\nreturn",
              "start_line": 1,
              "end_line": 27,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "onForeground() {\n        // Ability has brought to foreground\n        hilog.isLoggable(0x0000, 'testTag', hilog.LogLevel.INFO);\n        hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onForeground');\n    }"
        },
        {
          "type": "function",
          "name": "onBackground",
          "label": "onBackground",
          "start_line": 1,
          "end_line": 46,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/125.ts: MainAbility\n%0 = hilog.<@%unk/%unk: .LogLevel>\n%1 = %0.<@%unk/%unk: .INFO>\ninstanceinvoke hilog.<@%unk/%unk: .isLoggable()>(0, 'testTag', %1)\ninstanceinvoke hilog.<@%unk/%unk: .info()>(0, 'testTag', '%{public}s', 'Ability onBackground')\nreturn",
              "start_line": 1,
              "end_line": 27,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "onBackground() {\n        // Ability has back to background\n        hilog.isLoggable(0x0000, 'testTag', hilog.LogLevel.INFO);\n        hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onBackground');\n    }"
        },
        {
          "type": "function",
          "name": "%AM0$onWindowStageCreate",
          "label": "%AM0$onWindowStageCreate",
          "start_line": 1,
          "end_line": 23,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "err = parameter0: unknown\ndata = parameter1: unknown\nthis = this: @ts_files/125.ts: MainAbility\n%0 = err.<@%unk/%unk: .code>\nif %0 != 0",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%1 = hilog.<@%unk/%unk: .LogLevel>\n%2 = %1.<@%unk/%unk: .ERROR>\ninstanceinvoke hilog.<@%unk/%unk: .isLoggable()>(0, 'testTag', %2)\n%3 = instanceinvoke JSON.<@%unk/%unk: .stringify()>(err)\n%4 = %3 ?? ''\ninstanceinvoke hilog.<@%unk/%unk: .error()>(0, 'testTag', 'Failed to load the content. Cause: %{public}s', %4)\nreturn",
                  "start_line": 1,
                  "end_line": 27,
                  "successors": []
                },
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%5 = hilog.<@%unk/%unk: .LogLevel>\n%6 = %5.<@%unk/%unk: .INFO>\ninstanceinvoke hilog.<@%unk/%unk: .isLoggable()>(0, 'testTag', %6)\n%7 = instanceinvoke JSON.<@%unk/%unk: .stringify()>(data)\n%8 = %7 ?? ''\ninstanceinvoke hilog.<@%unk/%unk: .info()>(0, 'testTag', 'Succeeded in loading the content. Data: %{public}s', %8)\nreturn",
                  "start_line": 1,
                  "end_line": 27,
                  "successors": []
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(err, data) => {\n            if (err.code) {\n                hilog.isLoggable(0x0000, 'testTag', hilog.LogLevel.ERROR);\n                hilog.error(0x0000, 'testTag', 'Failed to load the content. Cause: %{public}s', JSON.stringify(err) ?? '');\n                return;\n            }\n            hilog.isLoggable(0x0000, 'testTag', hilog.LogLevel.INFO);\n            hilog.info(0x0000, 'testTag', 'Succeeded in loading the content. Data: %{public}s', JSON.stringify(data) ?? '');\n        }"
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": "export default class MainAbility extends Ability {\n    onCreate(want, launchParam) {\n        hilog.isLoggable(0x0000, 'testTag', hilog.LogLevel.INFO);\n        hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onCreate');\n        hilog.info(0x0000, 'testTag', '%{public}s', 'want param:' + JSON.stringify(want) ?? '');\n        hilog.info(0x0000, 'testTag', '%{public}s', 'launchParam:' + JSON.stringify(launchParam) ?? '');\n    }\n\n    onDestroy() {\n        hilog.isLoggable(0x0000, 'testTag', hilog.LogLevel.INFO);\n        hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onDestroy');\n    }\n\n    onWindowStageCreate(windowStage: Window.WindowStage) {\n        // Main window is created, set main page for this ability\n        hilog.isLoggable(0x0000, 'testTag', hilog.LogLevel.INFO);\n        hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onWindowStageCreate');\n\n        windowStage.loadContent('pages/index', (err, data) => {\n            if (err.code) {\n                hilog.isLoggable(0x0000, 'testTag', hilog.LogLevel.ERROR);\n                hilog.error(0x0000, 'testTag', 'Failed to load the content. Cause: %{public}s', JSON.stringify(err) ?? '');\n                return;\n            }\n            hilog.isLoggable(0x0000, 'testTag', hilog.LogLevel.INFO);\n            hilog.info(0x0000, 'testTag', 'Succeeded in loading the content. Data: %{public}s', JSON.stringify(data) ?? '');\n        });\n    }\n\n    onWindowStageDestroy() {\n        // Main window is destroyed, release UI related resources\n        hilog.isLoggable(0x0000, 'testTag', hilog.LogLevel.INFO);\n        hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onWindowStageDestroy');\n    }\n\n    onForeground() {\n        // Ability has brought to foreground\n        hilog.isLoggable(0x0000, 'testTag', hilog.LogLevel.INFO);\n        hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onForeground');\n    }\n\n    onBackground() {\n        // Ability has back to background\n        hilog.isLoggable(0x0000, 'testTag', hilog.LogLevel.INFO);\n        hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onBackground');\n    }\n}"
    }
  ],
  "functions": [],
  "blocks": [],
  "simplified_code": "import hilog from '@ohos.hilog';\nimport Ability from '@ohos.application.Ability'\nimport Window from '@ohos.window'\n\nexport default class MainAbility extends Ability {\n    onCreate(want, launchParam) {\n        hilog.isLoggable(0x0000, 'testTag', hilog.LogLevel.INFO);\n        hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onCreate');\n        hilog.info(0x0000, 'testTag', '%{public}s', 'want param:' + JSON.stringify(want) ?? '');\n        hilog.info(0x0000, 'testTag', '%{public}s', 'launchParam:' + JSON.stringify(launchParam) ?? '');\n    }\n\n    onDestroy() {\n        hilog.isLoggable(0x0000, 'testTag', hilog.LogLevel.INFO);\n        hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onDestroy');\n    }\n\n    onWindowStageCreate(windowStage: Window.WindowStage) {\n        // Main window is created, set main page for this ability\n        hilog.isLoggable(0x0000, 'testTag', hilog.LogLevel.INFO);\n        hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onWindowStageCreate');\n\n        windowStage.loadContent('pages/index', (err, data) => {\n            if (err.code) {\n                hilog.isLoggable(0x0000, 'testTag', hilog.LogLevel.ERROR);\n                hilog.error(0x0000, 'testTag', 'Failed to load the content. Cause: %{public}s', JSON.stringify(err) ?? '');\n                return;\n            }\n            hilog.isLoggable(0x0000, 'testTag', hilog.LogLevel.INFO);\n            hilog.info(0x0000, 'testTag', 'Succeeded in loading the content. Data: %{public}s', JSON.stringify(data) ?? '');\n        });\n    }\n\n    onWindowStageDestroy() {\n        // Main window is destroyed, release UI related resources\n        hilog.isLoggable(0x0000, 'testTag', hilog.LogLevel.INFO);\n        hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onWindowStageDestroy');\n    }\n\n    onForeground() {\n        // Ability has brought to foreground\n        hilog.isLoggable(0x0000, 'testTag', hilog.LogLevel.INFO);\n        hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onForeground');\n    }\n\n    onBackground() {\n        // Ability has back to background\n        hilog.isLoggable(0x0000, 'testTag', hilog.LogLevel.INFO);\n        hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onBackground');\n    }\n}\n"
}