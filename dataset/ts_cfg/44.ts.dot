digraph "44.ts" {
subgraph "cluster_@ts_files/44.ts: %dflt.[static]%dflt()" {
  label="@ts_files/44.ts: %dflt.[static]%dflt()";
  Node33240 [label="id:0
      this = this: @ts_files/44.ts: %dflt
      TAG = 'EventPipeline'
      return"];
}
subgraph "cluster_@ts_files/44.ts: EventPipeline.constructor(Broadcast, UserFileDataItem, string, Function)" {
  label="@ts_files/44.ts: EventPipeline.constructor(Broadcast, UserFileDataItem, string, Function)";
  Node83440 [label="id:0
      instanceinvoke this.<@ts_files/44.ts: EventPipeline.%instInit()>()
      broadCastParam = parameter0: Broadcast
      item = parameter1: UserFileDataItem
      timeStamp = parameter2: string
      updateMatrix = parameter3: Function
      this = this: @ts_files/44.ts: EventPipeline
      this.<@ts_files/44.ts: EventPipeline.broadCast> = broadCastParam
      this.<@ts_files/44.ts: EventPipeline.item> = item
      this.<@ts_files/44.ts: EventPipeline.timeStamp> = timeStamp
      this.<@ts_files/44.ts: EventPipeline.updateMatrix> = updateMatrix
      %0 = this.<@ts_files/44.ts: EventPipeline.item>
      %1 = %0.<@%unk/%unk: .imgWidth>
      if %1 === 0
      %2 = MediaConstants.<@%unk/%unk: .DEFAULT_SIZE>
      %3 = this.<@ts_files/44.ts: EventPipeline.item>
      %2 = %3.<@%unk/%unk: .imgWidth>
      this.<@ts_files/44.ts: EventPipeline.width> = %2
      %4 = this.<@ts_files/44.ts: EventPipeline.item>
      %5 = %4.<@%unk/%unk: .imgHeight>
      if %5 === 0
      %6 = MediaConstants.<@%unk/%unk: .DEFAULT_SIZE>
      %7 = this.<@ts_files/44.ts: EventPipeline.item>
      %6 = %7.<@%unk/%unk: .imgHeight>
      this.<@ts_files/44.ts: EventPipeline.height> = %6
      instanceinvoke this.<@ts_files/44.ts: EventPipeline.evaluateScales()>()
      return"];
}
subgraph "cluster_@ts_files/44.ts: EventPipeline.onDataChanged(UserFileDataItem)" {
  label="@ts_files/44.ts: EventPipeline.onDataChanged(UserFileDataItem)";
  Node57590 [label="id:0
      item = parameter0: UserFileDataItem
      this = this: @ts_files/44.ts: EventPipeline
      this.<@ts_files/44.ts: EventPipeline.item> = item
      %0 = this.<@ts_files/44.ts: EventPipeline.item>
      %1 = %0.<@%unk/%unk: .imgWidth>
      if %1 === 0
      %2 = MediaConstants.<@%unk/%unk: .DEFAULT_SIZE>
      %3 = this.<@ts_files/44.ts: EventPipeline.item>
      %2 = %3.<@%unk/%unk: .imgWidth>
      this.<@ts_files/44.ts: EventPipeline.width> = %2
      %4 = this.<@ts_files/44.ts: EventPipeline.item>
      %5 = %4.<@%unk/%unk: .imgHeight>
      if %5 === 0
      %6 = MediaConstants.<@%unk/%unk: .DEFAULT_SIZE>
      %7 = this.<@ts_files/44.ts: EventPipeline.item>
      %6 = %7.<@%unk/%unk: .imgHeight>
      this.<@ts_files/44.ts: EventPipeline.height> = %6
      instanceinvoke this.<@ts_files/44.ts: EventPipeline.evaluateScales()>()
      return"];
}
subgraph "cluster_@ts_files/44.ts: EventPipeline.setDefaultScale(unknown)" {
  label="@ts_files/44.ts: EventPipeline.setDefaultScale(unknown)";
  Node52150 [label="id:0
      scale = parameter0: unknown
      this = this: @ts_files/44.ts: EventPipeline
      this.<@ts_files/44.ts: EventPipeline.defaultScale> = scale
      this.<@ts_files/44.ts: EventPipeline.lastScale> = scale
      return"];
}
subgraph "cluster_@ts_files/44.ts: EventPipeline.onComponentSizeChanged()" {
  label="@ts_files/44.ts: EventPipeline.onComponentSizeChanged()";
  Node51630 [label="id:0
      this = this: @ts_files/44.ts: EventPipeline
      instanceinvoke this.<@ts_files/44.ts: EventPipeline.evaluateScales()>()
      return"];
}
subgraph "cluster_@ts_files/44.ts: EventPipeline.onTouch(TouchEvent)" {
  label="@ts_files/44.ts: EventPipeline.onTouch(TouchEvent)";
  Node46670 [label="id:0
      event = parameter0: TouchEvent
      this = this: @ts_files/44.ts: EventPipeline
      %0 = event.<@%unk/%unk: .type>
      %1 = 'onTouch trigger: ' + %0
      %2 = %1 + ', '
      %3 = this.<@ts_files/44.ts: EventPipeline.isInAnimation>
      %4 = %2 + %3
      %5 = %4 + ', '
      %6 = this.<@ts_files/44.ts: EventPipeline.isExiting>
      %7 = %5 + %6
      instanceinvoke Log.<@%unk/%unk: .debug()>(TAG, %7)
      %8 = this.<@ts_files/44.ts: EventPipeline.isInAnimation>
      %9 = this.<@ts_files/44.ts: EventPipeline.isExiting>
      %10 = %8 || %9
      if %10 != false"];
  Node46671 [label="id:1
      return"];
  Node46672 [label="id:2
      %11 = event.<@%unk/%unk: .type>
      %12 = TouchType.<@%unk/%unk: .Down>
      %13 = %11 === %12
      %14 = event.<@%unk/%unk: .type>
      %15 = TouchType.<@%unk/%unk: .Up>
      %16 = %14 === %15
      %17 = %13 || %16
      if %17 != false"];
  Node46673 [label="id:3
      instanceinvoke this.<@ts_files/44.ts: EventPipeline.emitDirectionChange()>()"];
  Node46674 [label="id:4
      %18 = event.<@%unk/%unk: .type>
      %19 = TouchType.<@%unk/%unk: .Up>
      if %18 === %19"];
  Node46675 [label="id:5
      %20 = instanceinvoke this.<@ts_files/44.ts: EventPipeline.evaluateOffset()>()
      this.<@ts_files/44.ts: EventPipeline.lastOffset> = %20
      %21 = this.<@ts_files/44.ts: EventPipeline.lastScale>
      %22 = this.<@ts_files/44.ts: EventPipeline.scale>
      %23 = %21 * %22
      this.<@ts_files/44.ts: EventPipeline.lastScale> = %23
      this.<@ts_files/44.ts: EventPipeline.scale> = 1
      %24 = newarray (number)[2]
      %24[0] = 0
      %24[1] = 0
      this.<@ts_files/44.ts: EventPipeline.offset> = %24"];
  Node46676 [label="id:6
      return"];
  Node46670 -> Node46671;
  Node46670 -> Node46672;
  Node46672 -> Node46673;
  Node46672 -> Node46674;
  Node46673 -> Node46674;
  Node46674 -> Node46675;
  Node46674 -> Node46676;
  Node46675 -> Node46676;
}
subgraph "cluster_@ts_files/44.ts: EventPipeline.emitDirectionChange()" {
  label="@ts_files/44.ts: EventPipeline.emitDirectionChange()";
  Node48440 [label="id:0
      this = this: @ts_files/44.ts: EventPipeline
      direction = undefined
      %0 = this.<@ts_files/44.ts: EventPipeline.lastScale>
      %1 = this.<@ts_files/44.ts: EventPipeline.scale>
      scale = %0 * %1
      %2 = Constants.<@%unk/%unk: .RESERVED_DIGITS>
      %3 = instanceinvoke scale.<@%unk/%unk: .toFixed()>(%2)
      %4 = staticinvoke <@%unk/%unk: .Number()>(%3)
      %5 = Constants.<@%unk/%unk: .RESERVED_DIGITS>
      %6 = this.<@ts_files/44.ts: EventPipeline.defaultScale>
      %7 = instanceinvoke %6.<@%unk/%unk: .toFixed()>(%5)
      %8 = staticinvoke <@%unk/%unk: .Number()>(%7)
      isEnlarged = %4 > %8
      %9 = this.<@ts_files/44.ts: EventPipeline.hasReachLeft>
      %10 = !%9
      %11 = this.<@ts_files/44.ts: EventPipeline.hasReachRight>
      %12 = !%11
      %13 = %10 && %12
      %14 = %13 && isEnlarged
      if %14 != false"];
  Node48441 [label="id:1
      direction = PanDirection.<@%unk/%unk: .All>"];
  Node48442 [label="id:2
      %15 = this.<@ts_files/44.ts: EventPipeline.hasReachLeft>
      %16 = !%15
      %17 = this.<@ts_files/44.ts: EventPipeline.hasReachRight>
      %18 = %16 && %17
      %19 = %18 && isEnlarged
      if %19 != false"];
  Node48443 [label="id:3
      %20 = PanDirection.<@%unk/%unk: .Vertical>
      %21 = <number>%20
      %22 = PanDirection.<@%unk/%unk: .Right>
      %23 = <number>%22
      direction = %21 | %23"];
  Node48444 [label="id:4
      %24 = this.<@ts_files/44.ts: EventPipeline.hasReachLeft>
      %25 = this.<@ts_files/44.ts: EventPipeline.hasReachRight>
      %26 = !%25
      %27 = %24 && %26
      %28 = %27 && isEnlarged
      if %28 != false"];
  Node48445 [label="id:5
      %29 = PanDirection.<@%unk/%unk: .Vertical>
      %30 = <number>%29
      %31 = PanDirection.<@%unk/%unk: .Left>
      %32 = <number>%31
      direction = %30 | %32"];
  Node48446 [label="id:6
      direction = PanDirection.<@%unk/%unk: .Vertical>"];
  Node48447 [label="id:7
      %33 = this.<@ts_files/44.ts: EventPipeline.hasReachLeft>
      %34 = 'emitDirectionChange reaches: ' + %33
      %35 = %34 + ', '
      %36 = this.<@ts_files/44.ts: EventPipeline.hasReachRight>
      %37 = %35 + %36
      %38 = %37 + ', '
      %39 = this.<@ts_files/44.ts: EventPipeline.hasReachTop>
      %40 = %38 + %39
      %41 = %40 + ', '
      %42 = this.<@ts_files/44.ts: EventPipeline.hasReachBottom>
      %43 = %41 + %42
      %44 = %43 + ', scale '
      %45 = %44 + scale
      %46 = %45 + ', direction: '
      %47 = %46 + direction
      instanceinvoke Log.<@%unk/%unk: .info()>(TAG, %47)
      %48 = this.<@ts_files/44.ts: EventPipeline.isExiting>
      if %48 != false"];
  Node48448 [label="id:8
      return"];
  Node48449 [label="id:9
      %49 = PanDirection.<@%unk/%unk: .Vertical>
      %50 = <number>%49
      %51 = direction === %50
      %52 = PanDirection.<@%unk/%unk: .Vertical>
      %53 = <number>%52
      %54 = PanDirection.<@%unk/%unk: .Left>
      %55 = <number>%54
      %56 = %53 | %55
      %57 = direction === %56
      %58 = %51 || %57
      %59 = PanDirection.<@%unk/%unk: .Vertical>
      %60 = <number>%59
      %61 = PanDirection.<@%unk/%unk: .Right>
      %62 = <number>%61
      %63 = %60 | %62
      %64 = direction === %63
      %65 = %58 || %64
      if %65 != false"];
  Node484410 [label="id:10
      %66 = Constants.<@%unk/%unk: .SET_DISABLE_SWIPE>
      %67 = newarray (boolean)[1]
      %67[0] = false
      %68 = this.<@ts_files/44.ts: EventPipeline.broadCast>
      instanceinvoke %68.<@%unk/%unk: .emit()>(%66, %67)"];
  Node484411 [label="id:11
      %69 = Constants.<@%unk/%unk: .SET_DISABLE_SWIPE>
      %70 = newarray (boolean)[1]
      %70[0] = true
      %71 = this.<@ts_files/44.ts: EventPipeline.broadCast>
      instanceinvoke %71.<@%unk/%unk: .emit()>(%69, %70)"];
  Node484412 [label="id:12
      %72 = Constants.<@%unk/%unk: .DIRECTION_CHANGE>
      %73 = this.<@ts_files/44.ts: EventPipeline.item>
      %74 = %73.<@%unk/%unk: .uri>
      %75 = %72 + %74
      %76 = this.<@ts_files/44.ts: EventPipeline.timeStamp>
      %77 = %75 + %76
      %78 = newarray (number)[1]
      %78[0] = direction
      %79 = this.<@ts_files/44.ts: EventPipeline.broadCast>
      instanceinvoke %79.<@%unk/%unk: .emit()>(%77, %78)
      return"];
  Node48440 -> Node48441;
  Node48440 -> Node48442;
  Node48441 -> Node48447;
  Node48442 -> Node48443;
  Node48442 -> Node48444;
  Node48443 -> Node48447;
  Node48444 -> Node48445;
  Node48444 -> Node48446;
  Node48445 -> Node48447;
  Node48446 -> Node48447;
  Node48447 -> Node48448;
  Node48447 -> Node48449;
  Node48449 -> Node484410;
  Node48449 -> Node484411;
  Node484410 -> Node484412;
  Node484411 -> Node484412;
}
subgraph "cluster_@ts_files/44.ts: EventPipeline.evaluateOffset()" {
  label="@ts_files/44.ts: EventPipeline.evaluateOffset()";
  Node43720 [label="id:0
      this = this: @ts_files/44.ts: EventPipeline
      %0 = this.<@ts_files/44.ts: EventPipeline.lastOffset>
      %1 = 'evaluateOffset lastOffset: ' + %0
      %2 = %1 + ', offset: '
      %3 = this.<@ts_files/44.ts: EventPipeline.offset>
      %4 = %2 + %3
      instanceinvoke Log.<@%unk/%unk: .info()>(TAG, %4)
      %5 = this.<@ts_files/44.ts: EventPipeline.center>
      %6 = %5[0]
      %7 = Constants.<@%unk/%unk: .CENTER_DEFAULT>
      %8 = %6 - %7
      %9 = this.<@ts_files/44.ts: EventPipeline.componentWidth>
      %10 = %8 * %9
      %11 = this.<@ts_files/44.ts: EventPipeline.defaultScale>
      %12 = this.<@ts_files/44.ts: EventPipeline.scale>
      %13 = %11 - %12
      %14 = %10 * %13
      %15 = this.<@ts_files/44.ts: EventPipeline.lastScale>
      centerX = %14 * %15
      %16 = this.<@ts_files/44.ts: EventPipeline.center>
      %17 = %16[1]
      %18 = Constants.<@%unk/%unk: .CENTER_DEFAULT>
      %19 = %17 - %18
      %20 = this.<@ts_files/44.ts: EventPipeline.componentHeight>
      %21 = %19 * %20
      %22 = this.<@ts_files/44.ts: EventPipeline.defaultScale>
      %23 = this.<@ts_files/44.ts: EventPipeline.scale>
      %24 = %22 - %23
      %25 = %21 * %24
      %26 = this.<@ts_files/44.ts: EventPipeline.lastScale>
      centerY = %25 * %26
      %27 = this.<@ts_files/44.ts: EventPipeline.lastOffset>
      %28 = %27[0]
      %29 = this.<@ts_files/44.ts: EventPipeline.offset>
      %30 = %29[0]
      %31 = %28 + %30
      offsetX = %31 + centerX
      %32 = this.<@ts_files/44.ts: EventPipeline.lastOffset>
      %33 = %32[1]
      %34 = this.<@ts_files/44.ts: EventPipeline.offset>
      %35 = %34[1]
      %36 = %33 + %35
      offsetY = %36 + centerY
      %37 = 'evaluateOffset offsetX: ' + offsetX
      %38 = %37 + ', offsetY: '
      %39 = %38 + offsetY
      instanceinvoke Log.<@%unk/%unk: .debug()>(TAG, %39)
      %40 = newarray (unknown)[2]
      %40[0] = offsetX
      %40[1] = offsetY
      return %40"];
}
subgraph "cluster_@ts_files/44.ts: EventPipeline.emitTouchEvent()" {
  label="@ts_files/44.ts: EventPipeline.emitTouchEvent()";
  Node43620 [label="id:0
      this = this: @ts_files/44.ts: EventPipeline
      offset = undefined
      %0 = this.<@ts_files/44.ts: EventPipeline.lastScale>
      %1 = this.<@ts_files/44.ts: EventPipeline.scale>
      scale = %0 * %1
      %2 = Constants.<@%unk/%unk: .RESERVED_DIGITS>
      %3 = instanceinvoke scale.<@%unk/%unk: .toFixed()>(%2)
      %4 = staticinvoke <@%unk/%unk: .Number()>(%3)
      %5 = Constants.<@%unk/%unk: .RESERVED_DIGITS>
      %6 = this.<@ts_files/44.ts: EventPipeline.defaultScale>
      %7 = instanceinvoke %6.<@%unk/%unk: .toFixed()>(%5)
      %8 = staticinvoke <@%unk/%unk: .Number()>(%7)
      if %4 > %8"];
  Node43621 [label="id:1
      limits = instanceinvoke this.<@ts_files/44.ts: EventPipeline.evaluateOffsetRange(number)>(scale)
      offset = instanceinvoke this.<@ts_files/44.ts: EventPipeline.evaluateOffset()>()
      %9 = offset[0]
      %10 = limits[0]
      %11 = limits[1]
      %12 = instanceinvoke MathUtils.<@%unk/%unk: .clamp()>(%9, %10, %11)
      offset[0] = %12
      %13 = Constants.<@%unk/%unk: .RESERVED_DIGITS>
      %14 = instanceinvoke scale.<@%unk/%unk: .toFixed()>(%13)
      %15 = staticinvoke <@%unk/%unk: .Number()>(%14)
      %16 = Constants.<@%unk/%unk: .RESERVED_DIGITS>
      %17 = this.<@ts_files/44.ts: EventPipeline.defaultScale>
      %18 = instanceinvoke %17.<@%unk/%unk: .toFixed()>(%16)
      %19 = staticinvoke <@%unk/%unk: .Number()>(%18)
      if %15 > %19"];
  Node43622 [label="id:2
      %20 = offset[1]
      %21 = limits[2]
      %22 = limits[3]
      %23 = instanceinvoke MathUtils.<@%unk/%unk: .clamp()>(%20, %21, %22)
      offset[1] = %23"];
  Node43623 [label="id:3
      %24 = limits[2]
      %25 = offset[1]
      %26 = instanceinvoke Math.<@%unk/%unk: .max()>(%24, %25)
      offset[1] = %26"];
  Node43624 [label="id:4
      %27 = newarray (number)[2]
      %27[0] = 0
      %27[1] = 0
      offset = %27"];
  Node43625 [label="id:5
      moveX = offset[0]
      moveY = offset[1]
      %28 = 'emitTouchEvent moveX: ' + moveX
      %29 = %28 + ', moveY: '
      %30 = %29 + moveY
      instanceinvoke Log.<@%unk/%unk: .debug()>(TAG, %30)
      %31 = new @ts_files/44.ts: %AC$EventPipeline$emitTouchEvent$0
      instanceinvoke %31.<@ts_files/44.ts: %AC$EventPipeline$emitTouchEvent$0.constructor()>()
      scaleOption = %31
      %32 = new @ts_files/44.ts: %AC$EventPipeline$emitTouchEvent$1
      instanceinvoke %32.<@ts_files/44.ts: %AC$EventPipeline$emitTouchEvent$1.constructor()>()
      translateOption = %32
      %33 = instanceinvoke Matrix4.<@%unk/%unk: .identity()>()
      %34 = instanceinvoke %33.<@%unk/%unk: .scale()>(scaleOption)
      %35 = instanceinvoke %34.<@%unk/%unk: .translate()>(translateOption)
      matrix = instanceinvoke %35.<@%unk/%unk: .copy()>()
      %36 = this.<@ts_files/44.ts: EventPipeline.lastOffset>
      %37 = 'emitTouchEvent lastOffset: ' + %36
      %38 = %37 + ', offset: '
      %39 = this.<@ts_files/44.ts: EventPipeline.offset>
      %40 = %38 + %39
      %41 = %40 + ',center: '
      %42 = this.<@ts_files/44.ts: EventPipeline.center>
      %43 = %41 + %42
      %44 = %43 + ', scale: '
      %45 = this.<@ts_files/44.ts: EventPipeline.lastScale>
      %46 = %44 + %45
      %47 = %46 + ', '
      %48 = this.<@ts_files/44.ts: EventPipeline.scale>
      %49 = %47 + %48
      instanceinvoke Log.<@%unk/%unk: .debug()>(TAG, %49)
      instanceinvoke this.<@%unk/%unk: .updateMatrix()>(matrix)
      instanceinvoke this.<@ts_files/44.ts: EventPipeline.evaluateBounds()>()
      return"];
  Node43620 -> Node43621;
  Node43620 -> Node43624;
  Node43621 -> Node43622;
  Node43621 -> Node43623;
  Node43622 -> Node43625;
  Node43623 -> Node43625;
  Node43624 -> Node43625;
}
subgraph "cluster_@ts_files/44.ts: EventPipeline.evaluateScales()" {
  label="@ts_files/44.ts: EventPipeline.evaluateScales()";
  Node43600 [label="id:0
      this = this: @ts_files/44.ts: EventPipeline
      %0 = this.<@ts_files/44.ts: EventPipeline.width>
      %1 = this.<@ts_files/44.ts: EventPipeline.componentHeight>
      %2 = %0 * %1
      %3 = this.<@ts_files/44.ts: EventPipeline.componentWidth>
      %4 = this.<@ts_files/44.ts: EventPipeline.height>
      %5 = %3 * %4
      if %2 < %5"];
  Node43601 [label="id:1
      %6 = this.<@ts_files/44.ts: EventPipeline.height>
      %7 = this.<@ts_files/44.ts: EventPipeline.componentHeight>
      %8 = %6 / %7
      this.<@ts_files/44.ts: EventPipeline.maxScale> = %8
      %9 = this.<@ts_files/44.ts: EventPipeline.componentWidth>
      %10 = this.<@ts_files/44.ts: EventPipeline.height>
      %11 = %9 * %10
      %12 = this.<@ts_files/44.ts: EventPipeline.width>
      %13 = %11 / %12
      %14 = this.<@ts_files/44.ts: EventPipeline.componentHeight>
      %15 = %13 / %14
      this.<@ts_files/44.ts: EventPipeline.doubleTapScale> = %15
      %16 = this.<@ts_files/44.ts: EventPipeline.componentHeight>
      %17 = this.<@ts_files/44.ts: EventPipeline.width>
      %18 = %16 * %17
      %19 = this.<@ts_files/44.ts: EventPipeline.height>
      %20 = %18 / %19
      %21 = this.<@ts_files/44.ts: EventPipeline.componentWidth>
      %22 = %20 / %21
      %23 = 1 - %22
      %24 = Constants.<@%unk/%unk: .NUMBER_2>
      %25 = %23 / %24
      this.<@ts_files/44.ts: EventPipeline.leftMost> = %25
      this.<@ts_files/44.ts: EventPipeline.topMost> = 0"];
  Node43602 [label="id:2
      %26 = this.<@ts_files/44.ts: EventPipeline.width>
      %27 = this.<@ts_files/44.ts: EventPipeline.componentHeight>
      %28 = %26 * %27
      %29 = this.<@ts_files/44.ts: EventPipeline.componentWidth>
      %30 = this.<@ts_files/44.ts: EventPipeline.height>
      %31 = %29 * %30
      if %28 === %31"];
  Node43603 [label="id:3
      %32 = Constants.<@%unk/%unk: .SAME_RATIO_SCALE_FACTOR>
      this.<@ts_files/44.ts: EventPipeline.doubleTapScale> = %32
      %33 = this.<@ts_files/44.ts: EventPipeline.doubleTapScale>
      %34 = Constants.<@%unk/%unk: .MAX_SCALE_EXTRA_FACTOR>
      %35 = %33 * %34
      this.<@ts_files/44.ts: EventPipeline.maxScale> = %35
      this.<@ts_files/44.ts: EventPipeline.leftMost> = 0
      this.<@ts_files/44.ts: EventPipeline.topMost> = 0"];
  Node43604 [label="id:4
      %36 = this.<@ts_files/44.ts: EventPipeline.width>
      %37 = this.<@ts_files/44.ts: EventPipeline.componentWidth>
      %38 = %36 / %37
      this.<@ts_files/44.ts: EventPipeline.maxScale> = %38
      %39 = this.<@ts_files/44.ts: EventPipeline.componentHeight>
      %40 = this.<@ts_files/44.ts: EventPipeline.width>
      %41 = %39 * %40
      %42 = this.<@ts_files/44.ts: EventPipeline.height>
      %43 = %41 / %42
      %44 = this.<@ts_files/44.ts: EventPipeline.componentWidth>
      %45 = %43 / %44
      this.<@ts_files/44.ts: EventPipeline.doubleTapScale> = %45
      this.<@ts_files/44.ts: EventPipeline.leftMost> = 0
      %46 = this.<@ts_files/44.ts: EventPipeline.componentWidth>
      %47 = this.<@ts_files/44.ts: EventPipeline.height>
      %48 = %46 * %47
      %49 = this.<@ts_files/44.ts: EventPipeline.width>
      %50 = %48 / %49
      %51 = this.<@ts_files/44.ts: EventPipeline.componentHeight>
      %52 = %50 / %51
      %53 = 1 - %52
      %54 = Constants.<@%unk/%unk: .NUMBER_2>
      %55 = %53 / %54
      this.<@ts_files/44.ts: EventPipeline.topMost> = %55"];
  Node43605 [label="id:5
      %56 = this.<@ts_files/44.ts: EventPipeline.maxScale>
      %57 = Constants.<@%unk/%unk: .COMPONENT_SCALE_CEIL>
      %58 = instanceinvoke Math.<@%unk/%unk: .max()>(%56, %57)
      this.<@ts_files/44.ts: EventPipeline.maxScale> = %58
      %59 = this.<@ts_files/44.ts: EventPipeline.doubleTapScale>
      %60 = this.<@ts_files/44.ts: EventPipeline.maxScale>
      if %59 > %60"];
  Node43606 [label="id:6
      %61 = this.<@ts_files/44.ts: EventPipeline.doubleTapScale>
      %62 = Constants.<@%unk/%unk: .MAX_SCALE_EXTRA_FACTOR>
      %63 = %61 * %62
      this.<@ts_files/44.ts: EventPipeline.maxScale> = %63"];
  Node43607 [label="id:7
      %64 = this.<@ts_files/44.ts: EventPipeline.width>
      %65 = 'evaluateScales: ' + %64
      %66 = %65 + '*'
      %67 = this.<@ts_files/44.ts: EventPipeline.height>
      %68 = %66 + %67
      %69 = %68 + ' &'
      %70 = this.<@ts_files/44.ts: EventPipeline.componentWidth>
      %71 = %69 + %70
      %72 = %71 + '*'
      %73 = this.<@ts_files/44.ts: EventPipeline.componentHeight>
      %74 = %72 + %73
      %75 = %74 + ',max: '
      %76 = this.<@ts_files/44.ts: EventPipeline.maxScale>
      %77 = %75 + %76
      %78 = %77 + ', most: ['
      %79 = this.<@ts_files/44.ts: EventPipeline.leftMost>
      %80 = %78 + %79
      %81 = %80 + ','
      %82 = this.<@ts_files/44.ts: EventPipeline.topMost>
      %83 = %81 + %82
      %84 = %83 + '], double: '
      %85 = this.<@ts_files/44.ts: EventPipeline.doubleTapScale>
      %86 = %84 + %85
      instanceinvoke Log.<@%unk/%unk: .debug()>(TAG, %86)
      return"];
  Node43600 -> Node43601;
  Node43600 -> Node43602;
  Node43601 -> Node43605;
  Node43602 -> Node43603;
  Node43602 -> Node43604;
  Node43603 -> Node43605;
  Node43604 -> Node43605;
  Node43605 -> Node43606;
  Node43605 -> Node43607;
  Node43606 -> Node43607;
}
subgraph "cluster_@ts_files/44.ts: EventPipeline.evaluateCompBounds()" {
  label="@ts_files/44.ts: EventPipeline.evaluateCompBounds()";
  Node47750 [label="id:0
      this = this: @ts_files/44.ts: EventPipeline
      %0 = this.<@ts_files/44.ts: EventPipeline.lastScale>
      %1 = this.<@ts_files/44.ts: EventPipeline.scale>
      scale = %0 * %1
      offset = instanceinvoke this.<@ts_files/44.ts: EventPipeline.evaluateOffset()>()
      %2 = offset[0]
      %3 = this.<@ts_files/44.ts: EventPipeline.componentWidth>
      %4 = Constants.<@%unk/%unk: .RESERVED_DIGITS>
      %5 = instanceinvoke scale.<@%unk/%unk: .toFixed()>(%4)
      %6 = staticinvoke <@%unk/%unk: .Number()>(%5)
      %7 = Constants.<@%unk/%unk: .RESERVED_DIGITS>
      %8 = this.<@ts_files/44.ts: EventPipeline.defaultScale>
      %9 = instanceinvoke %8.<@%unk/%unk: .toFixed()>(%7)
      %10 = staticinvoke <@%unk/%unk: .Number()>(%9)
      %11 = %6 - %10
      %12 = %3 * %11
      %13 = Constants.<@%unk/%unk: .NUMBER_2>
      %14 = %12 / %13
      %15 = %2 - %14
      %16 = offset[1]
      %17 = this.<@ts_files/44.ts: EventPipeline.componentHeight>
      %18 = Constants.<@%unk/%unk: .RESERVED_DIGITS>
      %19 = instanceinvoke scale.<@%unk/%unk: .toFixed()>(%18)
      %20 = staticinvoke <@%unk/%unk: .Number()>(%19)
      %21 = Constants.<@%unk/%unk: .RESERVED_DIGITS>
      %22 = this.<@ts_files/44.ts: EventPipeline.defaultScale>
      %23 = instanceinvoke %22.<@%unk/%unk: .toFixed()>(%21)
      %24 = staticinvoke <@%unk/%unk: .Number()>(%23)
      %25 = %20 - %24
      %26 = %17 * %25
      %27 = Constants.<@%unk/%unk: .NUMBER_2>
      %28 = %26 / %27
      %29 = %16 - %28
      %30 = newarray (unknown)[2]
      %30[0] = %15
      %30[1] = %29
      result = %30
      %31 = 'evaluateCompBounds: ' + result
      instanceinvoke Log.<@%unk/%unk: .debug()>(TAG, %31)
      return result"];
}
subgraph "cluster_@ts_files/44.ts: EventPipeline.evaluateImgDisplaySize()" {
  label="@ts_files/44.ts: EventPipeline.evaluateImgDisplaySize()";
  Node51790 [label="id:0
      this = this: @ts_files/44.ts: EventPipeline
      screenScale = 1
      %0 = this.<@ts_files/44.ts: EventPipeline.componentWidth>
      %1 = this.<@ts_files/44.ts: EventPipeline.item>
      %2 = %1.<@%unk/%unk: .imgWidth>
      widthScale = %0 / %2
      %3 = this.<@ts_files/44.ts: EventPipeline.componentHeight>
      %4 = this.<@ts_files/44.ts: EventPipeline.item>
      %5 = %4.<@%unk/%unk: .imgHeight>
      heightScale = %3 / %5
      if widthScale > heightScale
      %6 = heightScale
      %6 = widthScale
      screenScale = %6
      %7 = this.<@ts_files/44.ts: EventPipeline.lastScale>
      %8 = this.<@ts_files/44.ts: EventPipeline.scale>
      %9 = %7 * %8
      scale = %9 * screenScale
      imgDisplayWidth = 0
      imgDisplayHeight = 0
      %10 = this.<@ts_files/44.ts: EventPipeline.width>
      imgDisplayWidth = %10 * scale
      %11 = this.<@ts_files/44.ts: EventPipeline.height>
      imgDisplayHeight = %11 * scale
      %12 = newarray (number)[2]
      %12[0] = imgDisplayWidth
      %12[1] = imgDisplayHeight
      return %12"];
}
subgraph "cluster_@ts_files/44.ts: EventPipeline.evaluateImgDisplayBounds()" {
  label="@ts_files/44.ts: EventPipeline.evaluateImgDisplayBounds()";
  Node53870 [label="id:0
      this = this: @ts_files/44.ts: EventPipeline
      %0 = this.<@ts_files/44.ts: EventPipeline.lastScale>
      %1 = this.<@ts_files/44.ts: EventPipeline.scale>
      scale = %0 * %1
      leftTop = instanceinvoke this.<@ts_files/44.ts: EventPipeline.evaluateCompBounds()>()
      imgDisplaySize = instanceinvoke this.<@ts_files/44.ts: EventPipeline.evaluateImgDisplaySize()>()
      imgDisplayWidth = imgDisplaySize[0]
      imgDisplayHeight = imgDisplaySize[1]
      imgLeftBound = 0
      imgTopBound = 0
      %2 = this.<@ts_files/44.ts: EventPipeline.width>
      %3 = this.<@ts_files/44.ts: EventPipeline.height>
      %4 = %2 / %3
      %5 = this.<@ts_files/44.ts: EventPipeline.componentWidth>
      %6 = this.<@ts_files/44.ts: EventPipeline.componentHeight>
      %7 = %5 / %6
      if %4 > %7"];
  Node53871 [label="id:1
      imgLeftBound = leftTop[0]
      %8 = leftTop[1]
      %9 = this.<@ts_files/44.ts: EventPipeline.componentHeight>
      %10 = %9 * scale
      %11 = %10 - imgDisplayHeight
      %12 = Constants.<@%unk/%unk: .NUMBER_2>
      %13 = %11 / %12
      imgTopBound = %8 + %13"];
  Node53872 [label="id:2
      %14 = this.<@ts_files/44.ts: EventPipeline.componentWidth>
      %15 = %14 * scale
      %16 = %15 - imgDisplayWidth
      %17 = Constants.<@%unk/%unk: .NUMBER_2>
      %18 = %16 / %17
      %19 = leftTop[0]
      imgLeftBound = %18 + %19
      imgTopBound = leftTop[1]"];
  Node53873 [label="id:3
      %20 = newarray (number)[2]
      %20[0] = imgLeftBound
      %20[1] = imgTopBound
      return %20"];
  Node53870 -> Node53871;
  Node53870 -> Node53872;
  Node53871 -> Node53873;
  Node53872 -> Node53873;
}
subgraph "cluster_@ts_files/44.ts: EventPipeline.evaluateBounds()" {
  label="@ts_files/44.ts: EventPipeline.evaluateBounds()";
  Node43760 [label="id:0
      this = this: @ts_files/44.ts: EventPipeline
      imgDisplaySize = instanceinvoke this.<@ts_files/44.ts: EventPipeline.evaluateImgDisplaySize()>()
      imgDisplayWidth = imgDisplaySize[0]
      imgDisplayBounds = instanceinvoke this.<@ts_files/44.ts: EventPipeline.evaluateImgDisplayBounds()>()
      imgLeftBound = imgDisplayBounds[0]
      %0 = -1
      %1 = imgLeftBound > %0
      this.<@ts_files/44.ts: EventPipeline.hasReachLeft> = %1
      %2 = imgLeftBound + imgDisplayWidth
      %3 = this.<@ts_files/44.ts: EventPipeline.componentWidth>
      %4 = %3 + 1
      %5 = %2 < %4
      this.<@ts_files/44.ts: EventPipeline.hasReachRight> = %5
      return"];
}
subgraph "cluster_@ts_files/44.ts: EventPipeline.evaluateOffsetRange(number)" {
  label="@ts_files/44.ts: EventPipeline.evaluateOffsetRange(number)";
  Node55140 [label="id:0
      scale = parameter0: number
      this = this: @ts_files/44.ts: EventPipeline
      %0 = newarray (number)[4]
      %0[0] = 0
      %0[1] = 0
      %0[2] = 0
      %0[3] = 0
      result = %0
      screenScale = 1
      %1 = this.<@ts_files/44.ts: EventPipeline.componentWidth>
      %2 = this.<@ts_files/44.ts: EventPipeline.item>
      %3 = %2.<@%unk/%unk: .imgWidth>
      widthScale = %1 / %3
      %4 = this.<@ts_files/44.ts: EventPipeline.componentHeight>
      %5 = this.<@ts_files/44.ts: EventPipeline.item>
      %6 = %5.<@%unk/%unk: .imgHeight>
      heightScale = %4 / %6
      if widthScale > heightScale
      %7 = heightScale
      %7 = widthScale
      screenScale = %7
      %8 = screenScale * scale
      %9 = this.<@ts_files/44.ts: EventPipeline.width>
      %10 = %8 * %9
      %11 = this.<@ts_files/44.ts: EventPipeline.componentWidth>
      %12 = %10 - %11
      %13 = Constants.<@%unk/%unk: .NUMBER_2>
      left = %12 / %13
      %14 = screenScale * scale
      %15 = this.<@ts_files/44.ts: EventPipeline.height>
      %16 = %14 * %15
      %17 = this.<@ts_files/44.ts: EventPipeline.componentHeight>
      %18 = %16 - %17
      %19 = Constants.<@%unk/%unk: .NUMBER_2>
      top = %18 / %19
      top = instanceinvoke Math.<@%unk/%unk: .max()>(top, 0)
      left = instanceinvoke Math.<@%unk/%unk: .max()>(left, 0)
      %20 = -left
      %21 = -top
      %22 = newarray (unknown)[4]
      %22[0] = %20
      %22[1] = left
      %22[2] = %21
      %22[3] = top
      result = %22
      %23 = 'evaluateOffsetRange scale: ' + scale
      %24 = %23 + ', defaultScale: '
      %25 = this.<@ts_files/44.ts: EventPipeline.defaultScale>
      %26 = %24 + %25
      %27 = %26 + ', result: '
      %28 = %27 + result
      instanceinvoke Log.<@%unk/%unk: .debug()>(TAG, %28)
      return result"];
}
subgraph "cluster_@ts_files/44.ts: EventPipeline.emitPullDownToBackEvent()" {
  label="@ts_files/44.ts: EventPipeline.emitPullDownToBackEvent()";
  Node52320 [label="id:0
      this = this: @ts_files/44.ts: EventPipeline
      instanceinvoke Log.<@%unk/%unk: .debug()>(TAG, 'emitPullDownToBackEvent')
      %0 = this.<@ts_files/44.ts: EventPipeline.isExiting>
      if %0 != false"];
  Node52321 [label="id:1
      %1 = this.<@ts_files/44.ts: EventPipeline.isExiting>
      %2 = 'emitPullDownToBack isExiting: ' + %1
      instanceinvoke Log.<@%unk/%unk: .info()>(TAG, %2)
      return"];
  Node52322 [label="id:2
      %3 = Constants.<@%unk/%unk: .PULL_DOWN_END>
      %4 = newarray (any)[0]
      %5 = this.<@ts_files/44.ts: EventPipeline.broadCast>
      instanceinvoke %5.<@%unk/%unk: .emit()>(%3, %4)
      this.<@ts_files/44.ts: EventPipeline.isExiting> = true
      return"];
  Node52320 -> Node52321;
  Node52320 -> Node52322;
}
subgraph "cluster_@ts_files/44.ts: EventPipeline.emitPullDownCancelEvent()" {
  label="@ts_files/44.ts: EventPipeline.emitPullDownCancelEvent()";
  Node52500 [label="id:0
      this = this: @ts_files/44.ts: EventPipeline
      instanceinvoke Log.<@%unk/%unk: .debug()>(TAG, 'emitPullDownCancelEvent')
      %0 = Constants.<@%unk/%unk: .PULL_DOWN_CANCEL>
      %1 = newarray (any)[0]
      %2 = this.<@ts_files/44.ts: EventPipeline.broadCast>
      instanceinvoke %2.<@%unk/%unk: .emit()>(%0, %1)
      return"];
}
subgraph "cluster_@ts_files/44.ts: EventPipeline.onMoveStart(number, number)" {
  label="@ts_files/44.ts: EventPipeline.onMoveStart(number, number)";
  Node54300 [label="id:0
      offsetX = parameter0: number
      offsetY = parameter1: number
      this = this: @ts_files/44.ts: EventPipeline
      %0 = this.<@ts_files/44.ts: EventPipeline.isInAnimation>
      %1 = this.<@ts_files/44.ts: EventPipeline.isExiting>
      %2 = %0 || %1
      if %2 != false"];
  Node54301 [label="id:1
      return"];
  Node54302 [label="id:2
      %3 = newarray (number)[2]
      %3[0] = 0
      %3[1] = 0
      this.<@ts_files/44.ts: EventPipeline.offset> = %3
      instanceinvoke this.<@ts_files/44.ts: EventPipeline.evaluateBounds()>()
      %4 = this.<@ts_files/44.ts: EventPipeline.lastScale>
      %5 = this.<@ts_files/44.ts: EventPipeline.scale>
      scale = %4 * %5
      %6 = Constants.<@%unk/%unk: .RESERVED_DIGITS>
      %7 = instanceinvoke scale.<@%unk/%unk: .toFixed()>(%6)
      %8 = staticinvoke <@%unk/%unk: .Number()>(%7)
      %9 = Constants.<@%unk/%unk: .RESERVED_DIGITS>
      %10 = this.<@ts_files/44.ts: EventPipeline.defaultScale>
      %11 = instanceinvoke %10.<@%unk/%unk: .toFixed()>(%9)
      %12 = staticinvoke <@%unk/%unk: .Number()>(%11)
      if %8 > %12"];
  Node54303 [label="id:3
      %13 = Constants.<@%unk/%unk: .HIDE_BARS>
      %14 = newarray (any)[0]
      %15 = this.<@ts_files/44.ts: EventPipeline.broadCast>
      instanceinvoke %15.<@%unk/%unk: .emit()>(%13, %14)"];
  Node54304 [label="id:4
      %16 = Constants.<@%unk/%unk: .RESERVED_DIGITS>
      %17 = instanceinvoke scale.<@%unk/%unk: .toFixed()>(%16)
      %18 = Constants.<@%unk/%unk: .RESERVED_DIGITS>
      %19 = this.<@ts_files/44.ts: EventPipeline.defaultScale>
      %20 = instanceinvoke %19.<@%unk/%unk: .toFixed()>(%18)
      %21 = %17 === %20
      %22 = offsetY > 0
      %23 = %21 && %22
      if %23 != false"];
  Node54305 [label="id:5
      %24 = Constants.<@%unk/%unk: .PULL_DOWN_START>
      %25 = newarray (any)[0]
      %26 = this.<@ts_files/44.ts: EventPipeline.broadCast>
      instanceinvoke %26.<@%unk/%unk: .emit()>(%24, %25)"];
  Node54306 [label="id:6
      return"];
  Node54300 -> Node54301;
  Node54300 -> Node54302;
  Node54302 -> Node54303;
  Node54302 -> Node54304;
  Node54303 -> Node54304;
  Node54304 -> Node54305;
  Node54304 -> Node54306;
  Node54305 -> Node54306;
}
subgraph "cluster_@ts_files/44.ts: EventPipeline.onMove(number, number)" {
  label="@ts_files/44.ts: EventPipeline.onMove(number, number)";
  Node49040 [label="id:0
      offsetX = parameter0: number
      offsetY = parameter1: number
      this = this: @ts_files/44.ts: EventPipeline
      %0 = this.<@ts_files/44.ts: EventPipeline.isInAnimation>
      %1 = this.<@ts_files/44.ts: EventPipeline.isExiting>
      %2 = %0 || %1
      if %2 != false"];
  Node49041 [label="id:1
      return"];
  Node49042 [label="id:2
      %3 = this.<@ts_files/44.ts: EventPipeline.lastScale>
      %4 = this.<@ts_files/44.ts: EventPipeline.scale>
      scale = %3 * %4
      limits = instanceinvoke this.<@ts_files/44.ts: EventPipeline.evaluateOffsetRange(number)>(scale)
      %5 = this.<@ts_files/44.ts: EventPipeline.lastOffset>
      %6 = %5[0]
      %7 = this.<@ts_files/44.ts: EventPipeline.center>
      %8 = %7[0]
      %9 = Constants.<@%unk/%unk: .CENTER_DEFAULT>
      %10 = %8 - %9
      %11 = this.<@ts_files/44.ts: EventPipeline.componentWidth>
      %12 = %10 * %11
      %13 = this.<@ts_files/44.ts: EventPipeline.defaultScale>
      %14 = this.<@ts_files/44.ts: EventPipeline.scale>
      %15 = %13 - %14
      %16 = %12 * %15
      %17 = this.<@ts_files/44.ts: EventPipeline.lastScale>
      %18 = %16 * %17
      measureX = %6 + %18
      %19 = this.<@ts_files/44.ts: EventPipeline.lastOffset>
      %20 = %19[1]
      %21 = this.<@ts_files/44.ts: EventPipeline.center>
      %22 = %21[1]
      %23 = Constants.<@%unk/%unk: .CENTER_DEFAULT>
      %24 = %22 - %23
      %25 = this.<@ts_files/44.ts: EventPipeline.componentHeight>
      %26 = %24 * %25
      %27 = this.<@ts_files/44.ts: EventPipeline.defaultScale>
      %28 = this.<@ts_files/44.ts: EventPipeline.scale>
      %29 = %27 - %28
      %30 = %26 * %29
      %31 = this.<@ts_files/44.ts: EventPipeline.lastScale>
      %32 = %30 * %31
      measureY = %20 + %32
      moveX = offsetX
      moveY = offsetY
      offX = measureX + moveX
      offY = measureY + moveY
      %33 = Constants.<@%unk/%unk: .RESERVED_DIGITS>
      %34 = instanceinvoke scale.<@%unk/%unk: .toFixed()>(%33)
      %35 = staticinvoke <@%unk/%unk: .Number()>(%34)
      %36 = Constants.<@%unk/%unk: .RESERVED_DIGITS>
      %37 = this.<@ts_files/44.ts: EventPipeline.defaultScale>
      %38 = instanceinvoke %37.<@%unk/%unk: .toFixed()>(%36)
      %39 = staticinvoke <@%unk/%unk: .Number()>(%38)
      if %35 > %39"];
  Node49043 [label="id:3
      %40 = limits[0]
      %41 = limits[1]
      offX = instanceinvoke MathUtils.<@%unk/%unk: .clamp()>(offX, %40, %41)
      %42 = Constants.<@%unk/%unk: .RESERVED_DIGITS>
      %43 = instanceinvoke scale.<@%unk/%unk: .toFixed()>(%42)
      %44 = staticinvoke <@%unk/%unk: .Number()>(%43)
      %45 = Constants.<@%unk/%unk: .RESERVED_DIGITS>
      %46 = this.<@ts_files/44.ts: EventPipeline.defaultScale>
      %47 = instanceinvoke %46.<@%unk/%unk: .toFixed()>(%45)
      %48 = staticinvoke <@%unk/%unk: .Number()>(%47)
      if %44 > %48"];
  Node49044 [label="id:4
      %49 = Constants.<@%unk/%unk: .NUMBER_2>
      %50 = limits[%49]
      %51 = Constants.<@%unk/%unk: .NUMBER_3>
      %52 = limits[%51]
      offY = instanceinvoke MathUtils.<@%unk/%unk: .clamp()>(offY, %50, %52)"];
  Node49045 [label="id:5
      %53 = Constants.<@%unk/%unk: .NUMBER_2>
      %54 = limits[%53]
      offY = instanceinvoke Math.<@%unk/%unk: .max()>(%54, offY)"];
  Node49046 [label="id:6
      tmpX = offX - measureX
      tmpY = offY - measureY
      %55 = newarray (unknown)[2]
      %55[0] = tmpX
      %55[1] = tmpY
      this.<@ts_files/44.ts: EventPipeline.offset> = %55
      instanceinvoke this.<@ts_files/44.ts: EventPipeline.emitTouchEvent()>()
      return"];
  Node49040 -> Node49041;
  Node49040 -> Node49042;
  Node49042 -> Node49043;
  Node49042 -> Node49046;
  Node49043 -> Node49044;
  Node49043 -> Node49045;
  Node49044 -> Node49046;
  Node49045 -> Node49046;
}
subgraph "cluster_@ts_files/44.ts: EventPipeline.onMoveEnd(unknown, unknown)" {
  label="@ts_files/44.ts: EventPipeline.onMoveEnd(unknown, unknown)";
  Node54530 [label="id:0
      offsetX = parameter0: unknown
      offsetY = parameter1: unknown
      this = this: @ts_files/44.ts: EventPipeline
      %0 = this.<@ts_files/44.ts: EventPipeline.isInAnimation>
      %1 = this.<@ts_files/44.ts: EventPipeline.isExiting>
      %2 = %0 || %1
      if %2 != false"];
  Node54531 [label="id:1
      return"];
  Node54532 [label="id:2
      %3 = this.<@ts_files/44.ts: EventPipeline.lastScale>
      %4 = this.<@ts_files/44.ts: EventPipeline.scale>
      scale = %3 * %4
      %5 = 'onMoveEnd: scale is ' + scale
      %6 = %5 + ' offsetY is '
      %7 = %6 + offsetY
      instanceinvoke Log.<@%unk/%unk: .debug()>(TAG, %7)
      %8 = Constants.<@%unk/%unk: .RESERVED_DIGITS>
      %9 = instanceinvoke scale.<@%unk/%unk: .toFixed()>(%8)
      %10 = Constants.<@%unk/%unk: .RESERVED_DIGITS>
      %11 = this.<@ts_files/44.ts: EventPipeline.defaultScale>
      %12 = instanceinvoke %11.<@%unk/%unk: .toFixed()>(%10)
      %13 = %9 === %12
      %14 = Constants.<@%unk/%unk: .PULL_DOWN_THRESHOLD>
      %15 = offsetY > %14
      %16 = %13 && %15
      if %16 != false"];
  Node54533 [label="id:3
      instanceinvoke this.<@ts_files/44.ts: EventPipeline.emitPullDownToBackEvent()>()"];
  Node54534 [label="id:4
      %17 = Constants.<@%unk/%unk: .RESERVED_DIGITS>
      %18 = instanceinvoke scale.<@%unk/%unk: .toFixed()>(%17)
      %19 = Constants.<@%unk/%unk: .RESERVED_DIGITS>
      %20 = this.<@ts_files/44.ts: EventPipeline.defaultScale>
      %21 = instanceinvoke %20.<@%unk/%unk: .toFixed()>(%19)
      if %18 === %21"];
  Node54535 [label="id:5
      %22 = new @ts_files/44.ts: %AC$EventPipeline$onMoveEnd$2
      instanceinvoke %22.<@ts_files/44.ts: %AC$EventPipeline$onMoveEnd$2.constructor()>()
      scaleOption = %22
      %23 = instanceinvoke Matrix4.<@%unk/%unk: .identity()>()
      %24 = instanceinvoke %23.<@%unk/%unk: .scale()>(scaleOption)
      %25 = instanceinvoke %24.<@%unk/%unk: .copy()>()
      %26 = <@ts_files/44.ts: Matrix4TransitWithMatrix4x4>%25
      instanceinvoke this.<@ts_files/44.ts: EventPipeline.startAnimation(@ts_files/44.ts: Matrix4TransitWithMatrix4x4)>(%26)
      instanceinvoke this.<@ts_files/44.ts: EventPipeline.emitPullDownCancelEvent()>()"];
  Node54536 [label="id:6
      instanceinvoke this.<@ts_files/44.ts: EventPipeline.emitDirectionChange()>()"];
  Node54537 [label="id:7
      return"];
  Node54530 -> Node54531;
  Node54530 -> Node54532;
  Node54532 -> Node54533;
  Node54532 -> Node54534;
  Node54533 -> Node54537;
  Node54534 -> Node54535;
  Node54534 -> Node54536;
  Node54535 -> Node54537;
  Node54536 -> Node54537;
}
subgraph "cluster_@ts_files/44.ts: EventPipeline.onScaleStart(number, number, number)" {
  label="@ts_files/44.ts: EventPipeline.onScaleStart(number, number, number)";
  Node62360 [label="id:0
      scale = parameter0: number
      centerX = parameter1: number
      centerY = parameter2: number
      this = this: @ts_files/44.ts: EventPipeline
      %0 = this.<@ts_files/44.ts: EventPipeline.isInAnimation>
      %1 = 'onScaleStart: ' + %0
      %2 = %1 + ', '
      %3 = this.<@ts_files/44.ts: EventPipeline.isExiting>
      %4 = %2 + %3
      instanceinvoke Log.<@%unk/%unk: .info()>(TAG, %4)
      %5 = this.<@ts_files/44.ts: EventPipeline.isInAnimation>
      %6 = this.<@ts_files/44.ts: EventPipeline.isExiting>
      %7 = %5 || %6
      if %7 != false"];
  Node62361 [label="id:1
      return"];
  Node62362 [label="id:2
      this.<@ts_files/44.ts: EventPipeline.scale> = 1
      instanceinvoke this.<@ts_files/44.ts: EventPipeline.evaluateBounds()>()
      %8 = Constants.<@%unk/%unk: .HIDE_BARS>
      %9 = newarray (any)[0]
      %10 = this.<@ts_files/44.ts: EventPipeline.broadCast>
      instanceinvoke %10.<@%unk/%unk: .emit()>(%8, %9)
      %11 = instanceinvoke this.<@ts_files/44.ts: EventPipeline.evaluateCenter(number, number)>(centerX, centerY)
      this.<@ts_files/44.ts: EventPipeline.center> = %11
      return"];
  Node62360 -> Node62361;
  Node62360 -> Node62362;
}
subgraph "cluster_@ts_files/44.ts: EventPipeline.evaluateCenter(number, number)" {
  label="@ts_files/44.ts: EventPipeline.evaluateCenter(number, number)";
  Node57400 [label="id:0
      centerX = parameter0: number
      centerY = parameter1: number
      this = this: @ts_files/44.ts: EventPipeline
      %0 = this.<@ts_files/44.ts: EventPipeline.lastScale>
      %1 = this.<@ts_files/44.ts: EventPipeline.scale>
      scale = %0 * %1
      leftTop = instanceinvoke this.<@ts_files/44.ts: EventPipeline.evaluateCompBounds()>()
      %2 = leftTop[0]
      %3 = centerX - %2
      %4 = this.<@ts_files/44.ts: EventPipeline.componentWidth>
      %5 = %4 * scale
      %6 = %3 / %5
      %7 = this.<@ts_files/44.ts: EventPipeline.leftMost>
      %8 = this.<@ts_files/44.ts: EventPipeline.leftMost>
      %9 = 1 - %8
      cxRelativeToComp = instanceinvoke MathUtils.<@%unk/%unk: .clamp()>(%6, %7, %9)
      %10 = leftTop[1]
      %11 = centerY - %10
      %12 = this.<@ts_files/44.ts: EventPipeline.componentHeight>
      %13 = %12 * scale
      %14 = %11 / %13
      %15 = this.<@ts_files/44.ts: EventPipeline.topMost>
      %16 = this.<@ts_files/44.ts: EventPipeline.topMost>
      %17 = 1 - %16
      cyRelativeToComp = instanceinvoke MathUtils.<@%unk/%unk: .clamp()>(%14, %15, %17)
      imgDisplaySize = instanceinvoke this.<@ts_files/44.ts: EventPipeline.evaluateImgDisplaySize()>()
      imgDisplayWidth = imgDisplaySize[0]
      imgDisplayHeight = imgDisplaySize[1]
      imgDisplayBounds = instanceinvoke this.<@ts_files/44.ts: EventPipeline.evaluateImgDisplayBounds()>()
      imgLeftBound = imgDisplayBounds[0]
      imgTopBound = imgDisplayBounds[1]
      %18 = this.<@ts_files/44.ts: EventPipeline.width>
      %19 = this.<@ts_files/44.ts: EventPipeline.height>
      %20 = %18 / %19
      %21 = this.<@ts_files/44.ts: EventPipeline.componentWidth>
      %22 = this.<@ts_files/44.ts: EventPipeline.componentHeight>
      %23 = %21 / %22
      if %20 > %23"];
  Node57401 [label="id:1
      %24 = centerY < imgTopBound
      %25 = imgTopBound + imgDisplayHeight
      %26 = centerY > %25
      %27 = %24 || %26
      if %27 != false"];
  Node57402 [label="id:2
      cyRelativeToComp = Constants.<@%unk/%unk: .CENTER_DEFAULT>"];
  Node57403 [label="id:3
      %28 = newarray (unknown)[2]
      %28[0] = cxRelativeToComp
      %28[1] = cyRelativeToComp
      center = %28
      %29 = 'evaluateCenter center: ' + center
      %30 = %29 + ', '
      %31 = %30 + centerX
      %32 = %31 + ','
      %33 = %32 + centerY
      %34 = %33 + ',size: '
      %35 = %34 + imgDisplaySize
      %36 = %35 + ', bounds: '
      %37 = %36 + imgDisplayBounds
      %38 = %37 + ', leftTop: '
      %39 = %38 + leftTop
      %40 = %39 + ',compSize: '
      %41 = this.<@ts_files/44.ts: EventPipeline.componentWidth>
      %42 = %41 * scale
      %43 = %40 + %42
      %44 = %43 + ','
      %45 = this.<@ts_files/44.ts: EventPipeline.componentHeight>
      %46 = %45 * scale
      %47 = %44 + %46
      instanceinvoke Log.<@%unk/%unk: .debug()>(TAG, %47)
      return center"];
  Node57404 [label="id:4
      %48 = centerX < imgLeftBound
      %49 = imgLeftBound + imgDisplayWidth
      %50 = centerX > %49
      %51 = %48 || %50
      if %51 != false"];
  Node57405 [label="id:5
      cxRelativeToComp = Constants.<@%unk/%unk: .CENTER_DEFAULT>"];
  Node57400 -> Node57401;
  Node57400 -> Node57404;
  Node57401 -> Node57402;
  Node57401 -> Node57403;
  Node57402 -> Node57403;
  Node57404 -> Node57405;
  Node57404 -> Node57403;
  Node57405 -> Node57403;
}
subgraph "cluster_@ts_files/44.ts: EventPipeline.onScale(number)" {
  label="@ts_files/44.ts: EventPipeline.onScale(number)";
  Node42600 [label="id:0
      scale = parameter0: number
      this = this: @ts_files/44.ts: EventPipeline
      %0 = this.<@ts_files/44.ts: EventPipeline.isInAnimation>
      %1 = 'onScale: ' + %0
      %2 = %1 + ', '
      %3 = this.<@ts_files/44.ts: EventPipeline.isExiting>
      %4 = %2 + %3
      %5 = %4 + ', scale: '
      %6 = %5 + scale
      instanceinvoke Log.<@%unk/%unk: .debug()>(TAG, %6)
      %7 = this.<@ts_files/44.ts: EventPipeline.isInAnimation>
      %8 = this.<@ts_files/44.ts: EventPipeline.isExiting>
      %9 = %7 || %8
      if %9 != false"];
  Node42601 [label="id:1
      return"];
  Node42602 [label="id:2
      instanceinvoke this.<@ts_files/44.ts: EventPipeline.evaluateBounds()>()
      this.<@ts_files/44.ts: EventPipeline.scale> = scale
      %10 = this.<@ts_files/44.ts: EventPipeline.lastScale>
      %11 = %10 * scale
      %12 = Constants.<@%unk/%unk: .COMPONENT_SCALE_FLOOR>
      if %11 <= %12"];
  Node42603 [label="id:3
      %13 = Constants.<@%unk/%unk: .COMPONENT_SCALE_FLOOR>
      %14 = this.<@ts_files/44.ts: EventPipeline.lastScale>
      %15 = %13 / %14
      this.<@ts_files/44.ts: EventPipeline.scale> = %15"];
  Node42604 [label="id:4
      %16 = this.<@ts_files/44.ts: EventPipeline.lastScale>
      %17 = %16 * scale
      %18 = this.<@ts_files/44.ts: EventPipeline.maxScale>
      %19 = Constants.<@%unk/%unk: .OVER_SCALE_EXTRA_FACTOR>
      %20 = %18 * %19
      if %17 >= %20"];
  Node42605 [label="id:5
      %21 = this.<@ts_files/44.ts: EventPipeline.maxScale>
      %22 = Constants.<@%unk/%unk: .OVER_SCALE_EXTRA_FACTOR>
      %23 = %21 * %22
      %24 = this.<@ts_files/44.ts: EventPipeline.lastScale>
      %25 = %23 / %24
      this.<@ts_files/44.ts: EventPipeline.scale> = %25"];
  Node42606 [label="id:6
      instanceinvoke this.<@ts_files/44.ts: EventPipeline.emitTouchEvent()>()
      return"];
  Node42600 -> Node42601;
  Node42600 -> Node42602;
  Node42602 -> Node42603;
  Node42602 -> Node42604;
  Node42603 -> Node42604;
  Node42604 -> Node42605;
  Node42604 -> Node42606;
  Node42605 -> Node42606;
}
subgraph "cluster_@ts_files/44.ts: EventPipeline.onScaleEnd()" {
  label="@ts_files/44.ts: EventPipeline.onScaleEnd()";
  Node38900 [label="id:0
      this = this: @ts_files/44.ts: EventPipeline
      %0 = this.<@ts_files/44.ts: EventPipeline.isInAnimation>
      %1 = 'onScaleEnd: ' + %0
      %2 = %1 + ', '
      %3 = this.<@ts_files/44.ts: EventPipeline.isExiting>
      %4 = %2 + %3
      instanceinvoke Log.<@%unk/%unk: .info()>(TAG, %4)
      %5 = this.<@ts_files/44.ts: EventPipeline.isInAnimation>
      %6 = this.<@ts_files/44.ts: EventPipeline.isExiting>
      %7 = %5 || %6
      if %7 != false"];
  Node38901 [label="id:1
      return"];
  Node38902 [label="id:2
      instanceinvoke this.<@ts_files/44.ts: EventPipeline.evaluateBounds()>()
      %8 = this.<@ts_files/44.ts: EventPipeline.lastScale>
      %9 = this.<@ts_files/44.ts: EventPipeline.scale>
      scale = %8 * %9
      %10 = Constants.<@%unk/%unk: .RESERVED_DIGITS>
      %11 = instanceinvoke scale.<@%unk/%unk: .toFixed()>(%10)
      %12 = staticinvoke <@%unk/%unk: .Number()>(%11)
      %13 = Constants.<@%unk/%unk: .RESERVED_DIGITS>
      %14 = this.<@ts_files/44.ts: EventPipeline.defaultScale>
      %15 = instanceinvoke %14.<@%unk/%unk: .toFixed()>(%13)
      %16 = staticinvoke <@%unk/%unk: .Number()>(%15)
      %17 = %12 >= %16
      %18 = this.<@ts_files/44.ts: EventPipeline.maxScale>
      %19 = scale <= %18
      %20 = %17 && %19
      if %20 != false"];
  Node38903 [label="id:3
      %21 = 'does not need to do animation: ' + scale
      instanceinvoke Log.<@%unk/%unk: .info()>(TAG, %21)
      instanceinvoke this.<@ts_files/44.ts: EventPipeline.emitDirectionChange()>()
      return"];
  Node38904 [label="id:4
      animationEndMatrix = null
      %22 = Constants.<@%unk/%unk: .RESERVED_DIGITS>
      %23 = instanceinvoke scale.<@%unk/%unk: .toFixed()>(%22)
      %24 = staticinvoke <@%unk/%unk: .Number()>(%23)
      %25 = Constants.<@%unk/%unk: .RESERVED_DIGITS>
      %26 = this.<@ts_files/44.ts: EventPipeline.defaultScale>
      %27 = instanceinvoke %26.<@%unk/%unk: .toFixed()>(%25)
      %28 = staticinvoke <@%unk/%unk: .Number()>(%27)
      if %24 <= %28"];
  Node38905 [label="id:5
      %29 = new @ts_files/44.ts: %AC$EventPipeline$onScaleEnd$3
      instanceinvoke %29.<@ts_files/44.ts: %AC$EventPipeline$onScaleEnd$3.constructor()>()
      scaleOption = %29
      %30 = instanceinvoke Matrix4.<@%unk/%unk: .identity()>()
      %31 = instanceinvoke %30.<@%unk/%unk: .scale()>(scaleOption)
      animationEndMatrix = instanceinvoke %31.<@%unk/%unk: .copy()>()"];
  Node38906 [label="id:6
      %32 = this.<@ts_files/44.ts: EventPipeline.maxScale>
      %33 = this.<@ts_files/44.ts: EventPipeline.center>
      animationEndMatrix = instanceinvoke this.<@ts_files/44.ts: EventPipeline.evaluateAnimeMatrix(number, number[])>(%32, %33)"];
  Node38907 [label="id:7
      %34 = <@ts_files/44.ts: Matrix4TransitWithMatrix4x4>animationEndMatrix
      instanceinvoke this.<@ts_files/44.ts: EventPipeline.startAnimation(@ts_files/44.ts: Matrix4TransitWithMatrix4x4)>(%34)
      return"];
  Node38900 -> Node38901;
  Node38900 -> Node38902;
  Node38902 -> Node38903;
  Node38902 -> Node38904;
  Node38904 -> Node38905;
  Node38904 -> Node38906;
  Node38905 -> Node38907;
  Node38906 -> Node38907;
}
subgraph "cluster_@ts_files/44.ts: EventPipeline.evaluateAnimeMatrix(number, number[])" {
  label="@ts_files/44.ts: EventPipeline.evaluateAnimeMatrix(number, number[])";
  Node64340 [label="id:0
      scale = parameter0: number
      center = parameter1: number[]
      this = this: @ts_files/44.ts: EventPipeline
      %0 = this.<@ts_files/44.ts: EventPipeline.lastOffset>
      %1 = %0[0]
      %2 = this.<@ts_files/44.ts: EventPipeline.offset>
      %3 = %2[0]
      %4 = %1 + %3
      %5 = center[0]
      %6 = Constants.<@%unk/%unk: .CENTER_DEFAULT>
      %7 = %5 - %6
      %8 = this.<@ts_files/44.ts: EventPipeline.componentWidth>
      %9 = %7 * %8
      %10 = this.<@ts_files/44.ts: EventPipeline.defaultScale>
      %11 = this.<@ts_files/44.ts: EventPipeline.lastScale>
      %12 = scale / %11
      %13 = %10 - %12
      %14 = %9 * %13
      %15 = this.<@ts_files/44.ts: EventPipeline.lastScale>
      %16 = %14 * %15
      %17 = %4 + %16
      %18 = this.<@ts_files/44.ts: EventPipeline.lastOffset>
      %19 = %18[1]
      %20 = this.<@ts_files/44.ts: EventPipeline.offset>
      %21 = %20[1]
      %22 = %19 + %21
      %23 = center[1]
      %24 = Constants.<@%unk/%unk: .CENTER_DEFAULT>
      %25 = %23 - %24
      %26 = this.<@ts_files/44.ts: EventPipeline.componentHeight>
      %27 = %25 * %26
      %28 = this.<@ts_files/44.ts: EventPipeline.defaultScale>
      %29 = this.<@ts_files/44.ts: EventPipeline.lastScale>
      %30 = scale / %29
      %31 = %28 - %30
      %32 = %27 * %31
      %33 = this.<@ts_files/44.ts: EventPipeline.lastScale>
      %34 = %32 * %33
      %35 = %22 + %34
      %36 = newarray (unknown)[2]
      %36[0] = %17
      %36[1] = %35
      offset = %36
      %37 = Constants.<@%unk/%unk: .RESERVED_DIGITS>
      %38 = instanceinvoke scale.<@%unk/%unk: .toFixed()>(%37)
      %39 = staticinvoke <@%unk/%unk: .Number()>(%38)
      %40 = Constants.<@%unk/%unk: .RESERVED_DIGITS>
      %41 = this.<@ts_files/44.ts: EventPipeline.defaultScale>
      %42 = instanceinvoke %41.<@%unk/%unk: .toFixed()>(%40)
      %43 = staticinvoke <@%unk/%unk: .Number()>(%42)
      if %39 > %43"];
  Node64341 [label="id:1
      limits = instanceinvoke this.<@ts_files/44.ts: EventPipeline.evaluateOffsetRange(number)>(scale)
      %44 = offset[0]
      %45 = limits[0]
      %46 = limits[1]
      %47 = instanceinvoke MathUtils.<@%unk/%unk: .clamp()>(%44, %45, %46)
      offset[0] = %47
      %48 = Constants.<@%unk/%unk: .RESERVED_DIGITS>
      %49 = instanceinvoke scale.<@%unk/%unk: .toFixed()>(%48)
      %50 = staticinvoke <@%unk/%unk: .Number()>(%49)
      %51 = Constants.<@%unk/%unk: .RESERVED_DIGITS>
      %52 = this.<@ts_files/44.ts: EventPipeline.defaultScale>
      %53 = instanceinvoke %52.<@%unk/%unk: .toFixed()>(%51)
      %54 = staticinvoke <@%unk/%unk: .Number()>(%53)
      if %50 > %54"];
  Node64342 [label="id:2
      %55 = offset[1]
      %56 = Constants.<@%unk/%unk: .NUMBER_2>
      %57 = limits[%56]
      %58 = Constants.<@%unk/%unk: .NUMBER_3>
      %59 = limits[%58]
      %60 = instanceinvoke MathUtils.<@%unk/%unk: .clamp()>(%55, %57, %59)
      offset[1] = %60"];
  Node64343 [label="id:3
      %61 = Constants.<@%unk/%unk: .NUMBER_2>
      %62 = limits[%61]
      %63 = offset[1]
      %64 = instanceinvoke Math.<@%unk/%unk: .max()>(%62, %63)
      offset[1] = %64"];
  Node64344 [label="id:4
      %65 = newarray (number)[2]
      %65[0] = 0
      %65[1] = 0
      offset = %65"];
  Node64345 [label="id:5
      %66 = new @ts_files/44.ts: %AC$EventPipeline$evaluateAnimeMatrix$4
      instanceinvoke %66.<@ts_files/44.ts: %AC$EventPipeline$evaluateAnimeMatrix$4.constructor()>()
      scaleOption = %66
      %67 = new @ts_files/44.ts: %AC$EventPipeline$evaluateAnimeMatrix$5
      instanceinvoke %67.<@ts_files/44.ts: %AC$EventPipeline$evaluateAnimeMatrix$5.constructor()>()
      translateOption = %67
      %68 = instanceinvoke Matrix4.<@%unk/%unk: .identity()>()
      %69 = instanceinvoke %68.<@%unk/%unk: .copy()>()
      %70 = instanceinvoke %69.<@%unk/%unk: .scale()>(scaleOption)
      %71 = instanceinvoke %70.<@%unk/%unk: .translate()>(translateOption)
      animationEndMatrix = instanceinvoke %71.<@%unk/%unk: .copy()>()
      %72 = 'evaluateAnimeMatrix scale:' + scale
      %73 = %72 + ', center:'
      %74 = %73 + center
      instanceinvoke Log.<@%unk/%unk: .debug()>(TAG, %74)
      return animationEndMatrix"];
  Node64340 -> Node64341;
  Node64340 -> Node64344;
  Node64341 -> Node64342;
  Node64341 -> Node64343;
  Node64342 -> Node64345;
  Node64343 -> Node64345;
  Node64344 -> Node64345;
}
subgraph "cluster_@ts_files/44.ts: EventPipeline.onDoubleTap(number, number)" {
  label="@ts_files/44.ts: EventPipeline.onDoubleTap(number, number)";
  Node53930 [label="id:0
      centerX = parameter0: number
      centerY = parameter1: number
      this = this: @ts_files/44.ts: EventPipeline
      %0 = this.<@ts_files/44.ts: EventPipeline.isInAnimation>
      %1 = this.<@ts_files/44.ts: EventPipeline.isExiting>
      %2 = %0 || %1
      if %2 != false"];
  Node53931 [label="id:1
      %3 = this.<@ts_files/44.ts: EventPipeline.isInAnimation>
      %4 = 'onDoubleTap not avaliable: ' + %3
      %5 = %4 + ', '
      %6 = this.<@ts_files/44.ts: EventPipeline.isExiting>
      %7 = %5 + %6
      instanceinvoke Log.<@%unk/%unk: .debug()>(TAG, %7)
      return"];
  Node53932 [label="id:2
      %8 = Constants.<@%unk/%unk: .HIDE_BARS>
      %9 = newarray (any)[0]
      %10 = this.<@ts_files/44.ts: EventPipeline.broadCast>
      instanceinvoke %10.<@%unk/%unk: .emit()>(%8, %9)
      matrix = undefined
      %11 = this.<@ts_files/44.ts: EventPipeline.lastScale>
      %12 = 'onDoubleTap lastScale: ' + %11
      %13 = %12 + ', scale: '
      %14 = this.<@ts_files/44.ts: EventPipeline.scale>
      %15 = %13 + %14
      %16 = %15 + ', defaultScale: '
      %17 = this.<@ts_files/44.ts: EventPipeline.defaultScale>
      %18 = %16 + %17
      instanceinvoke Log.<@%unk/%unk: .debug()>(TAG, %18)
      %19 = Constants.<@%unk/%unk: .RESERVED_DIGITS>
      %20 = this.<@ts_files/44.ts: EventPipeline.lastScale>
      %21 = instanceinvoke %20.<@%unk/%unk: .toFixed()>(%19)
      %22 = staticinvoke <@%unk/%unk: .Number()>(%21)
      %23 = this.<@ts_files/44.ts: EventPipeline.scale>
      %24 = %22 * %23
      %25 = Constants.<@%unk/%unk: .RESERVED_DIGITS>
      %26 = this.<@ts_files/44.ts: EventPipeline.defaultScale>
      %27 = instanceinvoke %26.<@%unk/%unk: .toFixed()>(%25)
      %28 = staticinvoke <@%unk/%unk: .Number()>(%27)
      if %24 > %28"];
  Node53933 [label="id:3
      %29 = new @ts_files/44.ts: %AC$EventPipeline$onDoubleTap$6
      instanceinvoke %29.<@ts_files/44.ts: %AC$EventPipeline$onDoubleTap$6.constructor()>()
      scaleOption = %29
      %30 = instanceinvoke Matrix4.<@%unk/%unk: .identity()>()
      %31 = instanceinvoke %30.<@%unk/%unk: .scale()>(scaleOption)
      %32 = instanceinvoke %31.<@%unk/%unk: .copy()>()
      matrix = <@ts_files/44.ts: Matrix4TransitWithMatrix4x4>%32"];
  Node53934 [label="id:4
      center = instanceinvoke this.<@ts_files/44.ts: EventPipeline.evaluateCenter(number, number)>(centerX, centerY)
      %33 = this.<@ts_files/44.ts: EventPipeline.width>
      %34 = this.<@ts_files/44.ts: EventPipeline.height>
      %35 = %33 / %34
      %36 = this.<@ts_files/44.ts: EventPipeline.componentWidth>
      %37 = this.<@ts_files/44.ts: EventPipeline.componentHeight>
      %38 = %36 / %37
      if %35 < %38"];
  Node53935 [label="id:5
      %39 = Constants.<@%unk/%unk: .CENTER_DEFAULT>
      %40 = center[1]
      %41 = newarray (unknown)[2]
      %41[0] = %39
      %41[1] = %40
      center = %41"];
  Node53936 [label="id:6
      %42 = center[0]
      %43 = Constants.<@%unk/%unk: .CENTER_DEFAULT>
      %44 = newarray (unknown)[2]
      %44[0] = %42
      %44[1] = %43
      center = %44"];
  Node53937 [label="id:7
      %45 = this.<@ts_files/44.ts: EventPipeline.doubleTapScale>
      %46 = this.<@ts_files/44.ts: EventPipeline.defaultScale>
      %47 = %45 * %46
      %48 = instanceinvoke this.<@ts_files/44.ts: EventPipeline.evaluateAnimeMatrix(number, number[])>(%47, center)
      matrix = <@ts_files/44.ts: Matrix4TransitWithMatrix4x4>%48"];
  Node53938 [label="id:8
      %49 = matrix.<@ts_files/44.ts: Matrix4TransitWithMatrix4x4.matrix4x4>
      %50 = 'onDoubleTap matrix: ' + %49
      instanceinvoke Log.<@%unk/%unk: .debug()>(TAG, %50)
      instanceinvoke this.<@ts_files/44.ts: EventPipeline.startAnimation(@ts_files/44.ts: Matrix4TransitWithMatrix4x4)>(matrix)
      return"];
  Node53930 -> Node53931;
  Node53930 -> Node53932;
  Node53932 -> Node53933;
  Node53932 -> Node53934;
  Node53933 -> Node53938;
  Node53934 -> Node53935;
  Node53934 -> Node53936;
  Node53935 -> Node53937;
  Node53936 -> Node53937;
  Node53937 -> Node53938;
}
subgraph "cluster_@ts_files/44.ts: EventPipeline.reset()" {
  label="@ts_files/44.ts: EventPipeline.reset()";
  Node34490 [label="id:0
      this = this: @ts_files/44.ts: EventPipeline
      %0 = newarray (number)[2]
      %0[0] = 0
      %0[1] = 0
      this.<@ts_files/44.ts: EventPipeline.lastOffset> = %0
      %1 = newarray (number)[2]
      %1[0] = 0
      %1[1] = 0
      this.<@ts_files/44.ts: EventPipeline.offset> = %1
      this.<@ts_files/44.ts: EventPipeline.lastScale> = 1
      this.<@ts_files/44.ts: EventPipeline.scale> = 1
      this.<@ts_files/44.ts: EventPipeline.hasReachLeft> = true
      this.<@ts_files/44.ts: EventPipeline.hasReachRight> = true
      this.<@ts_files/44.ts: EventPipeline.hasReachTop> = true
      this.<@ts_files/44.ts: EventPipeline.hasReachBottom> = true
      this.<@ts_files/44.ts: EventPipeline.isInAnimation> = false
      this.<@ts_files/44.ts: EventPipeline.isExiting> = false
      instanceinvoke this.<@ts_files/44.ts: EventPipeline.emitDirectionChange()>()
      return"];
}
subgraph "cluster_@ts_files/44.ts: EventPipeline.onDisAppear()" {
  label="@ts_files/44.ts: EventPipeline.onDisAppear()";
  Node40120 [label="id:0
      this = this: @ts_files/44.ts: EventPipeline
      instanceinvoke Log.<@%unk/%unk: .info()>(TAG, 'onDisAppear')
      return"];
}
subgraph "cluster_@ts_files/44.ts: EventPipeline.startAnimation(@ts_files/44.ts: Matrix4TransitWithMatrix4x4)" {
  label="@ts_files/44.ts: EventPipeline.startAnimation(@ts_files/44.ts: Matrix4TransitWithMatrix4x4)";
  Node85140 [label="id:0
      animationEndMatrix = parameter0: @ts_files/44.ts: Matrix4TransitWithMatrix4x4
      this = this: @ts_files/44.ts: EventPipeline
      this.<@ts_files/44.ts: EventPipeline.isInAnimation> = true
      %0 = new @ts_files/44.ts: %AC$EventPipeline$startAnimation$7
      instanceinvoke %0.<@ts_files/44.ts: %AC$EventPipeline$startAnimation$7.constructor()>()
      animationOption = %0
      %1 = animationEndMatrix.<@ts_files/44.ts: Matrix4TransitWithMatrix4x4.matrix4x4>
      %2 = 'animationEndMatrix: ' + %1
      instanceinvoke Log.<@%unk/%unk: .debug()>(TAG, %2)
      %3 = Constants.<@%unk/%unk: .ANIMATION_EVENT>
      %4 = this.<@ts_files/44.ts: EventPipeline.item>
      %5 = %4.<@%unk/%unk: .uri>
      %6 = %3 + %5
      %7 = this.<@ts_files/44.ts: EventPipeline.timeStamp>
      %8 = %6 + %7
      %9 = newarray (@ts_files/44.ts: AnimationOption|@ts_files/44.ts: Matrix4TransitWithMatrix4x4)[2]
      %9[0] = animationOption
      %9[1] = animationEndMatrix
      %10 = this.<@ts_files/44.ts: EventPipeline.broadCast>
      instanceinvoke %10.<@%unk/%unk: .emit()>(%8, %9)
      return"];
}
subgraph "cluster_@ts_files/44.ts: EventPipeline.onAnimationEnd(@ts_files/44.ts: Matrix4TransitWithMatrix4x4)" {
  label="@ts_files/44.ts: EventPipeline.onAnimationEnd(@ts_files/44.ts: Matrix4TransitWithMatrix4x4)";
  Node84560 [label="id:0
      animationEndMatrix = parameter0: @ts_files/44.ts: Matrix4TransitWithMatrix4x4
      this = this: @ts_files/44.ts: EventPipeline
      if animationEndMatrix != null"];
  Node84561 [label="id:1
      %0 = animationEndMatrix.<@ts_files/44.ts: Matrix4TransitWithMatrix4x4.matrix4x4>
      %1 = 'onAnimationEnd: ' + %0
      instanceinvoke Log.<@%unk/%unk: .info()>(TAG, %1)
      %2 = animationEndMatrix.<@ts_files/44.ts: Matrix4TransitWithMatrix4x4.matrix4x4>
      %3 = %2[0]
      this.<@ts_files/44.ts: EventPipeline.lastScale> = %3
      this.<@ts_files/44.ts: EventPipeline.scale> = 1
      %4 = animationEndMatrix.<@ts_files/44.ts: Matrix4TransitWithMatrix4x4.matrix4x4>
      %5 = Constants.<@%unk/%unk: .NUMBER_12>
      %6 = %4[%5]
      %7 = animationEndMatrix.<@ts_files/44.ts: Matrix4TransitWithMatrix4x4.matrix4x4>
      %8 = Constants.<@%unk/%unk: .NUMBER_13>
      %9 = %7[%8]
      %10 = newarray (unknown)[2]
      %10[0] = %6
      %10[1] = %9
      this.<@ts_files/44.ts: EventPipeline.lastOffset> = %10
      %11 = newarray (number)[2]
      %11[0] = 0
      %11[1] = 0
      this.<@ts_files/44.ts: EventPipeline.offset> = %11
      instanceinvoke this.<@ts_files/44.ts: EventPipeline.evaluateBounds()>()
      this.<@ts_files/44.ts: EventPipeline.isInAnimation> = false
      instanceinvoke this.<@ts_files/44.ts: EventPipeline.emitDirectionChange()>()"];
  Node84562 [label="id:2
      return"];
  Node84560 -> Node84561;
  Node84560 -> Node84562;
  Node84561 -> Node84562;
}
}
