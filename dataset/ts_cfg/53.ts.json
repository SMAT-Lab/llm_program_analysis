{
  "type": "file",
  "name": "53.ts",
  "label": "53.ts",
  "start_line": -1,
  "end_line": 39,
  "classes": [
    {
      "type": "class",
      "name": "%dflt",
      "label": "%dflt",
      "start_line": -1,
      "end_line": 39,
      "functions": [
        {
          "type": "function",
          "name": "%dflt",
          "label": "%dflt",
          "start_line": -1,
          "end_line": 39,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/53.ts: %dflt\nTAG = 'hisysEventUtil'\nreturn",
              "start_line": 1,
              "end_line": 39,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": ""
        },
        {
          "type": "function",
          "name": "hiSysEventDataQueryTimedOut",
          "label": "hiSysEventDataQueryTimedOut",
          "start_line": 1,
          "end_line": 39,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "interfaceName = parameter0: string\nthis = this: @ts_files/53.ts: %dflt\ntimeOutId = staticinvoke <@%unk/%unk: .setTimeout()>(%AM0$hiSysEventDataQueryTimedOut, 1000)\nreturn timeOutId",
              "start_line": 1,
              "end_line": 39,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "export function hiSysEventDataQueryTimedOut(interfaceName: string): number {\n  let timeOutId = setTimeout((): void => {\n    let params: Object = {\n      FAULT_ID: 'DATA_QUERY_OVERTIME',\n      MSG: interfaceName + ' Querying 1s data timed out.'\n    };\n    let info: hiSysEvent.SysEventInfo = {\n      domain: 'PHOTOS_APP',\n      name: 'PHOTOS_FAULT',\n      eventType: hiSysEvent.EventType.FAULT,\n      params: params\n    };\n    hiSysEvent.write(info, (err: Error): void => {\n      if (err != null) {\n        Log.error(TAG, 'fail to return hiSysEvent');\n      }\n    });\n  },1000);\n  return timeOutId;\n}"
        },
        {
          "type": "function",
          "name": "%AM1$%AM0$hiSysEventDataQueryTimedOut",
          "label": "%AM1$%AM0$hiSysEventDataQueryTimedOut",
          "start_line": 1,
          "end_line": 33,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "err = parameter0: Error\nthis = this: @ts_files/53.ts: %dflt\nif err != null",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "instanceinvoke Log.<@%unk/%unk: .error()>(TAG, 'fail to return hiSysEvent')",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "return",
                      "start_line": 35,
                      "end_line": 39,
                      "successors": []
                    }
                  ]
                },
                {
                  "type": "blockRef",
                  "label": "(RepeatedBlock)"
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(err: Error): void => {\n      if (err != null) {\n        Log.error(TAG, 'fail to return hiSysEvent');\n      }\n    }"
        },
        {
          "type": "function",
          "name": "%AM0$hiSysEventDataQueryTimedOut",
          "label": "%AM0$hiSysEventDataQueryTimedOut",
          "start_line": 1,
          "end_line": 39,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/53.ts: %dflt\n%0 = new @ts_files/53.ts: %AC$%dflt$%AM0$hiSysEventDataQueryTimedOut$0\ninstanceinvoke %0.<@ts_files/53.ts: %AC$%dflt$%AM0$hiSysEventDataQueryTimedOut$0.constructor()>()\nparams = %0\n%1 = new @ts_files/53.ts: %AC$%dflt$%AM0$hiSysEventDataQueryTimedOut$1\ninstanceinvoke %1.<@ts_files/53.ts: %AC$%dflt$%AM0$hiSysEventDataQueryTimedOut$1.constructor()>()\ninfo = %1\ninstanceinvoke hiSysEvent.<@%unk/%unk: .write()>(info, %AM1$%AM0$hiSysEventDataQueryTimedOut)\nreturn",
              "start_line": 1,
              "end_line": 39,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(): void => {\n    let params: Object = {\n      FAULT_ID: 'DATA_QUERY_OVERTIME',\n      MSG: interfaceName + ' Querying 1s data timed out.'\n    };\n    let info: hiSysEvent.SysEventInfo = {\n      domain: 'PHOTOS_APP',\n      name: 'PHOTOS_FAULT',\n      eventType: hiSysEvent.EventType.FAULT,\n      params: params\n    };\n    hiSysEvent.write(info, (err: Error): void => {\n      if (err != null) {\n        Log.error(TAG, 'fail to return hiSysEvent');\n      }\n    });\n  }"
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": ""
    },
    {
      "type": "class",
      "name": "%AC$%dflt$%AM0$hiSysEventDataQueryTimedOut$0",
      "label": "%AC$%dflt$%AM0$hiSysEventDataQueryTimedOut$0",
      "start_line": 23,
      "end_line": 23,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n      FAULT_ID: 'DATA_QUERY_OVERTIME',\n      MSG: interfaceName + ' Querying 1s data timed out.'\n    }"
    },
    {
      "type": "class",
      "name": "%AC$%dflt$%AM0$hiSysEventDataQueryTimedOut$1",
      "label": "%AC$%dflt$%AM0$hiSysEventDataQueryTimedOut$1",
      "start_line": 27,
      "end_line": 27,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n      domain: 'PHOTOS_APP',\n      name: 'PHOTOS_FAULT',\n      eventType: hiSysEvent.EventType.FAULT,\n      params: params\n    }"
    }
  ],
  "functions": [],
  "blocks": [],
  "simplified_code": "/*\n * Copyright (c) 2023 Shenzhen Kaihong Digital Industry Development Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport hiSysEvent from '@ohos.hiSysEvent';\nimport { Log } from './Log';\n\nconst TAG = 'hisysEventUtil';\n\nexport function hiSysEventDataQueryTimedOut(interfaceName: string): number {\n  let timeOutId = setTimeout((): void => {\n    let params: Object = {\n      FAULT_ID: 'DATA_QUERY_OVERTIME',\n      MSG: interfaceName + ' Querying 1s data timed out.'\n    };\n    let info: hiSysEvent.SysEventInfo = {\n      domain: 'PHOTOS_APP',\n      name: 'PHOTOS_FAULT',\n      eventType: hiSysEvent.EventType.FAULT,\n      params: params\n    };\n    hiSysEvent.write(info, (err: Error): void => {\n      if (err != null) {\n        Log.error(TAG, 'fail to return hiSysEvent');\n      }\n    });\n  },1000);\n  return timeOutId;\n}\n"
}