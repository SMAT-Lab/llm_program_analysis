{
  "type": "file",
  "name": "121.ts",
  "label": "121.ts",
  "start_line": -1,
  "end_line": 59,
  "classes": [
    {
      "type": "class",
      "name": "%dflt",
      "label": "%dflt",
      "start_line": -1,
      "end_line": 52,
      "functions": [
        {
          "type": "function",
          "name": "%dflt",
          "label": "%dflt",
          "start_line": -1,
          "end_line": 52,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/121.ts: %dflt\nTAG = '[ServiceExtAbility]'\nDOMAIN_NUMBER = 65280\nreturn",
              "start_line": 1,
              "end_line": 52,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": ""
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": ""
    },
    {
      "type": "class",
      "name": "ServiceExtAbility",
      "label": "ServiceExtAbility",
      "start_line": 1,
      "end_line": 59,
      "functions": [
        {
          "type": "function",
          "name": "onCreate",
          "label": "onCreate",
          "start_line": 1,
          "end_line": 52,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "want = parameter0: Want\nthis = this: @ts_files/121.ts: ServiceExtAbility\nserviceExtensionContext = this.<@ts_files/121.ts: ServiceExtAbility.context>\n%0 = want.<@%unk/%unk: .abilityName>\n%1 = 'onCreate, want: ' + %0\ninstanceinvoke hilog.<@%unk/%unk: .info()>(DOMAIN_NUMBER, TAG, %1)\nreturn",
              "start_line": 1,
              "end_line": 52,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "onCreate(want: Want): void {\n    let serviceExtensionContext = this.context;\n    hilog.info(DOMAIN_NUMBER, TAG, `onCreate, want: ${want.abilityName}`);\n  }"
        },
        {
          "type": "function",
          "name": "onRequest",
          "label": "onRequest",
          "start_line": 1,
          "end_line": 34,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "want = parameter0: Want\nstartId = parameter1: number\nthis = this: @ts_files/121.ts: ServiceExtAbility\n%0 = want.<@%unk/%unk: .abilityName>\n%1 = 'onRequest, want: ' + %0\ninstanceinvoke hilog.<@%unk/%unk: .info()>(DOMAIN_NUMBER, TAG, %1)\n%2 = want.<@%unk/%unk: .parameters>\n%3 = %2.<@%unk/%unk: .key>\nif %3 === 'ConnectFaPageAbility'",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%4 = new @ts_files/121.ts: %AC$ServiceExtAbility$onRequest$0\ninstanceinvoke %4.<@ts_files/121.ts: %AC$ServiceExtAbility$onRequest$0.constructor()>()\nwantFA = %4\n%5 = this.<@ts_files/121.ts: ServiceExtAbility.context>\n%6 = instanceinvoke %5.<@%unk/%unk: .startAbility()>(wantFA)\n%7 = instanceinvoke %6.<@%unk/%unk: .then()>(%AM1$onRequest)\ninstanceinvoke %7.<@%unk/%unk: .catch()>(%AM0$onRequest)",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "return",
                      "start_line": 52,
                      "end_line": 52,
                      "successors": []
                    }
                  ]
                },
                {
                  "type": "blockRef",
                  "label": "(RepeatedBlock)"
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "onRequest(want: Want, startId: number): void {\n    hilog.info(DOMAIN_NUMBER, TAG, `onRequest, want: ${want.abilityName}`);\n    if (want.parameters.key === 'ConnectFaPageAbility') {\n      let wantFA: Want = {\n        bundleName: 'com.samples.famodelabilitydevelop',\n        abilityName: 'com.samples.famodelabilitydevelop.MainAbility',\n      };\n      this.context.startAbility(wantFA).then(() => {\n        hilog.info(DOMAIN_NUMBER, TAG, 'Start Ability successfully.');\n      }).catch((error: BusinessError) => {\n        hilog.info(DOMAIN_NUMBER, TAG, `Ability failed: ${JSON.stringify(error)}`);\n      });\n    }\n  }"
        },
        {
          "type": "function",
          "name": "onConnect",
          "label": "onConnect",
          "start_line": 1,
          "end_line": 49,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "want = parameter0: Want\nthis = this: @ts_files/121.ts: ServiceExtAbility\n%0 = want.<@%unk/%unk: .abilityName>\n%1 = 'onConnect, want: ' + %0\ninstanceinvoke hilog.<@%unk/%unk: .info()>(DOMAIN_NUMBER, TAG, %1)\n%2 = this.<@ts_files/121.ts: ServiceExtAbility.serviceExtImpl>\n%3 = <rpc.RemoteObject>%2\nreturn %3",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "onConnect(want: Want): rpc.RemoteObject {\n    hilog.info(DOMAIN_NUMBER, TAG, `onConnect, want: ${want.abilityName}`);\n    // 返回ServiceExtImpl对象，客户端获取后便可以与ServiceExtensionAbility进行通信\n    return this.serviceExtImpl as rpc.RemoteObject;\n  }"
        },
        {
          "type": "function",
          "name": "onDisconnect",
          "label": "onDisconnect",
          "start_line": 1,
          "end_line": 55,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "want = parameter0: Want\nthis = this: @ts_files/121.ts: ServiceExtAbility\n%0 = want.<@%unk/%unk: .abilityName>\n%1 = 'onDisconnect, want: ' + %0\ninstanceinvoke hilog.<@%unk/%unk: .info()>(DOMAIN_NUMBER, TAG, %1)\nreturn",
              "start_line": 1,
              "end_line": 52,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "onDisconnect(want: Want): void {\n    hilog.info(DOMAIN_NUMBER, TAG, `onDisconnect, want: ${want.abilityName}`);\n  }"
        },
        {
          "type": "function",
          "name": "onDestroy",
          "label": "onDestroy",
          "start_line": 1,
          "end_line": 59,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/121.ts: ServiceExtAbility\ninstanceinvoke hilog.<@%unk/%unk: .info()>(DOMAIN_NUMBER, TAG, 'onDestroy')\nreturn",
              "start_line": 1,
              "end_line": 52,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "onDestroy(): void {\n    hilog.info(DOMAIN_NUMBER, TAG, 'onDestroy');\n  }"
        },
        {
          "type": "function",
          "name": "%AM0$onRequest",
          "label": "%AM0$onRequest",
          "start_line": 1,
          "end_line": 52,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "error = parameter0: BusinessError\nthis = this: @ts_files/121.ts: ServiceExtAbility\n%0 = instanceinvoke JSON.<@%unk/%unk: .stringify()>(error)\n%1 = 'Ability failed: ' + %0\ninstanceinvoke hilog.<@%unk/%unk: .info()>(DOMAIN_NUMBER, TAG, %1)\nreturn",
              "start_line": 1,
              "end_line": 52,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(error: BusinessError) => {\n        hilog.info(DOMAIN_NUMBER, TAG, `Ability failed: ${JSON.stringify(error)}`);\n      }"
        },
        {
          "type": "function",
          "name": "%AM1$onRequest",
          "label": "%AM1$onRequest",
          "start_line": 1,
          "end_line": 52,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/121.ts: ServiceExtAbility\ninstanceinvoke hilog.<@%unk/%unk: .info()>(DOMAIN_NUMBER, TAG, 'Start Ability successfully.')\nreturn",
              "start_line": 1,
              "end_line": 52,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "() => {\n        hilog.info(DOMAIN_NUMBER, TAG, 'Start Ability successfully.');\n      }"
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": "export default class ServiceExtAbility extends ServiceExtensionAbility {\n  serviceExtImpl: ServiceExtImpl = new ServiceExtImpl('ExtImpl');\n\n  onCreate(want: Want): void {\n    let serviceExtensionContext = this.context;\n    hilog.info(DOMAIN_NUMBER, TAG, `onCreate, want: ${want.abilityName}`);\n  };\n\n  onRequest(want: Want, startId: number): void {\n    hilog.info(DOMAIN_NUMBER, TAG, `onRequest, want: ${want.abilityName}`);\n    if (want.parameters.key === 'ConnectFaPageAbility') {\n      let wantFA: Want = {\n        bundleName: 'com.samples.famodelabilitydevelop',\n        abilityName: 'com.samples.famodelabilitydevelop.MainAbility',\n      };\n      this.context.startAbility(wantFA).then(() => {\n        hilog.info(DOMAIN_NUMBER, TAG, 'Start Ability successfully.');\n      }).catch((error: BusinessError) => {\n        hilog.info(DOMAIN_NUMBER, TAG, `Ability failed: ${JSON.stringify(error)}`);\n      });\n    }\n  };\n\n  onConnect(want: Want): rpc.RemoteObject {\n    hilog.info(DOMAIN_NUMBER, TAG, `onConnect, want: ${want.abilityName}`);\n    // 返回ServiceExtImpl对象，客户端获取后便可以与ServiceExtensionAbility进行通信\n    return this.serviceExtImpl as rpc.RemoteObject;\n  };\n\n  onDisconnect(want: Want): void {\n    hilog.info(DOMAIN_NUMBER, TAG, `onDisconnect, want: ${want.abilityName}`);\n  };\n\n  onDestroy(): void {\n    hilog.info(DOMAIN_NUMBER, TAG, 'onDestroy');\n  };\n}"
    },
    {
      "type": "class",
      "name": "%AC$ServiceExtAbility$onRequest$0",
      "label": "%AC$ServiceExtAbility$onRequest$0",
      "start_line": 37,
      "end_line": 37,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n        bundleName: 'com.samples.famodelabilitydevelop',\n        abilityName: 'com.samples.famodelabilitydevelop.MainAbility',\n      }"
    }
  ],
  "functions": [],
  "blocks": [],
  "simplified_code": "/*\n * Copyright (c) 2023 Huawei Device Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { BusinessError } from '@ohos.base';\nimport hilog from '@ohos.hilog';\nimport ServiceExtensionAbility from '@ohos.app.ability.ServiceExtensionAbility';\nimport ServiceExtImpl from '../IdlServiceExt/idl_service_ext_impl';\nimport type Want from '@ohos.app.ability.Want';\nimport type rpc from '@ohos.rpc';\n\nconst TAG: string = '[ServiceExtAbility]';\nconst DOMAIN_NUMBER: number = 0xFF00;\n\nexport default class ServiceExtAbility extends ServiceExtensionAbility {\n  serviceExtImpl: ServiceExtImpl = new ServiceExtImpl('ExtImpl');\n\n  onCreate(want: Want): void {\n    let serviceExtensionContext = this.context;\n    hilog.info(DOMAIN_NUMBER, TAG, `onCreate, want: ${want.abilityName}`);\n  };\n\n  onRequest(want: Want, startId: number): void {\n    hilog.info(DOMAIN_NUMBER, TAG, `onRequest, want: ${want.abilityName}`);\n    if (want.parameters.key === 'ConnectFaPageAbility') {\n      let wantFA: Want = {\n        bundleName: 'com.samples.famodelabilitydevelop',\n        abilityName: 'com.samples.famodelabilitydevelop.MainAbility',\n      };\n      this.context.startAbility(wantFA).then(() => {\n        hilog.info(DOMAIN_NUMBER, TAG, 'Start Ability successfully.');\n      }).catch((error: BusinessError) => {\n        hilog.info(DOMAIN_NUMBER, TAG, `Ability failed: ${JSON.stringify(error)}`);\n      });\n    }\n  };\n\n  onConnect(want: Want): rpc.RemoteObject {\n    hilog.info(DOMAIN_NUMBER, TAG, `onConnect, want: ${want.abilityName}`);\n    // 返回ServiceExtImpl对象，客户端获取后便可以与ServiceExtensionAbility进行通信\n    return this.serviceExtImpl as rpc.RemoteObject;\n  };\n\n  onDisconnect(want: Want): void {\n    hilog.info(DOMAIN_NUMBER, TAG, `onDisconnect, want: ${want.abilityName}`);\n  };\n\n  onDestroy(): void {\n    hilog.info(DOMAIN_NUMBER, TAG, 'onDestroy');\n  };\n};"
}