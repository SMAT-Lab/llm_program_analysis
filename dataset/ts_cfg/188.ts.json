{
  "type": "file",
  "name": "188.ts",
  "label": "188.ts",
  "start_line": -1,
  "end_line": 10,
  "classes": [
    {
      "type": "class",
      "name": "%dflt",
      "label": "%dflt",
      "start_line": -1,
      "end_line": 10,
      "functions": [
        {
          "type": "function",
          "name": "%dflt",
          "label": "%dflt",
          "start_line": -1,
          "end_line": 10,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/188.ts: %dflt\nreturn",
              "start_line": 1,
              "end_line": 10,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": ""
        },
        {
          "type": "function",
          "name": "formatToCode",
          "label": "formatToCode",
          "start_line": 1,
          "end_line": 9,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "quiz = parameter0: Quiz\nlocale = parameter1: SupportedLocale\nthis = this: @ts_files/188.ts: %dflt\n%0 = staticinvoke <@%unk/%unk: .toInfoHeader()>(quiz, locale)\n%1 = quiz.<@%unk/%unk: .readme>\n%2 = %1.<@%unk/%unk: .locale>\n%3 = quiz.<@%unk/%unk: .readme>\n%4 = %3.<@%unk/%unk: .defaultLocale>\n%5 = %2 || %4\n%6 = %0 + %5\n%7 = staticinvoke <@%unk/%unk: .toLinks()>(quiz, locale)\n%8 = %6 + %7\n%9 = staticinvoke <@%unk/%unk: .toCommentBlock()>(%8)\n%10 = staticinvoke <@%unk/%unk: .t()>(locale, 'divider.code-start')\n%11 = staticinvoke <@%unk/%unk: .toDivider()>(%10)\n%12 = %9 + %11\n%13 = quiz.<@%unk/%unk: .template>\n%14 = %13 || ''\n%15 = instanceinvoke %14.<@%unk/%unk: .trim()>()\n%16 = staticinvoke <@%unk/%unk: .t()>(locale, 'divider.test-cases')\n%17 = staticinvoke <@%unk/%unk: .toDivider()>(%16)\n%18 = quiz.<@%unk/%unk: .tests>\n%19 = %18 || ''\n%20 = instanceinvoke %19.<@%unk/%unk: .trim()>()\n%21 = staticinvoke <@%unk/%unk: .t()>(locale, 'divider.further-steps')\n%22 = staticinvoke <@%unk/%unk: .toDivider()>(%21)\n%23 = staticinvoke <@%unk/%unk: .toFooter()>(quiz, locale)\n%24 = staticinvoke <@%unk/%unk: .toCommentBlock()>(%23)\n%25 = %12 + '\\n'\n%26 = %25 + %15\n%27 = %26 + '\\n'\n%28 = %27 + %17\n%29 = %28 + %20\n%30 = %29 + '\\n'\n%31 = %30 + %22\n%32 = %31 + %24\nreturn %32",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "export function formatToCode(quiz: Quiz, locale: SupportedLocale) {\n  return `${toCommentBlock(\n    toInfoHeader(quiz, locale)\n    + (quiz.readme[locale] || quiz.readme[defaultLocale])\n    + toLinks(quiz, locale),\n  )\n  + toDivider(t(locale, 'divider.code-start'))\n  }\\n${\n    (quiz.template || '').trim()\n  }\\n${\n    toDivider(t(locale, 'divider.test-cases'))\n  }${\n    (quiz.tests || '').trim()\n  }\\n${\n    toDivider(t(locale, 'divider.further-steps'))\n  }${toCommentBlock(toFooter(quiz, locale))}`\n}"
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": ""
    }
  ],
  "functions": [],
  "blocks": [],
  "simplified_code": "import type { Quiz } from '../../types'\nimport type { SupportedLocale } from '../../locales'\nimport { defaultLocale, t } from '../../locales'\nimport { toCommentBlock } from './toCommentBlock'\nimport { toInfoHeader } from './toInfoHeader'\nimport { toLinks } from './toLinks'\nimport { toDivider } from './toDivider'\nimport { toFooter } from './toFooter'\nexport function formatToCode(quiz: Quiz, locale: SupportedLocale) {\n  return `${toCommentBlock(\n    toInfoHeader(quiz, locale)\n    + (quiz.readme[locale] || quiz.readme[defaultLocale])\n    + toLinks(quiz, locale),\n  )\n  + toDivider(t(locale, 'divider.code-start'))\n  }\\n${\n    (quiz.template || '').trim()\n  }\\n${\n    toDivider(t(locale, 'divider.test-cases'))\n  }${\n    (quiz.tests || '').trim()\n  }\\n${\n    toDivider(t(locale, 'divider.further-steps'))\n  }${toCommentBlock(toFooter(quiz, locale))}`\n}"
}