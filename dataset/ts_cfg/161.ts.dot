digraph "161.ts" {
subgraph "cluster_@ts_files/161.ts: %dflt.[static]%dflt()" {
  label="@ts_files/161.ts: %dflt.[static]%dflt()";
  Node33720 [label="id:0
      this = this: @ts_files/161.ts: %dflt
      useRow = %AM0
      return"];
}
subgraph "cluster_@ts_files/161.ts: %dflt.getCalcRows(InternalDescriptionsItemType[], number)" {
  label="@ts_files/161.ts: %dflt.getCalcRows(InternalDescriptionsItemType[], number)";
  Node70210 [label="id:0
      rowItems = parameter0: InternalDescriptionsItemType[]
      mergedColumn = parameter1: number
      this = this: @ts_files/161.ts: %dflt
      %0 = newarray (any)[0]
      rows = %0
      %1 = newarray (any)[0]
      tmpRow = %1
      exceed = false
      count = 0
      %2 = instanceinvoke rowItems.<@%unk/%unk: .filter()>(%AM3$getCalcRows)
      instanceinvoke %2.<@%unk/%unk: .forEach()>(%AM2$getCalcRows)
      %3 = tmpRow.<@%unk/%unk: .length>
      if %3 > 0"];
  Node70211 [label="id:1
      instanceinvoke rows.<@%unk/%unk: .push()>(tmpRow)"];
  Node70212 [label="id:2
      rows = instanceinvoke rows.<@%unk/%unk: .map()>(%AM4$getCalcRows)
      %4 = newarray (InternalDescriptionsItemType[][]|boolean)[2]
      %4[0] = rows
      %4[1] = exceed
      return %4"];
  Node70210 -> Node70211;
  Node70210 -> Node70212;
  Node70211 -> Node70212;
}
subgraph "cluster_@ts_files/161.ts: %dflt.%AM1$%AM0()" {
  label="@ts_files/161.ts: %dflt.%AM1$%AM0()";
  Node25680 [label="id:0
      this = this: @ts_files/161.ts: %dflt
      %0 = staticinvoke <@ts_files/161.ts: %dflt.getCalcRows(InternalDescriptionsItemType[], number)>(items, mergedColumn)
      return %0"];
}
subgraph "cluster_@ts_files/161.ts: %dflt.%AM0(number, InternalDescriptionsItemType[])" {
  label="@ts_files/161.ts: %dflt.%AM0(number, InternalDescriptionsItemType[])";
  Node61300 [label="id:0
      mergedColumn = parameter0: number
      items = parameter1: InternalDescriptionsItemType[]
      this = this: @ts_files/161.ts: %dflt
      %1 = newarray (InternalDescriptionsItemType[]|number)[2]
      %1[0] = items
      %1[1] = mergedColumn
      %0 = staticinvoke <@%unk/%unk: .useMemo()>(%AM1$%AM0, %1)
      rows = %0[0]
      exceed = %0[1]
      %2 = process.<@%unk/%unk: .env>
      %3 = %2.<@%unk/%unk: .NODE_ENV>
      if %3 !== 'production'"];
  Node61301 [label="id:1
      warning = staticinvoke <@%unk/%unk: .devUseWarning()>('Descriptions')
      %4 = !exceed
      staticinvoke <@%unk/%unk: .warning()>(%4, 'usage', 'Sum of column `span` in a line not match `column` of Descriptions.')"];
  Node61302 [label="id:2
      return rows"];
  Node61300 -> Node61301;
  Node61300 -> Node61302;
  Node61301 -> Node61302;
}
subgraph "cluster_@ts_files/161.ts: %dflt.%AM2$getCalcRows([tmpRow, rows, count, mergedColumn, exceed], unknown)" {
  label="@ts_files/161.ts: %dflt.%AM2$getCalcRows([tmpRow, rows, count, mergedColumn, exceed], unknown)";
  Node83410 [label="id:0
      %closures0 = parameter0: [tmpRow, rows, count, mergedColumn, exceed]
      rowItem = parameter1: unknown
      tmpRow = %closures0.tmpRow
      rows = %closures0.rows
      count = %closures0.count
      mergedColumn = %closures0.mergedColumn
      exceed = %closures0.exceed
      this = this: @ts_files/161.ts: %dflt
      %0 = rowItem
      filled = %0.<@%unk/%unk: .filled>
      restItem = %0.<@%unk/%unk: .restItem>
      if filled != 0"];
  Node83411 [label="id:1
      instanceinvoke tmpRow.<@%unk/%unk: .push()>(restItem)
      instanceinvoke rows.<@%unk/%unk: .push()>(tmpRow)
      %1 = newarray (any)[0]
      tmpRow = %1
      count = 0
      return"];
  Node83412 [label="id:2
      restSpan = mergedColumn - count
      %2 = rowItem.<@%unk/%unk: .span>
      count = count + %2 || 1
      if count >= mergedColumn"];
  Node83413 [label="id:3
      if count > mergedColumn"];
  Node83414 [label="id:4
      exceed = true
      %3 = new @ts_files/161.ts: %AC$%dflt$%AM2$getCalcRows$0
      instanceinvoke %3.<@ts_files/161.ts: %AC$%dflt$%AM2$getCalcRows$0.constructor()>()
      instanceinvoke tmpRow.<@%unk/%unk: .push()>(%3)"];
  Node83415 [label="id:5
      instanceinvoke tmpRow.<@%unk/%unk: .push()>(restItem)"];
  Node83416 [label="id:6
      instanceinvoke rows.<@%unk/%unk: .push()>(tmpRow)
      %4 = newarray (any)[0]
      tmpRow = %4
      count = 0"];
  Node83417 [label="id:7
      instanceinvoke tmpRow.<@%unk/%unk: .push()>(restItem)"];
  Node83418 [label="id:8
      return"];
  Node83410 -> Node83411;
  Node83410 -> Node83412;
  Node83412 -> Node83413;
  Node83412 -> Node83417;
  Node83413 -> Node83414;
  Node83413 -> Node83415;
  Node83414 -> Node83416;
  Node83415 -> Node83416;
  Node83416 -> Node83418;
  Node83417 -> Node83418;
}
subgraph "cluster_@ts_files/161.ts: %dflt.%AM3$getCalcRows(unknown)" {
  label="@ts_files/161.ts: %dflt.%AM3$getCalcRows(unknown)";
  Node42450 [label="id:0
      n = parameter0: unknown
      this = this: @ts_files/161.ts: %dflt
      return n"];
}
subgraph "cluster_@ts_files/161.ts: %dflt.%AM5$%AM4$getCalcRows(unknown, unknown)" {
  label="@ts_files/161.ts: %dflt.%AM5$%AM4$getCalcRows(unknown, unknown)";
  Node53740 [label="id:0
      acc = parameter0: unknown
      item = parameter1: unknown
      this = this: @ts_files/161.ts: %dflt
      %0 = item.<@%unk/%unk: .span>
      %1 = %0 || 1
      %2 = acc + %1
      return %2"];
}
subgraph "cluster_@ts_files/161.ts: %dflt.%AM4$getCalcRows([mergedColumn], unknown)" {
  label="@ts_files/161.ts: %dflt.%AM4$getCalcRows([mergedColumn], unknown)";
  Node57560 [label="id:0
      %closures1 = parameter0: [mergedColumn]
      rows = parameter1: unknown
      mergedColumn = %closures1.mergedColumn
      this = this: @ts_files/161.ts: %dflt
      count = instanceinvoke rows.<@%unk/%unk: .reduce()>(%AM5$%AM4$getCalcRows, 0)
      if count < mergedColumn"];
  Node57561 [label="id:1
      %0 = rows.<@%unk/%unk: .length>
      %1 = %0 - 1
      last = rows.<@%unk/%unk: .%1>
      %2 = mergedColumn - count
      %3 = %2 + 1
      last.<@%unk/%unk: .span> = %3
      return rows"];
  Node57562 [label="id:2
      return rows"];
  Node57560 -> Node57561;
  Node57560 -> Node57562;
}
}
