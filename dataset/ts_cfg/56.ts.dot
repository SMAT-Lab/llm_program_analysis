digraph "56.ts" {
subgraph "cluster_@ts_files/56.ts: %dflt.[static]%dflt()" {
  label="@ts_files/56.ts: %dflt.[static]%dflt()";
  Node33270 [label="id:0
      this = this: @ts_files/56.ts: %dflt
      TAG = 'DateUtil'
      return"];
}
subgraph "cluster_@ts_files/56.ts: DateUtil.%AM0$format(number, string)" {
  label="@ts_files/56.ts: DateUtil.%AM0$format(number, string)";
  Node46650 [label="id:0
      value = parameter0: number
      key = parameter1: string
      this = this: @ts_files/56.ts: DateUtil
      %0 = new @%unk/%unk: RegExp
      %1 = '(' + key
      %2 = %1 + ')'
      instanceinvoke %0.<@%unk/%unk: RegExp.constructor()>(%2)
      %3 = instanceinvoke %0.<@%unk/%unk: .test()>(format_s)
      if %3 != 0"];
  Node46651 [label="id:1
      %4 = key.<@%unk/%unk: .length>
      if %4 === 1
      %5 = instanceinvoke value.<@%unk/%unk: .toString()>()
      %6 = instanceinvoke value.<@%unk/%unk: .toString()>()
      %7 = %6.<@%unk/%unk: .length>
      %8 = '00' + value
      %5 = instanceinvoke %8.<@%unk/%unk: .substr()>(%7)
      format_s = instanceinvoke format_s.<@%unk/%unk: .replace()>(key, %5)"];
  Node46652 [label="id:2
      return"];
  Node46650 -> Node46651;
  Node46650 -> Node46652;
  Node46651 -> Node46652;
}
subgraph "cluster_@ts_files/56.ts: DateUtil.%AM1$formats(number, string)" {
  label="@ts_files/56.ts: DateUtil.%AM1$formats(number, string)";
  Node47810 [label="id:0
      value = parameter0: number
      key = parameter1: string
      this = this: @ts_files/56.ts: DateUtil
      %0 = new @%unk/%unk: RegExp
      %1 = '(' + key
      %2 = %1 + ')'
      instanceinvoke %0.<@%unk/%unk: RegExp.constructor()>(%2)
      %3 = instanceinvoke %0.<@%unk/%unk: .test()>(format)
      if %3 != 0"];
  Node47811 [label="id:1
      %4 = key.<@%unk/%unk: .length>
      if %4 === 1
      %5 = instanceinvoke value.<@%unk/%unk: .toString()>()
      %6 = instanceinvoke value.<@%unk/%unk: .toString()>()
      %7 = %6.<@%unk/%unk: .length>
      %8 = '00' + value
      %5 = instanceinvoke %8.<@%unk/%unk: .substr()>(%7)
      format = instanceinvoke format.<@%unk/%unk: .replace()>(key, %5)"];
  Node47812 [label="id:2
      return"];
  Node47810 -> Node47811;
  Node47810 -> Node47812;
  Node47811 -> Node47812;
}
subgraph "cluster_@ts_files/56.ts: DateUtil.[static]initLanguageLocalesMap()" {
  label="@ts_files/56.ts: DateUtil.[static]initLanguageLocalesMap()";
  Node54300 [label="id:0
      this = this: @ts_files/56.ts: DateUtil
      %0 = @ts_files/56.ts: DateUtil.[static]LANGUAGE_LOCALES_MAP
      if %0 == null"];
  Node54301 [label="id:1
      %1 = new @%unk/%unk: Map<string,string>
      instanceinvoke %1.<@%unk/%unk: Map.constructor()>()
      @ts_files/56.ts: DateUtil.[static]LANGUAGE_LOCALES_MAP = %1
      %2 = @ts_files/56.ts: DateUtil.[static]LANGUAGE_LOCALES_MAP
      instanceinvoke %2.<@%unk/%unk: .set()>('zh', 'zh-CN')
      %3 = @ts_files/56.ts: DateUtil.[static]LANGUAGE_LOCALES_MAP
      instanceinvoke %3.<@%unk/%unk: .set()>('en', 'en-US')"];
  Node54302 [label="id:2
      return"];
  Node54300 -> Node54301;
  Node54300 -> Node54302;
  Node54301 -> Node54302;
}
subgraph "cluster_@ts_files/56.ts: DateUtil.[static]getLocalizedDate(number)" {
  label="@ts_files/56.ts: DateUtil.[static]getLocalizedDate(number)";
  Node54670 [label="id:0
      milliseconds = parameter0: number
      this = this: @ts_files/56.ts: DateUtil
      locales = staticinvoke <@ts_files/56.ts: DateUtil.[static]getLocales()>()
      %0 = new @%unk/%unk: Date
      instanceinvoke %0.<@%unk/%unk: Date.constructor()>(milliseconds)
      %1 = new @%unk/%unk: Intl.DateTimeFormat
      %2 = staticinvoke <@ts_files/56.ts: DateUtil.[static]buildDateTimeOpt(string, string, string, string, string)>('numeric', 'long', 'numeric', '', '')
      instanceinvoke %1.<@%unk/%unk: Intl.DateTimeFormat.constructor()>(locales, %2)
      %3 = instanceinvoke %1.<@%unk/%unk: .format()>(%0)
      return %3"];
}
subgraph "cluster_@ts_files/56.ts: DateUtil.[static]format(Date, string)" {
  label="@ts_files/56.ts: DateUtil.[static]format(Date, string)";
  Node49670 [label="id:0
      time = parameter0: Date
      format_s = parameter1: string
      this = this: @ts_files/56.ts: DateUtil
      %0 = staticinvoke <@%unk/%unk: .Boolean()>(format_s)
      %1 = instanceinvoke %0.<@%unk/%unk: .valueOf()>()
      %2 = !%1
      if %2 != 0"];
  Node49671 [label="id:1
      %3 = instanceinvoke time.<@%unk/%unk: .valueOf()>()
      %4 = instanceinvoke %3.<@%unk/%unk: .toString()>()
      return %4"];
  Node49672 [label="id:2
      %5 = new @%unk/%unk: Map<string,number>
      instanceinvoke %5.<@%unk/%unk: Map.constructor()>()
      opts = %5
      %6 = instanceinvoke time.<@%unk/%unk: .getMonth()>()
      %7 = %6 + 1
      instanceinvoke opts.<@%unk/%unk: .set()>('MM', %7)
      %8 = instanceinvoke time.<@%unk/%unk: .getDate()>()
      instanceinvoke opts.<@%unk/%unk: .set()>('dd', %8)
      %9 = instanceinvoke time.<@%unk/%unk: .getHours()>()
      instanceinvoke opts.<@%unk/%unk: .set()>('HH', %9)
      %10 = instanceinvoke time.<@%unk/%unk: .getMinutes()>()
      instanceinvoke opts.<@%unk/%unk: .set()>('mm', %10)
      %11 = instanceinvoke time.<@%unk/%unk: .getSeconds()>()
      instanceinvoke opts.<@%unk/%unk: .set()>('ss', %11)
      %12 = new @%unk/%unk: RegExp
      instanceinvoke %12.<@%unk/%unk: RegExp.constructor()>('/(y+)/')
      check = %12
      %13 = instanceinvoke check.<@%unk/%unk: .test()>(format_s)
      if %13 != 0"];
  Node49673 [label="id:3
      %14 = instanceinvoke time.<@%unk/%unk: .getFullYear()>()
      %15 = instanceinvoke %14.<@%unk/%unk: .toString()>()
      %16 = instanceinvoke %15.<@%unk/%unk: .substr()>(0)
      format_s = instanceinvoke format_s.<@%unk/%unk: .replace()>('yyyy', %16)"];
  Node49674 [label="id:4
      instanceinvoke opts.<@%unk/%unk: .forEach()>(%AM0$format)
      return format_s"];
  Node49670 -> Node49671;
  Node49670 -> Node49672;
  Node49672 -> Node49673;
  Node49672 -> Node49674;
  Node49673 -> Node49674;
}
subgraph "cluster_@ts_files/56.ts: DateUtil.[static]getDateTimeFormat(number)" {
  label="@ts_files/56.ts: DateUtil.[static]getDateTimeFormat(number)";
  Node55640 [label="id:0
      milliseconds = parameter0: number
      this = this: @ts_files/56.ts: DateUtil
      %0 = new @%unk/%unk: Date
      instanceinvoke %0.<@%unk/%unk: Date.constructor()>(milliseconds)
      %1 = staticinvoke <@ts_files/56.ts: DateUtil.[static]format(Date, string)>(%0, 'yyyy/MM/dd HH:mm:ss')
      return %1"];
}
subgraph "cluster_@ts_files/56.ts: DateUtil.[static]getGroupDataLocalizedDate(number)" {
  label="@ts_files/56.ts: DateUtil.[static]getGroupDataLocalizedDate(number)";
  Node63700 [label="id:0
      milliseconds = parameter0: number
      this = this: @ts_files/56.ts: DateUtil
      %0 = new @%unk/%unk: Date
      instanceinvoke %0.<@%unk/%unk: Date.constructor()>(milliseconds)
      date = %0
      %1 = new @%unk/%unk: Date
      instanceinvoke %1.<@%unk/%unk: Date.constructor()>()
      today = %1
      %2 = instanceinvoke date.<@%unk/%unk: .getFullYear()>()
      %3 = instanceinvoke today.<@%unk/%unk: .getFullYear()>()
      %4 = %2 === %3
      %5 = instanceinvoke date.<@%unk/%unk: .getMonth()>()
      %6 = instanceinvoke today.<@%unk/%unk: .getMonth()>()
      %7 = %5 === %6
      %8 = %4 && %7
      if %8 != false"];
  Node63701 [label="id:1
      %9 = instanceinvoke date.<@%unk/%unk: .getDate()>()
      %10 = instanceinvoke today.<@%unk/%unk: .getDate()>()
      if %9 === %10"];
  Node63702 [label="id:2
      %11 = staticinvoke <@%unk/%unk: .$r()>('app.string.date_today')
      return %11"];
  Node63703 [label="id:3
      %12 = instanceinvoke today.<@%unk/%unk: .getDate()>()
      %13 = instanceinvoke date.<@%unk/%unk: .getDate()>()
      %14 = %12 - %13
      if %14 === 1"];
  Node63704 [label="id:4
      %15 = staticinvoke <@%unk/%unk: .$r()>('app.string.date_yesterday')
      return %15"];
  Node63705 [label="id:5
      %16 = staticinvoke <@ts_files/56.ts: DateUtil.[static]getLocalizedDate(number)>(milliseconds)
      %17 = staticinvoke <@%unk/%unk: .$r()>('app.string.common_place_holder', %16)
      return %17"];
  Node63700 -> Node63701;
  Node63700 -> Node63705;
  Node63701 -> Node63702;
  Node63701 -> Node63703;
  Node63703 -> Node63704;
  Node63703 -> Node63705;
}
subgraph "cluster_@ts_files/56.ts: DateUtil.[static]getLocalizedYear(number)" {
  label="@ts_files/56.ts: DateUtil.[static]getLocalizedYear(number)";
  Node54860 [label="id:0
      milliseconds = parameter0: number
      this = this: @ts_files/56.ts: DateUtil
      locales = staticinvoke <@ts_files/56.ts: DateUtil.[static]getLocales()>()
      %0 = new @%unk/%unk: Date
      instanceinvoke %0.<@%unk/%unk: Date.constructor()>(milliseconds)
      %1 = new @%unk/%unk: Intl.DateTimeFormat
      %2 = staticinvoke <@ts_files/56.ts: DateUtil.[static]buildDateTimeOpt(string, string, string, string, string)>('numeric', '', '', '', '')
      instanceinvoke %1.<@%unk/%unk: Intl.DateTimeFormat.constructor()>(locales, %2)
      yearText = instanceinvoke %1.<@%unk/%unk: .format()>(%0)
      %3 = instanceinvoke yearText.<@%unk/%unk: .toString()>()
      %4 = staticinvoke <@%unk/%unk: .$r()>('app.string.common_place_holder', %3)
      return %4"];
}
subgraph "cluster_@ts_files/56.ts: DateUtil.[static]getLocalizedYearAndMonth(number)" {
  label="@ts_files/56.ts: DateUtil.[static]getLocalizedYearAndMonth(number)";
  Node62790 [label="id:0
      milliseconds = parameter0: number
      this = this: @ts_files/56.ts: DateUtil
      locales = staticinvoke <@ts_files/56.ts: DateUtil.[static]getLocales()>()
      %0 = new @%unk/%unk: Date
      instanceinvoke %0.<@%unk/%unk: Date.constructor()>(milliseconds)
      %1 = new @%unk/%unk: Intl.DateTimeFormat
      %2 = staticinvoke <@ts_files/56.ts: DateUtil.[static]buildDateTimeOpt(string, string, string, string, string)>('numeric', 'long', '', '', '')
      instanceinvoke %1.<@%unk/%unk: Intl.DateTimeFormat.constructor()>(locales, %2)
      %3 = instanceinvoke %1.<@%unk/%unk: .format()>(%0)
      return %3"];
}
subgraph "cluster_@ts_files/56.ts: DateUtil.[static]getLocalizedYearString(number)" {
  label="@ts_files/56.ts: DateUtil.[static]getLocalizedYearString(number)";
  Node61170 [label="id:0
      milliseconds = parameter0: number
      this = this: @ts_files/56.ts: DateUtil
      locales = staticinvoke <@ts_files/56.ts: DateUtil.[static]getLocales()>()
      %0 = new @%unk/%unk: Date
      instanceinvoke %0.<@%unk/%unk: Date.constructor()>(milliseconds)
      %1 = new @%unk/%unk: Intl.DateTimeFormat
      %2 = staticinvoke <@ts_files/56.ts: DateUtil.[static]buildDateTimeOpt(string, string, string, string, string)>('numeric', '', '', '', '')
      instanceinvoke %1.<@%unk/%unk: Intl.DateTimeFormat.constructor()>(locales, %2)
      %3 = instanceinvoke %1.<@%unk/%unk: .format()>(%0)
      %4 = instanceinvoke %3.<@%unk/%unk: .toString()>()
      return %4"];
}
subgraph "cluster_@ts_files/56.ts: DateUtil.[static]getLocalizedTime(number)" {
  label="@ts_files/56.ts: DateUtil.[static]getLocalizedTime(number)";
  Node54840 [label="id:0
      milliseconds = parameter0: number
      this = this: @ts_files/56.ts: DateUtil
      locales = staticinvoke <@ts_files/56.ts: DateUtil.[static]getLocales()>()
      is24HourClock = instanceinvoke i18n.<@%unk/%unk: .is24HourClock()>()
      %0 = 'get is24HourClock ' + is24HourClock
      instanceinvoke Log.<@%unk/%unk: .info()>(TAG, %0)
      %1 = new @%unk/%unk: Date
      instanceinvoke %1.<@%unk/%unk: Date.constructor()>(milliseconds)
      %2 = new @%unk/%unk: Intl.DateTimeFormat
      %3 = staticinvoke <@%unk/%unk: .Boolean()>(is24HourClock)
      %4 = instanceinvoke %3.<@%unk/%unk: .valueOf()>()
      %5 = !%4
      if %5 != 0
      %6 = '2-digit'
      %6 = 'numeric'
      %7 = staticinvoke <@ts_files/56.ts: DateUtil.[static]buildDateTimeOpt(string, string, string, string, string)>('', '', '', %6, '2-digit')
      instanceinvoke %2.<@%unk/%unk: Intl.DateTimeFormat.constructor()>(locales, %7)
      %8 = instanceinvoke %2.<@%unk/%unk: .format()>(%1)
      return %8"];
}
subgraph "cluster_@ts_files/56.ts: DateUtil.[static]getLocales()" {
  label="@ts_files/56.ts: DateUtil.[static]getLocales()";
  Node42240 [label="id:0
      this = this: @ts_files/56.ts: DateUtil
      staticinvoke <@ts_files/56.ts: DateUtil.[static]initLanguageLocalesMap()>()
      %0 = instanceinvoke i18n.<@%unk/%unk: .getSystemLanguage()>()
      systemLocale = instanceinvoke %0.<@%unk/%unk: .toString()>()
      %1 = instanceinvoke systemLocale.<@%unk/%unk: .split()>('-')
      language = %1.<@%unk/%unk: .0>
      %2 = @ts_files/56.ts: DateUtil.[static]LANGUAGE_LOCALES_MAP
      locales = instanceinvoke %2.<@%unk/%unk: .get()>('en')
      %3 = @ts_files/56.ts: DateUtil.[static]LANGUAGE_LOCALES_MAP
      %4 = instanceinvoke %3.<@%unk/%unk: .has()>(language)
      if %4 != 0"];
  Node42241 [label="id:1
      %5 = @ts_files/56.ts: DateUtil.[static]LANGUAGE_LOCALES_MAP
      locales = instanceinvoke %5.<@%unk/%unk: .get()>(language)"];
  Node42242 [label="id:2
      return locales"];
  Node42240 -> Node42241;
  Node42240 -> Node42242;
  Node42241 -> Node42242;
}
subgraph "cluster_@ts_files/56.ts: DateUtil.[static]getFormattedDuration(number)" {
  label="@ts_files/56.ts: DateUtil.[static]getFormattedDuration(number)";
  Node59380 [label="id:0
      milliSecond = parameter0: number
      this = this: @ts_files/56.ts: DateUtil
      if milliSecond == null"];
  Node59381 [label="id:1
      instanceinvoke Log.<@%unk/%unk: .warn()>(TAG, 'getFormattedDuration, input is null!')
      return '00:00'"];
  Node59382 [label="id:2
      if milliSecond <= 0"];
  Node59383 [label="id:3
      instanceinvoke Log.<@%unk/%unk: .warn()>(TAG, 'getFormattedDuration, input is negative number!')
      return '00:00'"];
  Node59384 [label="id:4
      %0 = @ts_files/56.ts: DateUtil.[static]MILLISECONDS_PER_SECOND
      if milliSecond < %0"];
  Node59385 [label="id:5
      return '00:01'"];
  Node59386 [label="id:6
      %1 = @ts_files/56.ts: DateUtil.[static]MILLISECONDS_PER_SECOND
      %2 = milliSecond / %1
      seconds = instanceinvoke Math.<@%unk/%unk: .floor()>(%2)
      %3 = @ts_files/56.ts: DateUtil.[static]SECONDS_PER_HOUR
      %4 = seconds / %3
      hourTime = instanceinvoke Math.<@%unk/%unk: .floor()>(%4)
      %5 = @ts_files/56.ts: DateUtil.[static]SECONDS_PER_MINUTE
      %6 = seconds / %5
      %7 = instanceinvoke Math.<@%unk/%unk: .floor()>(%6)
      %8 = @ts_files/56.ts: DateUtil.[static]SECONDS_PER_MINUTE
      %9 = %7 % %8
      minuteTime = instanceinvoke Math.<@%unk/%unk: .floor()>(%9)
      %10 = @ts_files/56.ts: DateUtil.[static]SECONDS_PER_MINUTE
      %11 = seconds % %10
      secondTime = instanceinvoke Math.<@%unk/%unk: .floor()>(%11)
      if hourTime > 0"];
  Node59387 [label="id:7
      %12 = hourTime + ':'
      %13 = staticinvoke <@ts_files/56.ts: DateUtil.[static]checkTime(number)>(minuteTime)
      %14 = %12 + %13
      %15 = %14 + ':'
      %16 = staticinvoke <@ts_files/56.ts: DateUtil.[static]checkTime(number)>(secondTime)
      %17 = %15 + %16
      return %17"];
  Node59388 [label="id:8
      %18 = staticinvoke <@ts_files/56.ts: DateUtil.[static]checkTime(number)>(minuteTime)
      %19 = %18 + ':'
      %20 = staticinvoke <@ts_files/56.ts: DateUtil.[static]checkTime(number)>(secondTime)
      %21 = %19 + %20
      return %21"];
  Node59380 -> Node59381;
  Node59380 -> Node59382;
  Node59382 -> Node59383;
  Node59382 -> Node59384;
  Node59384 -> Node59385;
  Node59384 -> Node59386;
  Node59386 -> Node59387;
  Node59386 -> Node59388;
}
subgraph "cluster_@ts_files/56.ts: DateUtil.[static]checkTime(number)" {
  label="@ts_files/56.ts: DateUtil.[static]checkTime(number)";
  Node47550 [label="id:0
      time = parameter0: number
      this = this: @ts_files/56.ts: DateUtil
      if time < 0"];
  Node47551 [label="id:1
      instanceinvoke Log.<@%unk/%unk: .warn()>(TAG, 'checkTime, input is negative number!')
      return '00'"];
  Node47552 [label="id:2
      formatTime = instanceinvoke time.<@%unk/%unk: .toString()>()
      %0 = @ts_files/56.ts: DateUtil.[static]FORMAT_DECIMAL
      if time < %0"];
  Node47553 [label="id:3
      zeroString = '0'
      formatTime = instanceinvoke zeroString.<@%unk/%unk: .concat()>(formatTime)"];
  Node47554 [label="id:4
      return formatTime"];
  Node47550 -> Node47551;
  Node47550 -> Node47552;
  Node47552 -> Node47553;
  Node47552 -> Node47554;
  Node47553 -> Node47554;
}
subgraph "cluster_@ts_files/56.ts: DateUtil.[static]isTheSameDay(number, number)" {
  label="@ts_files/56.ts: DateUtil.[static]isTheSameDay(number, number)";
  Node57560 [label="id:0
      startTime = parameter0: number
      endTime = parameter1: number
      this = this: @ts_files/56.ts: DateUtil
      %0 = startTime == null
      %1 = endTime == null
      %2 = %0 || %1
      if %2 != false"];
  Node57561 [label="id:1
      return false"];
  Node57562 [label="id:2
      %3 = new @%unk/%unk: Date
      instanceinvoke %3.<@%unk/%unk: Date.constructor()>(startTime)
      startTimeMs = instanceinvoke %3.<@%unk/%unk: .setHours()>(0, 0, 0, 0)
      %4 = new @%unk/%unk: Date
      instanceinvoke %4.<@%unk/%unk: Date.constructor()>(endTime)
      endTimeMs = instanceinvoke %4.<@%unk/%unk: .setHours()>(0, 0, 0, 0)
      if startTimeMs === endTimeMs
      %5 = true
      %5 = false
      return %5"];
  Node57560 -> Node57561;
  Node57560 -> Node57562;
}
subgraph "cluster_@ts_files/56.ts: DateUtil.[static]isTheSameYear(number, number)" {
  label="@ts_files/56.ts: DateUtil.[static]isTheSameYear(number, number)";
  Node58710 [label="id:0
      startTime = parameter0: number
      endTime = parameter1: number
      this = this: @ts_files/56.ts: DateUtil
      %0 = startTime == null
      %1 = endTime == null
      %2 = %0 || %1
      if %2 != false"];
  Node58711 [label="id:1
      return false"];
  Node58712 [label="id:2
      %3 = new @%unk/%unk: Date
      instanceinvoke %3.<@%unk/%unk: Date.constructor()>(startTime)
      startYear = instanceinvoke %3.<@%unk/%unk: .getFullYear()>()
      %4 = new @%unk/%unk: Date
      instanceinvoke %4.<@%unk/%unk: Date.constructor()>(endTime)
      endYear = instanceinvoke %4.<@%unk/%unk: .getFullYear()>()
      if startYear === endYear
      %5 = true
      %5 = false
      return %5"];
  Node58710 -> Node58711;
  Node58710 -> Node58712;
}
subgraph "cluster_@ts_files/56.ts: DateUtil.[static]buildDateTimeOpt(string, string, string, string, string)" {
  label="@ts_files/56.ts: DateUtil.[static]buildDateTimeOpt(string, string, string, string, string)";
  Node84320 [label="id:0
      year = parameter0: string
      month = parameter1: string
      day = parameter2: string
      hour = parameter3: string
      minute = parameter4: string
      this = this: @ts_files/56.ts: DateUtil
      %0 = new @ts_files/56.ts: %AC$DateUtil$buildDateTimeOpt$0
      instanceinvoke %0.<@ts_files/56.ts: %AC$DateUtil$buildDateTimeOpt$0.constructor()>()
      obj = %0
      return obj"];
}
subgraph "cluster_@ts_files/56.ts: DateUtil.[static]formats(string)" {
  label="@ts_files/56.ts: DateUtil.[static]formats(string)";
  Node46240 [label="id:0
      format = parameter0: string
      this = this: @ts_files/56.ts: DateUtil
      %0 = new @%unk/%unk: Date
      instanceinvoke %0.<@%unk/%unk: Date.constructor()>()
      time = %0
      %1 = staticinvoke <@%unk/%unk: .Boolean()>(format)
      %2 = instanceinvoke %1.<@%unk/%unk: .valueOf()>()
      %3 = !%2
      if %3 != 0"];
  Node46241 [label="id:1
      %4 = instanceinvoke time.<@%unk/%unk: .valueOf()>()
      %5 = instanceinvoke %4.<@%unk/%unk: .toString()>()
      return %5"];
  Node46242 [label="id:2
      %6 = new @%unk/%unk: Map<string,number>
      instanceinvoke %6.<@%unk/%unk: Map.constructor()>()
      opts = %6
      %7 = instanceinvoke time.<@%unk/%unk: .getMonth()>()
      %8 = %7 + 1
      instanceinvoke opts.<@%unk/%unk: .set()>('MM', %8)
      %9 = instanceinvoke time.<@%unk/%unk: .getDate()>()
      instanceinvoke opts.<@%unk/%unk: .set()>('dd', %9)
      %10 = instanceinvoke time.<@%unk/%unk: .getHours()>()
      instanceinvoke opts.<@%unk/%unk: .set()>('HH', %10)
      %11 = instanceinvoke time.<@%unk/%unk: .getMinutes()>()
      instanceinvoke opts.<@%unk/%unk: .set()>('mm', %11)
      %12 = instanceinvoke time.<@%unk/%unk: .getSeconds()>()
      instanceinvoke opts.<@%unk/%unk: .set()>('ss', %12)
      %13 = new @%unk/%unk: RegExp
      instanceinvoke %13.<@%unk/%unk: RegExp.constructor()>('/(y+)/')
      %14 = instanceinvoke %13.<@%unk/%unk: .test()>(format)
      if %14 != 0"];
  Node46243 [label="id:3
      %15 = instanceinvoke time.<@%unk/%unk: .getFullYear()>()
      %16 = instanceinvoke %15.<@%unk/%unk: .toString()>()
      %17 = instanceinvoke %16.<@%unk/%unk: .substr()>(0)
      format = instanceinvoke format.<@%unk/%unk: .replace()>('yyyy', %17)"];
  Node46244 [label="id:4
      instanceinvoke opts.<@%unk/%unk: .forEach()>(%AM1$formats)
      return format"];
  Node46240 -> Node46241;
  Node46240 -> Node46242;
  Node46242 -> Node46243;
  Node46242 -> Node46244;
  Node46243 -> Node46244;
}
subgraph "cluster_@ts_files/56.ts: DateUtil.[static]nameByDate(Boolean, string)" {
  label="@ts_files/56.ts: DateUtil.[static]nameByDate(Boolean, string)";
  Node56260 [label="id:0
      isReplace = parameter0: Boolean
      name = parameter1: string
      this = this: @ts_files/56.ts: DateUtil
      %0 = isReplace != null
      %1 = isReplace === true
      %2 = %0 && %1
      if %2 != false"];
  Node56261 [label="id:1
      %3 = staticinvoke <@%unk/%unk: .Boolean()>(name)
      %4 = instanceinvoke %3.<@%unk/%unk: .valueOf()>()
      %5 = !%4
      if %5 != 0
      %6 = null
      %7 = @ts_files/56.ts: DateUtil.[static]NEW_NAME_EDIT
      %8 = instanceinvoke name.<@%unk/%unk: .indexOf()>(%7)
      %9 = -1
      if %8 === %9
      %10 = instanceinvoke name.<@%unk/%unk: .split()>('.')
      %11 = %10.<@%unk/%unk: .0>
      %12 = %11 + '_'
      %13 = @ts_files/56.ts: DateUtil.[static]NEW_NAME_EDIT
      %14 = %12 + %13
      %15 = staticinvoke <@ts_files/56.ts: DateUtil.[static]formats(string)>()
      %16 = %14 + %15
      %17 = instanceinvoke name.<@%unk/%unk: .split()>('.')
      %16 = %17.<@%unk/%unk: .0>
      %6 = %16
      return %6"];
  Node56262 [label="id:2
      %18 = @ts_files/56.ts: DateUtil.[static]NEW_NAME_IMG
      %19 = staticinvoke <@ts_files/56.ts: DateUtil.[static]formats(string)>('yyyyMMdd_HHmmss')
      %20 = %18 + %19
      return %20"];
  Node56260 -> Node56261;
  Node56260 -> Node56262;
}
}
