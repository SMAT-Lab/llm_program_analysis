{
  "type": "file",
  "name": "16.ts",
  "label": "16.ts",
  "start_line": -1,
  "end_line": 91,
  "classes": [
    {
      "type": "class",
      "name": "%dflt",
      "label": "%dflt",
      "start_line": -1,
      "end_line": 1,
      "functions": [
        {
          "type": "function",
          "name": "%dflt",
          "label": "%dflt",
          "start_line": -1,
          "end_line": 1,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/16.ts: %dflt\nmCallerUid = 0\nmMaxSelectCount = 0\nmFilterMediaType = MediaConstants.<@%unk/%unk: .SELECT_TYPE_ALL>\nappBroadcast = instanceinvoke broadcastManager.<@%unk/%unk: .getBroadcast()>()\npagePath = 'pages/Index'\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": ""
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": ""
    },
    {
      "type": "class",
      "name": "EntryAbility",
      "label": "EntryAbility",
      "start_line": 1,
      "end_line": 91,
      "functions": [
        {
          "type": "function",
          "name": "onCreate",
          "label": "onCreate",
          "start_line": 1,
          "end_line": 51,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "want = parameter0: Want\nlaunchParam = parameter1: unknown\nthis = this: @ts_files/16.ts: EntryAbility\n%0 = this.<@ts_files/16.ts: EntryAbility.TAG>\ninstanceinvoke Log.<@%unk/%unk: .info()>(%0, 'Application onCreate')\n%1 = this.<@ts_files/16.ts: EntryAbility.context>\n%2 = instanceinvoke GlobalContext.<@%unk/%unk: .getContext()>()\ninstanceinvoke %2.<@%unk/%unk: .setObject()>('appContext', %1)\n%3 = this.<@ts_files/16.ts: EntryAbility.context>\ninstanceinvoke userFileModel.<@%unk/%unk: .onCreate()>(%3)\nmFilterMediaType = MediaConstants.<@%unk/%unk: .SELECT_TYPE_ALL>\n%4 = Constants.<@%unk/%unk: .ENTRY_FROM_HAP>\n%5 = Constants.<@%unk/%unk: .ENTRY_FROM_NONE>\ninstanceinvoke AppStorage.<@%unk/%unk: .SetOrCreate()>(%4, %5)\n%6 = this.<@ts_files/16.ts: EntryAbility.TAG>\ninstanceinvoke Log.<@%unk/%unk: .info()>(%6, 'Application onCreate end')\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "onCreate(want: Want, launchParam): void {\n    Log.info(this.TAG, 'Application onCreate');\n    // Ability is creating, initialize resources for this ability\n    GlobalContext.getContext().setObject('appContext', this.context);\n    userFileModel.onCreate(this.context);\n    mFilterMediaType = MediaConstants.SELECT_TYPE_ALL;\n    AppStorage.SetOrCreate<number>(Constants.ENTRY_FROM_HAP, Constants.ENTRY_FROM_NONE);\n    Log.info(this.TAG, 'Application onCreate end');\n  }"
        },
        {
          "type": "function",
          "name": "onNewWant",
          "label": "onNewWant",
          "start_line": 1,
          "end_line": 61,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "want = parameter0: Want\nthis = this: @ts_files/16.ts: EntryAbility\n%0 = Constants.<@%unk/%unk: .ENTRY_FROM_HAP>\n%1 = Constants.<@%unk/%unk: .ENTRY_FROM_NONE>\ninstanceinvoke AppStorage.<@%unk/%unk: .SetOrCreate()>(%0, %1)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "onNewWant(want: Want): void {\n    AppStorage.SetOrCreate<number>(Constants.ENTRY_FROM_HAP, Constants.ENTRY_FROM_NONE);\n  }"
        },
        {
          "type": "function",
          "name": "onDestroy",
          "label": "onDestroy",
          "start_line": 1,
          "end_line": 65,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/16.ts: EntryAbility\n%0 = this.<@ts_files/16.ts: EntryAbility.TAG>\ninstanceinvoke Log.<@%unk/%unk: .info()>(%0, 'Application onDestroy')\n%1 = Constants.<@%unk/%unk: .ENTRY_FROM_HAP>\ninstanceinvoke AppStorage.<@%unk/%unk: .Delete()>(%1)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "onDestroy(): void {\n    // Ability is creating, release resources for this ability\n    Log.info(this.TAG, 'Application onDestroy');\n    AppStorage.Delete(Constants.ENTRY_FROM_HAP);\n  }"
        },
        {
          "type": "function",
          "name": "onWindowStageCreate",
          "label": "onWindowStageCreate",
          "start_line": 1,
          "end_line": 71,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "windowStage = parameter0: unknown\nthis = this: @ts_files/16.ts: EntryAbility\n%0 = this.<@ts_files/16.ts: EntryAbility.TAG>\ninstanceinvoke Log.<@%unk/%unk: .info()>(%0, 'Application onWindowStageCreate')\n%1 = instanceinvoke GlobalContext.<@%unk/%unk: .getContext()>()\ninstanceinvoke %1.<@%unk/%unk: .setObject()>('photosWindowStage', windowStage)\n%2 = instanceinvoke windowStage.<@%unk/%unk: .getMainWindow()>()\ninstanceinvoke %2.<@%unk/%unk: .then()>(%AM0$onWindowStageCreate)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "onWindowStageCreate(windowStage): void {\n    // Main window is created, set main page for this ability\n    Log.info(this.TAG, 'Application onWindowStageCreate');\n    GlobalContext.getContext().setObject('photosWindowStage', windowStage);\n    windowStage.getMainWindow().then((win: window.Window): void => {\n      AppStorage.SetOrCreate<window.Window>(Constants.MAIN_WINDOW, win);\n      screenManager.initializationSize(win).then<void, void>((): void => {\n        windowStage.setUIContent(this.context, pagePath, null);\n      }).catch<void>((): void => {\n        Log.error(this.TAG, 'get device screen info failed.');\n      });\n    });\n  }"
        },
        {
          "type": "function",
          "name": "onWindowStageDestroy",
          "label": "onWindowStageDestroy",
          "start_line": 1,
          "end_line": 85,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/16.ts: EntryAbility\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "onWindowStageDestroy(): void {\n  }"
        },
        {
          "type": "function",
          "name": "onForeground",
          "label": "onForeground",
          "start_line": 1,
          "end_line": 88,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/16.ts: EntryAbility\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "onForeground(): void {\n  }"
        },
        {
          "type": "function",
          "name": "onBackground",
          "label": "onBackground",
          "start_line": 1,
          "end_line": 91,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/16.ts: EntryAbility\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "onBackground(): void {\n  }"
        },
        {
          "type": "function",
          "name": "%AM1$%AM0$onWindowStageCreate",
          "label": "%AM1$%AM0$onWindowStageCreate",
          "start_line": 1,
          "end_line": 79,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/16.ts: EntryAbility\n%0 = this.<@ts_files/16.ts: EntryAbility.TAG>\ninstanceinvoke Log.<@%unk/%unk: .error()>(%0, 'get device screen info failed.')\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(): void => {\n        Log.error(this.TAG, 'get device screen info failed.');\n      }"
        },
        {
          "type": "function",
          "name": "%AM2$%AM0$onWindowStageCreate",
          "label": "%AM2$%AM0$onWindowStageCreate",
          "start_line": 1,
          "end_line": 77,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/16.ts: EntryAbility\n%0 = this.<@ts_files/16.ts: EntryAbility.context>\ninstanceinvoke windowStage.<@%unk/%unk: .setUIContent()>(%0, pagePath, null)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(): void => {\n        windowStage.setUIContent(this.context, pagePath, null);\n      }"
        },
        {
          "type": "function",
          "name": "%AM0$onWindowStageCreate",
          "label": "%AM0$onWindowStageCreate",
          "start_line": 1,
          "end_line": 75,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "win = parameter0: window.Window\nthis = this: @ts_files/16.ts: EntryAbility\n%0 = Constants.<@%unk/%unk: .MAIN_WINDOW>\ninstanceinvoke AppStorage.<@%unk/%unk: .SetOrCreate()>(%0, win)\n%1 = instanceinvoke screenManager.<@%unk/%unk: .initializationSize()>(win)\n%2 = instanceinvoke %1.<@%unk/%unk: .then()>(%AM2$%AM0$onWindowStageCreate)\ninstanceinvoke %2.<@%unk/%unk: .catch()>(%AM1$%AM0$onWindowStageCreate)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(win: window.Window): void => {\n      AppStorage.SetOrCreate<window.Window>(Constants.MAIN_WINDOW, win);\n      screenManager.initializationSize(win).then<void, void>((): void => {\n        windowStage.setUIContent(this.context, pagePath, null);\n      }).catch<void>((): void => {\n        Log.error(this.TAG, 'get device screen info failed.');\n      });\n    }"
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": "export default class EntryAbility extends UIAbility {\n  private TAG: string = 'EntryAbility';\n  private static readonly RETRY_MAX_TIMES = 100;\n  private static readonly ACTION_URI_SINGLE_SELECT = 'singleselect';\n  private static readonly ACTION_URI_MULTIPLE_SELECT = 'multipleselect';\n  private static readonly ACTION_URI_PHOTO_DETAIL = 'photodetail';\n  private browserDataSource: GroupItemDataSource = new GroupItemDataSource();\n\n  onCreate(want: Want, launchParam): void {\n    Log.info(this.TAG, 'Application onCreate');\n    // Ability is creating, initialize resources for this ability\n    GlobalContext.getContext().setObject('appContext', this.context);\n    userFileModel.onCreate(this.context);\n    mFilterMediaType = MediaConstants.SELECT_TYPE_ALL;\n    AppStorage.SetOrCreate<number>(Constants.ENTRY_FROM_HAP, Constants.ENTRY_FROM_NONE);\n    Log.info(this.TAG, 'Application onCreate end');\n  }\n\n  onNewWant(want: Want): void {\n    AppStorage.SetOrCreate<number>(Constants.ENTRY_FROM_HAP, Constants.ENTRY_FROM_NONE);\n  }\n\n  onDestroy(): void {\n    // Ability is creating, release resources for this ability\n    Log.info(this.TAG, 'Application onDestroy');\n    AppStorage.Delete(Constants.ENTRY_FROM_HAP);\n  }\n\n  onWindowStageCreate(windowStage): void {\n    // Main window is created, set main page for this ability\n    Log.info(this.TAG, 'Application onWindowStageCreate');\n    GlobalContext.getContext().setObject('photosWindowStage', windowStage);\n    windowStage.getMainWindow().then((win: window.Window): void => {\n      AppStorage.SetOrCreate<window.Window>(Constants.MAIN_WINDOW, win);\n      screenManager.initializationSize(win).then<void, void>((): void => {\n        windowStage.setUIContent(this.context, pagePath, null);\n      }).catch<void>((): void => {\n        Log.error(this.TAG, 'get device screen info failed.');\n      });\n    });\n  }\n\n  onWindowStageDestroy(): void {\n  }\n\n  onForeground(): void {\n  }\n\n  onBackground(): void {\n  }\n}"
    }
  ],
  "functions": [],
  "blocks": [],
  "simplified_code": "/*\n * Copyright (c) 2023 Shenzhen Kaihong Digital Industry Development Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport UIAbility from '@ohos.app.ability.UIAbility';\nimport window from '@ohos.window';\nimport deviceInfo from '@ohos.deviceInfo';\nimport Ability from '@ohos.app.ability.UIAbility';\nimport wantConstant from '@ohos.ability.wantConstant';\nimport { Log } from '../utils/Log';\nimport { screenManager } from '../common/ScreenManager';\nimport { Constants } from '../constants/Constants';\nimport { broadcastManager } from '../common/BroadcastManager';\nimport { BroadcastConstants } from '../constants/BroadcastConstants';\nimport { userFileModel } from '../base/UserFileModel';\nimport router from '@system.router';\nimport { RouterOptions } from '@system.router';\nimport { GroupItemDataSource } from '../common/GroupItemDataSource';\nimport atManager from '@ohos.abilityAccessCtrl';\nimport bundleManager from '@ohos.bundle.bundleManager';\nimport { MediaConstants } from '../constants/MediaConstants';\nimport { getResourceString } from '../utils/ResourceUtils';\nimport { GlobalContext } from '../common/GlobalContext';\nimport Want from '@ohos.app.ability.Want';\n\nlet mCallerUid: number = 0;\nlet mMaxSelectCount: number = 0;\nlet mFilterMediaType: number = MediaConstants.SELECT_TYPE_ALL;\nlet appBroadcast = broadcastManager.getBroadcast();\nlet pagePath: string = 'pages/Index';\n\nexport default class EntryAbility extends UIAbility {\n  private TAG: string = 'EntryAbility';\n  private static readonly RETRY_MAX_TIMES = 100;\n  private static readonly ACTION_URI_SINGLE_SELECT = 'singleselect';\n  private static readonly ACTION_URI_MULTIPLE_SELECT = 'multipleselect';\n  private static readonly ACTION_URI_PHOTO_DETAIL = 'photodetail';\n  private browserDataSource: GroupItemDataSource = new GroupItemDataSource();\n\n  onCreate(want: Want, launchParam): void {\n    Log.info(this.TAG, 'Application onCreate');\n    // Ability is creating, initialize resources for this ability\n    GlobalContext.getContext().setObject('appContext', this.context);\n    userFileModel.onCreate(this.context);\n    mFilterMediaType = MediaConstants.SELECT_TYPE_ALL;\n    AppStorage.SetOrCreate<number>(Constants.ENTRY_FROM_HAP, Constants.ENTRY_FROM_NONE);\n    Log.info(this.TAG, 'Application onCreate end');\n  }\n\n  onNewWant(want: Want): void {\n    AppStorage.SetOrCreate<number>(Constants.ENTRY_FROM_HAP, Constants.ENTRY_FROM_NONE);\n  }\n\n  onDestroy(): void {\n    // Ability is creating, release resources for this ability\n    Log.info(this.TAG, 'Application onDestroy');\n    AppStorage.Delete(Constants.ENTRY_FROM_HAP);\n  }\n\n  onWindowStageCreate(windowStage): void {\n    // Main window is created, set main page for this ability\n    Log.info(this.TAG, 'Application onWindowStageCreate');\n    GlobalContext.getContext().setObject('photosWindowStage', windowStage);\n    windowStage.getMainWindow().then((win: window.Window): void => {\n      AppStorage.SetOrCreate<window.Window>(Constants.MAIN_WINDOW, win);\n      screenManager.initializationSize(win).then<void, void>((): void => {\n        windowStage.setUIContent(this.context, pagePath, null);\n      }).catch<void>((): void => {\n        Log.error(this.TAG, 'get device screen info failed.');\n      });\n    });\n  }\n\n  onWindowStageDestroy(): void {\n  }\n\n  onForeground(): void {\n  }\n\n  onBackground(): void {\n  }\n}\n"
}