{
  "type": "file",
  "name": "199.ts",
  "label": "199.ts",
  "start_line": -1,
  "end_line": 50,
  "classes": [
    {
      "type": "class",
      "name": "%dflt",
      "label": "%dflt",
      "start_line": -1,
      "end_line": 1,
      "functions": [
        {
          "type": "function",
          "name": "%dflt",
          "label": "%dflt",
          "start_line": -1,
          "end_line": 1,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/199.ts: %dflt\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": ""
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": ""
    },
    {
      "type": "class",
      "name": "DeleteExecutionsWithWorkflows1673268682475",
      "label": "DeleteExecutionsWithWorkflows1673268682475",
      "start_line": 1,
      "end_line": 50,
      "functions": [
        {
          "type": "function",
          "name": "up",
          "label": "up",
          "start_line": 1,
          "end_line": 4,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "ObjectBindingPattern = parameter0: MigrationContext\nthis = this: @ts_files/199.ts: DeleteExecutionsWithWorkflows1673268682475\n%0 = '\n\t\t\tSELECT id FROM \"' + tablePrefix\n%1 = %0 + 'workflow_entity\"\n\t\t'\n%2 = instanceinvoke queryRunner.<@%unk/%unk: .query()>(%1)\nworkflowIds = <@ts_files/199.ts: %AC$0[]>await %2\n%3 = workflowIds.<@%unk/%unk: .length>\nif %3 != 0",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%4 = instanceinvoke workflowIds.<@%unk/%unk: .map()>(%AM0$up)\n%5 = instanceinvoke %4.<@%unk/%unk: .join()>()\n%6 = 'AND \"workflowId\" NOT IN (' + %5\n%7 = %6 + ')'\n%8 = %7",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "%9 = 'DELETE FROM \"' + tablePrefix\n%10 = %9 + 'execution_entity\"\n\t\t\t WHERE \"workflowId\" IS NOT NULL\n\t\t\t '\n%11 = %10 + %8\n%12 = instanceinvoke queryRunner.<@%unk/%unk: .query()>(%11)\n%13 = await %12\n%14 = 'DROP TABLE IF EXISTS \"' + tablePrefix\n%15 = %14 + 'temporary_execution_entity\"'\n%16 = instanceinvoke queryRunner.<@%unk/%unk: .query()>(%15)\n%17 = await %16\n%18 = 'CREATE TABLE \"' + tablePrefix\n%19 = %18 + 'temporary_execution_entity\" (\n\t\t\t\t\"id\" integer PRIMARY KEY AUTOINCREMENT NOT NULL,\n\t\t\t\t\"workflowId\" int,\n\t\t\t\t\"finished\" boolean NOT NULL,\n\t\t\t\t\"mode\" varchar NOT NULL,\n\t\t\t\t\"retryOf\" varchar,\n\t\t\t\t\"retrySuccessId\" varchar,\n\t\t\t\t\"startedAt\" datetime NOT NULL,\n\t\t\t\t\"stoppedAt\" datetime,\n\t\t\t\t\"waitTill\" datetime,\n\t\t\t\t\"workflowData\" text NOT NULL,\n\t\t\t\t\"data\" text NOT NULL,\n\t\t\t\tFOREIGN KEY(\"workflowId\") REFERENCES \"'\n%20 = %19 + tablePrefix\n%21 = %20 + 'workflow_entity\" (\"id\") ON DELETE CASCADE\n\t\t\t)'\n%22 = instanceinvoke queryRunner.<@%unk/%unk: .query()>(%21)\n%23 = await %22\ncolumns = '\"id\", \"workflowId\", \"finished\", \"mode\", \"retryOf\", \"retrySuccessId\", \"startedAt\", \"stoppedAt\", \"waitTill\", \"workflowData\", \"data\"'\n%24 = 'INSERT INTO \"' + tablePrefix\n%25 = %24 + 'temporary_execution_entity\"('\n%26 = %25 + columns\n%27 = %26 + ') SELECT '\n%28 = %27 + columns\n%29 = %28 + ' FROM \"'\n%30 = %29 + tablePrefix\n%31 = %30 + 'execution_entity\"'\n%32 = instanceinvoke queryRunner.<@%unk/%unk: .query()>(%31)\n%33 = await %32\n%34 = 'DROP TABLE \"' + tablePrefix\n%35 = %34 + 'execution_entity\"'\n%36 = instanceinvoke queryRunner.<@%unk/%unk: .query()>(%35)\n%37 = await %36\n%38 = 'ALTER TABLE \"' + tablePrefix\n%39 = %38 + 'temporary_execution_entity\" RENAME TO \"'\n%40 = %39 + tablePrefix\n%41 = %40 + 'execution_entity\"'\n%42 = instanceinvoke queryRunner.<@%unk/%unk: .query()>(%41)\n%43 = await %42\n%44 = 'CREATE INDEX \"IDX_' + tablePrefix\n%45 = %44 + 'cefb067df2402f6aed0638a6c1\" ON \"'\n%46 = %45 + tablePrefix\n%47 = %46 + 'execution_entity\" (\"stoppedAt\")'\n%48 = instanceinvoke queryRunner.<@%unk/%unk: .query()>(%47)\n%49 = await %48\n%50 = 'CREATE INDEX \"IDX_' + tablePrefix\n%51 = %50 + 'ca4a71b47f28ac6ea88293a8e2\" ON \"'\n%52 = %51 + tablePrefix\n%53 = %52 + 'execution_entity\" (\"waitTill\")'\n%54 = instanceinvoke queryRunner.<@%unk/%unk: .query()>(%53)\n%55 = await %54\nreturn",
                      "start_line": 1,
                      "end_line": 1,
                      "successors": []
                    }
                  ]
                },
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%8 = ''",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "blockRef",
                      "label": "(RepeatedBlock)"
                    }
                  ]
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "async up({ queryRunner, tablePrefix }: MigrationContext) {\n\t\tconst workflowIds = (await queryRunner.query(`\n\t\t\tSELECT id FROM \"${tablePrefix}workflow_entity\"\n\t\t`)) as Array<{ id: number }>;\n\t\tawait queryRunner.query(\n\t\t\t`DELETE FROM \"${tablePrefix}execution_entity\"\n\t\t\t WHERE \"workflowId\" IS NOT NULL\n\t\t\t ${\n\t\t\t\t\tworkflowIds.length\n\t\t\t\t\t\t? `AND \"workflowId\" NOT IN (${workflowIds.map(({ id }) => id).join()})`\n\t\t\t\t\t\t: ''\n\t\t\t\t}`,\n\t\t);\n\t\tawait queryRunner.query(`DROP TABLE IF EXISTS \"${tablePrefix}temporary_execution_entity\"`);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE TABLE \"${tablePrefix}temporary_execution_entity\" (\n\t\t\t\t\"id\" integer PRIMARY KEY AUTOINCREMENT NOT NULL,\n\t\t\t\t\"workflowId\" int,\n\t\t\t\t\"finished\" boolean NOT NULL,\n\t\t\t\t\"mode\" varchar NOT NULL,\n\t\t\t\t\"retryOf\" varchar,\n\t\t\t\t\"retrySuccessId\" varchar,\n\t\t\t\t\"startedAt\" datetime NOT NULL,\n\t\t\t\t\"stoppedAt\" datetime,\n\t\t\t\t\"waitTill\" datetime,\n\t\t\t\t\"workflowData\" text NOT NULL,\n\t\t\t\t\"data\" text NOT NULL,\n\t\t\t\tFOREIGN KEY(\"workflowId\") REFERENCES \"${tablePrefix}workflow_entity\" (\"id\") ON DELETE CASCADE\n\t\t\t)`,\n\t\t);\n\t\tconst columns =\n\t\t\t'\"id\", \"workflowId\", \"finished\", \"mode\", \"retryOf\", \"retrySuccessId\", \"startedAt\", \"stoppedAt\", \"waitTill\", \"workflowData\", \"data\"';\n\t\tawait queryRunner.query(\n\t\t\t`INSERT INTO \"${tablePrefix}temporary_execution_entity\"(${columns}) SELECT ${columns} FROM \"${tablePrefix}execution_entity\"`,\n\t\t);\n\t\tawait queryRunner.query(`DROP TABLE \"${tablePrefix}execution_entity\"`);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \"${tablePrefix}temporary_execution_entity\" RENAME TO \"${tablePrefix}execution_entity\"`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE INDEX \"IDX_${tablePrefix}cefb067df2402f6aed0638a6c1\" ON \"${tablePrefix}execution_entity\" (\"stoppedAt\")`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE INDEX \"IDX_${tablePrefix}ca4a71b47f28ac6ea88293a8e2\" ON \"${tablePrefix}execution_entity\" (\"waitTill\")`,\n\t\t);\n\t}"
        },
        {
          "type": "function",
          "name": "down",
          "label": "down",
          "start_line": 1,
          "end_line": 50,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "ObjectBindingPattern = parameter0: MigrationContext\nthis = this: @ts_files/199.ts: DeleteExecutionsWithWorkflows1673268682475\n%0 = 'DROP TABLE IF EXISTS \"' + tablePrefix\n%1 = %0 + 'temporary_execution_entity\"'\n%2 = instanceinvoke queryRunner.<@%unk/%unk: .query()>(%1)\n%3 = await %2\n%4 = 'CREATE TABLE \"' + tablePrefix\n%5 = %4 + 'temporary_execution_entity\" (\n\t\t\t\t\"id\" integer PRIMARY KEY AUTOINCREMENT NOT NULL,\n\t\t\t\t\"workflowId\" varchar,\n\t\t\t\t\"finished\" boolean NOT NULL,\n\t\t\t\t\"mode\" varchar NOT NULL,\n\t\t\t\t\"retryOf\" varchar,\n\t\t\t\t\"retrySuccessId\" varchar,\n\t\t\t\t\"startedAt\" datetime NOT NULL,\n\t\t\t\t\"stoppedAt\" datetime,\n\t\t\t\t\"waitTill\" datetime,\n\t\t\t\t\"workflowData\" text NOT NULL,\n\t\t\t\t\"data\" text NOT NULL\n\t\t\t)'\n%6 = instanceinvoke queryRunner.<@%unk/%unk: .query()>(%5)\n%7 = await %6\ncolumns = '\"id\", \"workflowId\", \"finished\", \"mode\", \"retryOf\", \"retrySuccessId\", \"startedAt\", \"stoppedAt\", \"waitTill\", \"workflowData\", \"data\"'\n%8 = 'INSERT INTO \"' + tablePrefix\n%9 = %8 + 'temporary_execution_entity\"('\n%10 = %9 + columns\n%11 = %10 + ') SELECT '\n%12 = %11 + columns\n%13 = %12 + ' FROM \"'\n%14 = %13 + tablePrefix\n%15 = %14 + 'execution_entity\"'\n%16 = instanceinvoke queryRunner.<@%unk/%unk: .query()>(%15)\n%17 = await %16\n%18 = 'DROP TABLE \"' + tablePrefix\n%19 = %18 + 'execution_entity\"'\n%20 = instanceinvoke queryRunner.<@%unk/%unk: .query()>(%19)\n%21 = await %20\n%22 = 'ALTER TABLE \"' + tablePrefix\n%23 = %22 + 'temporary_execution_entity\" RENAME TO \"'\n%24 = %23 + tablePrefix\n%25 = %24 + 'execution_entity\"'\n%26 = instanceinvoke queryRunner.<@%unk/%unk: .query()>(%25)\n%27 = await %26\n%28 = 'CREATE INDEX \"IDX_' + tablePrefix\n%29 = %28 + 'cefb067df2402f6aed0638a6c1\" ON \"'\n%30 = %29 + tablePrefix\n%31 = %30 + 'execution_entity\" (\"stoppedAt\")'\n%32 = instanceinvoke queryRunner.<@%unk/%unk: .query()>(%31)\n%33 = await %32\n%34 = 'CREATE INDEX \"IDX_' + tablePrefix\n%35 = %34 + 'ca4a71b47f28ac6ea88293a8e2\" ON \"'\n%36 = %35 + tablePrefix\n%37 = %36 + 'execution_entity\" (\"waitTill\")'\n%38 = instanceinvoke queryRunner.<@%unk/%unk: .query()>(%37)\n%39 = await %38\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "async down({ queryRunner, tablePrefix }: MigrationContext) {\n\t\tawait queryRunner.query(`DROP TABLE IF EXISTS \"${tablePrefix}temporary_execution_entity\"`);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE TABLE \"${tablePrefix}temporary_execution_entity\" (\n\t\t\t\t\"id\" integer PRIMARY KEY AUTOINCREMENT NOT NULL,\n\t\t\t\t\"workflowId\" varchar,\n\t\t\t\t\"finished\" boolean NOT NULL,\n\t\t\t\t\"mode\" varchar NOT NULL,\n\t\t\t\t\"retryOf\" varchar,\n\t\t\t\t\"retrySuccessId\" varchar,\n\t\t\t\t\"startedAt\" datetime NOT NULL,\n\t\t\t\t\"stoppedAt\" datetime,\n\t\t\t\t\"waitTill\" datetime,\n\t\t\t\t\"workflowData\" text NOT NULL,\n\t\t\t\t\"data\" text NOT NULL\n\t\t\t)`,\n\t\t);\n\t\tconst columns =\n\t\t\t'\"id\", \"workflowId\", \"finished\", \"mode\", \"retryOf\", \"retrySuccessId\", \"startedAt\", \"stoppedAt\", \"waitTill\", \"workflowData\", \"data\"';\n\t\tawait queryRunner.query(\n\t\t\t`INSERT INTO \"${tablePrefix}temporary_execution_entity\"(${columns}) SELECT ${columns} FROM \"${tablePrefix}execution_entity\"`,\n\t\t);\n\t\tawait queryRunner.query(`DROP TABLE \"${tablePrefix}execution_entity\"`);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \"${tablePrefix}temporary_execution_entity\" RENAME TO \"${tablePrefix}execution_entity\"`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE INDEX \"IDX_${tablePrefix}cefb067df2402f6aed0638a6c1\" ON \"${tablePrefix}execution_entity\" (\"stoppedAt\")`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE INDEX \"IDX_${tablePrefix}ca4a71b47f28ac6ea88293a8e2\" ON \"${tablePrefix}execution_entity\" (\"waitTill\")`,\n\t\t);\n\t}"
        },
        {
          "type": "function",
          "name": "%AM0$up",
          "label": "%AM0$up",
          "start_line": 1,
          "end_line": 13,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "ObjectBindingPattern = parameter0: unknown\nthis = this: @ts_files/199.ts: DeleteExecutionsWithWorkflows1673268682475\nreturn id",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "({ id }) => id"
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": "export class DeleteExecutionsWithWorkflows1673268682475 implements ReversibleMigration {\n\ttransaction = false as const;\n\tasync up({ queryRunner, tablePrefix }: MigrationContext) {\n\t\tconst workflowIds = (await queryRunner.query(`\n\t\t\tSELECT id FROM \"${tablePrefix}workflow_entity\"\n\t\t`)) as Array<{ id: number }>;\n\t\tawait queryRunner.query(\n\t\t\t`DELETE FROM \"${tablePrefix}execution_entity\"\n\t\t\t WHERE \"workflowId\" IS NOT NULL\n\t\t\t ${\n\t\t\t\t\tworkflowIds.length\n\t\t\t\t\t\t? `AND \"workflowId\" NOT IN (${workflowIds.map(({ id }) => id).join()})`\n\t\t\t\t\t\t: ''\n\t\t\t\t}`,\n\t\t);\n\t\tawait queryRunner.query(`DROP TABLE IF EXISTS \"${tablePrefix}temporary_execution_entity\"`);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE TABLE \"${tablePrefix}temporary_execution_entity\" (\n\t\t\t\t\"id\" integer PRIMARY KEY AUTOINCREMENT NOT NULL,\n\t\t\t\t\"workflowId\" int,\n\t\t\t\t\"finished\" boolean NOT NULL,\n\t\t\t\t\"mode\" varchar NOT NULL,\n\t\t\t\t\"retryOf\" varchar,\n\t\t\t\t\"retrySuccessId\" varchar,\n\t\t\t\t\"startedAt\" datetime NOT NULL,\n\t\t\t\t\"stoppedAt\" datetime,\n\t\t\t\t\"waitTill\" datetime,\n\t\t\t\t\"workflowData\" text NOT NULL,\n\t\t\t\t\"data\" text NOT NULL,\n\t\t\t\tFOREIGN KEY(\"workflowId\") REFERENCES \"${tablePrefix}workflow_entity\" (\"id\") ON DELETE CASCADE\n\t\t\t)`,\n\t\t);\n\t\tconst columns =\n\t\t\t'\"id\", \"workflowId\", \"finished\", \"mode\", \"retryOf\", \"retrySuccessId\", \"startedAt\", \"stoppedAt\", \"waitTill\", \"workflowData\", \"data\"';\n\t\tawait queryRunner.query(\n\t\t\t`INSERT INTO \"${tablePrefix}temporary_execution_entity\"(${columns}) SELECT ${columns} FROM \"${tablePrefix}execution_entity\"`,\n\t\t);\n\t\tawait queryRunner.query(`DROP TABLE \"${tablePrefix}execution_entity\"`);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \"${tablePrefix}temporary_execution_entity\" RENAME TO \"${tablePrefix}execution_entity\"`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE INDEX \"IDX_${tablePrefix}cefb067df2402f6aed0638a6c1\" ON \"${tablePrefix}execution_entity\" (\"stoppedAt\")`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE INDEX \"IDX_${tablePrefix}ca4a71b47f28ac6ea88293a8e2\" ON \"${tablePrefix}execution_entity\" (\"waitTill\")`,\n\t\t);\n\t}\n\tasync down({ queryRunner, tablePrefix }: MigrationContext) {\n\t\tawait queryRunner.query(`DROP TABLE IF EXISTS \"${tablePrefix}temporary_execution_entity\"`);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE TABLE \"${tablePrefix}temporary_execution_entity\" (\n\t\t\t\t\"id\" integer PRIMARY KEY AUTOINCREMENT NOT NULL,\n\t\t\t\t\"workflowId\" varchar,\n\t\t\t\t\"finished\" boolean NOT NULL,\n\t\t\t\t\"mode\" varchar NOT NULL,\n\t\t\t\t\"retryOf\" varchar,\n\t\t\t\t\"retrySuccessId\" varchar,\n\t\t\t\t\"startedAt\" datetime NOT NULL,\n\t\t\t\t\"stoppedAt\" datetime,\n\t\t\t\t\"waitTill\" datetime,\n\t\t\t\t\"workflowData\" text NOT NULL,\n\t\t\t\t\"data\" text NOT NULL\n\t\t\t)`,\n\t\t);\n\t\tconst columns =\n\t\t\t'\"id\", \"workflowId\", \"finished\", \"mode\", \"retryOf\", \"retrySuccessId\", \"startedAt\", \"stoppedAt\", \"waitTill\", \"workflowData\", \"data\"';\n\t\tawait queryRunner.query(\n\t\t\t`INSERT INTO \"${tablePrefix}temporary_execution_entity\"(${columns}) SELECT ${columns} FROM \"${tablePrefix}execution_entity\"`,\n\t\t);\n\t\tawait queryRunner.query(`DROP TABLE \"${tablePrefix}execution_entity\"`);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \"${tablePrefix}temporary_execution_entity\" RENAME TO \"${tablePrefix}execution_entity\"`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE INDEX \"IDX_${tablePrefix}cefb067df2402f6aed0638a6c1\" ON \"${tablePrefix}execution_entity\" (\"stoppedAt\")`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE INDEX \"IDX_${tablePrefix}ca4a71b47f28ac6ea88293a8e2\" ON \"${tablePrefix}execution_entity\" (\"waitTill\")`,\n\t\t);\n\t}\n}"
    },
    {
      "type": "class",
      "name": "%AC$0",
      "label": "%AC$0",
      "start_line": 7,
      "end_line": 7,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{ id: number }"
    }
  ],
  "functions": [],
  "blocks": [],
  "simplified_code": "import type { MigrationContext, ReversibleMigration } from '@/databases/types';\nexport class DeleteExecutionsWithWorkflows1673268682475 implements ReversibleMigration {\n\ttransaction = false as const;\n\tasync up({ queryRunner, tablePrefix }: MigrationContext) {\n\t\tconst workflowIds = (await queryRunner.query(`\n\t\t\tSELECT id FROM \"${tablePrefix}workflow_entity\"\n\t\t`)) as Array<{ id: number }>;\n\t\tawait queryRunner.query(\n\t\t\t`DELETE FROM \"${tablePrefix}execution_entity\"\n\t\t\t WHERE \"workflowId\" IS NOT NULL\n\t\t\t ${\n\t\t\t\t\tworkflowIds.length\n\t\t\t\t\t\t? `AND \"workflowId\" NOT IN (${workflowIds.map(({ id }) => id).join()})`\n\t\t\t\t\t\t: ''\n\t\t\t\t}`,\n\t\t);\n\t\tawait queryRunner.query(`DROP TABLE IF EXISTS \"${tablePrefix}temporary_execution_entity\"`);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE TABLE \"${tablePrefix}temporary_execution_entity\" (\n\t\t\t\t\"id\" integer PRIMARY KEY AUTOINCREMENT NOT NULL,\n\t\t\t\t\"workflowId\" int,\n\t\t\t\t\"finished\" boolean NOT NULL,\n\t\t\t\t\"mode\" varchar NOT NULL,\n\t\t\t\t\"retryOf\" varchar,\n\t\t\t\t\"retrySuccessId\" varchar,\n\t\t\t\t\"startedAt\" datetime NOT NULL,\n\t\t\t\t\"stoppedAt\" datetime,\n\t\t\t\t\"waitTill\" datetime,\n\t\t\t\t\"workflowData\" text NOT NULL,\n\t\t\t\t\"data\" text NOT NULL,\n\t\t\t\tFOREIGN KEY(\"workflowId\") REFERENCES \"${tablePrefix}workflow_entity\" (\"id\") ON DELETE CASCADE\n\t\t\t)`,\n\t\t);\n\t\tconst columns =\n\t\t\t'\"id\", \"workflowId\", \"finished\", \"mode\", \"retryOf\", \"retrySuccessId\", \"startedAt\", \"stoppedAt\", \"waitTill\", \"workflowData\", \"data\"';\n\t\tawait queryRunner.query(\n\t\t\t`INSERT INTO \"${tablePrefix}temporary_execution_entity\"(${columns}) SELECT ${columns} FROM \"${tablePrefix}execution_entity\"`,\n\t\t);\n\t\tawait queryRunner.query(`DROP TABLE \"${tablePrefix}execution_entity\"`);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \"${tablePrefix}temporary_execution_entity\" RENAME TO \"${tablePrefix}execution_entity\"`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE INDEX \"IDX_${tablePrefix}cefb067df2402f6aed0638a6c1\" ON \"${tablePrefix}execution_entity\" (\"stoppedAt\")`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE INDEX \"IDX_${tablePrefix}ca4a71b47f28ac6ea88293a8e2\" ON \"${tablePrefix}execution_entity\" (\"waitTill\")`,\n\t\t);\n\t}\n\tasync down({ queryRunner, tablePrefix }: MigrationContext) {\n\t\tawait queryRunner.query(`DROP TABLE IF EXISTS \"${tablePrefix}temporary_execution_entity\"`);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE TABLE \"${tablePrefix}temporary_execution_entity\" (\n\t\t\t\t\"id\" integer PRIMARY KEY AUTOINCREMENT NOT NULL,\n\t\t\t\t\"workflowId\" varchar,\n\t\t\t\t\"finished\" boolean NOT NULL,\n\t\t\t\t\"mode\" varchar NOT NULL,\n\t\t\t\t\"retryOf\" varchar,\n\t\t\t\t\"retrySuccessId\" varchar,\n\t\t\t\t\"startedAt\" datetime NOT NULL,\n\t\t\t\t\"stoppedAt\" datetime,\n\t\t\t\t\"waitTill\" datetime,\n\t\t\t\t\"workflowData\" text NOT NULL,\n\t\t\t\t\"data\" text NOT NULL\n\t\t\t)`,\n\t\t);\n\t\tconst columns =\n\t\t\t'\"id\", \"workflowId\", \"finished\", \"mode\", \"retryOf\", \"retrySuccessId\", \"startedAt\", \"stoppedAt\", \"waitTill\", \"workflowData\", \"data\"';\n\t\tawait queryRunner.query(\n\t\t\t`INSERT INTO \"${tablePrefix}temporary_execution_entity\"(${columns}) SELECT ${columns} FROM \"${tablePrefix}execution_entity\"`,\n\t\t);\n\t\tawait queryRunner.query(`DROP TABLE \"${tablePrefix}execution_entity\"`);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \"${tablePrefix}temporary_execution_entity\" RENAME TO \"${tablePrefix}execution_entity\"`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE INDEX \"IDX_${tablePrefix}cefb067df2402f6aed0638a6c1\" ON \"${tablePrefix}execution_entity\" (\"stoppedAt\")`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE INDEX \"IDX_${tablePrefix}ca4a71b47f28ac6ea88293a8e2\" ON \"${tablePrefix}execution_entity\" (\"waitTill\")`,\n\t\t);\n\t}\n}"
}