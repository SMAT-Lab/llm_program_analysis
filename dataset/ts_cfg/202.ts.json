{
  "type": "file",
  "name": "202.ts",
  "label": "202.ts",
  "start_line": -1,
  "end_line": 32,
  "classes": [
    {
      "type": "class",
      "name": "%dflt",
      "label": "%dflt",
      "start_line": -1,
      "end_line": 32,
      "functions": [
        {
          "type": "function",
          "name": "%dflt",
          "label": "%dflt",
          "start_line": -1,
          "end_line": 32,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/202.ts: %dflt\nreturn",
              "start_line": 1,
              "end_line": 32,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": ""
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": ""
    },
    {
      "type": "class",
      "name": "NotificationTemplates",
      "label": "NotificationTemplates",
      "start_line": 1,
      "end_line": 31,
      "functions": [
        {
          "type": "function",
          "name": "getAll",
          "label": "getAll",
          "start_line": 1,
          "end_line": 10,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "page = parameter0: unknown\nlimit = parameter1: unknown\nthis = this: @ts_files/202.ts: NotificationTemplates\n%0 = new @ts_files/202.ts: %AC$NotificationTemplates$getAll$0\ninstanceinvoke %0.<@ts_files/202.ts: %AC$NotificationTemplates$getAll$0.constructor()>()\n%1 = this.<@ts_files/202.ts: NotificationTemplates.http>\n%2 = instanceinvoke %1.<@%unk/%unk: .get()>('/notification-templates', %0)\nreturn await %2",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "async getAll(page = 0, limit = 10) {\n    return await this.http.get(`/notification-templates`, {\n      params: { page, limit },\n    });\n  }"
        },
        {
          "type": "function",
          "name": "create",
          "label": "create",
          "start_line": 1,
          "end_line": 15,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "data = parameter0: INotificationTemplatePayload\nthis = this: @ts_files/202.ts: NotificationTemplates\n%0 = new @ts_files/202.ts: %AC$NotificationTemplates$create$2\ninstanceinvoke %0.<@ts_files/202.ts: %AC$NotificationTemplates$create$2.constructor()>()\n%1 = this.<@ts_files/202.ts: NotificationTemplates.http>\n%2 = instanceinvoke %1.<@%unk/%unk: .post()>('/notification-templates', %0)\nreturn await %2",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "async create(data: INotificationTemplatePayload) {\n    return await this.http.post(`/notification-templates`, {\n      ...data,\n    });\n  }"
        },
        {
          "type": "function",
          "name": "update",
          "label": "update",
          "start_line": 1,
          "end_line": 20,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "templateId = parameter0: string\ndata = parameter1: INotificationTemplatePayload\nthis = this: @ts_files/202.ts: NotificationTemplates\n%0 = '/notification-templates/' + templateId\n%1 = new @ts_files/202.ts: %AC$NotificationTemplates$update$3\ninstanceinvoke %1.<@ts_files/202.ts: %AC$NotificationTemplates$update$3.constructor()>()\n%2 = this.<@ts_files/202.ts: NotificationTemplates.http>\n%3 = instanceinvoke %2.<@%unk/%unk: .put()>(%0, %1)\nreturn await %3",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "async update(templateId: string, data: INotificationTemplatePayload) {\n    return await this.http.put(`/notification-templates/${templateId}`, {\n      ...data,\n    });\n  }"
        },
        {
          "type": "function",
          "name": "delete",
          "label": "delete",
          "start_line": 1,
          "end_line": 25,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "templateId = parameter0: string\nthis = this: @ts_files/202.ts: NotificationTemplates\n%0 = '/notification-templates/' + templateId\n%1 = this.<@ts_files/202.ts: NotificationTemplates.http>\n%2 = instanceinvoke %1.<@%unk/%unk: .delete()>(%0)\nreturn await %2",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "async delete(templateId: string) {\n    return await this.http.delete(`/notification-templates/${templateId}`);\n  }"
        },
        {
          "type": "function",
          "name": "getOne",
          "label": "getOne",
          "start_line": 1,
          "end_line": 28,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "templateId = parameter0: string\nthis = this: @ts_files/202.ts: NotificationTemplates\n%0 = '/notification-templates/' + templateId\n%1 = this.<@ts_files/202.ts: NotificationTemplates.http>\n%2 = instanceinvoke %1.<@%unk/%unk: .get()>(%0)\nreturn await %2",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "async getOne(templateId: string) {\n    return await this.http.get(`/notification-templates/${templateId}`);\n  }"
        },
        {
          "type": "function",
          "name": "updateStatus",
          "label": "updateStatus",
          "start_line": 1,
          "end_line": 31,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "templateId = parameter0: string\nactive = parameter1: boolean\nthis = this: @ts_files/202.ts: NotificationTemplates\n%0 = '/notification-templates/' + templateId\n%1 = %0 + '/status'\n%2 = new @ts_files/202.ts: %AC$NotificationTemplates$updateStatus$4\ninstanceinvoke %2.<@ts_files/202.ts: %AC$NotificationTemplates$updateStatus$4.constructor()>()\n%3 = this.<@ts_files/202.ts: NotificationTemplates.http>\n%4 = instanceinvoke %3.<@%unk/%unk: .put()>(%1, %2)\nreturn await %4",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "async updateStatus(templateId: string, active: boolean) {\n    return await this.http.put(`/notification-templates/${templateId}/status`, {\n      active,\n    });\n  }"
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": "export class NotificationTemplates\n  extends WithHttp\n  implements INotificationTemplates\n{\n  async getAll(page = 0, limit = 10) {\n    return await this.http.get(`/notification-templates`, {\n      params: { page, limit },\n    });\n  }\n  async create(data: INotificationTemplatePayload) {\n    return await this.http.post(`/notification-templates`, {\n      ...data,\n    });\n  }\n  async update(templateId: string, data: INotificationTemplatePayload) {\n    return await this.http.put(`/notification-templates/${templateId}`, {\n      ...data,\n    });\n  }\n  async delete(templateId: string) {\n    return await this.http.delete(`/notification-templates/${templateId}`);\n  }\n  async getOne(templateId: string) {\n    return await this.http.get(`/notification-templates/${templateId}`);\n  }\n  async updateStatus(templateId: string, active: boolean) {\n    return await this.http.put(`/notification-templates/${templateId}/status`, {\n      active,\n    });\n  }\n}"
    },
    {
      "type": "class",
      "name": "%AC$%AC$NotificationTemplates$getAll$0$%instInit$1",
      "label": "%AC$%AC$NotificationTemplates$getAll$0$%instInit$1",
      "start_line": 12,
      "end_line": 12,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{ page, limit }"
    },
    {
      "type": "class",
      "name": "%AC$NotificationTemplates$getAll$0",
      "label": "%AC$NotificationTemplates$getAll$0",
      "start_line": 11,
      "end_line": 11,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n      params: { page, limit },\n    }"
    },
    {
      "type": "class",
      "name": "%AC$NotificationTemplates$create$2",
      "label": "%AC$NotificationTemplates$create$2",
      "start_line": 16,
      "end_line": 16,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n      ...data,\n    }"
    },
    {
      "type": "class",
      "name": "%AC$NotificationTemplates$update$3",
      "label": "%AC$NotificationTemplates$update$3",
      "start_line": 21,
      "end_line": 21,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n      ...data,\n    }"
    },
    {
      "type": "class",
      "name": "%AC$NotificationTemplates$updateStatus$4",
      "label": "%AC$NotificationTemplates$updateStatus$4",
      "start_line": 32,
      "end_line": 32,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{\n      active,\n    }"
    }
  ],
  "functions": [],
  "blocks": [],
  "simplified_code": "import {\n  INotificationTemplatePayload,\n  INotificationTemplates,\n} from './notification-template.interface';\nimport { WithHttp } from '../novu.interface';\nexport class NotificationTemplates\n  extends WithHttp\n  implements INotificationTemplates\n{\n  async getAll(page = 0, limit = 10) {\n    return await this.http.get(`/notification-templates`, {\n      params: { page, limit },\n    });\n  }\n  async create(data: INotificationTemplatePayload) {\n    return await this.http.post(`/notification-templates`, {\n      ...data,\n    });\n  }\n  async update(templateId: string, data: INotificationTemplatePayload) {\n    return await this.http.put(`/notification-templates/${templateId}`, {\n      ...data,\n    });\n  }\n  async delete(templateId: string) {\n    return await this.http.delete(`/notification-templates/${templateId}`);\n  }\n  async getOne(templateId: string) {\n    return await this.http.get(`/notification-templates/${templateId}`);\n  }\n  async updateStatus(templateId: string, active: boolean) {\n    return await this.http.put(`/notification-templates/${templateId}/status`, {\n      active,\n    });\n  }\n}"
}