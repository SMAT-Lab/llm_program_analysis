{
  "type": "file",
  "name": "25.ts",
  "label": "25.ts",
  "start_line": -1,
  "end_line": 58,
  "classes": [
    {
      "type": "class",
      "name": "%dflt",
      "label": "%dflt",
      "start_line": -1,
      "end_line": 45,
      "functions": [
        {
          "type": "function",
          "name": "%dflt",
          "label": "%dflt",
          "start_line": -1,
          "end_line": 45,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/25.ts: %dflt\nTAG = 'ClearRecycleMenuOperation'\nreturn",
              "start_line": 1,
              "end_line": 45,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": ""
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": ""
    },
    {
      "type": "class",
      "name": "ClearRecycleMenuOperation",
      "label": "ClearRecycleMenuOperation",
      "start_line": 1,
      "end_line": 58,
      "functions": [
        {
          "type": "function",
          "name": "constructor",
          "label": "constructor",
          "start_line": 1,
          "end_line": 45,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "instanceinvoke this.<@ts_files/25.ts: ClearRecycleMenuOperation.%instInit()>()\nmenuContext = parameter0: MenuContext\nthis = this: @ts_files/25.ts: ClearRecycleMenuOperation\nstaticinvoke <@%unk/%unk: .super()>(menuContext)\nreturn",
              "start_line": 1,
              "end_line": 45,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "constructor(menuContext: MenuContext) {\n    super(menuContext);\n  }"
        },
        {
          "type": "function",
          "name": "doAction",
          "label": "doAction",
          "start_line": 1,
          "end_line": 29,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/25.ts: ClearRecycleMenuOperation\ninstanceinvoke Log.<@%unk/%unk: .info()>(TAG, 'delete doAction')\n%0 = this.<@ts_files/25.ts: ClearRecycleMenuOperation.menuContext>\nif %0 == null",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "instanceinvoke Log.<@%unk/%unk: .warn()>(TAG, 'menuContext is null, return')\nreturn",
                  "start_line": 1,
                  "end_line": 45,
                  "successors": []
                },
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%1 = this.<@ts_files/25.ts: ClearRecycleMenuOperation.menuContext>\ndataSource = %1.<@%unk/%unk: .dataSource>\nif dataSource == null",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "%2 = this.<@ts_files/25.ts: ClearRecycleMenuOperation.menuContext>\n%3 = %2.<@%unk/%unk: .items>\n%4 = %3.<@%unk/%unk: .length>\nthis.<@ts_files/25.ts: ClearRecycleMenuOperation.count> = %4",
                      "start_line": 1,
                      "end_line": 1,
                      "successors": [
                        {
                          "type": "block",
                          "name": "Block?",
                          "label": "%7 = this.<@ts_files/25.ts: ClearRecycleMenuOperation.count>\nif %7 <= 0",
                          "start_line": 1,
                          "end_line": 1,
                          "successors": [
                            {
                              "type": "block",
                              "name": "Block?",
                              "label": "instanceinvoke Log.<@%unk/%unk: .warn()>(TAG, 'count <= 0, return')\nreturn",
                              "start_line": 1,
                              "end_line": 45,
                              "successors": []
                            },
                            {
                              "type": "block",
                              "name": "Block?",
                              "label": "this.<@ts_files/25.ts: ClearRecycleMenuOperation.confirmCallback> = %AM0$doAction\nthis.<@ts_files/25.ts: ClearRecycleMenuOperation.cancelCallback> = %AM1$doAction\n%8 = BroadcastConstants.<@%unk/%unk: .SHOW_DELETE_DIALOG>\n%9 = staticinvoke <@%unk/%unk: .$r()>('app.string.recycleAlbum_clear_message')\n%10 = staticinvoke <@%unk/%unk: .$r()>('app.string.dialog_clear')\n%11 = this.<@ts_files/25.ts: ClearRecycleMenuOperation.confirmCallback>\n%12 = this.<@ts_files/25.ts: ClearRecycleMenuOperation.cancelCallback>\n%13 = newarray (unknown)[4]\n%13[0] = %9\n%13[1] = %10\n%13[2] = %11\n%13[3] = %12\n%14 = this.<@ts_files/25.ts: ClearRecycleMenuOperation.menuContext>\n%15 = %14.<@%unk/%unk: .broadCast>\ninstanceinvoke %15.<@%unk/%unk: .emit()>(%8, %13)\nreturn",
                              "start_line": 1,
                              "end_line": 45,
                              "successors": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "%5 = instanceinvoke dataSource.<@%unk/%unk: .getItems()>()\n%6 = %5.<@%unk/%unk: .length>\nthis.<@ts_files/25.ts: ClearRecycleMenuOperation.count> = %6",
                      "start_line": 1,
                      "end_line": 1,
                      "successors": [
                        {
                          "type": "blockRef",
                          "label": "(RepeatedBlock)"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "doAction(): void {\n    Log.info(TAG, 'delete doAction');\n    if (this.menuContext == null) {\n      Log.warn(TAG, 'menuContext is null, return');\n      return;\n    }\n\n    let dataSource: ItemDataSource = this.menuContext.dataSource;\n    if (dataSource == null) {\n      this.count = this.menuContext.items.length;\n    } else {\n      //@ts-ignore\n      this.count = dataSource.getItems().length;\n    }\n    if (this.count <= 0) {\n      Log.warn(TAG, 'count <= 0, return');\n      return;\n    }\n\n    this.confirmCallback = (): void => this.confirmCallbackBindImpl();\n    this.cancelCallback = (): void => this.cancelCallbackBindImpl();\n\n    this.menuContext.broadCast.emit(BroadcastConstants.SHOW_DELETE_DIALOG, [$r('app.string.recycleAlbum_clear_message'), $r('app.string.dialog_clear'), this.confirmCallback, this.cancelCallback]);\n  }"
        },
        {
          "type": "function",
          "name": "confirmCallback",
          "label": "confirmCallback",
          "start_line": 1,
          "end_line": 54,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/25.ts: ClearRecycleMenuOperation\ninstanceinvoke this.<@ts_files/25.ts: ClearRecycleMenuOperation.confirmCallbackBindImpl()>()\nreturn",
              "start_line": 1,
              "end_line": 45,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "confirmCallback(): void {\n    this.confirmCallbackBindImpl();\n  }"
        },
        {
          "type": "function",
          "name": "confirmCallbackBindImpl",
          "label": "confirmCallbackBindImpl",
          "start_line": 1,
          "end_line": 58,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/25.ts: ClearRecycleMenuOperation\ninstanceinvoke Log.<@%unk/%unk: .info()>(TAG, 'Clear Recycle confirm')\n%0 = this.<@ts_files/25.ts: ClearRecycleMenuOperation.menuContext>\n%1 = %0.<@%unk/%unk: .onOperationEnd>\nthis.<@ts_files/25.ts: ClearRecycleMenuOperation.onOperationEnd> = %1\n%2 = this.<@ts_files/25.ts: ClearRecycleMenuOperation.menuContext>\nonOperationStart = %2.<@%unk/%unk: .onOperationStart>\nif onOperationStart != null",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "staticinvoke <@%unk/%unk: .onOperationStart()>()",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "%3 = BroadcastConstants.<@%unk/%unk: .DELETE_PROGRESS_DIALOG>\n%4 = staticinvoke <@%unk/%unk: .$r()>('app.string.action_delete')\n%5 = this.<@ts_files/25.ts: ClearRecycleMenuOperation.count>\n%6 = newarray (unknown)[2]\n%6[0] = %4\n%6[1] = %5\n%7 = this.<@ts_files/25.ts: ClearRecycleMenuOperation.menuContext>\n%8 = %7.<@%unk/%unk: .broadCast>\ninstanceinvoke %8.<@%unk/%unk: .emit()>(%3, %6)\n%9 = this.<@ts_files/25.ts: ClearRecycleMenuOperation.menuContext>\ndataSource = %9.<@%unk/%unk: .dataSource>\nif dataSource == null",
                      "start_line": 1,
                      "end_line": 1,
                      "successors": [
                        {
                          "type": "block",
                          "name": "Block?",
                          "label": "%10 = this.<@ts_files/25.ts: ClearRecycleMenuOperation.menuContext>\n%11 = %10.<@%unk/%unk: .items>\nthis.<@ts_files/25.ts: ClearRecycleMenuOperation.items> = %11",
                          "start_line": 1,
                          "end_line": 1,
                          "successors": [
                            {
                              "type": "block",
                              "name": "Block?",
                              "label": "instanceinvoke this.<@%unk/%unk: .processOperation()>()\nreturn",
                              "start_line": 1,
                              "end_line": 45,
                              "successors": []
                            }
                          ]
                        },
                        {
                          "type": "block",
                          "name": "Block?",
                          "label": "%12 = instanceinvoke dataSource.<@%unk/%unk: .getItems()>()\nthis.<@ts_files/25.ts: ClearRecycleMenuOperation.items> = %12",
                          "start_line": 1,
                          "end_line": 1,
                          "successors": [
                            {
                              "type": "blockRef",
                              "label": "(RepeatedBlock)"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "blockRef",
                  "label": "(RepeatedBlock)"
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "protected confirmCallbackBindImpl(): void {\n    Log.info(TAG, 'Clear Recycle confirm');\n    // 1. Variable initialization\n    this.onOperationEnd = this.menuContext.onOperationEnd;\n\n    // 2. onDeleteStart exit selection mode\n    let onOperationStart: Function = this.menuContext.onOperationStart;\n    if (onOperationStart != null) onOperationStart();\n\n    this.menuContext.broadCast.emit(BroadcastConstants.DELETE_PROGRESS_DIALOG,\n      [$r('app.string.action_delete'), this.count]);\n\n    // 3. selectManager gets the URI of the data and starts processing deletion in the callback\n    let dataSource: ItemDataSource = this.menuContext.dataSource;\n    if (dataSource == null) {\n      this.items = this.menuContext.items;\n    } else {\n      //@ts-ignore\n      this.items = dataSource.getItems();\n    }\n    this.processOperation();\n  }"
        },
        {
          "type": "function",
          "name": "%AM0$doAction",
          "label": "%AM0$doAction",
          "start_line": 1,
          "end_line": 48,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/25.ts: ClearRecycleMenuOperation\n%0 = instanceinvoke this.<@ts_files/25.ts: ClearRecycleMenuOperation.confirmCallbackBindImpl()>()\nreturn %0",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(): void => this.confirmCallbackBindImpl()"
        },
        {
          "type": "function",
          "name": "%AM1$doAction",
          "label": "%AM1$doAction",
          "start_line": 1,
          "end_line": 49,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/25.ts: ClearRecycleMenuOperation\n%0 = instanceinvoke this.<@%unk/%unk: .cancelCallbackBindImpl()>()\nreturn %0",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(): void => this.cancelCallbackBindImpl()"
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": "export class ClearRecycleMenuOperation extends BatchDeleteMenuOperation {\n  constructor(menuContext: MenuContext) {\n    super(menuContext);\n  }\n\n  doAction(): void {\n    Log.info(TAG, 'delete doAction');\n    if (this.menuContext == null) {\n      Log.warn(TAG, 'menuContext is null, return');\n      return;\n    }\n\n    let dataSource: ItemDataSource = this.menuContext.dataSource;\n    if (dataSource == null) {\n      this.count = this.menuContext.items.length;\n    } else {\n      //@ts-ignore\n      this.count = dataSource.getItems().length;\n    }\n    if (this.count <= 0) {\n      Log.warn(TAG, 'count <= 0, return');\n      return;\n    }\n\n    this.confirmCallback = (): void => this.confirmCallbackBindImpl();\n    this.cancelCallback = (): void => this.cancelCallbackBindImpl();\n\n    this.menuContext.broadCast.emit(BroadcastConstants.SHOW_DELETE_DIALOG, [$r('app.string.recycleAlbum_clear_message'), $r('app.string.dialog_clear'), this.confirmCallback, this.cancelCallback]);\n  }\n\n  confirmCallback(): void {\n    this.confirmCallbackBindImpl();\n  }\n\n  protected confirmCallbackBindImpl(): void {\n    Log.info(TAG, 'Clear Recycle confirm');\n    // 1. Variable initialization\n    this.onOperationEnd = this.menuContext.onOperationEnd;\n\n    // 2. onDeleteStart exit selection mode\n    let onOperationStart: Function = this.menuContext.onOperationStart;\n    if (onOperationStart != null) onOperationStart();\n\n    this.menuContext.broadCast.emit(BroadcastConstants.DELETE_PROGRESS_DIALOG,\n      [$r('app.string.action_delete'), this.count]);\n\n    // 3. selectManager gets the URI of the data and starts processing deletion in the callback\n    let dataSource: ItemDataSource = this.menuContext.dataSource;\n    if (dataSource == null) {\n      this.items = this.menuContext.items;\n    } else {\n      //@ts-ignore\n      this.items = dataSource.getItems();\n    }\n    this.processOperation();\n  }\n}"
    }
  ],
  "functions": [],
  "blocks": [],
  "simplified_code": "/*\n * Copyright (c) 2023 Shenzhen Kaihong Digital Industry Development Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ItemDataSource } from '../common/ItemDataSource';\nimport { MenuContext } from './MenuContext';\nimport { BatchDeleteMenuOperation } from './BatchDeleteMenuOperation';\nimport { Log } from '../utils/Log';\nimport { BroadcastConstants } from '../constants/BroadcastConstants';\n\nconst TAG = 'ClearRecycleMenuOperation';\n\nexport class ClearRecycleMenuOperation extends BatchDeleteMenuOperation {\n  constructor(menuContext: MenuContext) {\n    super(menuContext);\n  }\n\n  doAction(): void {\n    Log.info(TAG, 'delete doAction');\n    if (this.menuContext == null) {\n      Log.warn(TAG, 'menuContext is null, return');\n      return;\n    }\n\n    let dataSource: ItemDataSource = this.menuContext.dataSource;\n    if (dataSource == null) {\n      this.count = this.menuContext.items.length;\n    } else {\n      //@ts-ignore\n      this.count = dataSource.getItems().length;\n    }\n    if (this.count <= 0) {\n      Log.warn(TAG, 'count <= 0, return');\n      return;\n    }\n\n    this.confirmCallback = (): void => this.confirmCallbackBindImpl();\n    this.cancelCallback = (): void => this.cancelCallbackBindImpl();\n\n    this.menuContext.broadCast.emit(BroadcastConstants.SHOW_DELETE_DIALOG, [$r('app.string.recycleAlbum_clear_message'), $r('app.string.dialog_clear'), this.confirmCallback, this.cancelCallback]);\n  }\n\n  confirmCallback(): void {\n    this.confirmCallbackBindImpl();\n  }\n\n  protected confirmCallbackBindImpl(): void {\n    Log.info(TAG, 'Clear Recycle confirm');\n    // 1. Variable initialization\n    this.onOperationEnd = this.menuContext.onOperationEnd;\n\n    // 2. onDeleteStart exit selection mode\n    let onOperationStart: Function = this.menuContext.onOperationStart;\n    if (onOperationStart != null) onOperationStart();\n\n    this.menuContext.broadCast.emit(BroadcastConstants.DELETE_PROGRESS_DIALOG,\n      [$r('app.string.action_delete'), this.count]);\n\n    // 3. selectManager gets the URI of the data and starts processing deletion in the callback\n    let dataSource: ItemDataSource = this.menuContext.dataSource;\n    if (dataSource == null) {\n      this.items = this.menuContext.items;\n    } else {\n      //@ts-ignore\n      this.items = dataSource.getItems();\n    }\n    this.processOperation();\n  }\n}\n"
}