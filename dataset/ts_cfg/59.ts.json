{
  "type": "file",
  "name": "59.ts",
  "label": "59.ts",
  "start_line": -1,
  "end_line": 270,
  "classes": [
    {
      "type": "class",
      "name": "%dflt",
      "label": "%dflt",
      "start_line": -1,
      "end_line": 266,
      "functions": [
        {
          "type": "function",
          "name": "%dflt",
          "label": "%dflt",
          "start_line": -1,
          "end_line": 266,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/59.ts: %dflt\nTAG = 'UserFileDataItem'\nSTATUS_UNDEFINED = -1\nSTATUS_FALSE = 0\nSTATUS_TRUE = 1\nreturn",
              "start_line": 1,
              "end_line": 266,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": ""
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": ""
    },
    {
      "type": "class",
      "name": "DateAdded",
      "label": "DateAdded",
      "start_line": 29,
      "end_line": 29,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "export interface DateAdded {\n  dateAdded: number;\n  viewType: ViewType;\n}"
    },
    {
      "type": "class",
      "name": "UserFileDataItem",
      "label": "UserFileDataItem",
      "start_line": 1,
      "end_line": 270,
      "functions": [
        {
          "type": "function",
          "name": "constructor",
          "label": "constructor",
          "start_line": 1,
          "end_line": 266,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "instanceinvoke this.<@ts_files/59.ts: UserFileDataItem.%instInit()>()\nselections = parameter0: string\nselectionArgs = parameter1: string[]\ndeviceId = parameter2: string\nindex = parameter3: number\nthis = this: @ts_files/59.ts: UserFileDataItem\nthis.<@ts_files/59.ts: UserFileDataItem.selections> = selections\nthis.<@ts_files/59.ts: UserFileDataItem.selectionArgs> = selectionArgs\nthis.<@ts_files/59.ts: UserFileDataItem.deviceId> = deviceId\nthis.<@ts_files/59.ts: UserFileDataItem.hashIndex> = index\nthis.<@ts_files/59.ts: UserFileDataItem.index> = index\nreturn",
              "start_line": 1,
              "end_line": 266,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "constructor(selections: string, selectionArgs: string[], deviceId: string, index: number) {\n    this.selections = selections;\n    this.selectionArgs = selectionArgs;\n    this.deviceId = deviceId;\n    this.hashIndex = index;\n    this.index = index;\n  }"
        },
        {
          "type": "function",
          "name": "getHashCode",
          "label": "getHashCode",
          "start_line": 1,
          "end_line": 72,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/59.ts: UserFileDataItem\n%0 = this.<@ts_files/59.ts: UserFileDataItem.status>\n%1 = MediaConstants.<@%unk/%unk: .UNDEFINED>\nif %0 === %1",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%2 = this.<@ts_files/59.ts: UserFileDataItem.hashIndex>\n%3 = '' + %2",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "return %3",
                      "start_line": 1,
                      "end_line": 1,
                      "successors": []
                    }
                  ]
                },
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%4 = this.<@ts_files/59.ts: UserFileDataItem.uri>\n%5 = this.<@ts_files/59.ts: UserFileDataItem.favouriteStatus>\n%6 = %4 + %5\n%7 = %6 + ' '\n%8 = this.<@ts_files/59.ts: UserFileDataItem.orientation>\n%9 = %7 + %8\n%10 = %9 + ' '\n%11 = this.<@ts_files/59.ts: UserFileDataItem.isSelect>\n%3 = %10 + %11",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "blockRef",
                      "label": "(RepeatedBlock)"
                    }
                  ]
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "getHashCode(): string {\n    // 时间线界面角度，收藏状态变更，都需要刷新界面；大图浏览界面角度变更，需要刷新界面\n    return this.status === MediaConstants.UNDEFINED ?\n      '' + this.hashIndex :\n      this.uri + this.favouriteStatus + ' ' + this.orientation + ' ' + this.isSelect;\n  }"
        },
        {
          "type": "function",
          "name": "loadFileAsset",
          "label": "loadFileAsset",
          "start_line": 1,
          "end_line": 79,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/59.ts: UserFileDataItem\n%0 = this.<@ts_files/59.ts: UserFileDataItem.uri>\n%1 = instanceinvoke userFileModel.<@%unk/%unk: .getMediaItemByUri()>(%0)\nreturn await %1",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "async loadFileAsset(): Promise<photoAccessHelper.PhotoAsset> {\n    return await userFileModel.getMediaItemByUri(this.uri);\n  }"
        },
        {
          "type": "function",
          "name": "isLoad",
          "label": "isLoad",
          "start_line": 1,
          "end_line": 83,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/59.ts: UserFileDataItem\n%0 = this.<@ts_files/59.ts: UserFileDataItem.status>\n%1 = MediaConstants.<@%unk/%unk: .UNDEFINED>\nif %0 > %1",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "return true",
                  "start_line": 85,
                  "end_line": 264,
                  "successors": []
                },
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "return false",
                  "start_line": 87,
                  "end_line": 266,
                  "successors": []
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "isLoad(): boolean {\n    if (this.status > MediaConstants.UNDEFINED) {\n      return true;\n    }\n    return false;\n  }"
        },
        {
          "type": "function",
          "name": "load",
          "label": "load",
          "start_line": 1,
          "end_line": 266,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "return",
              "start_line": 74,
              "end_line": 266,
              "successors": []
            },
            {
              "type": "block",
              "name": "Block?",
              "label": "%4 = instanceinvoke this.<@ts_files/59.ts: UserFileDataItem.loadFileAsset()>()\nfileAsset = await %4\nif fileAsset != null",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "instanceinvoke this.<@ts_files/59.ts: UserFileDataItem.update(photoAccessHelper.PhotoAsset)>(fileAsset)",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "return",
                      "start_line": 74,
                      "end_line": 266,
                      "successors": []
                    }
                  ]
                },
                {
                  "type": "blockRef",
                  "label": "(RepeatedBlock)"
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "block",
              "name": "Block?",
              "label": "isForce = parameter0: boolean\nthis = this: @ts_files/59.ts: UserFileDataItem\n%0 = this.<@ts_files/59.ts: UserFileDataItem.status>\n%1 = 'load ' + %0\ninstanceinvoke Log.<@%unk/%unk: .info()>(TAG, %1)\n%2 = this.<@ts_files/59.ts: UserFileDataItem.status>\nif isForce != false",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%3 = MediaConstants.<@%unk/%unk: .PART_LOADED>",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "if %2 > %3",
                      "start_line": 1,
                      "end_line": 1,
                      "successors": [
                        {
                          "type": "blockRef",
                          "label": "(RepeatedBlock)"
                        },
                        {
                          "type": "blockRef",
                          "label": "(RepeatedBlock)"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%3 = MediaConstants.<@%unk/%unk: .UNDEFINED>",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "blockRef",
                      "label": "(RepeatedBlock)"
                    }
                  ]
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "async load(isForce: boolean): Promise<void> {\n    Log.info(TAG, 'load ' + this.status);\n    if (this.status > (isForce ? MediaConstants.PART_LOADED : MediaConstants.UNDEFINED)) {\n      return;\n    }\n    let fileAsset = await this.loadFileAsset();\n    if (fileAsset != null) {\n      this.update(fileAsset);\n    }\n    return;\n  }"
        },
        {
          "type": "function",
          "name": "update",
          "label": "update",
          "start_line": 1,
          "end_line": 102,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "fileAsset = parameter0: photoAccessHelper.PhotoAsset\nthis = this: @ts_files/59.ts: UserFileDataItem\nthis.<@ts_files/59.ts: UserFileDataItem.fileAsset> = fileAsset\n%0 = fileAsset.<@%unk/%unk: .uri>\nthis.<@ts_files/59.ts: UserFileDataItem.uri> = %0\n%1 = fileAsset.<@%unk/%unk: .displayName>\nthis.<@ts_files/59.ts: UserFileDataItem.displayName> = %1\n%2 = fileAsset.<@%unk/%unk: .photoType>\nthis.<@ts_files/59.ts: UserFileDataItem.mediaType> = %2\n%3 = instanceinvoke screenManager.<@%unk/%unk: .getWinWidth()>()\nthis.<@ts_files/59.ts: UserFileDataItem.width> = %3\n%4 = instanceinvoke screenManager.<@%unk/%unk: .getWinHeight()>()\nthis.<@ts_files/59.ts: UserFileDataItem.height> = %4\n%5 = MediaConstants.<@%unk/%unk: .ROTATE_NONE>\nthis.<@ts_files/59.ts: UserFileDataItem.orientation> = %5",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%6 = photoAccessHelper.<@%unk/%unk: .PhotoKeys>\n%7 = %6.<@%unk/%unk: .ORIENTATION>\n%8 = instanceinvoke %7.<@%unk/%unk: .toString()>()\n%9 = instanceinvoke fileAsset.<@%unk/%unk: .get()>(%8)\n%10 = <number>%9\nthis.<@ts_files/59.ts: UserFileDataItem.orientation> = %10\n%11 = this.<@ts_files/59.ts: UserFileDataItem.orientation>\n%12 = 'orientation ' + %11\ninstanceinvoke Log.<@%unk/%unk: .info()>(TAG, %12)",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "",
                      "start_line": 1,
                      "end_line": 1,
                      "successors": [
                        {
                          "type": "block",
                          "name": "Block?",
                          "label": "%15 = photoAccessHelper.<@%unk/%unk: .PhotoKeys>\n%16 = %15.<@%unk/%unk: .DURATION>\n%17 = instanceinvoke %16.<@%unk/%unk: .toString()>()\n%18 = instanceinvoke fileAsset.<@%unk/%unk: .get()>(%17)\n%19 = <number>%18\nthis.<@ts_files/59.ts: UserFileDataItem.duration> = %19\n%20 = this.<@ts_files/59.ts: UserFileDataItem.duration>\n%21 = 'duration ' + %20\ninstanceinvoke Log.<@%unk/%unk: .info()>(TAG, %21)",
                          "start_line": 1,
                          "end_line": 1,
                          "successors": [
                            {
                              "type": "block",
                              "name": "Block?",
                              "label": "",
                              "start_line": 1,
                              "end_line": 1,
                              "successors": [
                                {
                                  "type": "block",
                                  "name": "Block?",
                                  "label": "%24 = this.<@ts_files/59.ts: UserFileDataItem.orientation>\n%25 = MediaConstants.<@%unk/%unk: .ROTATE_ONCE>\n%26 = %24 === %25\n%27 = this.<@ts_files/59.ts: UserFileDataItem.orientation>\n%28 = MediaConstants.<@%unk/%unk: .ROTATE_THIRD>\n%29 = %27 === %28\n%30 = %26 || %29\nif %30 != false",
                                  "start_line": 1,
                                  "end_line": 1,
                                  "successors": [
                                    {
                                      "type": "block",
                                      "name": "Block?",
                                      "label": "%31 = photoAccessHelper.<@%unk/%unk: .PhotoKeys>\n%32 = %31.<@%unk/%unk: .HEIGHT>\n%33 = instanceinvoke %32.<@%unk/%unk: .toString()>()\n%34 = instanceinvoke fileAsset.<@%unk/%unk: .get()>(%33)\n%35 = <number>%34\nthis.<@ts_files/59.ts: UserFileDataItem.width> = %35\n%36 = photoAccessHelper.<@%unk/%unk: .PhotoKeys>\n%37 = %36.<@%unk/%unk: .WIDTH>\n%38 = instanceinvoke %37.<@%unk/%unk: .toString()>()\n%39 = instanceinvoke fileAsset.<@%unk/%unk: .get()>(%38)\n%40 = <number>%39\nthis.<@ts_files/59.ts: UserFileDataItem.height> = %40",
                                      "start_line": 1,
                                      "end_line": 1,
                                      "successors": [
                                        {
                                          "type": "block",
                                          "name": "Block?",
                                          "label": "%51 = this.<@ts_files/59.ts: UserFileDataItem.width>\n%52 = 'width ' + %51\ninstanceinvoke Log.<@%unk/%unk: .info()>(TAG, %52)\n%53 = this.<@ts_files/59.ts: UserFileDataItem.height>\n%54 = 'height ' + %53\ninstanceinvoke Log.<@%unk/%unk: .info()>(TAG, %54)",
                                          "start_line": 1,
                                          "end_line": 1,
                                          "successors": [
                                            {
                                              "type": "block",
                                              "name": "Block?",
                                              "label": "",
                                              "start_line": 1,
                                              "end_line": 1,
                                              "successors": [
                                                {
                                                  "type": "block",
                                                  "name": "Block?",
                                                  "label": "%57 = photoAccessHelper.<@%unk/%unk: .PhotoKeys>\n%58 = %57.<@%unk/%unk: .TITLE>\n%59 = instanceinvoke %58.<@%unk/%unk: .toString()>()\n%60 = instanceinvoke fileAsset.<@%unk/%unk: .get()>(%59)\n%61 = <string>%60\nthis.<@ts_files/59.ts: UserFileDataItem.title> = %61\n%62 = this.<@ts_files/59.ts: UserFileDataItem.title>\n%63 = 'title ' + %62\ninstanceinvoke Log.<@%unk/%unk: .info()>(TAG, %63)",
                                                  "start_line": 1,
                                                  "end_line": 1,
                                                  "successors": [
                                                    {
                                                      "type": "block",
                                                      "name": "Block?",
                                                      "label": "",
                                                      "start_line": 1,
                                                      "end_line": 1,
                                                      "successors": [
                                                        {
                                                          "type": "block",
                                                          "name": "Block?",
                                                          "label": "%66 = photoAccessHelper.<@%unk/%unk: .PhotoKeys>\n%67 = %66.<@%unk/%unk: .DATE_ADDED>\n%68 = instanceinvoke %67.<@%unk/%unk: .toString()>()\n%69 = instanceinvoke fileAsset.<@%unk/%unk: .get()>(%68)\n%70 = <number>%69\n%71 = %70 * 1000\nthis.<@ts_files/59.ts: UserFileDataItem.dateAdded> = %71\n%72 = photoAccessHelper.<@%unk/%unk: .PhotoKeys>\n%73 = %72.<@%unk/%unk: .DATE_MODIFIED>\n%74 = instanceinvoke %73.<@%unk/%unk: .toString()>()\n%75 = instanceinvoke fileAsset.<@%unk/%unk: .get()>(%74)\n%76 = <number>%75\n%77 = %76 * 1000\nthis.<@ts_files/59.ts: UserFileDataItem.dateModified> = %77\n%78 = photoAccessHelper.<@%unk/%unk: .PhotoKeys>\n%79 = %78.<@%unk/%unk: .DATE_TAKEN>\n%80 = instanceinvoke %79.<@%unk/%unk: .toString()>()\n%81 = instanceinvoke fileAsset.<@%unk/%unk: .get()>(%80)\n%82 = <number>%81\n%83 = %82 * 1000\nthis.<@ts_files/59.ts: UserFileDataItem.dateTaken> = %83\n%84 = this.<@ts_files/59.ts: UserFileDataItem.dateAdded>\n%85 = 'dateAdded ' + %84\ninstanceinvoke Log.<@%unk/%unk: .info()>(TAG, %85)",
                                                          "start_line": 1,
                                                          "end_line": 1,
                                                          "successors": [
                                                            {
                                                              "type": "block",
                                                              "name": "Block?",
                                                              "label": "",
                                                              "start_line": 1,
                                                              "end_line": 1,
                                                              "successors": [
                                                                {
                                                                  "type": "block",
                                                                  "name": "Block?",
                                                                  "label": "%88 = photoAccessHelper.<@%unk/%unk: .PhotoKeys>\n%89 = %88.<@%unk/%unk: .FAVORITE>\n%90 = instanceinvoke %89.<@%unk/%unk: .toString()>()\n%91 = instanceinvoke fileAsset.<@%unk/%unk: .get()>(%90)\n%92 = <boolean>%91\nif %92 != false",
                                                                  "start_line": 1,
                                                                  "end_line": 1,
                                                                  "successors": [
                                                                    {
                                                                      "type": "block",
                                                                      "name": "Block?",
                                                                      "label": "%93 = STATUS_TRUE",
                                                                      "start_line": 1,
                                                                      "end_line": 1,
                                                                      "successors": [
                                                                        {
                                                                          "type": "block",
                                                                          "name": "Block?",
                                                                          "label": "this.<@ts_files/59.ts: UserFileDataItem.favouriteStatus> = %93\n%94 = this.<@ts_files/59.ts: UserFileDataItem.favouriteStatus>\n%95 = 'favouriteStatus ' + %94\ninstanceinvoke Log.<@%unk/%unk: .info()>(TAG, %95)",
                                                                          "start_line": 1,
                                                                          "end_line": 1,
                                                                          "successors": [
                                                                            {
                                                                              "type": "block",
                                                                              "name": "Block?",
                                                                              "label": "",
                                                                              "start_line": 1,
                                                                              "end_line": 1,
                                                                              "successors": [
                                                                                {
                                                                                  "type": "block",
                                                                                  "name": "Block?",
                                                                                  "label": "",
                                                                                  "start_line": 1,
                                                                                  "end_line": 1,
                                                                                  "successors": [
                                                                                    {
                                                                                      "type": "block",
                                                                                      "name": "Block?",
                                                                                      "label": "%98 = photoAccessHelper.<@%unk/%unk: .PhotoKeys>\n%99 = %98.<@%unk/%unk: .SIZE>\n%100 = instanceinvoke %99.<@%unk/%unk: .toString()>()\n%101 = instanceinvoke fileAsset.<@%unk/%unk: .get()>(%100)\n%102 = <number>%101\nthis.<@ts_files/59.ts: UserFileDataItem.size> = %102\n%103 = this.<@ts_files/59.ts: UserFileDataItem.size>\n%104 = 'size ' + %103\ninstanceinvoke Log.<@%unk/%unk: .info()>(TAG, %104)",
                                                                                      "start_line": 1,
                                                                                      "end_line": 1,
                                                                                      "successors": [
                                                                                        {
                                                                                          "type": "block",
                                                                                          "name": "Block?",
                                                                                          "label": "%107 = new @ts_files/59.ts: %AC$UserFileDataItem$update$0\ninstanceinvoke %107.<@ts_files/59.ts: %AC$UserFileDataItem$update$0.constructor()>()\nsize = %107\n%108 = fileAsset != null\n%109 = this.<@ts_files/59.ts: UserFileDataItem.defaultThumbnail>\n%110 = %109 == undefined\n%111 = %108 && %110\nif %111 != false",
                                                                                          "start_line": 1,
                                                                                          "end_line": 1,
                                                                                          "successors": [
                                                                                            {
                                                                                              "type": "block",
                                                                                              "name": "Block?",
                                                                                              "label": "",
                                                                                              "start_line": 1,
                                                                                              "end_line": 1,
                                                                                              "successors": [
                                                                                                {
                                                                                                  "type": "block",
                                                                                                  "name": "Block?",
                                                                                                  "label": "%112 = this.<@ts_files/59.ts: UserFileDataItem.fileAsset>\n%113 = instanceinvoke %112.<@%unk/%unk: .getThumbnail()>(size)\nthis.<@ts_files/59.ts: UserFileDataItem.defaultThumbnail> = await %113",
                                                                                                  "start_line": 1,
                                                                                                  "end_line": 1,
                                                                                                  "successors": [
                                                                                                    {
                                                                                                      "type": "block",
                                                                                                      "name": "Block?",
                                                                                                      "label": "%116 = this.<@ts_files/59.ts: UserFileDataItem.uri>\n%117 = this.<@ts_files/59.ts: UserFileDataItem.isSelect>\n%118 = instanceinvoke selectManager.<@%unk/%unk: .isSelect()>(%116, %117)\nthis.<@ts_files/59.ts: UserFileDataItem.isSelect> = %118\n%119 = this.<@ts_files/59.ts: UserFileDataItem.width>\nthis.<@ts_files/59.ts: UserFileDataItem.imgWidth> = %119\n%120 = this.<@ts_files/59.ts: UserFileDataItem.height>\nthis.<@ts_files/59.ts: UserFileDataItem.imgHeight> = %120\n%121 = this.<@ts_files/59.ts: UserFileDataItem.width>\n%122 = %121 > 0\n%123 = this.<@ts_files/59.ts: UserFileDataItem.height>\n%124 = %123 > 0\n%125 = %122 && %124\nif %125 != false",
                                                                                                      "start_line": 1,
                                                                                                      "end_line": 1,
                                                                                                      "successors": [
                                                                                                        {
                                                                                                          "type": "block",
                                                                                                          "name": "Block?",
                                                                                                          "label": "%126 = MediaConstants.<@%unk/%unk: .LOADED>\nthis.<@ts_files/59.ts: UserFileDataItem.status> = %126",
                                                                                                          "start_line": 1,
                                                                                                          "end_line": 1,
                                                                                                          "successors": [
                                                                                                            {
                                                                                                              "type": "block",
                                                                                                              "name": "Block?",
                                                                                                              "label": "return",
                                                                                                              "start_line": 74,
                                                                                                              "end_line": 266,
                                                                                                              "successors": []
                                                                                                            }
                                                                                                          ]
                                                                                                        },
                                                                                                        {
                                                                                                          "type": "block",
                                                                                                          "name": "Block?",
                                                                                                          "label": "%127 = MediaConstants.<@%unk/%unk: .PART_LOADED>\nthis.<@ts_files/59.ts: UserFileDataItem.status> = %127",
                                                                                                          "start_line": 1,
                                                                                                          "end_line": 1,
                                                                                                          "successors": [
                                                                                                            {
                                                                                                              "type": "blockRef",
                                                                                                              "label": "(RepeatedBlock)"
                                                                                                            }
                                                                                                          ]
                                                                                                        }
                                                                                                      ]
                                                                                                    }
                                                                                                  ]
                                                                                                }
                                                                                              ]
                                                                                            },
                                                                                            {
                                                                                              "type": "blockRef",
                                                                                              "label": "(RepeatedBlock)"
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "block",
                                                                      "name": "Block?",
                                                                      "label": "%93 = STATUS_FALSE",
                                                                      "start_line": 1,
                                                                      "end_line": 1,
                                                                      "successors": [
                                                                        {
                                                                          "type": "blockRef",
                                                                          "label": "(RepeatedBlock)"
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "block",
                                      "name": "Block?",
                                      "label": "%41 = photoAccessHelper.<@%unk/%unk: .PhotoKeys>\n%42 = %41.<@%unk/%unk: .WIDTH>\n%43 = instanceinvoke %42.<@%unk/%unk: .toString()>()\n%44 = instanceinvoke fileAsset.<@%unk/%unk: .get()>(%43)\n%45 = <number>%44\nthis.<@ts_files/59.ts: UserFileDataItem.width> = %45\n%46 = photoAccessHelper.<@%unk/%unk: .PhotoKeys>\n%47 = %46.<@%unk/%unk: .HEIGHT>\n%48 = instanceinvoke %47.<@%unk/%unk: .toString()>()\n%49 = instanceinvoke fileAsset.<@%unk/%unk: .get()>(%48)\n%50 = <number>%49\nthis.<@ts_files/59.ts: UserFileDataItem.height> = %50",
                                      "start_line": 1,
                                      "end_line": 1,
                                      "successors": [
                                        {
                                          "type": "blockRef",
                                          "label": "(RepeatedBlock)"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "block",
              "name": "Block?",
              "label": "err = caughtexception: unknown\n%13 = instanceinvoke JSON.<@%unk/%unk: .stringify()>(err)\n%14 = 'get orientation ' + %13\ninstanceinvoke Log.<@%unk/%unk: .error()>(TAG, %14)",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "blockRef",
                  "label": "(RepeatedBlock)"
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "block",
              "name": "Block?",
              "label": "err = caughtexception: unknown\n%22 = instanceinvoke JSON.<@%unk/%unk: .stringify()>(err)\n%23 = 'get duration ' + %22\ninstanceinvoke Log.<@%unk/%unk: .error()>(TAG, %23)",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "blockRef",
                  "label": "(RepeatedBlock)"
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "block",
              "name": "Block?",
              "label": "err = caughtexception: unknown\n%55 = instanceinvoke JSON.<@%unk/%unk: .stringify()>(err)\n%56 = 'get width height ' + %55\ninstanceinvoke Log.<@%unk/%unk: .error()>(TAG, %56)",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "blockRef",
                  "label": "(RepeatedBlock)"
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "block",
              "name": "Block?",
              "label": "err = caughtexception: unknown\n%64 = instanceinvoke JSON.<@%unk/%unk: .stringify()>(err)\n%65 = 'get title ' + %64\ninstanceinvoke Log.<@%unk/%unk: .error()>(TAG, %65)",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "blockRef",
                  "label": "(RepeatedBlock)"
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "block",
              "name": "Block?",
              "label": "err = caughtexception: unknown\n%86 = instanceinvoke JSON.<@%unk/%unk: .stringify()>(err)\n%87 = 'get date ' + %86\ninstanceinvoke Log.<@%unk/%unk: .error()>(TAG, %87)",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "blockRef",
                  "label": "(RepeatedBlock)"
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "block",
              "name": "Block?",
              "label": "err = caughtexception: unknown\n%96 = instanceinvoke JSON.<@%unk/%unk: .stringify()>(err)\n%97 = 'get favouriteStatus ' + %96\ninstanceinvoke Log.<@%unk/%unk: .error()>(TAG, %97)",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "blockRef",
                  "label": "(RepeatedBlock)"
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "block",
              "name": "Block?",
              "label": "err = caughtexception: unknown\n%105 = instanceinvoke JSON.<@%unk/%unk: .stringify()>(err)\n%106 = 'get favouriteStatus ' + %105\ninstanceinvoke Log.<@%unk/%unk: .error()>(TAG, %106)",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "blockRef",
                  "label": "(RepeatedBlock)"
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "block",
              "name": "Block?",
              "label": "err = caughtexception: unknown\n%114 = instanceinvoke JSON.<@%unk/%unk: .stringify()>(err)\n%115 = 'getThumbnail error: ' + %114\ninstanceinvoke Log.<@%unk/%unk: .error()>(TAG, %115)",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "blockRef",
                  "label": "(RepeatedBlock)"
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "async update(fileAsset: photoAccessHelper.PhotoAsset): Promise<void> {\n    this.fileAsset = fileAsset;\n    this.uri = fileAsset.uri;\n    this.displayName = fileAsset.displayName;\n    this.mediaType = fileAsset.photoType;\n    this.width = screenManager.getWinWidth();\n    this.height = screenManager.getWinHeight();\n    this.orientation = MediaConstants.ROTATE_NONE;\n    try {\n      this.orientation = fileAsset.get(photoAccessHelper.PhotoKeys.ORIENTATION.toString()) as number;\n      Log.info(TAG, 'orientation ' + this.orientation);\n    } catch (err) {\n      Log.error(TAG, 'get orientation ' + JSON.stringify(err));\n    }\n    try {\n      this.duration = fileAsset.get(photoAccessHelper.PhotoKeys.DURATION.toString()) as number;\n      Log.info(TAG, 'duration ' + this.duration);\n    } catch (err) {\n      Log.error(TAG, 'get duration ' + JSON.stringify(err));\n    }\n    try {\n      if (this.orientation === MediaConstants.ROTATE_ONCE || this.orientation === MediaConstants.ROTATE_THIRD) {\n        this.width = fileAsset.get(photoAccessHelper.PhotoKeys.HEIGHT.toString()) as number;\n        this.height = fileAsset.get(photoAccessHelper.PhotoKeys.WIDTH.toString()) as number;\n      } else {\n        this.width = fileAsset.get(photoAccessHelper.PhotoKeys.WIDTH.toString()) as number;\n        this.height = fileAsset.get(photoAccessHelper.PhotoKeys.HEIGHT.toString()) as number;\n      }\n      Log.info(TAG, 'width ' + this.width);\n      Log.info(TAG, 'height ' + this.height);\n    } catch (err) {\n      Log.error(TAG, 'get width height ' + JSON.stringify(err));\n    }\n    try {\n      this.title = fileAsset.get(photoAccessHelper.PhotoKeys.TITLE.toString()) as string;\n      Log.info(TAG, 'title ' + this.title);\n    } catch (err) {\n      Log.error(TAG, 'get title ' + JSON.stringify(err));\n    }\n    try {\n      this.dateAdded = fileAsset.get(photoAccessHelper.PhotoKeys.DATE_ADDED.toString()) as number * 1000;\n      this.dateModified = fileAsset.get(photoAccessHelper.PhotoKeys.DATE_MODIFIED.toString()) as number * 1000;\n      this.dateTaken = fileAsset.get(photoAccessHelper.PhotoKeys.DATE_TAKEN.toString()) as number * 1000;\n      Log.info(TAG, 'dateAdded ' + this.dateAdded);\n    } catch (err) {\n      Log.error(TAG, 'get date ' + JSON.stringify(err));\n    }\n    try {\n      this.favouriteStatus = fileAsset.get(photoAccessHelper.PhotoKeys.FAVORITE.toString()) as boolean ? STATUS_TRUE : STATUS_FALSE\n      Log.info(TAG, 'favouriteStatus ' + this.favouriteStatus);\n    } catch (err) {\n      Log.error(TAG, 'get favouriteStatus ' + JSON.stringify(err));\n    }\n    try {\n      this.size = fileAsset.get(photoAccessHelper.PhotoKeys.SIZE.toString()) as number;\n      Log.info(TAG, 'size ' + this.size);\n    } catch (err) {\n      Log.error(TAG, 'get favouriteStatus ' + JSON.stringify(err));\n    }\n    let size = { width: MediaConstants.DEFAULT_SIZE, height: MediaConstants.DEFAULT_SIZE };\n    if (fileAsset != null && this.defaultThumbnail == undefined) {\n      try {\n        this.defaultThumbnail = await this.fileAsset.getThumbnail(size);\n      } catch (err) {\n        Log.error(TAG, 'getThumbnail error: ' + JSON.stringify(err));\n      }\n    }\n    this.isSelect = selectManager.isSelect(this.uri, this.isSelect);\n    this.imgWidth = this.width;\n    this.imgHeight = this.height;\n    if (this.width > 0 && this.height > 0) {\n      this.status = MediaConstants.LOADED;\n    } else {\n      this.status = MediaConstants.PART_LOADED;\n    }\n  }"
        },
        {
          "type": "function",
          "name": "getThumbnail",
          "label": "getThumbnail",
          "start_line": 1,
          "end_line": 179,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "width = parameter0: number\nheight = parameter1: number\nthis = this: @ts_files/59.ts: UserFileDataItem\n%0 = this.<@ts_files/59.ts: UserFileDataItem.status>\n%1 = 'getThumbnail ' + %0\ninstanceinvoke Log.<@%unk/%unk: .debug()>(TAG, %1)\n%2 = this.<@ts_files/59.ts: UserFileDataItem.status>\n%3 = MediaConstants.<@%unk/%unk: .LOADED>\n%4 = %2 !== %3\n%5 = this.<@ts_files/59.ts: UserFileDataItem.status>\n%6 = MediaConstants.<@%unk/%unk: .PART_LOADED>\n%7 = %5 !== %6\n%8 = %4 && %7\nif %8 != false",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%9 = this.<@ts_files/59.ts: UserFileDataItem.status>\n%10 = 'getThumbnail fail as status: ' + %9\ninstanceinvoke Log.<@%unk/%unk: .warn()>(TAG, %10)\nreturn undefined",
                  "start_line": 1,
                  "end_line": 183,
                  "successors": []
                },
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%11 = MediaConstants.<@%unk/%unk: .DEFAULT_SIZE>\n%12 = width === %11\n%13 = MediaConstants.<@%unk/%unk: .DEFAULT_SIZE>\n%14 = height === %13\n%15 = %12 && %14\nif %15 != false",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "%16 = this.<@ts_files/59.ts: UserFileDataItem.defaultThumbnail>\nreturn %16",
                      "start_line": 1,
                      "end_line": 1,
                      "successors": []
                    },
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "newThumbnail = undefined\n%17 = new @ts_files/59.ts: %AC$UserFileDataItem$getThumbnail$1\ninstanceinvoke %17.<@ts_files/59.ts: %AC$UserFileDataItem$getThumbnail$1.constructor()>()\nsize = %17\n%18 = instanceinvoke width.<@%unk/%unk: .toString()>()\n%19 = instanceinvoke height.<@%unk/%unk: .toString()>()\n%20 = %18 + %19\n%21 = this.<@ts_files/59.ts: UserFileDataItem.thumbnailArray>\ncacheThumbnail = instanceinvoke %21.<@%unk/%unk: .get()>(%20)\nif cacheThumbnail != null",
                      "start_line": 1,
                      "end_line": 1,
                      "successors": [
                        {
                          "type": "block",
                          "name": "Block?",
                          "label": "return cacheThumbnail",
                          "start_line": 192,
                          "end_line": 192,
                          "successors": []
                        },
                        {
                          "type": "block",
                          "name": "Block?",
                          "label": "%22 = this.<@ts_files/59.ts: UserFileDataItem.fileAsset>\nif %22 != undefined",
                          "start_line": 1,
                          "end_line": 1,
                          "successors": [
                            {
                              "type": "block",
                              "name": "Block?",
                              "label": "",
                              "start_line": 1,
                              "end_line": 1,
                              "successors": [
                                {
                                  "type": "block",
                                  "name": "Block?",
                                  "label": "%23 = this.<@ts_files/59.ts: UserFileDataItem.fileAsset>\n%24 = instanceinvoke %23.<@%unk/%unk: .getThumbnail()>(size)\nnewThumbnail = await %24\n%25 = instanceinvoke width.<@%unk/%unk: .toString()>()\n%26 = instanceinvoke height.<@%unk/%unk: .toString()>()\n%27 = %25 + %26\n%28 = this.<@ts_files/59.ts: UserFileDataItem.thumbnailArray>\ninstanceinvoke %28.<@%unk/%unk: .set()>(%27, newThumbnail)",
                                  "start_line": 1,
                                  "end_line": 1,
                                  "successors": [
                                    {
                                      "type": "block",
                                      "name": "Block?",
                                      "label": "return newThumbnail",
                                      "start_line": 202,
                                      "end_line": 202,
                                      "successors": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "blockRef",
                              "label": "(RepeatedBlock)"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "block",
              "name": "Block?",
              "label": "err = caughtexception: unknown\n%29 = instanceinvoke JSON.<@%unk/%unk: .stringify()>(err)\n%30 = 'getThumbnail error: ' + %29\ninstanceinvoke Log.<@%unk/%unk: .error()>(TAG, %30)",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "blockRef",
                  "label": "(RepeatedBlock)"
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "async getThumbnail(width: number, height: number): Promise<PixelMap> {\n    Log.debug(TAG, 'getThumbnail ' + this.status);\n    if (this.status !== MediaConstants.LOADED && this.status !== MediaConstants.PART_LOADED) {\n      Log.warn(TAG, 'getThumbnail fail as status: ' + this.status);\n      return undefined;\n    }\n    if (width === MediaConstants.DEFAULT_SIZE && height === MediaConstants.DEFAULT_SIZE) {\n      return this.defaultThumbnail;\n    }\n    let newThumbnail: PixelMap = undefined;\n    let size = { width: width, height: height };\n    let cacheThumbnail = this.thumbnailArray.get(width.toString() + height.toString());\n    if (cacheThumbnail != null) {\n      return cacheThumbnail;\n    }\n    if (this.fileAsset != undefined) {\n      try {\n        newThumbnail = await this.fileAsset.getThumbnail(size);\n        this.thumbnailArray.set(width.toString() + height.toString(), newThumbnail);\n      } catch (err) {\n        Log.error(TAG, 'getThumbnail error: ' + JSON.stringify(err));\n      }\n    }\n    return newThumbnail;\n  }"
        },
        {
          "type": "function",
          "name": "getAlt",
          "label": "getAlt",
          "start_line": 1,
          "end_line": 205,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/59.ts: UserFileDataItem\n%0 = this.<@ts_files/59.ts: UserFileDataItem.mediaType>\n%1 = photoAccessHelper.<@%unk/%unk: .PhotoType>\n%2 = %1.<@%unk/%unk: .VIDEO>\nif %0 === %2",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%3 = staticinvoke <@%unk/%unk: .$r()>('app.media.alt_video_placeholder')\nreturn %3",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": []
                },
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%4 = staticinvoke <@%unk/%unk: .$r()>('app.media.alt_placeholder')\nreturn %4",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": []
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "getAlt(): Resource {\n    if (this.mediaType === photoAccessHelper.PhotoType.VIDEO) {\n      return $r('app.media.alt_video_placeholder');\n    } else {\n      return $r('app.media.alt_placeholder');\n    }\n  }"
        },
        {
          "type": "function",
          "name": "setSelect",
          "label": "setSelect",
          "start_line": 1,
          "end_line": 266,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "isSelect = parameter0: boolean\nthis = this: @ts_files/59.ts: UserFileDataItem\nthis.<@ts_files/59.ts: UserFileDataItem.isSelect> = isSelect\n%0 = this.<@ts_files/59.ts: UserFileDataItem.uri>\n%1 = this.<@ts_files/59.ts: UserFileDataItem.isSelect>\ninstanceinvoke selectManager.<@%unk/%unk: .setSelect()>(%0, %1)\nreturn",
              "start_line": 1,
              "end_line": 266,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "setSelect(isSelect: boolean): void {\n    this.isSelect = isSelect;\n    selectManager.setSelect(this.uri, this.isSelect);\n  }"
        },
        {
          "type": "function",
          "name": "onDelete",
          "label": "onDelete",
          "start_line": 1,
          "end_line": 266,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/59.ts: UserFileDataItem",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%0 = this.<@ts_files/59.ts: UserFileDataItem.uri>\n%1 = instanceinvoke userFileModel.<@%unk/%unk: .deleteOne()>(%0)\n%2 = await %1\n%3 = this.<@ts_files/59.ts: UserFileDataItem.uri>\ninstanceinvoke selectManager.<@%unk/%unk: .deleteSelect()>(%3)\n%4 = MediaConstants.<@%unk/%unk: .TRASHED>\nthis.<@ts_files/59.ts: UserFileDataItem.status> = %4\nreturn true",
                  "start_line": 1,
                  "end_line": 264,
                  "successors": []
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "block",
              "name": "Block?",
              "label": "err = caughtexception: unknown\n%5 = this.<@ts_files/59.ts: UserFileDataItem.index>\n%6 = 'onDelete ' + %5\n%7 = %6 + ' error: '\n%8 = instanceinvoke JSON.<@%unk/%unk: .stringify()>(err)\n%9 = %7 + %8\ninstanceinvoke Log.<@%unk/%unk: .error()>(TAG, %9)\nreturn false",
              "start_line": 1,
              "end_line": 266,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "return",
                  "start_line": 74,
                  "end_line": 266,
                  "successors": []
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "async onDelete(): Promise<boolean> {\n    try {\n      await userFileModel.deleteOne(this.uri);\n      selectManager.deleteSelect(this.uri);\n      this.status = MediaConstants.TRASHED;\n      return true;\n    } catch (err) {\n      Log.error(TAG, 'onDelete ' + this.index + ' error: ' + JSON.stringify(err));\n      return false;\n    }\n  }"
        },
        {
          "type": "function",
          "name": "addToAlbum",
          "label": "addToAlbum",
          "start_line": 1,
          "end_line": 266,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "albumUri = parameter0: string\nthis = this: @ts_files/59.ts: UserFileDataItem",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%0 = this.<@ts_files/59.ts: UserFileDataItem.uri>\n%1 = instanceinvoke userFileModel.<@%unk/%unk: .addPhotoToAlbumByUserFileMgr()>(albumUri, %0)\n%2 = await %1\n%3 = this.<@ts_files/59.ts: UserFileDataItem.uri>\ninstanceinvoke selectManager.<@%unk/%unk: .deleteSelect()>(%3)\n%4 = MediaConstants.<@%unk/%unk: .TRASHED>\nthis.<@ts_files/59.ts: UserFileDataItem.status> = %4\nreturn true",
                  "start_line": 1,
                  "end_line": 264,
                  "successors": []
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "block",
              "name": "Block?",
              "label": "err = caughtexception: unknown\n%5 = this.<@ts_files/59.ts: UserFileDataItem.index>\n%6 = 'addToAlbum ' + %5\n%7 = %6 + ' error: '\n%8 = instanceinvoke JSON.<@%unk/%unk: .stringify()>(err)\n%9 = %7 + %8\ninstanceinvoke Log.<@%unk/%unk: .error()>(TAG, %9)\nreturn false",
              "start_line": 1,
              "end_line": 266,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "return",
                  "start_line": 74,
                  "end_line": 266,
                  "successors": []
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "async addToAlbum(albumUri:string): Promise<boolean> {\n    try {\n      await userFileModel.addPhotoToAlbumByUserFileMgr(albumUri, this.uri);\n      selectManager.deleteSelect(this.uri);\n      this.status = MediaConstants.TRASHED;\n      return true;\n    } catch (err) {\n      Log.error(TAG, 'addToAlbum ' + this.index + ' error: ' + JSON.stringify(err));\n      return false;\n    }\n  }"
        },
        {
          "type": "function",
          "name": "isDeleted",
          "label": "isDeleted",
          "start_line": 1,
          "end_line": 242,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/59.ts: UserFileDataItem\n%0 = this.<@ts_files/59.ts: UserFileDataItem.status>\n%1 = MediaConstants.<@%unk/%unk: .TRASHED>\n%2 = %0 === %1\nreturn %2",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "isDeleted(): boolean {\n    return this.status === MediaConstants.TRASHED;\n  }"
        },
        {
          "type": "function",
          "name": "isFavor",
          "label": "isFavor",
          "start_line": 1,
          "end_line": 246,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/59.ts: UserFileDataItem\n%0 = this.<@ts_files/59.ts: UserFileDataItem.favouriteStatus>\nif %0 === STATUS_UNDEFINED",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%1 = instanceinvoke this.<@ts_files/59.ts: UserFileDataItem.loadFileAsset()>()\nfileAsset = await %1",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "%2 = photoAccessHelper.<@%unk/%unk: .PhotoKeys>\n%3 = %2.<@%unk/%unk: .FAVORITE>\n%4 = instanceinvoke %3.<@%unk/%unk: .toString()>()\n%5 = instanceinvoke fileAsset.<@%unk/%unk: .get()>(%4)\n%6 = <boolean>%5\nif %6 != false",
                      "start_line": 1,
                      "end_line": 1,
                      "successors": [
                        {
                          "type": "block",
                          "name": "Block?",
                          "label": "%7 = STATUS_TRUE",
                          "start_line": 1,
                          "end_line": 1,
                          "successors": [
                            {
                              "type": "block",
                              "name": "Block?",
                              "label": "this.<@ts_files/59.ts: UserFileDataItem.favouriteStatus> = %7",
                              "start_line": 1,
                              "end_line": 1,
                              "successors": [
                                {
                                  "type": "block",
                                  "name": "Block?",
                                  "label": "",
                                  "start_line": 1,
                                  "end_line": 1,
                                  "successors": [
                                    {
                                      "type": "block",
                                      "name": "Block?",
                                      "label": "%10 = this.<@ts_files/59.ts: UserFileDataItem.favouriteStatus>\n%11 = %10 === STATUS_TRUE\nreturn %11",
                                      "start_line": 1,
                                      "end_line": 1,
                                      "successors": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "block",
                          "name": "Block?",
                          "label": "%7 = STATUS_FALSE",
                          "start_line": 1,
                          "end_line": 1,
                          "successors": [
                            {
                              "type": "blockRef",
                              "label": "(RepeatedBlock)"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "blockRef",
                  "label": "(RepeatedBlock)"
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "block",
              "name": "Block?",
              "label": "err = caughtexception: unknown\n%8 = instanceinvoke JSON.<@%unk/%unk: .stringify()>(err)\n%9 = 'isFavor error: ' + %8\ninstanceinvoke Log.<@%unk/%unk: .error()>(TAG, %9)",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "blockRef",
                  "label": "(RepeatedBlock)"
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "async isFavor(): Promise<boolean> {\n    if (this.favouriteStatus === STATUS_UNDEFINED) {\n      let fileAsset = await this.loadFileAsset();\n      try {\n        this.favouriteStatus = (fileAsset.get(photoAccessHelper.PhotoKeys.FAVORITE.toString()) as boolean) ? STATUS_TRUE : STATUS_FALSE;\n      } catch (err) {\n        Log.error(TAG, 'isFavor error: ' + JSON.stringify(err));\n      }\n    }\n    return this.favouriteStatus === STATUS_TRUE;\n  }"
        },
        {
          "type": "function",
          "name": "setFavor",
          "label": "setFavor",
          "start_line": 1,
          "end_line": 266,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/59.ts: UserFileDataItem\n%0 = instanceinvoke this.<@ts_files/59.ts: UserFileDataItem.isFavor()>()\nstatus = !await %0",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%1 = instanceinvoke this.<@ts_files/59.ts: UserFileDataItem.loadFileAsset()>()\nfileAsset = await %1\n%2 = instanceinvoke fileAsset.<@%unk/%unk: .setFavorite()>(status)\n%3 = await %2\nif status != false",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "%4 = STATUS_TRUE",
                      "start_line": 1,
                      "end_line": 1,
                      "successors": [
                        {
                          "type": "block",
                          "name": "Block?",
                          "label": "this.<@ts_files/59.ts: UserFileDataItem.favouriteStatus> = %4\nreturn true",
                          "start_line": 1,
                          "end_line": 264,
                          "successors": []
                        }
                      ]
                    },
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "%4 = STATUS_FALSE",
                      "start_line": 1,
                      "end_line": 1,
                      "successors": [
                        {
                          "type": "blockRef",
                          "label": "(RepeatedBlock)"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "block",
              "name": "Block?",
              "label": "err = caughtexception: unknown\nreturn false",
              "start_line": 1,
              "end_line": 266,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "return",
                  "start_line": 74,
                  "end_line": 266,
                  "successors": []
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "async setFavor(): Promise<boolean> {\n    let status = !(await this.isFavor());\n    try {\n      let fileAsset = await this.loadFileAsset();\n      await fileAsset.setFavorite(status);\n      this.favouriteStatus = status ? STATUS_TRUE : STATUS_FALSE;\n      return true;\n    } catch (err) {\n      return false;\n    }\n  }"
        },
        {
          "type": "function",
          "name": "setName",
          "label": "setName",
          "start_line": 1,
          "end_line": 270,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "name = parameter0: string\nthis = this: @ts_files/59.ts: UserFileDataItem\n%0 = instanceinvoke this.<@ts_files/59.ts: UserFileDataItem.loadFileAsset()>()\nfileAsset = await %0\ndisplayName = fileAsset.<@%unk/%unk: .displayName>\nindex = instanceinvoke displayName.<@%unk/%unk: .lastIndexOf()>('.')\n%1 = instanceinvoke displayName.<@%unk/%unk: .slice()>(index)\ndisplayName = name + %1\nthis.<@ts_files/59.ts: UserFileDataItem.displayName> = displayName\nthis.<@ts_files/59.ts: UserFileDataItem.title> = name",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%2 = photoAccessHelper.<@%unk/%unk: .PhotoKeys>\n%3 = %2.<@%unk/%unk: .TITLE>\n%4 = instanceinvoke %3.<@%unk/%unk: .toString()>()\ninstanceinvoke fileAsset.<@%unk/%unk: .set()>(%4, name)\n%5 = instanceinvoke fileAsset.<@%unk/%unk: .commitModify()>()\n%6 = await %5",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "return",
                      "start_line": 74,
                      "end_line": 266,
                      "successors": []
                    }
                  ]
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "block",
              "name": "Block?",
              "label": "err = caughtexception: unknown\n%7 = instanceinvoke JSON.<@%unk/%unk: .stringify()>(err)\n%8 = 'setName error: ' + %7\ninstanceinvoke Log.<@%unk/%unk: .error()>(TAG, %8)",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "blockRef",
                  "label": "(RepeatedBlock)"
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "async setName(name: string): Promise<void> {\n    let fileAsset = await this.loadFileAsset();\n    let displayName = fileAsset.displayName;\n    let index = displayName.lastIndexOf('.');\n    displayName = name + displayName.slice(index);\n    this.displayName = displayName;\n    this.title = name;\n    try {\n      fileAsset.set(photoAccessHelper.PhotoKeys.TITLE.toString(), name);\n      await fileAsset.commitModify();\n    } catch (err) {\n      Log.error(TAG, 'setName error: ' + JSON.stringify(err));\n    }\n  }"
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": "export class UserFileDataItem implements DateAdded {\n  viewType: ViewType = ViewType.ITEM;\n  readonly hashIndex: number;\n  index: number;\n  dateAdded: number = 0;\n  dateModified: number;\n  dateTaken: number;\n  status: number = MediaConstants.UNDEFINED;\n  isSelect: boolean = false;\n  uri: string;\n  orientation: number;\n  duration: number;\n  size: number;\n  width: number; // width changed by orientation\n  height: number; // height changed by orientation\n  imgWidth: number; // may be smaller than width, as width is too large\n  imgHeight: number; // may be smaller than height, as height is too large\n  path: string = '';\n  title: string;\n  displayName: string;\n  mediaType: photoAccessHelper.PhotoType;\n  favouriteStatus: number = STATUS_UNDEFINED;\n  canRotate: number = STATUS_UNDEFINED;\n  selections: string = '';\n  selectionArgs: string[] = [];\n  deviceId: string = '';\n  fileAsset: photoAccessHelper.PhotoAsset = undefined;\n  defaultThumbnail: PixelMap = undefined;\n  thumbnailArray: Map<string, PixelMap> = new Map<string, PixelMap>();\n\n  constructor(selections: string, selectionArgs: string[], deviceId: string, index: number) {\n    this.selections = selections;\n    this.selectionArgs = selectionArgs;\n    this.deviceId = deviceId;\n    this.hashIndex = index;\n    this.index = index;\n  }\n\n  getHashCode(): string {\n    // 时间线界面角度，收藏状态变更，都需要刷新界面；大图浏览界面角度变更，需要刷新界面\n    return this.status === MediaConstants.UNDEFINED ?\n      '' + this.hashIndex :\n      this.uri + this.favouriteStatus + ' ' + this.orientation + ' ' + this.isSelect;\n  }\n\n  async loadFileAsset(): Promise<photoAccessHelper.PhotoAsset> {\n    return await userFileModel.getMediaItemByUri(this.uri);\n  }\n\n  isLoad(): boolean {\n    if (this.status > MediaConstants.UNDEFINED) {\n      return true;\n    }\n    return false;\n  }\n\n  async load(isForce: boolean): Promise<void> {\n    Log.info(TAG, 'load ' + this.status);\n    if (this.status > (isForce ? MediaConstants.PART_LOADED : MediaConstants.UNDEFINED)) {\n      return;\n    }\n    let fileAsset = await this.loadFileAsset();\n    if (fileAsset != null) {\n      this.update(fileAsset);\n    }\n    return;\n  }\n\n  async update(fileAsset: photoAccessHelper.PhotoAsset): Promise<void> {\n    this.fileAsset = fileAsset;\n    this.uri = fileAsset.uri;\n    this.displayName = fileAsset.displayName;\n    this.mediaType = fileAsset.photoType;\n    this.width = screenManager.getWinWidth();\n    this.height = screenManager.getWinHeight();\n    this.orientation = MediaConstants.ROTATE_NONE;\n    try {\n      this.orientation = fileAsset.get(photoAccessHelper.PhotoKeys.ORIENTATION.toString()) as number;\n      Log.info(TAG, 'orientation ' + this.orientation);\n    } catch (err) {\n      Log.error(TAG, 'get orientation ' + JSON.stringify(err));\n    }\n    try {\n      this.duration = fileAsset.get(photoAccessHelper.PhotoKeys.DURATION.toString()) as number;\n      Log.info(TAG, 'duration ' + this.duration);\n    } catch (err) {\n      Log.error(TAG, 'get duration ' + JSON.stringify(err));\n    }\n    try {\n      if (this.orientation === MediaConstants.ROTATE_ONCE || this.orientation === MediaConstants.ROTATE_THIRD) {\n        this.width = fileAsset.get(photoAccessHelper.PhotoKeys.HEIGHT.toString()) as number;\n        this.height = fileAsset.get(photoAccessHelper.PhotoKeys.WIDTH.toString()) as number;\n      } else {\n        this.width = fileAsset.get(photoAccessHelper.PhotoKeys.WIDTH.toString()) as number;\n        this.height = fileAsset.get(photoAccessHelper.PhotoKeys.HEIGHT.toString()) as number;\n      }\n      Log.info(TAG, 'width ' + this.width);\n      Log.info(TAG, 'height ' + this.height);\n    } catch (err) {\n      Log.error(TAG, 'get width height ' + JSON.stringify(err));\n    }\n    try {\n      this.title = fileAsset.get(photoAccessHelper.PhotoKeys.TITLE.toString()) as string;\n      Log.info(TAG, 'title ' + this.title);\n    } catch (err) {\n      Log.error(TAG, 'get title ' + JSON.stringify(err));\n    }\n    try {\n      this.dateAdded = fileAsset.get(photoAccessHelper.PhotoKeys.DATE_ADDED.toString()) as number * 1000;\n      this.dateModified = fileAsset.get(photoAccessHelper.PhotoKeys.DATE_MODIFIED.toString()) as number * 1000;\n      this.dateTaken = fileAsset.get(photoAccessHelper.PhotoKeys.DATE_TAKEN.toString()) as number * 1000;\n      Log.info(TAG, 'dateAdded ' + this.dateAdded);\n    } catch (err) {\n      Log.error(TAG, 'get date ' + JSON.stringify(err));\n    }\n    try {\n      this.favouriteStatus = fileAsset.get(photoAccessHelper.PhotoKeys.FAVORITE.toString()) as boolean ? STATUS_TRUE : STATUS_FALSE\n      Log.info(TAG, 'favouriteStatus ' + this.favouriteStatus);\n    } catch (err) {\n      Log.error(TAG, 'get favouriteStatus ' + JSON.stringify(err));\n    }\n    try {\n      this.size = fileAsset.get(photoAccessHelper.PhotoKeys.SIZE.toString()) as number;\n      Log.info(TAG, 'size ' + this.size);\n    } catch (err) {\n      Log.error(TAG, 'get favouriteStatus ' + JSON.stringify(err));\n    }\n    let size = { width: MediaConstants.DEFAULT_SIZE, height: MediaConstants.DEFAULT_SIZE };\n    if (fileAsset != null && this.defaultThumbnail == undefined) {\n      try {\n        this.defaultThumbnail = await this.fileAsset.getThumbnail(size);\n      } catch (err) {\n        Log.error(TAG, 'getThumbnail error: ' + JSON.stringify(err));\n      }\n    }\n    this.isSelect = selectManager.isSelect(this.uri, this.isSelect);\n    this.imgWidth = this.width;\n    this.imgHeight = this.height;\n    if (this.width > 0 && this.height > 0) {\n      this.status = MediaConstants.LOADED;\n    } else {\n      this.status = MediaConstants.PART_LOADED;\n    }\n  }\n\n  async getThumbnail(width: number, height: number): Promise<PixelMap> {\n    Log.debug(TAG, 'getThumbnail ' + this.status);\n    if (this.status !== MediaConstants.LOADED && this.status !== MediaConstants.PART_LOADED) {\n      Log.warn(TAG, 'getThumbnail fail as status: ' + this.status);\n      return undefined;\n    }\n    if (width === MediaConstants.DEFAULT_SIZE && height === MediaConstants.DEFAULT_SIZE) {\n      return this.defaultThumbnail;\n    }\n    let newThumbnail: PixelMap = undefined;\n    let size = { width: width, height: height };\n    let cacheThumbnail = this.thumbnailArray.get(width.toString() + height.toString());\n    if (cacheThumbnail != null) {\n      return cacheThumbnail;\n    }\n    if (this.fileAsset != undefined) {\n      try {\n        newThumbnail = await this.fileAsset.getThumbnail(size);\n        this.thumbnailArray.set(width.toString() + height.toString(), newThumbnail);\n      } catch (err) {\n        Log.error(TAG, 'getThumbnail error: ' + JSON.stringify(err));\n      }\n    }\n    return newThumbnail;\n  }\n\n  getAlt(): Resource {\n    if (this.mediaType === photoAccessHelper.PhotoType.VIDEO) {\n      return $r('app.media.alt_video_placeholder');\n    } else {\n      return $r('app.media.alt_placeholder');\n    }\n  }\n\n  setSelect(isSelect: boolean): void {\n    this.isSelect = isSelect;\n    selectManager.setSelect(this.uri, this.isSelect);\n  }\n\n  async onDelete(): Promise<boolean> {\n    try {\n      await userFileModel.deleteOne(this.uri);\n      selectManager.deleteSelect(this.uri);\n      this.status = MediaConstants.TRASHED;\n      return true;\n    } catch (err) {\n      Log.error(TAG, 'onDelete ' + this.index + ' error: ' + JSON.stringify(err));\n      return false;\n    }\n  }\n\n  async addToAlbum(albumUri:string): Promise<boolean> {\n    try {\n      await userFileModel.addPhotoToAlbumByUserFileMgr(albumUri, this.uri);\n      selectManager.deleteSelect(this.uri);\n      this.status = MediaConstants.TRASHED;\n      return true;\n    } catch (err) {\n      Log.error(TAG, 'addToAlbum ' + this.index + ' error: ' + JSON.stringify(err));\n      return false;\n    }\n  }\n\n  isDeleted(): boolean {\n    return this.status === MediaConstants.TRASHED;\n  }\n\n  async isFavor(): Promise<boolean> {\n    if (this.favouriteStatus === STATUS_UNDEFINED) {\n      let fileAsset = await this.loadFileAsset();\n      try {\n        this.favouriteStatus = (fileAsset.get(photoAccessHelper.PhotoKeys.FAVORITE.toString()) as boolean) ? STATUS_TRUE : STATUS_FALSE;\n      } catch (err) {\n        Log.error(TAG, 'isFavor error: ' + JSON.stringify(err));\n      }\n    }\n    return this.favouriteStatus === STATUS_TRUE;\n  }\n\n  async setFavor(): Promise<boolean> {\n    let status = !(await this.isFavor());\n    try {\n      let fileAsset = await this.loadFileAsset();\n      await fileAsset.setFavorite(status);\n      this.favouriteStatus = status ? STATUS_TRUE : STATUS_FALSE;\n      return true;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  async setName(name: string): Promise<void> {\n    let fileAsset = await this.loadFileAsset();\n    let displayName = fileAsset.displayName;\n    let index = displayName.lastIndexOf('.');\n    displayName = name + displayName.slice(index);\n    this.displayName = displayName;\n    this.title = name;\n    try {\n      fileAsset.set(photoAccessHelper.PhotoKeys.TITLE.toString(), name);\n      await fileAsset.commitModify();\n    } catch (err) {\n      Log.error(TAG, 'setName error: ' + JSON.stringify(err));\n    }\n  }\n}"
    },
    {
      "type": "class",
      "name": "%AC$UserFileDataItem$update$0",
      "label": "%AC$UserFileDataItem$update$0",
      "start_line": 161,
      "end_line": 161,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{ width: MediaConstants.DEFAULT_SIZE, height: MediaConstants.DEFAULT_SIZE }"
    },
    {
      "type": "class",
      "name": "%AC$UserFileDataItem$getThumbnail$1",
      "label": "%AC$UserFileDataItem$getThumbnail$1",
      "start_line": 189,
      "end_line": 189,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "{ width: width, height: height }"
    }
  ],
  "functions": [],
  "blocks": [],
  "simplified_code": "/*\n * Copyright (c) 2023 Shenzhen Kaihong Digital Industry Development Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Log } from '../utils/Log';\nimport { ViewType } from '../models/ViewType';\nimport { userFileModel } from './UserFileModel';\nimport { MediaConstants } from '../constants/MediaConstants';\nimport { selectManager } from '../common/SelectManager';\nimport photoAccessHelper from '@ohos.file.photoAccessHelper';\nimport { screenManager } from '../common/ScreenManager';\n\nconst TAG = 'UserFileDataItem';\nconst STATUS_UNDEFINED = -1;\nconst STATUS_FALSE = 0;\nconst STATUS_TRUE = 1;\n\nexport interface DateAdded {\n  dateAdded: number;\n  viewType: ViewType;\n}\n\nexport class UserFileDataItem implements DateAdded {\n  viewType: ViewType = ViewType.ITEM;\n  readonly hashIndex: number;\n  index: number;\n  dateAdded: number = 0;\n  dateModified: number;\n  dateTaken: number;\n  status: number = MediaConstants.UNDEFINED;\n  isSelect: boolean = false;\n  uri: string;\n  orientation: number;\n  duration: number;\n  size: number;\n  width: number; // width changed by orientation\n  height: number; // height changed by orientation\n  imgWidth: number; // may be smaller than width, as width is too large\n  imgHeight: number; // may be smaller than height, as height is too large\n  path: string = '';\n  title: string;\n  displayName: string;\n  mediaType: photoAccessHelper.PhotoType;\n  favouriteStatus: number = STATUS_UNDEFINED;\n  canRotate: number = STATUS_UNDEFINED;\n  selections: string = '';\n  selectionArgs: string[] = [];\n  deviceId: string = '';\n  fileAsset: photoAccessHelper.PhotoAsset = undefined;\n  defaultThumbnail: PixelMap = undefined;\n  thumbnailArray: Map<string, PixelMap> = new Map<string, PixelMap>();\n\n  constructor(selections: string, selectionArgs: string[], deviceId: string, index: number) {\n    this.selections = selections;\n    this.selectionArgs = selectionArgs;\n    this.deviceId = deviceId;\n    this.hashIndex = index;\n    this.index = index;\n  }\n\n  getHashCode(): string {\n    // 时间线界面角度，收藏状态变更，都需要刷新界面；大图浏览界面角度变更，需要刷新界面\n    return this.status === MediaConstants.UNDEFINED ?\n      '' + this.hashIndex :\n      this.uri + this.favouriteStatus + ' ' + this.orientation + ' ' + this.isSelect;\n  }\n\n  async loadFileAsset(): Promise<photoAccessHelper.PhotoAsset> {\n    return await userFileModel.getMediaItemByUri(this.uri);\n  }\n\n  isLoad(): boolean {\n    if (this.status > MediaConstants.UNDEFINED) {\n      return true;\n    }\n    return false;\n  }\n\n  async load(isForce: boolean): Promise<void> {\n    Log.info(TAG, 'load ' + this.status);\n    if (this.status > (isForce ? MediaConstants.PART_LOADED : MediaConstants.UNDEFINED)) {\n      return;\n    }\n    let fileAsset = await this.loadFileAsset();\n    if (fileAsset != null) {\n      this.update(fileAsset);\n    }\n    return;\n  }\n\n  async update(fileAsset: photoAccessHelper.PhotoAsset): Promise<void> {\n    this.fileAsset = fileAsset;\n    this.uri = fileAsset.uri;\n    this.displayName = fileAsset.displayName;\n    this.mediaType = fileAsset.photoType;\n    this.width = screenManager.getWinWidth();\n    this.height = screenManager.getWinHeight();\n    this.orientation = MediaConstants.ROTATE_NONE;\n    try {\n      this.orientation = fileAsset.get(photoAccessHelper.PhotoKeys.ORIENTATION.toString()) as number;\n      Log.info(TAG, 'orientation ' + this.orientation);\n    } catch (err) {\n      Log.error(TAG, 'get orientation ' + JSON.stringify(err));\n    }\n    try {\n      this.duration = fileAsset.get(photoAccessHelper.PhotoKeys.DURATION.toString()) as number;\n      Log.info(TAG, 'duration ' + this.duration);\n    } catch (err) {\n      Log.error(TAG, 'get duration ' + JSON.stringify(err));\n    }\n    try {\n      if (this.orientation === MediaConstants.ROTATE_ONCE || this.orientation === MediaConstants.ROTATE_THIRD) {\n        this.width = fileAsset.get(photoAccessHelper.PhotoKeys.HEIGHT.toString()) as number;\n        this.height = fileAsset.get(photoAccessHelper.PhotoKeys.WIDTH.toString()) as number;\n      } else {\n        this.width = fileAsset.get(photoAccessHelper.PhotoKeys.WIDTH.toString()) as number;\n        this.height = fileAsset.get(photoAccessHelper.PhotoKeys.HEIGHT.toString()) as number;\n      }\n      Log.info(TAG, 'width ' + this.width);\n      Log.info(TAG, 'height ' + this.height);\n    } catch (err) {\n      Log.error(TAG, 'get width height ' + JSON.stringify(err));\n    }\n    try {\n      this.title = fileAsset.get(photoAccessHelper.PhotoKeys.TITLE.toString()) as string;\n      Log.info(TAG, 'title ' + this.title);\n    } catch (err) {\n      Log.error(TAG, 'get title ' + JSON.stringify(err));\n    }\n    try {\n      this.dateAdded = fileAsset.get(photoAccessHelper.PhotoKeys.DATE_ADDED.toString()) as number * 1000;\n      this.dateModified = fileAsset.get(photoAccessHelper.PhotoKeys.DATE_MODIFIED.toString()) as number * 1000;\n      this.dateTaken = fileAsset.get(photoAccessHelper.PhotoKeys.DATE_TAKEN.toString()) as number * 1000;\n      Log.info(TAG, 'dateAdded ' + this.dateAdded);\n    } catch (err) {\n      Log.error(TAG, 'get date ' + JSON.stringify(err));\n    }\n    try {\n      this.favouriteStatus = fileAsset.get(photoAccessHelper.PhotoKeys.FAVORITE.toString()) as boolean ? STATUS_TRUE : STATUS_FALSE\n      Log.info(TAG, 'favouriteStatus ' + this.favouriteStatus);\n    } catch (err) {\n      Log.error(TAG, 'get favouriteStatus ' + JSON.stringify(err));\n    }\n    try {\n      this.size = fileAsset.get(photoAccessHelper.PhotoKeys.SIZE.toString()) as number;\n      Log.info(TAG, 'size ' + this.size);\n    } catch (err) {\n      Log.error(TAG, 'get favouriteStatus ' + JSON.stringify(err));\n    }\n    let size = { width: MediaConstants.DEFAULT_SIZE, height: MediaConstants.DEFAULT_SIZE };\n    if (fileAsset != null && this.defaultThumbnail == undefined) {\n      try {\n        this.defaultThumbnail = await this.fileAsset.getThumbnail(size);\n      } catch (err) {\n        Log.error(TAG, 'getThumbnail error: ' + JSON.stringify(err));\n      }\n    }\n    this.isSelect = selectManager.isSelect(this.uri, this.isSelect);\n    this.imgWidth = this.width;\n    this.imgHeight = this.height;\n    if (this.width > 0 && this.height > 0) {\n      this.status = MediaConstants.LOADED;\n    } else {\n      this.status = MediaConstants.PART_LOADED;\n    }\n  }\n\n  async getThumbnail(width: number, height: number): Promise<PixelMap> {\n    Log.debug(TAG, 'getThumbnail ' + this.status);\n    if (this.status !== MediaConstants.LOADED && this.status !== MediaConstants.PART_LOADED) {\n      Log.warn(TAG, 'getThumbnail fail as status: ' + this.status);\n      return undefined;\n    }\n    if (width === MediaConstants.DEFAULT_SIZE && height === MediaConstants.DEFAULT_SIZE) {\n      return this.defaultThumbnail;\n    }\n    let newThumbnail: PixelMap = undefined;\n    let size = { width: width, height: height };\n    let cacheThumbnail = this.thumbnailArray.get(width.toString() + height.toString());\n    if (cacheThumbnail != null) {\n      return cacheThumbnail;\n    }\n    if (this.fileAsset != undefined) {\n      try {\n        newThumbnail = await this.fileAsset.getThumbnail(size);\n        this.thumbnailArray.set(width.toString() + height.toString(), newThumbnail);\n      } catch (err) {\n        Log.error(TAG, 'getThumbnail error: ' + JSON.stringify(err));\n      }\n    }\n    return newThumbnail;\n  }\n\n  getAlt(): Resource {\n    if (this.mediaType === photoAccessHelper.PhotoType.VIDEO) {\n      return $r('app.media.alt_video_placeholder');\n    } else {\n      return $r('app.media.alt_placeholder');\n    }\n  }\n\n  setSelect(isSelect: boolean): void {\n    this.isSelect = isSelect;\n    selectManager.setSelect(this.uri, this.isSelect);\n  }\n\n  async onDelete(): Promise<boolean> {\n    try {\n      await userFileModel.deleteOne(this.uri);\n      selectManager.deleteSelect(this.uri);\n      this.status = MediaConstants.TRASHED;\n      return true;\n    } catch (err) {\n      Log.error(TAG, 'onDelete ' + this.index + ' error: ' + JSON.stringify(err));\n      return false;\n    }\n  }\n\n  async addToAlbum(albumUri:string): Promise<boolean> {\n    try {\n      await userFileModel.addPhotoToAlbumByUserFileMgr(albumUri, this.uri);\n      selectManager.deleteSelect(this.uri);\n      this.status = MediaConstants.TRASHED;\n      return true;\n    } catch (err) {\n      Log.error(TAG, 'addToAlbum ' + this.index + ' error: ' + JSON.stringify(err));\n      return false;\n    }\n  }\n\n  isDeleted(): boolean {\n    return this.status === MediaConstants.TRASHED;\n  }\n\n  async isFavor(): Promise<boolean> {\n    if (this.favouriteStatus === STATUS_UNDEFINED) {\n      let fileAsset = await this.loadFileAsset();\n      try {\n        this.favouriteStatus = (fileAsset.get(photoAccessHelper.PhotoKeys.FAVORITE.toString()) as boolean) ? STATUS_TRUE : STATUS_FALSE;\n      } catch (err) {\n        Log.error(TAG, 'isFavor error: ' + JSON.stringify(err));\n      }\n    }\n    return this.favouriteStatus === STATUS_TRUE;\n  }\n\n  async setFavor(): Promise<boolean> {\n    let status = !(await this.isFavor());\n    try {\n      let fileAsset = await this.loadFileAsset();\n      await fileAsset.setFavorite(status);\n      this.favouriteStatus = status ? STATUS_TRUE : STATUS_FALSE;\n      return true;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  async setName(name: string): Promise<void> {\n    let fileAsset = await this.loadFileAsset();\n    let displayName = fileAsset.displayName;\n    let index = displayName.lastIndexOf('.');\n    displayName = name + displayName.slice(index);\n    this.displayName = displayName;\n    this.title = name;\n    try {\n      fileAsset.set(photoAccessHelper.PhotoKeys.TITLE.toString(), name);\n      await fileAsset.commitModify();\n    } catch (err) {\n      Log.error(TAG, 'setName error: ' + JSON.stringify(err));\n    }\n  }\n}\n"
}