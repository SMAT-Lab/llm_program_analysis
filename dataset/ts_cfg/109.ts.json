{
  "type": "file",
  "name": "109.ts",
  "label": "109.ts",
  "start_line": -1,
  "end_line": 70,
  "classes": [
    {
      "type": "class",
      "name": "%dflt",
      "label": "%dflt",
      "start_line": -1,
      "end_line": 64,
      "functions": [
        {
          "type": "function",
          "name": "%dflt",
          "label": "%dflt",
          "start_line": -1,
          "end_line": 64,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/109.ts: %dflt\nTAG = '[IdlServiceExtStub]'\nDOMAIN_NUMBER = 65280\nreturn",
              "start_line": 1,
              "end_line": 64,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": ""
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": ""
    },
    {
      "type": "class",
      "name": "IdlServiceExtStub",
      "label": "IdlServiceExtStub",
      "start_line": 1,
      "end_line": 70,
      "functions": [
        {
          "type": "function",
          "name": "constructor",
          "label": "constructor",
          "start_line": 1,
          "end_line": 64,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "instanceinvoke this.<@ts_files/109.ts: IdlServiceExtStub.%instInit()>()\ndes = parameter0: string\nthis = this: @ts_files/109.ts: IdlServiceExtStub\nstaticinvoke <@%unk/%unk: .super()>(des)\nreturn",
              "start_line": 1,
              "end_line": 64,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "constructor(des: string) {\n    super(des);\n  }"
        },
        {
          "type": "function",
          "name": "onRemoteMessageRequest",
          "label": "onRemoteMessageRequest",
          "start_line": 1,
          "end_line": 30,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "code = parameter0: number\ndata = parameter1: rpc.MessageSequence\nreply = parameter2: rpc.MessageSequence\noption = parameter3: rpc.MessageOption\nthis = this: @ts_files/109.ts: IdlServiceExtStub\n%0 = 'onRemoteMessageRequest called, code = ' + code\ninstanceinvoke hilog.<@%unk/%unk: .info()>(DOMAIN_NUMBER, TAG, %0)\n%1 = @ts_files/109.ts: IdlServiceExtStub.[static]COMMAND_PROCESS_DATA\nif code == %1",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "dataVar = instanceinvoke data.<@%unk/%unk: .readInt()>()\n%3 = new @%unk/%unk: Promise<void>\ninstanceinvoke %3.<@%unk/%unk: Promise.constructor()>(%AM0$onRemoteMessageRequest)\npromise = %3\n%4 = await promise\nreturn true",
                  "start_line": 1,
                  "end_line": 57,
                  "successors": []
                },
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "%2 = @ts_files/109.ts: IdlServiceExtStub.[static]COMMAND_INSERT_DATA_TO_MAP\nif code == %2",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "keyVar = instanceinvoke data.<@%unk/%unk: .readString()>()\nvalVar = instanceinvoke data.<@%unk/%unk: .readInt()>()\n%5 = new @%unk/%unk: Promise<void>\ninstanceinvoke %5.<@%unk/%unk: Promise.constructor()>(%AM2$onRemoteMessageRequest)\npromise = %5\n%6 = await promise\nreturn true",
                      "start_line": 1,
                      "end_line": 57,
                      "successors": []
                    },
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "%7 = 'invalid request code' + code\ninstanceinvoke hilog.<@%unk/%unk: .info()>(DOMAIN_NUMBER, TAG, %7)",
                      "start_line": 1,
                      "end_line": 1,
                      "successors": [
                        {
                          "type": "block",
                          "name": "Block?",
                          "label": "return false",
                          "start_line": 64,
                          "end_line": 64,
                          "successors": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "async onRemoteMessageRequest(code: number, data: rpc.MessageSequence, reply: rpc.MessageSequence, option: rpc.MessageOption): Promise<boolean> {\n    hilog.info(DOMAIN_NUMBER, TAG, 'onRemoteMessageRequest called, code = ' + code);\n    switch (code) {\n      case IdlServiceExtStub.COMMAND_PROCESS_DATA: {\n        let dataVar = data.readInt();\n        let promise = new Promise<void>((resolve, reject) => {\n          this.processData(dataVar, (errCode, returnValue) => {\n            reply.writeInt(errCode);\n            if (errCode === 0) {\n              reply.writeInt(returnValue);\n            }\n            resolve();\n          });\n        });\n        await promise;\n        return true;\n      };\n      case IdlServiceExtStub.COMMAND_INSERT_DATA_TO_MAP: {\n        let keyVar = data.readString();\n        let valVar = data.readInt();\n        let promise = new Promise<void>((resolve, reject) => {\n          this.insertDataToMap(keyVar, valVar, (errCode) => {\n            reply.writeInt(errCode);\n            resolve();\n          });\n        });\n        await promise;\n        return true;\n      };\n      default: {\n        hilog.info(DOMAIN_NUMBER, TAG, 'invalid request code' + code);\n        break;\n      }\n    }\n    return false;\n  }"
        },
        {
          "type": "function",
          "name": "processData",
          "label": "processData",
          "start_line": 1,
          "end_line": 67,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "data = parameter0: number\ncallback = parameter1: ProcessDataCallback\nthis = this: @ts_files/109.ts: IdlServiceExtStub\nreturn",
              "start_line": 1,
              "end_line": 64,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "processData(data: number, callback: ProcessDataCallback): void {\n  }"
        },
        {
          "type": "function",
          "name": "insertDataToMap",
          "label": "insertDataToMap",
          "start_line": 1,
          "end_line": 70,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "key = parameter0: string\nval = parameter1: number\ncallback = parameter2: InsertDataToMapCallback\nthis = this: @ts_files/109.ts: IdlServiceExtStub\nreturn",
              "start_line": 1,
              "end_line": 64,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "insertDataToMap(key: string, val: number, callback: InsertDataToMapCallback): void {\n  }"
        },
        {
          "type": "function",
          "name": "%AM1$%AM0$onRemoteMessageRequest",
          "label": "%AM1$%AM0$onRemoteMessageRequest",
          "start_line": 1,
          "end_line": 36,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "errCode = parameter0: unknown\nreturnValue = parameter1: unknown\nthis = this: @ts_files/109.ts: IdlServiceExtStub\ninstanceinvoke reply.<@%unk/%unk: .writeInt()>(errCode)\nif errCode === 0",
              "start_line": 1,
              "end_line": 1,
              "successors": [
                {
                  "type": "block",
                  "name": "Block?",
                  "label": "instanceinvoke reply.<@%unk/%unk: .writeInt()>(returnValue)",
                  "start_line": 1,
                  "end_line": 1,
                  "successors": [
                    {
                      "type": "block",
                      "name": "Block?",
                      "label": "staticinvoke <@%unk/%unk: .resolve()>()\nreturn",
                      "start_line": 1,
                      "end_line": 64,
                      "successors": []
                    }
                  ]
                },
                {
                  "type": "blockRef",
                  "label": "(RepeatedBlock)"
                }
              ]
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            },
            {
              "type": "blockRef",
              "label": "(RepeatedBlock)"
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(errCode, returnValue) => {\n            reply.writeInt(errCode);\n            if (errCode === 0) {\n              reply.writeInt(returnValue);\n            }\n            resolve();\n          }"
        },
        {
          "type": "function",
          "name": "%AM0$onRemoteMessageRequest",
          "label": "%AM0$onRemoteMessageRequest",
          "start_line": 1,
          "end_line": 64,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "%closures0 = parameter0: [dataVar]\nresolve = parameter1: unknown\nreject = parameter2: unknown\ndataVar = %closures0.dataVar\nthis = this: @ts_files/109.ts: IdlServiceExtStub\ninstanceinvoke this.<@ts_files/109.ts: IdlServiceExtStub.processData(number, ProcessDataCallback)>(dataVar, %AM1$%AM0$onRemoteMessageRequest)\nreturn",
              "start_line": 1,
              "end_line": 64,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(resolve, reject) => {\n          this.processData(dataVar, (errCode, returnValue) => {\n            reply.writeInt(errCode);\n            if (errCode === 0) {\n              reply.writeInt(returnValue);\n            }\n            resolve();\n          });\n        }"
        },
        {
          "type": "function",
          "name": "%AM3$%AM2$onRemoteMessageRequest",
          "label": "%AM3$%AM2$onRemoteMessageRequest",
          "start_line": 1,
          "end_line": 64,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "errCode = parameter0: unknown\nthis = this: @ts_files/109.ts: IdlServiceExtStub\ninstanceinvoke reply.<@%unk/%unk: .writeInt()>(errCode)\nstaticinvoke <@%unk/%unk: .resolve()>()\nreturn",
              "start_line": 1,
              "end_line": 64,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(errCode) => {\n            reply.writeInt(errCode);\n            resolve();\n          }"
        },
        {
          "type": "function",
          "name": "%AM2$onRemoteMessageRequest",
          "label": "%AM2$onRemoteMessageRequest",
          "start_line": 1,
          "end_line": 64,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "%closures1 = parameter0: [keyVar, valVar]\nresolve = parameter1: unknown\nreject = parameter2: unknown\nkeyVar = %closures1.keyVar\nvalVar = %closures1.valVar\nthis = this: @ts_files/109.ts: IdlServiceExtStub\ninstanceinvoke this.<@ts_files/109.ts: IdlServiceExtStub.insertDataToMap(string, number, InsertDataToMapCallback)>(keyVar, valVar, %AM3$%AM2$onRemoteMessageRequest)\nreturn",
              "start_line": 1,
              "end_line": 64,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "(resolve, reject) => {\n          this.insertDataToMap(keyVar, valVar, (errCode) => {\n            reply.writeInt(errCode);\n            resolve();\n          });\n        }"
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": "export default class IdlServiceExtStub extends rpc.RemoteObject implements IIdlServiceExt {\n  constructor(des: string) {\n    super(des);\n  };\n\n  async onRemoteMessageRequest(code: number, data: rpc.MessageSequence, reply: rpc.MessageSequence, option: rpc.MessageOption): Promise<boolean> {\n    hilog.info(DOMAIN_NUMBER, TAG, 'onRemoteMessageRequest called, code = ' + code);\n    switch (code) {\n      case IdlServiceExtStub.COMMAND_PROCESS_DATA: {\n        let dataVar = data.readInt();\n        let promise = new Promise<void>((resolve, reject) => {\n          this.processData(dataVar, (errCode, returnValue) => {\n            reply.writeInt(errCode);\n            if (errCode === 0) {\n              reply.writeInt(returnValue);\n            }\n            resolve();\n          });\n        });\n        await promise;\n        return true;\n      };\n      case IdlServiceExtStub.COMMAND_INSERT_DATA_TO_MAP: {\n        let keyVar = data.readString();\n        let valVar = data.readInt();\n        let promise = new Promise<void>((resolve, reject) => {\n          this.insertDataToMap(keyVar, valVar, (errCode) => {\n            reply.writeInt(errCode);\n            resolve();\n          });\n        });\n        await promise;\n        return true;\n      };\n      default: {\n        hilog.info(DOMAIN_NUMBER, TAG, 'invalid request code' + code);\n        break;\n      }\n    }\n    return false;\n  }\n\n  processData(data: number, callback: ProcessDataCallback): void {\n  };\n\n  insertDataToMap(key: string, val: number, callback: InsertDataToMapCallback): void {\n  };\n\n  static readonly COMMAND_PROCESS_DATA = 1;\n  static readonly COMMAND_INSERT_DATA_TO_MAP = 2;\n}"
    }
  ],
  "functions": [],
  "blocks": [],
  "simplified_code": "/*\n * Copyright (c) 2023 Huawei Device Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ProcessDataCallback } from './i_idl_service_ext';\nimport type { InsertDataToMapCallback } from './i_idl_service_ext';\nimport type IIdlServiceExt from './i_idl_service_ext';\nimport hilog from '@ohos.hilog';\nimport rpc from '@ohos.rpc';\n\nconst TAG: string = '[IdlServiceExtStub]';\nconst DOMAIN_NUMBER: number = 0xFF00;\n\nexport default class IdlServiceExtStub extends rpc.RemoteObject implements IIdlServiceExt {\n  constructor(des: string) {\n    super(des);\n  };\n\n  async onRemoteMessageRequest(code: number, data: rpc.MessageSequence, reply: rpc.MessageSequence, option: rpc.MessageOption): Promise<boolean> {\n    hilog.info(DOMAIN_NUMBER, TAG, 'onRemoteMessageRequest called, code = ' + code);\n    switch (code) {\n      case IdlServiceExtStub.COMMAND_PROCESS_DATA: {\n        let dataVar = data.readInt();\n        let promise = new Promise<void>((resolve, reject) => {\n          this.processData(dataVar, (errCode, returnValue) => {\n            reply.writeInt(errCode);\n            if (errCode === 0) {\n              reply.writeInt(returnValue);\n            }\n            resolve();\n          });\n        });\n        await promise;\n        return true;\n      };\n      case IdlServiceExtStub.COMMAND_INSERT_DATA_TO_MAP: {\n        let keyVar = data.readString();\n        let valVar = data.readInt();\n        let promise = new Promise<void>((resolve, reject) => {\n          this.insertDataToMap(keyVar, valVar, (errCode) => {\n            reply.writeInt(errCode);\n            resolve();\n          });\n        });\n        await promise;\n        return true;\n      };\n      default: {\n        hilog.info(DOMAIN_NUMBER, TAG, 'invalid request code' + code);\n        break;\n      }\n    }\n    return false;\n  }\n\n  processData(data: number, callback: ProcessDataCallback): void {\n  };\n\n  insertDataToMap(key: string, val: number, callback: InsertDataToMapCallback): void {\n  };\n\n  static readonly COMMAND_PROCESS_DATA = 1;\n  static readonly COMMAND_INSERT_DATA_TO_MAP = 2;\n};"
}