{
  "type": "file",
  "name": "128.ts",
  "label": "128.ts",
  "start_line": -1,
  "end_line": 49,
  "classes": [
    {
      "type": "class",
      "name": "%dflt",
      "label": "%dflt",
      "start_line": -1,
      "end_line": 1,
      "functions": [
        {
          "type": "function",
          "name": "%dflt",
          "label": "%dflt",
          "start_line": -1,
          "end_line": 1,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/128.ts: %dflt\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": ""
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": ""
    },
    {
      "type": "class",
      "name": "MainAbility",
      "label": "MainAbility",
      "start_line": 1,
      "end_line": 49,
      "functions": [
        {
          "type": "function",
          "name": "onCreate",
          "label": "onCreate",
          "start_line": 1,
          "end_line": 21,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "want = parameter0: unknown\nlaunchParam = parameter1: unknown\nthis = this: @ts_files/128.ts: MainAbility\ninstanceinvoke Logger.<@%unk/%unk: .info()>('[Sample_AdaptiveCapabilities]', 'MainAbility onCreate')\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "onCreate(want, launchParam) {\n    Logger.info('[Sample_AdaptiveCapabilities]', 'MainAbility onCreate')\n  }"
        },
        {
          "type": "function",
          "name": "onDestroy",
          "label": "onDestroy",
          "start_line": 1,
          "end_line": 25,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/128.ts: MainAbility\ninstanceinvoke Logger.<@%unk/%unk: .info()>('[Sample_AdaptiveCapabilities]', 'MainAbility onDestroy')\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "onDestroy() {\n    Logger.info('[Sample_AdaptiveCapabilities]', 'MainAbility onDestroy')\n  }"
        },
        {
          "type": "function",
          "name": "onWindowStageCreate",
          "label": "onWindowStageCreate",
          "start_line": 1,
          "end_line": 29,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "windowStage = parameter0: unknown\nthis = this: @ts_files/128.ts: MainAbility\ninstanceinvoke Logger.<@%unk/%unk: .info()>('[Sample_AdaptiveCapabilities]', 'onWindowStageCreate')\n%0 = this.<@ts_files/128.ts: MainAbility.context>\ninstanceinvoke windowStage.<@%unk/%unk: .setUIContent()>(%0, 'pages/Index', null)\n%1 = this.<@ts_files/128.ts: MainAbility.context>\n%2 = instanceinvoke window.<@%unk/%unk: .getTopWindow()>(%1)\ninstanceinvoke %2.<@%unk/%unk: .then()>(%AM0$onWindowStageCreate)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "onWindowStageCreate(windowStage) {\n    // Main window is created, set main page for this ability\n    Logger.info('[Sample_AdaptiveCapabilities]', 'onWindowStageCreate')\n    windowStage.setUIContent(this.context, \"pages/Index\", null)\n    window.getTopWindow(this.context)\n      .then(windowObj => {\n        AppStorage.SetOrCreate('windowObj', windowObj)\n      })\n  }"
        },
        {
          "type": "function",
          "name": "onWindowStageDestroy",
          "label": "onWindowStageDestroy",
          "start_line": 1,
          "end_line": 39,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/128.ts: MainAbility\ninstanceinvoke Logger.<@%unk/%unk: .info()>('[Sample_AdaptiveCapabilities]', 'onWindowStageDestroy')\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "onWindowStageDestroy() {\n    // Main window is destroyed, release UI related resources\n    Logger.info('[Sample_AdaptiveCapabilities]', 'onWindowStageDestroy')\n  }"
        },
        {
          "type": "function",
          "name": "onForeground",
          "label": "onForeground",
          "start_line": 1,
          "end_line": 44,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/128.ts: MainAbility\ninstanceinvoke Logger.<@%unk/%unk: .info()>('[Sample_AdaptiveCapabilities]', 'onForeground')\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "onForeground() {\n    // Ability has brought to foreground\n    Logger.info('[Sample_AdaptiveCapabilities]', 'onForeground')\n  }"
        },
        {
          "type": "function",
          "name": "onBackground",
          "label": "onBackground",
          "start_line": 1,
          "end_line": 49,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/128.ts: MainAbility\ninstanceinvoke Logger.<@%unk/%unk: .info()>('[Sample_AdaptiveCapabilities]', 'onBackground')\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "onBackground() {\n    // Ability has back to background\n    Logger.info('[Sample_AdaptiveCapabilities]', 'onBackground')\n  }"
        },
        {
          "type": "function",
          "name": "%AM0$onWindowStageCreate",
          "label": "%AM0$onWindowStageCreate",
          "start_line": 1,
          "end_line": 34,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "windowObj = parameter0: unknown\nthis = this: @ts_files/128.ts: MainAbility\ninstanceinvoke AppStorage.<@%unk/%unk: .SetOrCreate()>('windowObj', windowObj)\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": "windowObj => {\n        AppStorage.SetOrCreate('windowObj', windowObj)\n      }"
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": "export default class MainAbility extends UIAbility {\n  onCreate(want, launchParam) {\n    Logger.info('[Sample_AdaptiveCapabilities]', 'MainAbility onCreate')\n  }\n\n  onDestroy() {\n    Logger.info('[Sample_AdaptiveCapabilities]', 'MainAbility onDestroy')\n  }\n\n  onWindowStageCreate(windowStage) {\n    // Main window is created, set main page for this ability\n    Logger.info('[Sample_AdaptiveCapabilities]', 'onWindowStageCreate')\n    windowStage.setUIContent(this.context, \"pages/Index\", null)\n    window.getTopWindow(this.context)\n      .then(windowObj => {\n        AppStorage.SetOrCreate('windowObj', windowObj)\n      })\n  }\n\n  onWindowStageDestroy() {\n    // Main window is destroyed, release UI related resources\n    Logger.info('[Sample_AdaptiveCapabilities]', 'onWindowStageDestroy')\n  }\n\n  onForeground() {\n    // Ability has brought to foreground\n    Logger.info('[Sample_AdaptiveCapabilities]', 'onForeground')\n  }\n\n  onBackground() {\n    // Ability has back to background\n    Logger.info('[Sample_AdaptiveCapabilities]', 'onBackground')\n  }\n}"
    }
  ],
  "functions": [],
  "blocks": [],
  "simplified_code": "/*\n * Copyright (c) 2022-2023 Huawei Device Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport UIAbility from '@ohos.app.ability.UIAbility'\nimport Logger from '../model/Logger'\nimport window from '@ohos.window'\n\nexport default class MainAbility extends UIAbility {\n  onCreate(want, launchParam) {\n    Logger.info('[Sample_AdaptiveCapabilities]', 'MainAbility onCreate')\n  }\n\n  onDestroy() {\n    Logger.info('[Sample_AdaptiveCapabilities]', 'MainAbility onDestroy')\n  }\n\n  onWindowStageCreate(windowStage) {\n    // Main window is created, set main page for this ability\n    Logger.info('[Sample_AdaptiveCapabilities]', 'onWindowStageCreate')\n    windowStage.setUIContent(this.context, \"pages/Index\", null)\n    window.getTopWindow(this.context)\n      .then(windowObj => {\n        AppStorage.SetOrCreate('windowObj', windowObj)\n      })\n  }\n\n  onWindowStageDestroy() {\n    // Main window is destroyed, release UI related resources\n    Logger.info('[Sample_AdaptiveCapabilities]', 'onWindowStageDestroy')\n  }\n\n  onForeground() {\n    // Ability has brought to foreground\n    Logger.info('[Sample_AdaptiveCapabilities]', 'onForeground')\n  }\n\n  onBackground() {\n    // Ability has back to background\n    Logger.info('[Sample_AdaptiveCapabilities]', 'onBackground')\n  }\n}\n"
}