{
  "type": "file",
  "name": "152.ts",
  "label": "152.ts",
  "start_line": -1,
  "end_line": 101,
  "classes": [
    {
      "type": "class",
      "name": "%dflt",
      "label": "%dflt",
      "start_line": -1,
      "end_line": 1,
      "functions": [
        {
          "type": "function",
          "name": "%dflt",
          "label": "%dflt",
          "start_line": -1,
          "end_line": 1,
          "blocks": [
            {
              "type": "block",
              "name": "Block?",
              "label": "this = this: @ts_files/152.ts: %dflt\n__darwin_mcontext32 = undefined\n__darwin_mcontext64 = undefined\n__darwin_mcontext64_full = undefined\n__darwin_mcontext_avx32 = undefined\n__darwin_mcontext_avx512_32 = undefined\n__darwin_mcontext_avx512_64 = undefined\n__darwin_mcontext_avx512_64_full = undefined\n__darwin_mcontext_avx64 = undefined\n__darwin_mcontext_avx64_full = undefined\n__darwin_sigaltstack = undefined\n__darwin_ucontext = undefined\nsigstack = undefined\nsigvecStruct = undefined\nsys_siglist = undefined\nsys_signame = undefined\nreturn",
              "start_line": 1,
              "end_line": 1,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [],
          "simplified_code": ""
        },
        {
          "type": "function",
          "name": "%AM0",
          "label": "%AM0",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "(p1: number) => void"
        },
        {
          "type": "function",
          "name": "%AM1",
          "label": "%AM1",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "(p1: number) => void"
        },
        {
          "type": "function",
          "name": "bsd_signal",
          "label": "bsd_signal",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "declare function bsd_signal(p1: number, p2: interop.FunctionReference<(p1: number) => void>): interop.FunctionReference<(p1: number) => void>;"
        },
        {
          "type": "function",
          "name": "kill",
          "label": "kill",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "declare function kill(p1: number, p2: number): number;"
        },
        {
          "type": "function",
          "name": "killpg",
          "label": "killpg",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "declare function killpg(p1: number, p2: number): number;"
        },
        {
          "type": "function",
          "name": "psignal",
          "label": "psignal",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "declare function psignal(p1: number, p2: string | interop.Pointer | interop.Reference<any>): void;"
        },
        {
          "type": "function",
          "name": "pthread_kill",
          "label": "pthread_kill",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "declare function pthread_kill(p1: interop.Pointer | interop.Reference<_opaque_pthread_t>, p2: number): number;"
        },
        {
          "type": "function",
          "name": "pthread_sigmask",
          "label": "pthread_sigmask",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "declare function pthread_sigmask(p1: number, p2: interop.Pointer | interop.Reference<number>, p3: interop.Pointer | interop.Reference<number>): number;"
        },
        {
          "type": "function",
          "name": "raise",
          "label": "raise",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "declare function raise(p1: number): number;"
        },
        {
          "type": "function",
          "name": "sigaddset",
          "label": "sigaddset",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "declare function sigaddset(p1: interop.Pointer | interop.Reference<number>, p2: number): number;"
        },
        {
          "type": "function",
          "name": "sigaltstack",
          "label": "sigaltstack",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "declare function sigaltstack(p1: interop.Pointer | interop.Reference<__darwin_sigaltstack>, p2: interop.Pointer | interop.Reference<__darwin_sigaltstack>): number;"
        },
        {
          "type": "function",
          "name": "sigblock",
          "label": "sigblock",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "declare function sigblock(p1: number): number;"
        },
        {
          "type": "function",
          "name": "sigdelset",
          "label": "sigdelset",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "declare function sigdelset(p1: interop.Pointer | interop.Reference<number>, p2: number): number;"
        },
        {
          "type": "function",
          "name": "sigemptyset",
          "label": "sigemptyset",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "declare function sigemptyset(p1: interop.Pointer | interop.Reference<number>): number;"
        },
        {
          "type": "function",
          "name": "sigfillset",
          "label": "sigfillset",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "declare function sigfillset(p1: interop.Pointer | interop.Reference<number>): number;"
        },
        {
          "type": "function",
          "name": "sighold",
          "label": "sighold",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "declare function sighold(p1: number): number;"
        },
        {
          "type": "function",
          "name": "sigignore",
          "label": "sigignore",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "declare function sigignore(p1: number): number;"
        },
        {
          "type": "function",
          "name": "siginterrupt",
          "label": "siginterrupt",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "declare function siginterrupt(p1: number, p2: number): number;"
        },
        {
          "type": "function",
          "name": "sigismember",
          "label": "sigismember",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "declare function sigismember(p1: interop.Pointer | interop.Reference<number>, p2: number): number;"
        },
        {
          "type": "function",
          "name": "%AM2",
          "label": "%AM2",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "(p1: number) => void"
        },
        {
          "type": "function",
          "name": "%AM3",
          "label": "%AM3",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "(p1: number) => void"
        },
        {
          "type": "function",
          "name": "signal",
          "label": "signal",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "declare function signal(p1: number, p2: interop.FunctionReference<(p1: number) => void>): interop.FunctionReference<(p1: number) => void>;"
        },
        {
          "type": "function",
          "name": "sigpause",
          "label": "sigpause",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "declare function sigpause(p1: number): number;"
        },
        {
          "type": "function",
          "name": "sigpending",
          "label": "sigpending",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "declare function sigpending(p1: interop.Pointer | interop.Reference<number>): number;"
        },
        {
          "type": "function",
          "name": "sigprocmask",
          "label": "sigprocmask",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "declare function sigprocmask(p1: number, p2: interop.Pointer | interop.Reference<number>, p3: interop.Pointer | interop.Reference<number>): number;"
        },
        {
          "type": "function",
          "name": "sigrelse",
          "label": "sigrelse",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "declare function sigrelse(p1: number): number;"
        },
        {
          "type": "function",
          "name": "%AM4",
          "label": "%AM4",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "(p1: number) => void"
        },
        {
          "type": "function",
          "name": "%AM5",
          "label": "%AM5",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "(p1: number) => void"
        },
        {
          "type": "function",
          "name": "sigset",
          "label": "sigset",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "declare function sigset(p1: number, p2: interop.FunctionReference<(p1: number) => void>): interop.FunctionReference<(p1: number) => void>;"
        },
        {
          "type": "function",
          "name": "sigsetmask",
          "label": "sigsetmask",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "declare function sigsetmask(p1: number): number;"
        },
        {
          "type": "function",
          "name": "sigsuspend",
          "label": "sigsuspend",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "declare function sigsuspend(p1: interop.Pointer | interop.Reference<number>): number;"
        },
        {
          "type": "function",
          "name": "sigvec",
          "label": "sigvec",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "declare function sigvec(p1: number, p2: interop.Pointer | interop.Reference<sigvecStruct>, p3: interop.Pointer | interop.Reference<sigvecStruct>): number;"
        },
        {
          "type": "function",
          "name": "sigwait",
          "label": "sigwait",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "declare function sigwait(p1: interop.Pointer | interop.Reference<number>, p2: interop.Pointer | interop.Reference<number>): number;"
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": ""
    },
    {
      "type": "class",
      "name": "__darwin_mcontext32",
      "label": "__darwin_mcontext32",
      "start_line": 1,
      "end_line": 1,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "interface __darwin_mcontext32 {\n\t__es: __darwin_i386_exception_state;\n\t__ss: __darwin_i386_thread_state;\n\t__fs: __darwin_i386_float_state;\n}"
    },
    {
      "type": "class",
      "name": "__darwin_mcontext64",
      "label": "__darwin_mcontext64",
      "start_line": 7,
      "end_line": 7,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "interface __darwin_mcontext64 {\n\t__es: __darwin_x86_exception_state64;\n\t__ss: __darwin_x86_thread_state64;\n\t__fs: __darwin_x86_float_state64;\n}"
    },
    {
      "type": "class",
      "name": "__darwin_mcontext64_full",
      "label": "__darwin_mcontext64_full",
      "start_line": 13,
      "end_line": 13,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "interface __darwin_mcontext64_full {\n\t__es: __darwin_x86_exception_state64;\n\t__ss: __darwin_x86_thread_full_state64;\n\t__fs: __darwin_x86_float_state64;\n}"
    },
    {
      "type": "class",
      "name": "__darwin_mcontext_avx32",
      "label": "__darwin_mcontext_avx32",
      "start_line": 19,
      "end_line": 19,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "interface __darwin_mcontext_avx32 {\n\t__es: __darwin_i386_exception_state;\n\t__ss: __darwin_i386_thread_state;\n\t__fs: __darwin_i386_avx_state;\n}"
    },
    {
      "type": "class",
      "name": "__darwin_mcontext_avx512_32",
      "label": "__darwin_mcontext_avx512_32",
      "start_line": 25,
      "end_line": 25,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "interface __darwin_mcontext_avx512_32 {\n\t__es: __darwin_i386_exception_state;\n\t__ss: __darwin_i386_thread_state;\n\t__fs: __darwin_i386_avx512_state;\n}"
    },
    {
      "type": "class",
      "name": "__darwin_mcontext_avx512_64",
      "label": "__darwin_mcontext_avx512_64",
      "start_line": 31,
      "end_line": 31,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "interface __darwin_mcontext_avx512_64 {\n\t__es: __darwin_x86_exception_state64;\n\t__ss: __darwin_x86_thread_state64;\n\t__fs: __darwin_x86_avx512_state64;\n}"
    },
    {
      "type": "class",
      "name": "__darwin_mcontext_avx512_64_full",
      "label": "__darwin_mcontext_avx512_64_full",
      "start_line": 37,
      "end_line": 37,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "interface __darwin_mcontext_avx512_64_full {\n\t__es: __darwin_x86_exception_state64;\n\t__ss: __darwin_x86_thread_full_state64;\n\t__fs: __darwin_x86_avx512_state64;\n}"
    },
    {
      "type": "class",
      "name": "__darwin_mcontext_avx64",
      "label": "__darwin_mcontext_avx64",
      "start_line": 43,
      "end_line": 43,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "interface __darwin_mcontext_avx64 {\n\t__es: __darwin_x86_exception_state64;\n\t__ss: __darwin_x86_thread_state64;\n\t__fs: __darwin_x86_avx_state64;\n}"
    },
    {
      "type": "class",
      "name": "__darwin_mcontext_avx64_full",
      "label": "__darwin_mcontext_avx64_full",
      "start_line": 49,
      "end_line": 49,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "interface __darwin_mcontext_avx64_full {\n\t__es: __darwin_x86_exception_state64;\n\t__ss: __darwin_x86_thread_full_state64;\n\t__fs: __darwin_x86_avx_state64;\n}"
    },
    {
      "type": "class",
      "name": "__darwin_sigaltstack",
      "label": "__darwin_sigaltstack",
      "start_line": 55,
      "end_line": 55,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "interface __darwin_sigaltstack {\n\tss_sp: interop.Pointer | interop.Reference<any>;\n\tss_size: number;\n\tss_flags: number;\n}"
    },
    {
      "type": "class",
      "name": "__darwin_ucontext",
      "label": "__darwin_ucontext",
      "start_line": 61,
      "end_line": 61,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "interface __darwin_ucontext {\n\tuc_onstack: number;\n\tuc_sigmask: number;\n\tuc_stack: __darwin_sigaltstack;\n\tuc_link: interop.Pointer | interop.Reference<__darwin_ucontext>;\n\tuc_mcsize: number;\n\tuc_mcontext: interop.Pointer | interop.Reference<__darwin_mcontext64>;\n}"
    },
    {
      "type": "class",
      "name": "sigstack",
      "label": "sigstack",
      "start_line": 94,
      "end_line": 94,
      "functions": [],
      "classes": [],
      "blocks": [],
      "simplified_code": "interface sigstack {\n\tss_sp: interop.Pointer | interop.Reference<any>;\n\tss_onstack: number;\n}"
    },
    {
      "type": "class",
      "name": "sigvecStruct",
      "label": "sigvecStruct",
      "start_line": 0,
      "end_line": 101,
      "functions": [
        {
          "type": "function",
          "name": "%AM0",
          "label": "%AM0",
          "start_line": 0,
          "end_line": 0,
          "blocks": [],
          "functions": [],
          "classes": [],
          "simplified_code": "(p1: number) => void"
        }
      ],
      "classes": [],
      "blocks": [],
      "simplified_code": "interface sigvecStruct {\n\tsv_handler: interop.FunctionReference<(p1: number) => void>;\n\tsv_mask: number;\n\tsv_flags: number;\n}"
    }
  ],
  "functions": [],
  "blocks": [],
  "simplified_code": "interface __darwin_mcontext32 {\n\t__es: __darwin_i386_exception_state;\n\t__ss: __darwin_i386_thread_state;\n\t__fs: __darwin_i386_float_state;\n}\ndeclare var __darwin_mcontext32: interop.StructType<__darwin_mcontext32>;\ninterface __darwin_mcontext64 {\n\t__es: __darwin_x86_exception_state64;\n\t__ss: __darwin_x86_thread_state64;\n\t__fs: __darwin_x86_float_state64;\n}\ndeclare var __darwin_mcontext64: interop.StructType<__darwin_mcontext64>;\ninterface __darwin_mcontext64_full {\n\t__es: __darwin_x86_exception_state64;\n\t__ss: __darwin_x86_thread_full_state64;\n\t__fs: __darwin_x86_float_state64;\n}\ndeclare var __darwin_mcontext64_full: interop.StructType<__darwin_mcontext64_full>;\ninterface __darwin_mcontext_avx32 {\n\t__es: __darwin_i386_exception_state;\n\t__ss: __darwin_i386_thread_state;\n\t__fs: __darwin_i386_avx_state;\n}\ndeclare var __darwin_mcontext_avx32: interop.StructType<__darwin_mcontext_avx32>;\ninterface __darwin_mcontext_avx512_32 {\n\t__es: __darwin_i386_exception_state;\n\t__ss: __darwin_i386_thread_state;\n\t__fs: __darwin_i386_avx512_state;\n}\ndeclare var __darwin_mcontext_avx512_32: interop.StructType<__darwin_mcontext_avx512_32>;\ninterface __darwin_mcontext_avx512_64 {\n\t__es: __darwin_x86_exception_state64;\n\t__ss: __darwin_x86_thread_state64;\n\t__fs: __darwin_x86_avx512_state64;\n}\ndeclare var __darwin_mcontext_avx512_64: interop.StructType<__darwin_mcontext_avx512_64>;\ninterface __darwin_mcontext_avx512_64_full {\n\t__es: __darwin_x86_exception_state64;\n\t__ss: __darwin_x86_thread_full_state64;\n\t__fs: __darwin_x86_avx512_state64;\n}\ndeclare var __darwin_mcontext_avx512_64_full: interop.StructType<__darwin_mcontext_avx512_64_full>;\ninterface __darwin_mcontext_avx64 {\n\t__es: __darwin_x86_exception_state64;\n\t__ss: __darwin_x86_thread_state64;\n\t__fs: __darwin_x86_avx_state64;\n}\ndeclare var __darwin_mcontext_avx64: interop.StructType<__darwin_mcontext_avx64>;\ninterface __darwin_mcontext_avx64_full {\n\t__es: __darwin_x86_exception_state64;\n\t__ss: __darwin_x86_thread_full_state64;\n\t__fs: __darwin_x86_avx_state64;\n}\ndeclare var __darwin_mcontext_avx64_full: interop.StructType<__darwin_mcontext_avx64_full>;\ninterface __darwin_sigaltstack {\n\tss_sp: interop.Pointer | interop.Reference<any>;\n\tss_size: number;\n\tss_flags: number;\n}\ndeclare var __darwin_sigaltstack: interop.StructType<__darwin_sigaltstack>;\ninterface __darwin_ucontext {\n\tuc_onstack: number;\n\tuc_sigmask: number;\n\tuc_stack: __darwin_sigaltstack;\n\tuc_link: interop.Pointer | interop.Reference<__darwin_ucontext>;\n\tuc_mcsize: number;\n\tuc_mcontext: interop.Pointer | interop.Reference<__darwin_mcontext64>;\n}\ndeclare var __darwin_ucontext: interop.StructType<__darwin_ucontext>;\ndeclare function bsd_signal(p1: number, p2: interop.FunctionReference<(p1: number) => void>): interop.FunctionReference<(p1: number) => void>;\ndeclare function kill(p1: number, p2: number): number;\ndeclare function killpg(p1: number, p2: number): number;\ndeclare function psignal(p1: number, p2: string | interop.Pointer | interop.Reference<any>): void;\ndeclare function pthread_kill(p1: interop.Pointer | interop.Reference<_opaque_pthread_t>, p2: number): number;\ndeclare function pthread_sigmask(p1: number, p2: interop.Pointer | interop.Reference<number>, p3: interop.Pointer | interop.Reference<number>): number;\ndeclare function raise(p1: number): number;\ndeclare function sigaddset(p1: interop.Pointer | interop.Reference<number>, p2: number): number;\ndeclare function sigaltstack(p1: interop.Pointer | interop.Reference<__darwin_sigaltstack>, p2: interop.Pointer | interop.Reference<__darwin_sigaltstack>): number;\ndeclare function sigblock(p1: number): number;\ndeclare function sigdelset(p1: interop.Pointer | interop.Reference<number>, p2: number): number;\ndeclare function sigemptyset(p1: interop.Pointer | interop.Reference<number>): number;\ndeclare function sigfillset(p1: interop.Pointer | interop.Reference<number>): number;\ndeclare function sighold(p1: number): number;\ndeclare function sigignore(p1: number): number;\ndeclare function siginterrupt(p1: number, p2: number): number;\ndeclare function sigismember(p1: interop.Pointer | interop.Reference<number>, p2: number): number;\ndeclare function signal(p1: number, p2: interop.FunctionReference<(p1: number) => void>): interop.FunctionReference<(p1: number) => void>;\ndeclare function sigpause(p1: number): number;\ndeclare function sigpending(p1: interop.Pointer | interop.Reference<number>): number;\ndeclare function sigprocmask(p1: number, p2: interop.Pointer | interop.Reference<number>, p3: interop.Pointer | interop.Reference<number>): number;\ndeclare function sigrelse(p1: number): number;\ndeclare function sigset(p1: number, p2: interop.FunctionReference<(p1: number) => void>): interop.FunctionReference<(p1: number) => void>;\ndeclare function sigsetmask(p1: number): number;\ninterface sigstack {\n\tss_sp: interop.Pointer | interop.Reference<any>;\n\tss_onstack: number;\n}\ndeclare var sigstack: interop.StructType<sigstack>;\ndeclare function sigsuspend(p1: interop.Pointer | interop.Reference<number>): number;\ndeclare function sigvec(p1: number, p2: interop.Pointer | interop.Reference<sigvecStruct>, p3: interop.Pointer | interop.Reference<sigvecStruct>): number;\ninterface sigvecStruct {\n\tsv_handler: interop.FunctionReference<(p1: number) => void>;\n\tsv_mask: number;\n\tsv_flags: number;\n}\ndeclare var sigvecStruct: interop.StructType<sigvecStruct>;\ndeclare function sigwait(p1: interop.Pointer | interop.Reference<number>, p2: interop.Pointer | interop.Reference<number>): number;\ndeclare var sys_siglist: interop.Reference<interop.Pointer | interop.Reference<any>>;\ndeclare var sys_signame: interop.Reference<interop.Pointer | interop.Reference<any>>;"
}