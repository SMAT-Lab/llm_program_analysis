{
  "name": "208.py",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "label": "#1\nimport asyncio\nimport pytest\nfrom backend.util.retry import conn_retry",
      "start_line": 1,
      "end_line": 49,
      "successors": []
    }
  ],
  "functions": [
    {
      "name": "test_conn_retry_sync_function",
      "type": "CFG",
      "blocks": [
        {
          "id": 3,
          "label": "#3\nretry_count = 0\nretry_count = 2\nres = test_function()\nassert res == 'Success'",
          "start_line": 9,
          "end_line": 21,
          "successors": [
            {
              "id": 12,
              "label": "#12\nretry_count = 100\nwith pytest.raises(ValueError) as e:",
              "start_line": 23,
              "end_line": 26,
              "successors": [
                {
                  "id": 13,
                  "label": "#13\ntest_function()\nassert str(e.value) == 'Test error'",
                  "start_line": 25,
                  "end_line": 26,
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "functions": [
        {
          "name": "test_function",
          "type": "CFG",
          "blocks": [
            {
              "id": 5,
              "label": "#5\nnonlocal retry_count\nretry_count -= 1\nif retry_count > 0:",
              "start_line": 13,
              "end_line": 16,
              "successors": [
                {
                  "id": 6,
                  "label": "#6\nraise ValueError('Test error')",
                  "start_line": 16,
                  "end_line": 16,
                  "successors": []
                },
                {
                  "id": 7,
                  "label": "#7\nreturn 'Success'",
                  "start_line": 17,
                  "end_line": 17,
                  "successors": []
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    },
    {
      "name": "test_conn_retry_async_function",
      "type": "CFG",
      "blocks": [
        {
          "id": 19,
          "label": "#19\nretry_count = 0\nretry_count = 2\nres = await test_function()",
          "start_line": 31,
          "end_line": 43,
          "successors": [
            {
              "id": 28,
              "label": "#28\nassert res == 'Success'",
              "start_line": 44,
              "end_line": 44,
              "successors": [
                {
                  "id": 30,
                  "label": "#30\nretry_count = 100\nwith pytest.raises(ValueError) as e:",
                  "start_line": 46,
                  "end_line": 49,
                  "successors": [
                    {
                      "id": 31,
                      "label": "#31\nawait test_function()",
                      "start_line": 48,
                      "end_line": 48,
                      "successors": [
                        {
                          "id": 33,
                          "label": "#33\nassert str(e.value) == 'Test error'",
                          "start_line": 49,
                          "end_line": 49,
                          "successors": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "functions": [
        {
          "name": "test_function",
          "type": "CFG",
          "blocks": [
            {
              "id": 21,
              "label": "#21\nnonlocal retry_count\nawait asyncio.sleep(1)",
              "start_line": 35,
              "end_line": 36,
              "successors": [
                {
                  "id": 22,
                  "label": "#22\nretry_count -= 1\nif retry_count > 0:",
                  "start_line": 37,
                  "end_line": 39,
                  "successors": [
                    {
                      "id": 23,
                      "label": "#23\nraise ValueError('Test error')",
                      "start_line": 39,
                      "end_line": 39,
                      "successors": []
                    },
                    {
                      "id": 24,
                      "label": "#24\nreturn 'Success'",
                      "start_line": 40,
                      "end_line": 40,
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    }
  ],
  "classes": []
}