{
  "name": "193.py",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "label": "#1\nimport pytest\nfrom .depends import requires_admin_user, requires_user, verify_user",
      "start_line": 1,
      "end_line": 68,
      "successors": []
    }
  ],
  "functions": [
    {
      "name": "test_verify_user_no_payload",
      "type": "CFG",
      "blocks": [
        {
          "id": 3,
          "label": "#3\nuser = verify_user(None, admin_only=False)\nassert user.user_id == '3e53486c-cf57-477e-ba2a-cb02dc828e1a'",
          "start_line": 7,
          "end_line": 8,
          "successors": [
            {
              "id": 5,
              "label": "#5\nassert user.role == 'admin'",
              "start_line": 9,
              "end_line": 9,
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "test_verify_user_no_user_id",
      "type": "CFG",
      "blocks": [
        {
          "id": 10,
          "label": "#10\nwith pytest.raises(Exception):",
          "start_line": 13,
          "end_line": 14,
          "successors": [
            {
              "id": 11,
              "label": "#11\nverify_user({'role': 'admin'}, admin_only=False)",
              "start_line": 14,
              "end_line": 14,
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "test_verify_user_not_admin",
      "type": "CFG",
      "blocks": [
        {
          "id": 15,
          "label": "#15\nwith pytest.raises(Exception):",
          "start_line": 18,
          "end_line": 22,
          "successors": [
            {
              "id": 16,
              "label": "#16\nverify_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'user'},\n    admin_only=True)",
              "start_line": 19,
              "end_line": 22,
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "test_verify_user_with_admin_role",
      "type": "CFG",
      "blocks": [
        {
          "id": 20,
          "label": "#20\nuser = verify_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role':\n    'admin'}, admin_only=True)\nassert user.user_id == '3e53486c-cf57-477e-ba2a-cb02dc828e1a'",
          "start_line": 26,
          "end_line": 30,
          "successors": [
            {
              "id": 22,
              "label": "#22\nassert user.role == 'admin'",
              "start_line": 31,
              "end_line": 31,
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "test_verify_user_with_user_role",
      "type": "CFG",
      "blocks": [
        {
          "id": 27,
          "label": "#27\nuser = verify_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role':\n    'user'}, admin_only=False)\nassert user.user_id == '3e53486c-cf57-477e-ba2a-cb02dc828e1a'",
          "start_line": 35,
          "end_line": 39,
          "successors": [
            {
              "id": 29,
              "label": "#29\nassert user.role == 'user'",
              "start_line": 40,
              "end_line": 40,
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "test_requires_user",
      "type": "CFG",
      "blocks": [
        {
          "id": 34,
          "label": "#34\nuser = requires_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role':\n    'user'})\nassert user.user_id == '3e53486c-cf57-477e-ba2a-cb02dc828e1a'",
          "start_line": 44,
          "end_line": 47,
          "successors": [
            {
              "id": 36,
              "label": "#36\nassert user.role == 'user'",
              "start_line": 48,
              "end_line": 48,
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "test_requires_user_no_user_id",
      "type": "CFG",
      "blocks": [
        {
          "id": 41,
          "label": "#41\nwith pytest.raises(Exception):",
          "start_line": 52,
          "end_line": 53,
          "successors": [
            {
              "id": 42,
              "label": "#42\nrequires_user({'role': 'user'})",
              "start_line": 53,
              "end_line": 53,
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "test_requires_admin_user",
      "type": "CFG",
      "blocks": [
        {
          "id": 46,
          "label": "#46\nuser = requires_admin_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a',\n    'role': 'admin'})\nassert user.user_id == '3e53486c-cf57-477e-ba2a-cb02dc828e1a'",
          "start_line": 57,
          "end_line": 60,
          "successors": [
            {
              "id": 48,
              "label": "#48\nassert user.role == 'admin'",
              "start_line": 61,
              "end_line": 61,
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "test_requires_admin_user_not_admin",
      "type": "CFG",
      "blocks": [
        {
          "id": 53,
          "label": "#53\nwith pytest.raises(Exception):",
          "start_line": 65,
          "end_line": 68,
          "successors": [
            {
              "id": 54,
              "label": "#54\nrequires_admin_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role':\n    'user'})",
              "start_line": 66,
              "end_line": 68,
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    }
  ],
  "classes": []
}