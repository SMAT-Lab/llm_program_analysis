{
  "name": "157.py",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "label": "#1\nimport logging\nimport os\nfrom dotenv import load_dotenv\nfrom redis import Redis\nfrom redis.asyncio import Redis as AsyncRedis\nfrom backend.util.retry import conn_retry\nload_dotenv()\nHOST = os.getenv('REDIS_HOST', 'localhost')\nPORT = int(os.getenv('REDIS_PORT', '6379'))\nPASSWORD = os.getenv('REDIS_PASSWORD', 'password')\nlogger = logging.getLogger(__name__)\nconnection: Redis | None = None\nconnection_async: AsyncRedis | None = None",
      "start_line": 1,
      "end_line": 84,
      "successors": []
    }
  ],
  "functions": [
    {
      "name": "connect",
      "type": "CFG",
      "blocks": [
        {
          "id": 3,
          "label": "#3\nglobal connection\nif connection:",
          "start_line": 23,
          "end_line": 25,
          "successors": [
            {
              "id": 4,
              "label": "#4\nreturn connection",
              "start_line": 25,
              "end_line": 25,
              "successors": []
            },
            {
              "id": 5,
              "label": "#5\nc = Redis(host=HOST, port=PORT, password=PASSWORD, decode_responses=True)\nc.ping()\nconnection = c\nreturn connection",
              "start_line": 27,
              "end_line": 35,
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "disconnect",
      "type": "CFG",
      "blocks": [
        {
          "id": 10,
          "label": "#10\nglobal connection\nif connection:",
          "start_line": 40,
          "end_line": 42,
          "successors": [
            {
              "id": 11,
              "label": "#11\nconnection.close()",
              "start_line": 42,
              "end_line": 42,
              "successors": [
                {
                  "id": 12,
                  "label": "#12\nconnection = None",
                  "start_line": 43,
                  "end_line": 43,
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "get_redis",
      "type": "CFG",
      "blocks": [
        {
          "id": 15,
          "label": "#15\nif connection:",
          "start_line": 47,
          "end_line": 48,
          "successors": [
            {
              "id": 16,
              "label": "#16\nreturn connection",
              "start_line": 48,
              "end_line": 48,
              "successors": []
            },
            {
              "id": 17,
              "label": "#17\nif auto_connect:",
              "start_line": 49,
              "end_line": 50,
              "successors": [
                {
                  "id": 19,
                  "label": "#19\nreturn connect()",
                  "start_line": 50,
                  "end_line": 50,
                  "successors": []
                },
                {
                  "id": 20,
                  "label": "#20\nraise RuntimeError('Redis connection is not established')",
                  "start_line": 51,
                  "end_line": 51,
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "connect_async",
      "type": "CFG",
      "blocks": [
        {
          "id": 25,
          "label": "#25\nglobal connection_async\nif connection_async:",
          "start_line": 56,
          "end_line": 58,
          "successors": [
            {
              "id": 26,
              "label": "#26\nreturn connection_async",
              "start_line": 58,
              "end_line": 58,
              "successors": []
            },
            {
              "id": 27,
              "label": "#27\nc = AsyncRedis(host=HOST, port=PORT, password=PASSWORD, decode_responses=True)\nawait c.ping()",
              "start_line": 60,
              "end_line": 66,
              "successors": [
                {
                  "id": 29,
                  "label": "#29\nconnection_async = c\nreturn connection_async",
                  "start_line": 67,
                  "end_line": 68,
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "disconnect_async",
      "type": "CFG",
      "blocks": [
        {
          "id": 33,
          "label": "#33\nglobal connection_async\nif connection_async:",
          "start_line": 73,
          "end_line": 75,
          "successors": [
            {
              "id": 34,
              "label": "#34\nawait connection_async.close()",
              "start_line": 75,
              "end_line": 75,
              "successors": [
                {
                  "id": 35,
                  "label": "#35\nconnection_async = None",
                  "start_line": 76,
                  "end_line": 76,
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "get_redis_async",
      "type": "CFG",
      "blocks": [
        {
          "id": 39,
          "label": "#39\nif connection_async:",
          "start_line": 80,
          "end_line": 81,
          "successors": [
            {
              "id": 40,
              "label": "#40\nreturn connection_async",
              "start_line": 81,
              "end_line": 81,
              "successors": []
            },
            {
              "id": 41,
              "label": "#41\nif auto_connect:",
              "start_line": 82,
              "end_line": 83,
              "successors": [
                {
                  "id": 43,
                  "label": "#43\nreturn await connect_async()",
                  "start_line": 83,
                  "end_line": 83,
                  "successors": []
                },
                {
                  "id": 44,
                  "label": "#44\nraise RuntimeError('AsyncRedis connection is not established')",
                  "start_line": 84,
                  "end_line": 84,
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    }
  ],
  "classes": []
}