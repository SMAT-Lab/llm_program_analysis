{
  "name": "52.py",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "label": "#1\nimport hashlib\nimport secrets\nfrom typing import NamedTuple",
      "successors": []
    }
  ],
  "functions": [],
  "classes": [
    {
      "name": "APIKeyContainer",
      "type": "CFG",
      "blocks": [
        {
          "id": 3,
          "label": "#3\n\"\"\"Container for API key parts.\"\"\"\nraw: str\nprefix: str\npostfix: str\nhash: str",
          "successors": []
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "APIKeyManager",
      "type": "CFG",
      "blocks": [
        {
          "id": 6,
          "label": "#6\nPREFIX: str = 'agpt_'\nPREFIX_LENGTH: int = 8\nPOSTFIX_LENGTH: int = 8",
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "generate_api_key",
          "type": "CFG",
          "blocks": [
            {
              "id": 8,
              "label": "#8\n\"\"\"Generate a new API key with all its parts.\"\"\"\nraw_key = f'{self.PREFIX}{secrets.token_urlsafe(32)}'\nreturn APIKeyContainer(raw=raw_key, prefix=raw_key[:self.PREFIX_LENGTH],\n    postfix=raw_key[-self.POSTFIX_LENGTH:], hash=hashlib.sha256(raw_key.\n    encode()).hexdigest())",
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "verify_api_key",
          "type": "CFG",
          "blocks": [
            {
              "id": 12,
              "label": "#12\n\"\"\"Verify if a provided API key matches the stored hash.\"\"\"\nif not provided_key.startswith(self.PREFIX):",
              "successors": [
                {
                  "id": 13,
                  "label": "#13\nreturn False",
                  "successors": []
                },
                {
                  "id": 14,
                  "label": "#14\nreturn hashlib.sha256(provided_key.encode()).hexdigest() == stored_hash",
                  "successors": []
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    }
  ]
}