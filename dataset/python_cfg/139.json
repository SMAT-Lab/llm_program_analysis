{
  "name": "139.py",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "label": "#1\nfrom pydantic import BaseModel\nfrom backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema, BlockWebhookConfig\nfrom backend.data.model import SchemaField\nfrom backend.util import settings\nfrom backend.util.settings import AppEnvironment, BehaveAs\nfrom ._api import TEST_CREDENTIALS, TEST_CREDENTIALS_INPUT, Slant3DCredentialsField, Slant3DCredentialsInput",
      "start_line": 1,
      "end_line": 125,
      "successors": []
    }
  ],
  "functions": [],
  "classes": [
    {
      "name": "Slant3DTriggerBase",
      "type": "CFG",
      "blocks": [
        {
          "id": 3,
          "label": "#3\n\"\"\"Base class for Slant3D webhook triggers\"\"\"",
          "start_line": 23,
          "end_line": 41,
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "run",
          "type": "CFG",
          "blocks": [
            {
              "id": 11,
              "label": "#11\nyield 'payload', input_data.payload",
              "start_line": 40,
              "end_line": 40,
              "successors": [
                {
                  "id": 12,
                  "label": "#12\nyield 'order_id', input_data.payload['orderId']",
                  "start_line": 41,
                  "end_line": 41,
                  "successors": []
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": [
        {
          "name": "Input",
          "type": "CFG",
          "blocks": [
            {
              "id": 5,
              "label": "#5\ncredentials: Slant3DCredentialsInput = Slant3DCredentialsField()\npayload: dict = SchemaField(hidden=True, default={})",
              "start_line": 26,
              "end_line": 28,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "Output",
          "type": "CFG",
          "blocks": [
            {
              "id": 8,
              "label": "#8\npayload: dict = SchemaField(description=\n    'The complete webhook payload received from Slant3D')\norder_id: str = SchemaField(description='The ID of the affected order')\nerror: str = SchemaField(description=\n    'Error message if payload processing failed')",
              "start_line": 31,
              "end_line": 37,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ]
    },
    {
      "name": "Slant3DOrderWebhookBlock",
      "type": "CFG",
      "blocks": [
        {
          "id": 17,
          "label": "#17\n\"\"\"Block for handling Slant3D order webhooks\"\"\"",
          "start_line": 45,
          "end_line": 125,
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 28,
              "label": "#28\nsuper().__init__(id='8a74c2ad-0104-4640-962f-26c6b69e58cd', description=\n    'This block triggers on Slant3D order status updates and outputs the event details, including tracking information when orders are shipped.'\n    , disabled=settings.Settings().config.behave_as == BehaveAs.CLOUD and \n    settings.Settings().config.app_env != AppEnvironment.LOCAL, categories=\n    {BlockCategory.DEVELOPER_TOOLS}, input_schema=self.Input, output_schema\n    =self.Output, webhook_config=BlockWebhookConfig(provider='slant3d',\n    webhook_type='orders', resource_format='', event_filter_input='events',\n    event_format='order.{event}'), test_input={'credentials':\n    TEST_CREDENTIALS_INPUT, 'events': {'shipped': True}, 'payload': {\n    'orderId': '1234567890', 'status': 'SHIPPED', 'trackingNumber':\n    'ABCDEF123456', 'carrierCode': 'usps'}}, test_credentials=\n    TEST_CREDENTIALS, test_output=[('payload', {'orderId': '1234567890',\n    'status': 'SHIPPED', 'trackingNumber': 'ABCDEF123456', 'carrierCode':\n    'usps'}), ('order_id', '1234567890'), ('status', 'SHIPPED'), (\n    'tracking_number', 'ABCDEF123456'), ('carrier_code', 'usps')])",
              "start_line": 70,
              "end_line": 117,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "run",
          "type": "CFG",
          "blocks": [
            {
              "id": 31,
              "label": "#31\nyield from super().run(input_data, **kwargs)\nyield 'status', input_data.payload['status']",
              "start_line": 120,
              "end_line": 123,
              "successors": [
                {
                  "id": 32,
                  "label": "#32\nyield 'tracking_number', input_data.payload['trackingNumber']",
                  "start_line": 124,
                  "end_line": 124,
                  "successors": [
                    {
                      "id": 33,
                      "label": "#33\nyield 'carrier_code', input_data.payload['carrierCode']",
                      "start_line": 125,
                      "end_line": 125,
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": [
        {
          "name": "Input",
          "type": "CFG",
          "blocks": [
            {
              "id": 19,
              "label": "#19\nevents: EventsFilter = SchemaField(title='Events', description=\n    'Order status events to subscribe to', default=EventsFilter(shipped=True))",
              "start_line": 48,
              "end_line": 60,
              "successors": []
            }
          ],
          "functions": [],
          "classes": [
            {
              "name": "EventsFilter",
              "type": "CFG",
              "blocks": [
                {
                  "id": 21,
                  "label": "#21\n\"\"\"\n            Currently Slant3D only supports 'SHIPPED' status updates\n            Could be expanded in the future with more status types\n            \"\"\"\nshipped: bool = True",
                  "start_line": 49,
                  "end_line": 54,
                  "successors": []
                }
              ],
              "functions": [],
              "classes": []
            }
          ]
        },
        {
          "name": "Output",
          "type": "CFG",
          "blocks": [
            {
              "id": 25,
              "label": "#25\nstatus: str = SchemaField(description='The new status of the order')\ntracking_number: str = SchemaField(description=\n    'The tracking number for the shipment')\ncarrier_code: str = SchemaField(description=\"The carrier code (e.g., 'usps')\")",
              "start_line": 63,
              "end_line": 67,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ]
    }
  ]
}