{
  "name": "162.py",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "label": "#1\nfrom abc import ABCMeta, abstractmethod\nfrom collections import deque\nfrom enum import Enum",
      "start_line": 1,
      "end_line": 122,
      "successors": []
    }
  ],
  "functions": [],
  "classes": [
    {
      "name": "Rank",
      "type": "CFG",
      "blocks": [
        {
          "id": 3,
          "label": "#3\nOPERATOR = 0\nSUPERVISOR = 1\nDIRECTOR = 2",
          "start_line": 8,
          "end_line": 10,
          "successors": []
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "Employee",
      "type": "CFG",
      "blocks": [
        {
          "id": 6,
          "label": "#6",
          "start_line": 15,
          "end_line": 40,
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 8,
              "label": "#8\nself.employee_id = employee_id\nself.name = name\nself.rank = rank\nself.call = None\nself.call_center = call_center",
              "start_line": 16,
              "end_line": 20,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "take_call",
          "type": "CFG",
          "blocks": [
            {
              "id": 11,
              "label": "#11\n\"\"\"Assume the employee will always successfully take the call.\"\"\"\nself.call = call\nself.call.employee = self\nself.call.state = CallState.IN_PROGRESS",
              "start_line": 23,
              "end_line": 26,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "complete_call",
          "type": "CFG",
          "blocks": [
            {
              "id": 14,
              "label": "#14\nself.call.state = CallState.COMPLETE\nself.call_center.notify_call_completed(self.call)",
              "start_line": 29,
              "end_line": 30,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "escalate_call",
          "type": "CFG",
          "blocks": [
            {
              "id": 17,
              "label": "#17\npass",
              "start_line": 34,
              "end_line": 34,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "_escalate_call",
          "type": "CFG",
          "blocks": [
            {
              "id": 20,
              "label": "#20\nself.call.state = CallState.READY\ncall = self.call\nself.call = None\nself.call_center.notify_call_escalated(call)",
              "start_line": 37,
              "end_line": 40,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    },
    {
      "name": "Operator",
      "type": "CFG",
      "blocks": [
        {
          "id": 24,
          "label": "#24",
          "start_line": 45,
          "end_line": 50,
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 26,
              "label": "#26\nsuper(Operator, self).__init__(employee_id, name, Rank.OPERATOR)",
              "start_line": 46,
              "end_line": 46,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "escalate_call",
          "type": "CFG",
          "blocks": [
            {
              "id": 29,
              "label": "#29\nself.call.level = Rank.SUPERVISOR\nself._escalate_call()",
              "start_line": 49,
              "end_line": 50,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    },
    {
      "name": "Supervisor",
      "type": "CFG",
      "blocks": [
        {
          "id": 33,
          "label": "#33",
          "start_line": 55,
          "end_line": 60,
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 35,
              "label": "#35\nsuper(Operator, self).__init__(employee_id, name, Rank.SUPERVISOR)",
              "start_line": 56,
              "end_line": 56,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "escalate_call",
          "type": "CFG",
          "blocks": [
            {
              "id": 38,
              "label": "#38\nself.call.level = Rank.DIRECTOR\nself._escalate_call()",
              "start_line": 59,
              "end_line": 60,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    },
    {
      "name": "Director",
      "type": "CFG",
      "blocks": [
        {
          "id": 42,
          "label": "#42",
          "start_line": 65,
          "end_line": 69,
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 44,
              "label": "#44\nsuper(Operator, self).__init__(employee_id, name, Rank.DIRECTOR)",
              "start_line": 66,
              "end_line": 66,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "escalate_call",
          "type": "CFG",
          "blocks": [
            {
              "id": 47,
              "label": "#47\nraise NotImplementedError('Directors must be able to handle any call')",
              "start_line": 69,
              "end_line": 69,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    },
    {
      "name": "CallState",
      "type": "CFG",
      "blocks": [
        {
          "id": 52,
          "label": "#52\nREADY = 0\nIN_PROGRESS = 1\nCOMPLETE = 2",
          "start_line": 74,
          "end_line": 76,
          "successors": []
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "Call",
      "type": "CFG",
      "blocks": [
        {
          "id": 55,
          "label": "#55",
          "start_line": 81,
          "end_line": 84,
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 57,
              "label": "#57\nself.state = CallState.READY\nself.rank = rank\nself.employee = None",
              "start_line": 82,
              "end_line": 84,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    },
    {
      "name": "CallCenter",
      "type": "CFG",
      "blocks": [
        {
          "id": 61,
          "label": "#61",
          "start_line": 89,
          "end_line": 122,
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 63,
              "label": "#63\nself.operators = operators\nself.supervisors = supervisors\nself.directors = directors\nself.queued_calls = deque()",
              "start_line": 90,
              "end_line": 93,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "dispatch_call",
          "type": "CFG",
          "blocks": [
            {
              "id": 66,
              "label": "#66\nif call.rank not in (Rank.OPERATOR, Rank.SUPERVISOR, Rank.DIRECTOR):",
              "start_line": 96,
              "end_line": 97,
              "successors": [
                {
                  "id": 67,
                  "label": "#67\nraise ValueError('Invalid call rank: {}'.format(call.rank))",
                  "start_line": 97,
                  "end_line": 97,
                  "successors": []
                },
                {
                  "id": 68,
                  "label": "#68\nemployee = None\nif call.rank == Rank.OPERATOR:",
                  "start_line": 98,
                  "end_line": 100,
                  "successors": [
                    {
                      "id": 70,
                      "label": "#70\nemployee = self._dispatch_call(call, self.operators)",
                      "start_line": 100,
                      "end_line": 100,
                      "successors": [
                        {
                          "id": 71,
                          "label": "#71\nif call.rank == Rank.SUPERVISOR or employee is None:",
                          "start_line": 101,
                          "end_line": 102,
                          "successors": [
                            {
                              "id": 72,
                              "label": "#72\nemployee = self._dispatch_call(call, self.supervisors)",
                              "start_line": 102,
                              "end_line": 102,
                              "successors": [
                                {
                                  "id": 73,
                                  "label": "#73\nif call.rank == Rank.DIRECTOR or employee is None:",
                                  "start_line": 103,
                                  "end_line": 104,
                                  "successors": [
                                    {
                                      "id": 74,
                                      "label": "#74\nemployee = self._dispatch_call(call, self.directors)",
                                      "start_line": 104,
                                      "end_line": 104,
                                      "successors": [
                                        {
                                          "id": 75,
                                          "label": "#75\nif employee is None:",
                                          "start_line": 105,
                                          "end_line": 106,
                                          "successors": [
                                            {
                                              "id": 76,
                                              "label": "#76\nself.queued_calls.append(call)",
                                              "start_line": 106,
                                              "end_line": 106,
                                              "successors": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "_dispatch_call",
          "type": "CFG",
          "blocks": [
            {
              "id": 80,
              "label": "#80\nfor employee in employees:",
              "start_line": 109,
              "end_line": 112,
              "successors": [
                {
                  "id": 81,
                  "label": "#81\nif employee.call is None:",
                  "start_line": 110,
                  "end_line": 112,
                  "successors": [
                    {
                      "id": 83,
                      "label": "#83\nemployee.take_call(call)\nreturn employee",
                      "start_line": 111,
                      "end_line": 112,
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 82,
                  "label": "#82\nreturn None",
                  "start_line": 113,
                  "end_line": 113,
                  "successors": []
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "notify_call_escalated",
          "type": "CFG",
          "blocks": [
            {
              "id": 89,
              "label": "#89\npass",
              "start_line": 116,
              "end_line": 116,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "notify_call_completed",
          "type": "CFG",
          "blocks": [
            {
              "id": 92,
              "label": "#92\npass",
              "start_line": 119,
              "end_line": 119,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "dispatch_queued_call_to_newly_freed_employee",
          "type": "CFG",
          "blocks": [
            {
              "id": 95,
              "label": "#95\npass",
              "start_line": 122,
              "end_line": 122,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    }
  ]
}