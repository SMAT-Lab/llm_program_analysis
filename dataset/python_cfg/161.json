{
  "name": "161.py",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "label": "#1\nimport random\nfrom collections import defaultdict\nfrom enum import Enum\nfrom typing import Any, Dict, List, Optional, Union\nfrom backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import SchemaField",
      "start_line": 1,
      "end_line": 264,
      "successors": []
    }
  ],
  "functions": [],
  "classes": [
    {
      "name": "SamplingMethod",
      "type": "CFG",
      "blocks": [
        {
          "id": 3,
          "label": "#3\nRANDOM = 'random'\nSYSTEMATIC = 'systematic'\nTOP = 'top'\nBOTTOM = 'bottom'\nSTRATIFIED = 'stratified'\nWEIGHTED = 'weighted'\nRESERVOIR = 'reservoir'\nCLUSTER = 'cluster'",
          "start_line": 11,
          "end_line": 18,
          "successors": []
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "DataSamplingBlock",
      "type": "CFG",
      "blocks": [
        {
          "id": 6,
          "label": "#6",
          "start_line": 22,
          "end_line": 264,
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 14,
              "label": "#14\nsuper().__init__(id='4a448883-71fa-49cf-91cf-70d793bd7d87', description=\n    'This block samples data from a given dataset using various sampling methods.'\n    , categories={BlockCategory.LOGIC}, input_schema=DataSamplingBlock.\n    Input, output_schema=DataSamplingBlock.Output, test_input={'data': [{\n    'id': i, 'value': chr(97 + i), 'group': i % 3} for i in range(10)],\n    'sample_size': 3, 'sampling_method': SamplingMethod.STRATIFIED,\n    'accumulate': False, 'random_seed': 42, 'stratify_key': 'group'},\n    test_output=[('sampled_data', [{'id': 0, 'value': 'a', 'group': 0}, {\n    'id': 1, 'value': 'b', 'group': 1}, {'id': 8, 'value': 'i', 'group': 2}\n    ]), ('sample_indices', [0, 1, 8])])\nself.accumulated_data = []",
              "start_line": 66,
              "end_line": 94,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "run",
          "type": "CFG",
          "blocks": [
            {
              "id": 17,
              "label": "#17\nif input_data.accumulate:",
              "start_line": 97,
              "end_line": 116,
              "successors": [
                {
                  "id": 18,
                  "label": "#18\nif isinstance(input_data.data, dict):",
                  "start_line": 98,
                  "end_line": 103,
                  "successors": [
                    {
                      "id": 21,
                      "label": "#21\nself.accumulated_data.append(input_data.data)",
                      "start_line": 99,
                      "end_line": 99,
                      "successors": [
                        {
                          "id": 22,
                          "label": "#22\nif len(self.accumulated_data) < input_data.sample_size:",
                          "start_line": 106,
                          "end_line": 107,
                          "successors": [
                            {
                              "id": 28,
                              "label": "#28\nreturn",
                              "start_line": 107,
                              "end_line": 107,
                              "successors": []
                            },
                            {
                              "id": 29,
                              "label": "#29\ndata_to_sample = self.accumulated_data",
                              "start_line": 109,
                              "end_line": 109,
                              "successors": [
                                {
                                  "id": 19,
                                  "label": "#19\nif input_data.random_seed is not None:",
                                  "start_line": 118,
                                  "end_line": 119,
                                  "successors": [
                                    {
                                      "id": 31,
                                      "label": "#31\nrandom.seed(input_data.random_seed)",
                                      "start_line": 119,
                                      "end_line": 119,
                                      "successors": [
                                        {
                                          "id": 32,
                                          "label": "#32\ndata_size = len(data_to_sample)\nif input_data.sample_size > data_size:",
                                          "start_line": 121,
                                          "end_line": 126,
                                          "successors": [
                                            {
                                              "id": 33,
                                              "label": "#33\nraise ValueError(\n    f'Sample size ({input_data.sample_size}) cannot be larger than the dataset size ({data_size}).'\n    )",
                                              "start_line": 124,
                                              "end_line": 126,
                                              "successors": []
                                            },
                                            {
                                              "id": 34,
                                              "label": "#34\nindices = []\nif input_data.sampling_method == SamplingMethod.RANDOM:",
                                              "start_line": 128,
                                              "end_line": 255,
                                              "successors": [
                                                {
                                                  "id": 36,
                                                  "label": "#36\nindices = random.sample(range(data_size), input_data.sample_size)",
                                                  "start_line": 131,
                                                  "end_line": 131,
                                                  "successors": [
                                                    {
                                                      "id": 37,
                                                      "label": "#37\nsampled_data = [data_to_sample[i] for i in indices]\nif input_data.accumulate:",
                                                      "start_line": 257,
                                                      "end_line": 261,
                                                      "successors": [
                                                        {
                                                          "id": 135,
                                                          "label": "#135\nself.accumulated_data = []",
                                                          "start_line": 261,
                                                          "end_line": 261,
                                                          "successors": [
                                                            {
                                                              "id": 136,
                                                              "label": "#136\nyield 'sampled_data', sampled_data",
                                                              "start_line": 263,
                                                              "end_line": 263,
                                                              "successors": [
                                                                {
                                                                  "id": 137,
                                                                  "label": "#137\nyield 'sample_indices', indices",
                                                                  "start_line": 264,
                                                                  "end_line": 264,
                                                                  "successors": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "id": 38,
                                                  "label": "#38\nif input_data.sampling_method == SamplingMethod.SYSTEMATIC:",
                                                  "start_line": 132,
                                                  "end_line": 255,
                                                  "successors": [
                                                    {
                                                      "id": 39,
                                                      "label": "#39\nstep = data_size // input_data.sample_size\nstart = random.randint(0, step - 1)\nindices = list(range(start, data_size, step))[:input_data.sample_size]",
                                                      "start_line": 133,
                                                      "end_line": 135,
                                                      "successors": []
                                                    },
                                                    {
                                                      "id": 41,
                                                      "label": "#41\nif input_data.sampling_method == SamplingMethod.TOP:",
                                                      "start_line": 136,
                                                      "end_line": 255,
                                                      "successors": [
                                                        {
                                                          "id": 42,
                                                          "label": "#42\nindices = list(range(input_data.sample_size))",
                                                          "start_line": 137,
                                                          "end_line": 137,
                                                          "successors": []
                                                        },
                                                        {
                                                          "id": 44,
                                                          "label": "#44\nif input_data.sampling_method == SamplingMethod.BOTTOM:",
                                                          "start_line": 138,
                                                          "end_line": 255,
                                                          "successors": [
                                                            {
                                                              "id": 45,
                                                              "label": "#45\nindices = list(range(data_size - input_data.sample_size, data_size))",
                                                              "start_line": 139,
                                                              "end_line": 139,
                                                              "successors": []
                                                            },
                                                            {
                                                              "id": 47,
                                                              "label": "#47\nif input_data.sampling_method == SamplingMethod.STRATIFIED:",
                                                              "start_line": 140,
                                                              "end_line": 255,
                                                              "successors": [
                                                                {
                                                                  "id": 48,
                                                                  "label": "#48\nif not input_data.stratify_key:",
                                                                  "start_line": 141,
                                                                  "end_line": 144,
                                                                  "successors": [
                                                                    {
                                                                      "id": 111,
                                                                      "label": "#111\nraise ValueError('Stratify key must be provided for stratified sampling.')",
                                                                      "start_line": 142,
                                                                      "end_line": 144,
                                                                      "successors": []
                                                                    },
                                                                    {
                                                                      "id": 112,
                                                                      "label": "#112\nstrata = defaultdict(list)",
                                                                      "start_line": 145,
                                                                      "end_line": 145,
                                                                      "successors": [
                                                                        {
                                                                          "id": 114,
                                                                          "label": "#114\nfor i, item in enumerate(data_to_sample):",
                                                                          "start_line": 146,
                                                                          "end_line": 161,
                                                                          "successors": [
                                                                            {
                                                                              "id": 115,
                                                                              "label": "#115\nif isinstance(item, dict):",
                                                                              "start_line": 147,
                                                                              "end_line": 154,
                                                                              "successors": [
                                                                                {
                                                                                  "id": 117,
                                                                                  "label": "#117\nstrata_value = item.get(input_data.stratify_key)",
                                                                                  "start_line": 148,
                                                                                  "end_line": 148,
                                                                                  "successors": [
                                                                                    {
                                                                                      "id": 118,
                                                                                      "label": "#118\nif strata_value is None:",
                                                                                      "start_line": 156,
                                                                                      "end_line": 159,
                                                                                      "successors": [
                                                                                        {
                                                                                          "id": 124,
                                                                                          "label": "#124\nraise ValueError(f\"Stratify value for key '{input_data.stratify_key}' is None\")",
                                                                                          "start_line": 157,
                                                                                          "end_line": 159,
                                                                                          "successors": []
                                                                                        },
                                                                                        {
                                                                                          "id": 125,
                                                                                          "label": "#125\nstrata[str(strata_value)].append(i)",
                                                                                          "start_line": 161,
                                                                                          "end_line": 161,
                                                                                          "successors": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "id": 119,
                                                                                  "label": "#119\nif hasattr(item, input_data.stratify_key):",
                                                                                  "start_line": 149,
                                                                                  "end_line": 154,
                                                                                  "successors": [
                                                                                    {
                                                                                      "id": 120,
                                                                                      "label": "#120\nstrata_value = getattr(item, input_data.stratify_key)",
                                                                                      "start_line": 150,
                                                                                      "end_line": 150,
                                                                                      "successors": []
                                                                                    },
                                                                                    {
                                                                                      "id": 122,
                                                                                      "label": "#122\nraise ValueError(\n    f\"Stratify key '{input_data.stratify_key}' not found in item {item}\")",
                                                                                      "start_line": 152,
                                                                                      "end_line": 154,
                                                                                      "successors": []
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "id": 116,
                                                                              "label": "#116\nstratum_sizes = {k: max(1, int(len(v) / data_size * input_data.sample_size)\n    ) for k, v in strata.items()}",
                                                                              "start_line": 164,
                                                                              "end_line": 167,
                                                                              "successors": [
                                                                                {
                                                                                  "id": 127,
                                                                                  "label": "#127\nwhile sum(stratum_sizes.values()) != input_data.sample_size:",
                                                                                  "start_line": 170,
                                                                                  "end_line": 178,
                                                                                  "successors": [
                                                                                    {
                                                                                      "id": 128,
                                                                                      "label": "#128\nif sum(stratum_sizes.values()) < input_data.sample_size:",
                                                                                      "start_line": 171,
                                                                                      "end_line": 178,
                                                                                      "successors": [
                                                                                        {
                                                                                          "id": 130,
                                                                                          "label": "#130\nstratum_sizes[max(stratum_sizes, key=lambda k: stratum_sizes[k])] += 1",
                                                                                          "start_line": 172,
                                                                                          "end_line": 174,
                                                                                          "successors": []
                                                                                        },
                                                                                        {
                                                                                          "id": 132,
                                                                                          "label": "#132\nstratum_sizes[max(stratum_sizes, key=lambda k: stratum_sizes[k])] -= 1",
                                                                                          "start_line": 176,
                                                                                          "end_line": 178,
                                                                                          "successors": []
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "id": 129,
                                                                                      "label": "#129\nfor stratum, size in stratum_sizes.items():",
                                                                                      "start_line": 180,
                                                                                      "end_line": 181,
                                                                                      "successors": [
                                                                                        {
                                                                                          "id": 133,
                                                                                          "label": "#133\nindices.extend(random.sample(strata[stratum], size))",
                                                                                          "start_line": 181,
                                                                                          "end_line": 181,
                                                                                          "successors": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "id": 50,
                                                                  "label": "#50\nif input_data.sampling_method == SamplingMethod.WEIGHTED:",
                                                                  "start_line": 182,
                                                                  "end_line": 255,
                                                                  "successors": [
                                                                    {
                                                                      "id": 51,
                                                                      "label": "#51\nif not input_data.weight_key:",
                                                                      "start_line": 183,
                                                                      "end_line": 184,
                                                                      "successors": [
                                                                        {
                                                                          "id": 88,
                                                                          "label": "#88\nraise ValueError('Weight key must be provided for weighted sampling.')",
                                                                          "start_line": 184,
                                                                          "end_line": 184,
                                                                          "successors": []
                                                                        },
                                                                        {
                                                                          "id": 89,
                                                                          "label": "#89\nweights = []",
                                                                          "start_line": 185,
                                                                          "end_line": 185,
                                                                          "successors": [
                                                                            {
                                                                              "id": 91,
                                                                              "label": "#91\nfor item in data_to_sample:",
                                                                              "start_line": 186,
                                                                              "end_line": 205,
                                                                              "successors": [
                                                                                {
                                                                                  "id": 92,
                                                                                  "label": "#92\nif isinstance(item, dict):",
                                                                                  "start_line": 187,
                                                                                  "end_line": 194,
                                                                                  "successors": [
                                                                                    {
                                                                                      "id": 94,
                                                                                      "label": "#94\nweight = item.get(input_data.weight_key)",
                                                                                      "start_line": 188,
                                                                                      "end_line": 188,
                                                                                      "successors": [
                                                                                        {
                                                                                          "id": 95,
                                                                                          "label": "#95\nif weight is None:",
                                                                                          "start_line": 196,
                                                                                          "end_line": 199,
                                                                                          "successors": [
                                                                                            {
                                                                                              "id": 101,
                                                                                              "label": "#101\nraise ValueError(f\"Weight value for key '{input_data.weight_key}' is None\")",
                                                                                              "start_line": 197,
                                                                                              "end_line": 199,
                                                                                              "successors": []
                                                                                            },
                                                                                            {
                                                                                              "id": 102,
                                                                                              "label": "#102\ntry:",
                                                                                              "start_line": 200,
                                                                                              "end_line": 205,
                                                                                              "successors": [
                                                                                                {
                                                                                                  "id": 104,
                                                                                                  "label": "#104\nweights.append(float(weight))",
                                                                                                  "start_line": 201,
                                                                                                  "end_line": 201,
                                                                                                  "successors": []
                                                                                                },
                                                                                                {
                                                                                                  "id": 105,
                                                                                                  "label": "#105\nraise ValueError(f\"Weight value '{weight}' cannot be converted to a number\")",
                                                                                                  "start_line": 203,
                                                                                                  "end_line": 205,
                                                                                                  "successors": []
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "id": 96,
                                                                                      "label": "#96\nif hasattr(item, input_data.weight_key):",
                                                                                      "start_line": 189,
                                                                                      "end_line": 194,
                                                                                      "successors": [
                                                                                        {
                                                                                          "id": 97,
                                                                                          "label": "#97\nweight = getattr(item, input_data.weight_key)",
                                                                                          "start_line": 190,
                                                                                          "end_line": 190,
                                                                                          "successors": []
                                                                                        },
                                                                                        {
                                                                                          "id": 99,
                                                                                          "label": "#99\nraise ValueError(\n    f\"Weight key '{input_data.weight_key}' not found in item {item}\")",
                                                                                          "start_line": 192,
                                                                                          "end_line": 194,
                                                                                          "successors": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "id": 93,
                                                                                  "label": "#93\nif not weights:",
                                                                                  "start_line": 207,
                                                                                  "end_line": 210,
                                                                                  "successors": [
                                                                                    {
                                                                                      "id": 108,
                                                                                      "label": "#108\nraise ValueError(f\"No valid weights found using key '{input_data.weight_key}'\")",
                                                                                      "start_line": 208,
                                                                                      "end_line": 210,
                                                                                      "successors": []
                                                                                    },
                                                                                    {
                                                                                      "id": 109,
                                                                                      "label": "#109\nindices = random.choices(range(data_size), weights=weights, k=input_data.\n    sample_size)",
                                                                                      "start_line": 212,
                                                                                      "end_line": 214,
                                                                                      "successors": []
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "id": 53,
                                                                      "label": "#53\nif input_data.sampling_method == SamplingMethod.RESERVOIR:",
                                                                      "start_line": 215,
                                                                      "end_line": 255,
                                                                      "successors": [
                                                                        {
                                                                          "id": 54,
                                                                          "label": "#54\nindices = list(range(input_data.sample_size))",
                                                                          "start_line": 216,
                                                                          "end_line": 216,
                                                                          "successors": [
                                                                            {
                                                                              "id": 83,
                                                                              "label": "#83\nfor i in range(input_data.sample_size, data_size):",
                                                                              "start_line": 217,
                                                                              "end_line": 220,
                                                                              "successors": [
                                                                                {
                                                                                  "id": 84,
                                                                                  "label": "#84\nj = random.randint(0, i)\nif j < input_data.sample_size:",
                                                                                  "start_line": 218,
                                                                                  "end_line": 220,
                                                                                  "successors": [
                                                                                    {
                                                                                      "id": 86,
                                                                                      "label": "#86\nindices[j] = i",
                                                                                      "start_line": 220,
                                                                                      "end_line": 220,
                                                                                      "successors": []
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "id": 56,
                                                                          "label": "#56\nif input_data.sampling_method == SamplingMethod.CLUSTER:",
                                                                          "start_line": 221,
                                                                          "end_line": 255,
                                                                          "successors": [
                                                                            {
                                                                              "id": 57,
                                                                              "label": "#57\nif not input_data.cluster_key:",
                                                                              "start_line": 222,
                                                                              "end_line": 223,
                                                                              "successors": [
                                                                                {
                                                                                  "id": 61,
                                                                                  "label": "#61\nraise ValueError('Cluster key must be provided for cluster sampling.')",
                                                                                  "start_line": 223,
                                                                                  "end_line": 223,
                                                                                  "successors": []
                                                                                },
                                                                                {
                                                                                  "id": 62,
                                                                                  "label": "#62\nclusters = defaultdict(list)",
                                                                                  "start_line": 224,
                                                                                  "end_line": 224,
                                                                                  "successors": [
                                                                                    {
                                                                                      "id": 64,
                                                                                      "label": "#64\nfor i, item in enumerate(data_to_sample):",
                                                                                      "start_line": 225,
                                                                                      "end_line": 235,
                                                                                      "successors": [
                                                                                        {
                                                                                          "id": 65,
                                                                                          "label": "#65\nif isinstance(item, dict):",
                                                                                          "start_line": 226,
                                                                                          "end_line": 233,
                                                                                          "successors": [
                                                                                            {
                                                                                              "id": 67,
                                                                                              "label": "#67\ncluster_value = item.get(input_data.cluster_key)",
                                                                                              "start_line": 227,
                                                                                              "end_line": 227,
                                                                                              "successors": [
                                                                                                {
                                                                                                  "id": 68,
                                                                                                  "label": "#68\nclusters[str(cluster_value)].append(i)",
                                                                                                  "start_line": 235,
                                                                                                  "end_line": 235,
                                                                                                  "successors": []
                                                                                                }
                                                                                              ]
                                                                                            },
                                                                                            {
                                                                                              "id": 69,
                                                                                              "label": "#69\nif hasattr(item, input_data.cluster_key):",
                                                                                              "start_line": 228,
                                                                                              "end_line": 233,
                                                                                              "successors": [
                                                                                                {
                                                                                                  "id": 70,
                                                                                                  "label": "#70\ncluster_value = getattr(item, input_data.cluster_key)",
                                                                                                  "start_line": 229,
                                                                                                  "end_line": 229,
                                                                                                  "successors": []
                                                                                                },
                                                                                                {
                                                                                                  "id": 72,
                                                                                                  "label": "#72\nraise TypeError(\n    f\"Item {item} does not have the cluster key '{input_data.cluster_key}'\")",
                                                                                                  "start_line": 231,
                                                                                                  "end_line": 233,
                                                                                                  "successors": []
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        {
                                                                                          "id": 66,
                                                                                          "label": "#66\nselected_clusters = []",
                                                                                          "start_line": 238,
                                                                                          "end_line": 238,
                                                                                          "successors": [
                                                                                            {
                                                                                              "id": 74,
                                                                                              "label": "#74\nwhile sum(len(clusters[c]) for c in selected_clusters",
                                                                                              "start_line": 239,
                                                                                              "end_line": 246,
                                                                                              "successors": [
                                                                                                {
                                                                                                  "id": 75,
                                                                                                  "label": "#75\navailable_clusters = [c for c in clusters if c not in selected_clusters]\nif not available_clusters:",
                                                                                                  "start_line": 243,
                                                                                                  "end_line": 245,
                                                                                                  "successors": [
                                                                                                    {
                                                                                                      "id": 78,
                                                                                                      "label": "#78\nselected_clusters.append(random.choice(available_clusters))",
                                                                                                      "start_line": 246,
                                                                                                      "end_line": 246,
                                                                                                      "successors": []
                                                                                                    },
                                                                                                    {
                                                                                                      "id": 76,
                                                                                                      "label": "#76\nfor cluster in selected_clusters:",
                                                                                                      "start_line": 248,
                                                                                                      "end_line": 249,
                                                                                                      "successors": [
                                                                                                        {
                                                                                                          "id": 79,
                                                                                                          "label": "#79\nindices.extend(clusters[cluster])",
                                                                                                          "start_line": 249,
                                                                                                          "end_line": 249,
                                                                                                          "successors": []
                                                                                                        },
                                                                                                        {
                                                                                                          "id": 80,
                                                                                                          "label": "#80\nif len(indices) > input_data.sample_size:",
                                                                                                          "start_line": 252,
                                                                                                          "end_line": 253,
                                                                                                          "successors": [
                                                                                                            {
                                                                                                              "id": 81,
                                                                                                              "label": "#81\nindices = random.sample(indices, input_data.sample_size)",
                                                                                                              "start_line": 253,
                                                                                                              "end_line": 253,
                                                                                                              "successors": []
                                                                                                            }
                                                                                                          ]
                                                                                                        }
                                                                                                      ]
                                                                                                    }
                                                                                                  ]
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "id": 59,
                                                                              "label": "#59\nraise ValueError(f'Unknown sampling method: {input_data.sampling_method}')",
                                                                              "start_line": 255,
                                                                              "end_line": 255,
                                                                              "successors": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": 23,
                      "label": "#23\nif isinstance(input_data.data, list):",
                      "start_line": 100,
                      "end_line": 103,
                      "successors": [
                        {
                          "id": 24,
                          "label": "#24\nself.accumulated_data.extend(input_data.data)",
                          "start_line": 101,
                          "end_line": 101,
                          "successors": []
                        },
                        {
                          "id": 26,
                          "label": "#26\nraise ValueError(f'Unsupported data type: {type(input_data.data)}')",
                          "start_line": 103,
                          "end_line": 103,
                          "successors": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "id": 20,
                  "label": "#20\ndata_to_sample = input_data.data if isinstance(input_data.data, list) else [\n    input_data.data]",
                  "start_line": 112,
                  "end_line": 116,
                  "successors": []
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": [
        {
          "name": "Input",
          "type": "CFG",
          "blocks": [
            {
              "id": 8,
              "label": "#8\ndata: Union[Dict[str, Any], List[Union[dict, List[Any]]]] = SchemaField(\n    description=\n    'The dataset to sample from. Can be a single dictionary, a list of dictionaries, or a list of lists.'\n    , placeholder=\n    )\nsample_size: int = SchemaField(description=\n    'The number of samples to take from the dataset.', placeholder='10',\n    default=10)\nsampling_method: SamplingMethod = SchemaField(description=\n    'The method to use for sampling.', default=SamplingMethod.RANDOM)\naccumulate: bool = SchemaField(description=\n    'Whether to accumulate data before sampling.', default=False)\nrandom_seed: Optional[int] = SchemaField(description=\n    'Seed for random number generator (optional).', default=None)\nstratify_key: Optional[str] = SchemaField(description=\n    'Key to use for stratified sampling (required for stratified sampling).',\n    default=None)\nweight_key: Optional[str] = SchemaField(description=\n    'Key to use for weighted sampling (required for weighted sampling).',\n    default=None)\ncluster_key: Optional[str] = SchemaField(description=\n    'Key to use for cluster sampling (required for cluster sampling).',\n    default=None)",
              "start_line": 23,
              "end_line": 55,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "Output",
          "type": "CFG",
          "blocks": [
            {
              "id": 11,
              "label": "#11\nsampled_data: List[Union[dict, List[Any]]] = SchemaField(description=\n    'The sampled subset of the input data.')\nsample_indices: List[int] = SchemaField(description=\n    'The indices of the sampled data in the original dataset.')",
              "start_line": 58,
              "end_line": 63,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ]
    }
  ]
}