{
  "name": "90.py",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "label": "#1\nimport time\nfrom datetime import datetime, timedelta\nfrom typing import Any, Union\nfrom backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import SchemaField",
      "start_line": 1,
      "end_line": 191,
      "successors": []
    }
  ],
  "functions": [],
  "classes": [
    {
      "name": "GetCurrentTimeBlock",
      "type": "CFG",
      "blocks": [
        {
          "id": 3,
          "label": "#3",
          "start_line": 10,
          "end_line": 42,
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 11,
              "label": "#11\nsuper().__init__(id='a892b8d9-3e4e-4e9c-9c1e-75f8efcf1bfa', description=\n    'This block outputs the current time.', categories={BlockCategory.TEXT},\n    input_schema=GetCurrentTimeBlock.Input, output_schema=\n    GetCurrentTimeBlock.Output, test_input=[{'trigger': 'Hello'}, {\n    'trigger': 'Hello', 'format': '%H:%M'}], test_output=[('time', lambda _:\n    time.strftime('%H:%M:%S')), ('time', lambda _: time.strftime('%H:%M'))])",
              "start_line": 24,
              "end_line": 38,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "run",
          "type": "CFG",
          "blocks": [
            {
              "id": 14,
              "label": "#14\ncurrent_time = time.strftime(input_data.format)\nyield 'time', current_time",
              "start_line": 41,
              "end_line": 42,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": [
        {
          "name": "Input",
          "type": "CFG",
          "blocks": [
            {
              "id": 5,
              "label": "#5\ntrigger: str = SchemaField(description=\n    'Trigger any data to output the current time')\nformat: str = SchemaField(description='Format of the time to output',\n    default='%H:%M:%S')",
              "start_line": 11,
              "end_line": 16,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "Output",
          "type": "CFG",
          "blocks": [
            {
              "id": 8,
              "label": "#8\ntime: str = SchemaField(description=\n    'Current time in the specified format (default: %H:%M:%S)')",
              "start_line": 19,
              "end_line": 21,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ]
    },
    {
      "name": "GetCurrentDateBlock",
      "type": "CFG",
      "blocks": [
        {
          "id": 19,
          "label": "#19",
          "start_line": 46,
          "end_line": 96,
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 27,
              "label": "#27\nsuper().__init__(id='b29c1b50-5d0e-4d9f-8f9d-1b0e6fcbf0b1', description=\n    'This block outputs the current date with an optional offset.',\n    categories={BlockCategory.TEXT}, input_schema=GetCurrentDateBlock.Input,\n    output_schema=GetCurrentDateBlock.Output, test_input=[{'trigger':\n    'Hello', 'offset': '7'}, {'trigger': 'Hello', 'offset': '7', 'format':\n    '%m/%d/%Y'}], test_output=[('date', lambda t: abs(datetime.now() -\n    datetime.strptime(t, '%Y-%m-%d')) < timedelta(days=8)), ('date', lambda\n    t: abs(datetime.now() - datetime.strptime(t, '%m/%d/%Y')) < timedelta(\n    days=8))])",
              "start_line": 65,
              "end_line": 88,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "run",
          "type": "CFG",
          "blocks": [
            {
              "id": 30,
              "label": "#30\ntry:",
              "start_line": 91,
              "end_line": 94,
              "successors": [
                {
                  "id": 31,
                  "label": "#31\noffset = int(input_data.offset)",
                  "start_line": 92,
                  "end_line": 92,
                  "successors": [
                    {
                      "id": 33,
                      "label": "#33\ncurrent_date = datetime.now() - timedelta(days=offset)\nyield 'date', current_date.strftime(input_data.format)",
                      "start_line": 95,
                      "end_line": 96,
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 32,
                  "label": "#32\noffset = 0",
                  "start_line": 94,
                  "end_line": 94,
                  "successors": []
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": [
        {
          "name": "Input",
          "type": "CFG",
          "blocks": [
            {
              "id": 21,
              "label": "#21\ntrigger: str = SchemaField(description=\n    'Trigger any data to output the current date')\noffset: Union[int, str] = SchemaField(title='Days Offset', description=\n    'Offset in days from the current date', default=0)\nformat: str = SchemaField(description='Format of the date to output',\n    default='%Y-%m-%d')",
              "start_line": 47,
              "end_line": 57,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "Output",
          "type": "CFG",
          "blocks": [
            {
              "id": 24,
              "label": "#24\ndate: str = SchemaField(description=\n    'Current date in the specified format (default: YYYY-MM-DD)')",
              "start_line": 60,
              "end_line": 62,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ]
    },
    {
      "name": "GetCurrentDateAndTimeBlock",
      "type": "CFG",
      "blocks": [
        {
          "id": 38,
          "label": "#38",
          "start_line": 100,
          "end_line": 137,
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 46,
              "label": "#46\nsuper().__init__(id='716a67b3-6760-42e7-86dc-18645c6e00fc', description=\n    'This block outputs the current date and time.', categories={\n    BlockCategory.TEXT}, input_schema=GetCurrentDateAndTimeBlock.Input,\n    output_schema=GetCurrentDateAndTimeBlock.Output, test_input=[{'trigger':\n    'Hello'}], test_output=[('date_time', lambda t: abs(datetime.now() -\n    datetime.strptime(t, '%Y-%m-%d %H:%M:%S')) < timedelta(seconds=10))])",
              "start_line": 115,
              "end_line": 133,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "run",
          "type": "CFG",
          "blocks": [
            {
              "id": 49,
              "label": "#49\ncurrent_date_time = time.strftime(input_data.format)\nyield 'date_time', current_date_time",
              "start_line": 136,
              "end_line": 137,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": [
        {
          "name": "Input",
          "type": "CFG",
          "blocks": [
            {
              "id": 40,
              "label": "#40\ntrigger: str = SchemaField(description=\n    'Trigger any data to output the current date and time')\nformat: str = SchemaField(description=\n    'Format of the date and time to output', default='%Y-%m-%d %H:%M:%S')",
              "start_line": 101,
              "end_line": 107,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "Output",
          "type": "CFG",
          "blocks": [
            {
              "id": 43,
              "label": "#43\ndate_time: str = SchemaField(description=\n    'Current date and time in the specified format (default: YYYY-MM-DD HH:MM:SS)'\n    )",
              "start_line": 110,
              "end_line": 112,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ]
    },
    {
      "name": "CountdownTimerBlock",
      "type": "CFG",
      "blocks": [
        {
          "id": 54,
          "label": "#54",
          "start_line": 141,
          "end_line": 191,
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 62,
              "label": "#62\nsuper().__init__(id='d67a9c52-5e4e-11e2-bcfd-0800200c9a71', description=\n    'This block triggers after a specified duration.', categories={\n    BlockCategory.TEXT}, input_schema=CountdownTimerBlock.Input,\n    output_schema=CountdownTimerBlock.Output, test_input=[{'seconds': 1}, {\n    'input_message': 'Custom message'}], test_output=[('output_message',\n    'timer finished'), ('output_message', 'Custom message')])",
              "start_line": 166,
              "end_line": 180,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "run",
          "type": "CFG",
          "blocks": [
            {
              "id": 65,
              "label": "#65\nseconds = int(input_data.seconds)\nminutes = int(input_data.minutes)\nhours = int(input_data.hours)\ndays = int(input_data.days)\ntotal_seconds = seconds + minutes * 60 + hours * 3600 + days * 86400\ntime.sleep(total_seconds)\nyield 'output_message', input_data.input_message",
              "start_line": 183,
              "end_line": 191,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": [
        {
          "name": "Input",
          "type": "CFG",
          "blocks": [
            {
              "id": 56,
              "label": "#56\ninput_message: Any = SchemaField(advanced=False, description=\n    'Message to output after the timer finishes', default='timer finished')\nseconds: Union[int, str] = SchemaField(advanced=False, description=\n    'Duration in seconds', default=0)\nminutes: Union[int, str] = SchemaField(advanced=False, description=\n    'Duration in minutes', default=0)\nhours: Union[int, str] = SchemaField(advanced=False, description=\n    'Duration in hours', default=0)\ndays: Union[int, str] = SchemaField(advanced=False, description=\n    'Duration in days', default=0)",
              "start_line": 142,
              "end_line": 158,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "Output",
          "type": "CFG",
          "blocks": [
            {
              "id": 59,
              "label": "#59\noutput_message: Any = SchemaField(description=\n    'Message after the timer finishes')",
              "start_line": 161,
              "end_line": 163,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ]
    }
  ]
}