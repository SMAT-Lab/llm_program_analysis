{
  "name": "10.py",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "label": "#1\nimport json\nimport os\nimport requests\nimport sys\nimport time\nfrom typing import Dict, List, Tuple\nCHECK_INTERVAL = 30\nif __name__ == '__main__':",
      "start_line": 1,
      "end_line": 116,
      "successors": [
        {
          "id": 49,
          "label": "#49\nmain()",
          "start_line": 116,
          "end_line": 116,
          "successors": []
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "get_environment_variables",
      "type": "CFG",
      "blocks": [
        {
          "id": 3,
          "label": "#3\n\"\"\"Retrieve and return necessary environment variables.\"\"\"\ntry:",
          "start_line": 12,
          "end_line": 32,
          "successors": [
            {
              "id": 4,
              "label": "#4\nwith open(os.environ['GITHUB_EVENT_PATH']) as f:",
              "start_line": 14,
              "end_line": 15,
              "successors": [
                {
                  "id": 7,
                  "label": "#7\nevent = json.load(f)",
                  "start_line": 15,
                  "end_line": 15,
                  "successors": [
                    {
                      "id": 8,
                      "label": "#8\nif 'pull_request' in event:",
                      "start_line": 18,
                      "end_line": 21,
                      "successors": [
                        {
                          "id": 9,
                          "label": "#9\nsha = event['pull_request']['head']['sha']",
                          "start_line": 19,
                          "end_line": 19,
                          "successors": [
                            {
                              "id": 10,
                              "label": "#10\nreturn os.environ['GITHUB_API_URL'], os.environ['GITHUB_REPOSITORY'\n    ], sha, os.environ['GITHUB_TOKEN'], os.environ['GITHUB_RUN_ID']",
                              "start_line": 23,
                              "end_line": 29,
                              "successors": []
                            }
                          ]
                        },
                        {
                          "id": 11,
                          "label": "#11\nsha = os.environ['GITHUB_SHA']",
                          "start_line": 21,
                          "end_line": 21,
                          "successors": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "id": 5,
              "label": "#5\nprint(f'Error: Missing required environment variable or event data: {e}')\nsys.exit(1)",
              "start_line": 31,
              "end_line": 32,
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "make_api_request",
      "type": "CFG",
      "blocks": [
        {
          "id": 15,
          "label": "#15\n\"\"\"Make an API request and return the JSON response.\"\"\"\ntry:",
          "start_line": 36,
          "end_line": 44,
          "successors": [
            {
              "id": 16,
              "label": "#16\nprint('Making API request to:', url)\nresponse = requests.get(url, headers=headers, timeout=10)\nresponse.raise_for_status()\nreturn response.json()",
              "start_line": 38,
              "end_line": 41,
              "successors": []
            },
            {
              "id": 17,
              "label": "#17\nprint(f'Error: API request failed. {e}')\nsys.exit(1)",
              "start_line": 43,
              "end_line": 44,
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "process_check_runs",
      "type": "CFG",
      "blocks": [
        {
          "id": 22,
          "label": "#22\n\"\"\"Process check runs and return their status.\"\"\"\nruns_in_progress = False\nall_others_passed = True",
          "start_line": 48,
          "end_line": 50,
          "successors": [
            {
              "id": 23,
              "label": "#23\nfor run in check_runs:",
              "start_line": 52,
              "end_line": 70,
              "successors": [
                {
                  "id": 24,
                  "label": "#24\nif str(run['name']) != 'Check PR Status':",
                  "start_line": 53,
                  "end_line": 70,
                  "successors": [
                    {
                      "id": 26,
                      "label": "#26\nstatus = run['status']\nconclusion = run['conclusion']\nif status == 'completed':",
                      "start_line": 54,
                      "end_line": 66,
                      "successors": [
                        {
                          "id": 29,
                          "label": "#29\nif conclusion not in ['success', 'skipped', 'neutral']:",
                          "start_line": 58,
                          "end_line": 62,
                          "successors": [
                            {
                              "id": 32,
                              "label": "#32\nall_others_passed = False\nprint(f\"Check run {run['name']} (ID: {run['id']}) has conclusion: {conclusion}\"\n    )",
                              "start_line": 59,
                              "end_line": 62,
                              "successors": []
                            }
                          ]
                        },
                        {
                          "id": 31,
                          "label": "#31\nruns_in_progress = True\nprint(f\"Check run {run['name']} (ID: {run['id']}) is still {status}.\")\nall_others_passed = False",
                          "start_line": 64,
                          "end_line": 66,
                          "successors": []
                        }
                      ]
                    },
                    {
                      "id": 28,
                      "label": "#28\nprint(\n    f\"Skipping check run {run['name']} (ID: {run['id']}) as it is the current run.\"\n    )",
                      "start_line": 68,
                      "end_line": 70,
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 25,
                  "label": "#25\nreturn runs_in_progress, all_others_passed",
                  "start_line": 72,
                  "end_line": 72,
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "main",
      "type": "CFG",
      "blocks": [
        {
          "id": 37,
          "label": "#37\napi_url, repo, sha, github_token, current_run_id = get_environment_variables()\nendpoint = f'{api_url}/repos/{repo}/commits/{sha}/check-runs'\nheaders = {'Accept': 'application/vnd.github.v3+json'}\nif github_token:",
          "start_line": 76,
          "end_line": 83,
          "successors": [
            {
              "id": 38,
              "label": "#38\nheaders['Authorization'] = f'token {github_token}'",
              "start_line": 83,
              "end_line": 83,
              "successors": [
                {
                  "id": 39,
                  "label": "#39\nprint(f'Current run ID: {current_run_id}')",
                  "start_line": 85,
                  "end_line": 85,
                  "successors": [
                    {
                      "id": 40,
                      "label": "#40\nwhile True:",
                      "start_line": 87,
                      "end_line": 105,
                      "successors": [
                        {
                          "id": 41,
                          "label": "#41\ndata = make_api_request(endpoint, headers)\ncheck_runs = data['check_runs']\nprint(check_runs)\nruns_in_progress, all_others_passed = process_check_runs(check_runs)\nif not runs_in_progress:",
                          "start_line": 88,
                          "end_line": 99,
                          "successors": [
                            {
                              "id": 44,
                              "label": "#44\nprint(\n    )\ntime.sleep(CHECK_INTERVAL)",
                              "start_line": 101,
                              "end_line": 105,
                              "successors": []
                            },
                            {
                              "id": 42,
                              "label": "#42\nif all_others_passed:",
                              "start_line": 107,
                              "end_line": 112,
                              "successors": [
                                {
                                  "id": 45,
                                  "label": "#45\nprint('All other completed check runs have passed. This check passes.')\nsys.exit(0)",
                                  "start_line": 108,
                                  "end_line": 109,
                                  "successors": []
                                },
                                {
                                  "id": 47,
                                  "label": "#47\nprint('Some check runs have failed or have not completed. This check fails.')\nsys.exit(1)",
                                  "start_line": 111,
                                  "end_line": 112,
                                  "successors": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    }
  ],
  "classes": []
}