{
  "name": "45.py",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "label": "#1\nimport logging\nimport uuid\nfrom datetime import datetime, timezone\nfrom typing import List, Optional\nfrom autogpt_libs.api_key.key_manager import APIKeyManager\nfrom prisma.enums import APIKeyPermission, APIKeyStatus\nfrom prisma.errors import PrismaError\nfrom prisma.models import APIKey as PrismaAPIKey\nfrom prisma.types import APIKeyCreateInput, APIKeyUpdateInput, APIKeyWhereInput, APIKeyWhereUniqueInput\nfrom pydantic import BaseModel\nfrom backend.data.db import BaseDbModel\nlogger = logging.getLogger(__name__)",
      "start_line": 1,
      "end_line": 325,
      "successors": []
    }
  ],
  "functions": [
    {
      "name": "generate_api_key",
      "type": "CFG",
      "blocks": [
        {
          "id": 37,
          "label": "#37\n\"\"\"\n    Generate a new API key and store it in the database.\n    Returns the API key object (without hash) and the plain text key.\n    \"\"\"\ntry:",
          "start_line": 123,
          "end_line": 151,
          "successors": [
            {
              "id": 38,
              "label": "#38\napi_manager = APIKeyManager()\nkey = api_manager.generate_api_key()\napi_key = await PrismaAPIKey.prisma().create(data=APIKeyCreateInput(id=str(\n    uuid.uuid4()), name=name, prefix=key.prefix, postfix=key.postfix, key=\n    key.hash, permissions=[p for p in permissions], description=description,\n    userId=user_id))",
              "start_line": 128,
              "end_line": 142,
              "successors": [
                {
                  "id": 42,
                  "label": "#42\napi_key_without_hash = APIKeyWithoutHash.from_db(api_key)\nreturn api_key_without_hash, key.raw",
                  "start_line": 144,
                  "end_line": 145,
                  "successors": []
                }
              ]
            },
            {
              "id": 39,
              "label": "#39\nlogger.error(f'Database error while generating API key: {str(e)}')\nraise APIKeyError(f'Failed to generate API key: {str(e)}')",
              "start_line": 147,
              "end_line": 148,
              "successors": []
            },
            {
              "id": 40,
              "label": "#40\nlogger.error(f'Unexpected error while generating API key: {str(e)}')\nraise APIKeyError(f'Failed to generate API key: {str(e)}')",
              "start_line": 150,
              "end_line": 151,
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "validate_api_key",
      "type": "CFG",
      "blocks": [
        {
          "id": 48,
          "label": "#48\n\"\"\"\n    Validate an API key and return the API key object if valid.\n    \"\"\"\ntry:",
          "start_line": 155,
          "end_line": 182,
          "successors": [
            {
              "id": 49,
              "label": "#49\nif not plain_text_key.startswith(APIKeyManager.PREFIX):",
              "start_line": 159,
              "end_line": 161,
              "successors": [
                {
                  "id": 52,
                  "label": "#52\nlogger.warning('Invalid API key format')\nreturn None",
                  "start_line": 160,
                  "end_line": 161,
                  "successors": []
                },
                {
                  "id": 53,
                  "label": "#53\nprefix = plain_text_key[:APIKeyManager.PREFIX_LENGTH]\napi_manager = APIKeyManager()\napi_key = await PrismaAPIKey.prisma().find_first(where=APIKeyWhereInput(\n    prefix=prefix, status=APIKeyStatus.ACTIVE))",
                  "start_line": 163,
                  "end_line": 168,
                  "successors": [
                    {
                      "id": 55,
                      "label": "#55\nif not api_key:",
                      "start_line": 170,
                      "end_line": 172,
                      "successors": [
                        {
                          "id": 56,
                          "label": "#56\nlogger.warning(f'No active API key found with prefix {prefix}')\nreturn None",
                          "start_line": 171,
                          "end_line": 172,
                          "successors": []
                        },
                        {
                          "id": 57,
                          "label": "#57\nis_valid = api_manager.verify_api_key(plain_text_key, api_key.key)\nif not is_valid:",
                          "start_line": 174,
                          "end_line": 177,
                          "successors": [
                            {
                              "id": 59,
                              "label": "#59\nlogger.warning('API key verification failed')\nreturn None",
                              "start_line": 176,
                              "end_line": 177,
                              "successors": []
                            },
                            {
                              "id": 60,
                              "label": "#60\nreturn APIKey.from_db(api_key)",
                              "start_line": 179,
                              "end_line": 179,
                              "successors": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "id": 50,
              "label": "#50\nlogger.error(f'Error validating API key: {str(e)}')\nraise APIKeyValidationError(f'Failed to validate API key: {str(e)}')",
              "start_line": 181,
              "end_line": 182,
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "revoke_api_key",
      "type": "CFG",
      "blocks": [
        {
          "id": 66,
          "label": "#66\ntry:",
          "start_line": 186,
          "end_line": 215,
          "successors": [
            {
              "id": 67,
              "label": "#67\napi_key = await PrismaAPIKey.prisma().find_unique(where={'id': key_id})",
              "start_line": 187,
              "end_line": 187,
              "successors": [
                {
                  "id": 72,
                  "label": "#72\nif not api_key:",
                  "start_line": 189,
                  "end_line": 190,
                  "successors": [
                    {
                      "id": 73,
                      "label": "#73\nraise APIKeyNotFoundError(f'API key with id {key_id} not found')",
                      "start_line": 190,
                      "end_line": 190,
                      "successors": []
                    },
                    {
                      "id": 74,
                      "label": "#74\nif api_key.userId != user_id:",
                      "start_line": 192,
                      "end_line": 195,
                      "successors": [
                        {
                          "id": 76,
                          "label": "#76\nraise APIKeyPermissionError(\n    'You do not have permission to revoke this API key.')",
                          "start_line": 193,
                          "end_line": 195,
                          "successors": []
                        },
                        {
                          "id": 77,
                          "label": "#77\nwhere_clause: APIKeyWhereUniqueInput = {'id': key_id}\nupdated_api_key = await PrismaAPIKey.prisma().update(where=where_clause,\n    data=APIKeyUpdateInput(status=APIKeyStatus.REVOKED, revokedAt=datetime.\n    now(timezone.utc)))",
                          "start_line": 197,
                          "end_line": 203,
                          "successors": [
                            {
                              "id": 79,
                              "label": "#79\nif updated_api_key:",
                              "start_line": 205,
                              "end_line": 206,
                              "successors": [
                                {
                                  "id": 80,
                                  "label": "#80\nreturn APIKeyWithoutHash.from_db(updated_api_key)",
                                  "start_line": 206,
                                  "end_line": 206,
                                  "successors": []
                                },
                                {
                                  "id": 81,
                                  "label": "#81\nreturn None",
                                  "start_line": 207,
                                  "end_line": 207,
                                  "successors": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "id": 68,
              "label": "#68\nraise e",
              "start_line": 209,
              "end_line": 209,
              "successors": []
            },
            {
              "id": 69,
              "label": "#69\nlogger.error(f'Database error while revoking API key: {str(e)}')\nraise APIKeyError(f'Failed to revoke API key: {str(e)}')",
              "start_line": 211,
              "end_line": 212,
              "successors": []
            },
            {
              "id": 70,
              "label": "#70\nlogger.error(f'Unexpected error while revoking API key: {str(e)}')\nraise APIKeyError(f'Failed to revoke API key: {str(e)}')",
              "start_line": 214,
              "end_line": 215,
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "list_user_api_keys",
      "type": "CFG",
      "blocks": [
        {
          "id": 89,
          "label": "#89\ntry:",
          "start_line": 219,
          "end_line": 232,
          "successors": [
            {
              "id": 90,
              "label": "#90\nwhere_clause: APIKeyWhereInput = {'userId': user_id}\napi_keys = await PrismaAPIKey.prisma().find_many(where=where_clause, order=\n    {'createdAt': 'desc'})",
              "start_line": 220,
              "end_line": 224,
              "successors": [
                {
                  "id": 94,
                  "label": "#94\nreturn [APIKeyWithoutHash.from_db(key) for key in api_keys]",
                  "start_line": 226,
                  "end_line": 226,
                  "successors": []
                }
              ]
            },
            {
              "id": 91,
              "label": "#91\nlogger.error(f'Database error while listing API keys: {str(e)}')\nraise APIKeyError(f'Failed to list API keys: {str(e)}')",
              "start_line": 228,
              "end_line": 229,
              "successors": []
            },
            {
              "id": 92,
              "label": "#92\nlogger.error(f'Unexpected error while listing API keys: {str(e)}')\nraise APIKeyError(f'Failed to list API keys: {str(e)}')",
              "start_line": 231,
              "end_line": 232,
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "suspend_api_key",
      "type": "CFG",
      "blocks": [
        {
          "id": 100,
          "label": "#100\ntry:",
          "start_line": 236,
          "end_line": 263,
          "successors": [
            {
              "id": 101,
              "label": "#101\napi_key = await PrismaAPIKey.prisma().find_unique(where={'id': key_id})",
              "start_line": 237,
              "end_line": 237,
              "successors": [
                {
                  "id": 106,
                  "label": "#106\nif not api_key:",
                  "start_line": 239,
                  "end_line": 240,
                  "successors": [
                    {
                      "id": 107,
                      "label": "#107\nraise APIKeyNotFoundError(f'API key with id {key_id} not found')",
                      "start_line": 240,
                      "end_line": 240,
                      "successors": []
                    },
                    {
                      "id": 108,
                      "label": "#108\nif api_key.userId != user_id:",
                      "start_line": 242,
                      "end_line": 245,
                      "successors": [
                        {
                          "id": 110,
                          "label": "#110\nraise APIKeyPermissionError(\n    'You do not have permission to suspend this API key.')",
                          "start_line": 243,
                          "end_line": 245,
                          "successors": []
                        },
                        {
                          "id": 111,
                          "label": "#111\nwhere_clause: APIKeyWhereUniqueInput = {'id': key_id}\nupdated_api_key = await PrismaAPIKey.prisma().update(where=where_clause,\n    data=APIKeyUpdateInput(status=APIKeyStatus.SUSPENDED))",
                          "start_line": 247,
                          "end_line": 251,
                          "successors": [
                            {
                              "id": 113,
                              "label": "#113\nif updated_api_key:",
                              "start_line": 253,
                              "end_line": 254,
                              "successors": [
                                {
                                  "id": 114,
                                  "label": "#114\nreturn APIKeyWithoutHash.from_db(updated_api_key)",
                                  "start_line": 254,
                                  "end_line": 254,
                                  "successors": []
                                },
                                {
                                  "id": 115,
                                  "label": "#115\nreturn None",
                                  "start_line": 255,
                                  "end_line": 255,
                                  "successors": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "id": 102,
              "label": "#102\nraise e",
              "start_line": 257,
              "end_line": 257,
              "successors": []
            },
            {
              "id": 103,
              "label": "#103\nlogger.error(f'Database error while suspending API key: {str(e)}')\nraise APIKeyError(f'Failed to suspend API key: {str(e)}')",
              "start_line": 259,
              "end_line": 260,
              "successors": []
            },
            {
              "id": 104,
              "label": "#104\nlogger.error(f'Unexpected error while suspending API key: {str(e)}')\nraise APIKeyError(f'Failed to suspend API key: {str(e)}')",
              "start_line": 262,
              "end_line": 263,
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "has_permission",
      "type": "CFG",
      "blocks": [
        {
          "id": 123,
          "label": "#123\ntry:",
          "start_line": 267,
          "end_line": 271,
          "successors": [
            {
              "id": 124,
              "label": "#124\nreturn required_permission in api_key.permissions",
              "start_line": 268,
              "end_line": 268,
              "successors": []
            },
            {
              "id": 125,
              "label": "#125\nlogger.error(f'Error checking API key permissions: {str(e)}')\nreturn False",
              "start_line": 270,
              "end_line": 271,
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "get_api_key_by_id",
      "type": "CFG",
      "blocks": [
        {
          "id": 131,
          "label": "#131\ntry:",
          "start_line": 275,
          "end_line": 289,
          "successors": [
            {
              "id": 132,
              "label": "#132\napi_key = await PrismaAPIKey.prisma().find_first(where=APIKeyWhereInput(id=\n    key_id, userId=user_id))",
              "start_line": 276,
              "end_line": 278,
              "successors": [
                {
                  "id": 136,
                  "label": "#136\nif not api_key:",
                  "start_line": 280,
                  "end_line": 281,
                  "successors": [
                    {
                      "id": 137,
                      "label": "#137\nreturn None",
                      "start_line": 281,
                      "end_line": 281,
                      "successors": []
                    },
                    {
                      "id": 138,
                      "label": "#138\nreturn APIKeyWithoutHash.from_db(api_key)",
                      "start_line": 283,
                      "end_line": 283,
                      "successors": []
                    }
                  ]
                }
              ]
            },
            {
              "id": 133,
              "label": "#133\nlogger.error(f'Database error while getting API key: {str(e)}')\nraise APIKeyError(f'Failed to get API key: {str(e)}')",
              "start_line": 285,
              "end_line": 286,
              "successors": []
            },
            {
              "id": 134,
              "label": "#134\nlogger.error(f'Unexpected error while getting API key: {str(e)}')\nraise APIKeyError(f'Failed to get API key: {str(e)}')",
              "start_line": 288,
              "end_line": 289,
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "update_api_key_permissions",
      "type": "CFG",
      "blocks": [
        {
          "id": 145,
          "label": "#145\n\"\"\"\n    Update the permissions of an API key.\n    \"\"\"\ntry:",
          "start_line": 295,
          "end_line": 325,
          "successors": [
            {
              "id": 146,
              "label": "#146\napi_key = await PrismaAPIKey.prisma().find_unique(where={'id': key_id})",
              "start_line": 299,
              "end_line": 299,
              "successors": [
                {
                  "id": 151,
                  "label": "#151\nif api_key is None:",
                  "start_line": 301,
                  "end_line": 302,
                  "successors": [
                    {
                      "id": 152,
                      "label": "#152\nraise APIKeyNotFoundError('No such API key found.')",
                      "start_line": 302,
                      "end_line": 302,
                      "successors": []
                    },
                    {
                      "id": 153,
                      "label": "#153\nif api_key.userId != user_id:",
                      "start_line": 304,
                      "end_line": 307,
                      "successors": [
                        {
                          "id": 155,
                          "label": "#155\nraise APIKeyPermissionError(\n    'You do not have permission to update this API key.')",
                          "start_line": 305,
                          "end_line": 307,
                          "successors": []
                        },
                        {
                          "id": 156,
                          "label": "#156\nwhere_clause: APIKeyWhereUniqueInput = {'id': key_id}\nupdated_api_key = await PrismaAPIKey.prisma().update(where=where_clause,\n    data=APIKeyUpdateInput(permissions=permissions))",
                          "start_line": 309,
                          "end_line": 313,
                          "successors": [
                            {
                              "id": 158,
                              "label": "#158\nif updated_api_key:",
                              "start_line": 315,
                              "end_line": 316,
                              "successors": [
                                {
                                  "id": 159,
                                  "label": "#159\nreturn APIKeyWithoutHash.from_db(updated_api_key)",
                                  "start_line": 316,
                                  "end_line": 316,
                                  "successors": []
                                },
                                {
                                  "id": 160,
                                  "label": "#160\nreturn None",
                                  "start_line": 317,
                                  "end_line": 317,
                                  "successors": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "id": 147,
              "label": "#147\nraise e",
              "start_line": 319,
              "end_line": 319,
              "successors": []
            },
            {
              "id": 148,
              "label": "#148\nlogger.error(f'Database error while updating API key permissions: {str(e)}')\nraise APIKeyError(f'Failed to update API key permissions: {str(e)}')",
              "start_line": 321,
              "end_line": 322,
              "successors": []
            },
            {
              "id": 149,
              "label": "#149\nlogger.error(f'Unexpected error while updating API key permissions: {str(e)}')\nraise APIKeyError(f'Failed to update API key permissions: {str(e)}')",
              "start_line": 324,
              "end_line": 325,
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    }
  ],
  "classes": [
    {
      "name": "APIKeyError",
      "type": "CFG",
      "blocks": [
        {
          "id": 3,
          "label": "#3\n\"\"\"Base exception for API key operations\"\"\"\npass",
          "start_line": 25,
          "end_line": 27,
          "successors": []
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "APIKeyNotFoundError",
      "type": "CFG",
      "blocks": [
        {
          "id": 6,
          "label": "#6\n\"\"\"Raised when an API key is not found\"\"\"\npass",
          "start_line": 31,
          "end_line": 33,
          "successors": []
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "APIKeyPermissionError",
      "type": "CFG",
      "blocks": [
        {
          "id": 9,
          "label": "#9\n\"\"\"Raised when there are permission issues with API key operations\"\"\"\npass",
          "start_line": 37,
          "end_line": 39,
          "successors": []
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "APIKeyValidationError",
      "type": "CFG",
      "blocks": [
        {
          "id": 12,
          "label": "#12\n\"\"\"Raised when API key validation fails\"\"\"\npass",
          "start_line": 43,
          "end_line": 45,
          "successors": []
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "APIKey",
      "type": "CFG",
      "blocks": [
        {
          "id": 15,
          "label": "#15\nname: str\nprefix: str\nkey: str\nstatus: APIKeyStatus = APIKeyStatus.ACTIVE\npermissions: List[APIKeyPermission]\npostfix: str\ncreated_at: datetime\nlast_used_at: Optional[datetime] = None\nrevoked_at: Optional[datetime] = None\ndescription: Optional[str] = None\nuser_id: str",
          "start_line": 49,
          "end_line": 80,
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "from_db",
          "type": "CFG",
          "blocks": [
            {
              "id": 17,
              "label": "#17\ntry:",
              "start_line": 63,
              "end_line": 80,
              "successors": [
                {
                  "id": 18,
                  "label": "#18\nreturn APIKey(id=api_key.id, name=api_key.name, prefix=api_key.prefix,\n    postfix=api_key.postfix, key=api_key.key, status=APIKeyStatus(api_key.\n    status), permissions=[APIKeyPermission(p) for p in api_key.permissions],\n    created_at=api_key.createdAt, last_used_at=api_key.lastUsedAt,\n    revoked_at=api_key.revokedAt, description=api_key.description, user_id=\n    api_key.userId)",
                  "start_line": 64,
                  "end_line": 77,
                  "successors": []
                },
                {
                  "id": 19,
                  "label": "#19\nlogger.error(f'Error creating APIKey from db: {str(e)}')\nraise APIKeyError(f'Failed to create API key object: {str(e)}')",
                  "start_line": 79,
                  "end_line": 80,
                  "successors": []
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    },
    {
      "name": "APIKeyWithoutHash",
      "type": "CFG",
      "blocks": [
        {
          "id": 26,
          "label": "#26\nid: str\nname: str\nprefix: str\npostfix: str\nstatus: APIKeyStatus\npermissions: List[APIKeyPermission]\ncreated_at: datetime\nlast_used_at: Optional[datetime]\nrevoked_at: Optional[datetime]\ndescription: Optional[str]\nuser_id: str",
          "start_line": 84,
          "end_line": 114,
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "from_db",
          "type": "CFG",
          "blocks": [
            {
              "id": 28,
              "label": "#28\ntry:",
              "start_line": 98,
              "end_line": 114,
              "successors": [
                {
                  "id": 29,
                  "label": "#29\nreturn APIKeyWithoutHash(id=api_key.id, name=api_key.name, prefix=api_key.\n    prefix, postfix=api_key.postfix, status=APIKeyStatus(api_key.status),\n    permissions=[APIKeyPermission(p) for p in api_key.permissions],\n    created_at=api_key.createdAt, last_used_at=api_key.lastUsedAt,\n    revoked_at=api_key.revokedAt, description=api_key.description, user_id=\n    api_key.userId)",
                  "start_line": 99,
                  "end_line": 111,
                  "successors": []
                },
                {
                  "id": 30,
                  "label": "#30\nlogger.error(f'Error creating APIKeyWithoutHash from db: {str(e)}')\nraise APIKeyError(f'Failed to create API key object: {str(e)}')",
                  "start_line": 113,
                  "end_line": 114,
                  "successors": []
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    }
  ]
}