{
  "name": "156.py",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "label": "#1\nfrom fastapi import HTTPException, Request\nfrom starlette.middleware.base import RequestResponseEndpoint\nfrom .limiter import RateLimiter",
      "successors": []
    }
  ],
  "functions": [
    {
      "name": "rate_limit_middleware",
      "type": "CFG",
      "blocks": [
        {
          "id": 3,
          "label": "#3\n\"\"\"FastAPI middleware for rate limiting API requests.\"\"\"\nlimiter = RateLimiter()\nif not request.url.path.startswith('/api'):",
          "successors": [
            {
              "id": 4,
              "label": "#4\nreturn await call_next(request)",
              "successors": []
            },
            {
              "id": 5,
              "label": "#5\napi_key = request.headers.get('Authorization')\nif not api_key:",
              "successors": [
                {
                  "id": 7,
                  "label": "#7\nreturn await call_next(request)",
                  "successors": []
                },
                {
                  "id": 8,
                  "label": "#8\napi_key = api_key.replace('Bearer ', '')\nis_allowed, remaining, reset_time = await limiter.check_rate_limit(api_key)",
                  "successors": [
                    {
                      "id": 10,
                      "label": "#10\nif not is_allowed:",
                      "successors": [
                        {
                          "id": 11,
                          "label": "#11\nraise HTTPException(status_code=429, detail=\n    'Rate limit exceeded. Please try again later.')",
                          "successors": []
                        },
                        {
                          "id": 12,
                          "label": "#12\nresponse = await call_next(request)",
                          "successors": [
                            {
                              "id": 14,
                              "label": "#14\nresponse.headers['X-RateLimit-Limit'] = str(limiter.max_requests)\nresponse.headers['X-RateLimit-Remaining'] = str(remaining)\nresponse.headers['X-RateLimit-Reset'] = str(reset_time)\nreturn response",
                              "successors": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    }
  ],
  "classes": []
}