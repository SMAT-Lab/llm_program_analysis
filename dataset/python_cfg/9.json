{
  "name": "9.py",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "label": "#1\nimport threading\nfrom typing import Callable, ParamSpec, TypeVar\nP = ParamSpec('P')\nR = TypeVar('R')",
      "start_line": 1,
      "end_line": 20,
      "successors": []
    }
  ],
  "functions": [
    {
      "name": "thread_cached",
      "type": "CFG",
      "blocks": [
        {
          "id": 3,
          "label": "#3\nthread_local = threading.local()\nreturn wrapper",
          "start_line": 9,
          "end_line": 20,
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "wrapper",
          "type": "CFG",
          "blocks": [
            {
              "id": 5,
              "label": "#5\ncache = getattr(thread_local, 'cache', None)\nif cache is None:",
              "start_line": 12,
              "end_line": 14,
              "successors": [
                {
                  "id": 6,
                  "label": "#6\ncache = thread_local.cache = {}",
                  "start_line": 14,
                  "end_line": 14,
                  "successors": [
                    {
                      "id": 7,
                      "label": "#7\nkey = args, tuple(sorted(kwargs.items()))\nif key not in cache:",
                      "start_line": 15,
                      "end_line": 17,
                      "successors": [
                        {
                          "id": 8,
                          "label": "#8\ncache[key] = func(*args, **kwargs)",
                          "start_line": 17,
                          "end_line": 17,
                          "successors": [
                            {
                              "id": 9,
                              "label": "#9\nreturn cache[key]",
                              "start_line": 18,
                              "end_line": 18,
                              "successors": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    }
  ],
  "classes": []
}