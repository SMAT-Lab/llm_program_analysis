{
  "name": "146.py",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "label": "#1\nimport logging\nimport typing\nimport urllib.parse\nimport autogpt_libs.auth.depends\nimport autogpt_libs.auth.middleware\nimport fastapi\nimport fastapi.responses\nimport backend.data.graph\nimport backend.server.v2.store.db\nimport backend.server.v2.store.image_gen\nimport backend.server.v2.store.media\nimport backend.server.v2.store.model\nlogger = logging.getLogger(__name__)\nrouter = fastapi.APIRouter()",
      "successors": []
    }
  ],
  "functions": [
    {
      "name": "get_profile",
      "type": "CFG",
      "blocks": [
        {
          "id": 3,
          "label": "#3\n\"\"\"\n    Get the profile details for the authenticated user.\n    \"\"\"\ntry:",
          "successors": [
            {
              "id": 4,
              "label": "#4\nprofile = await backend.server.v2.store.db.get_user_profile(user_id)",
              "successors": [
                {
                  "id": 7,
                  "label": "#7\nreturn profile",
                  "successors": []
                }
              ]
            },
            {
              "id": 5,
              "label": "#5\nlogger.exception('Exception occurred whilst getting user profile')\nreturn fastapi.responses.JSONResponse(status_code=500, content={'detail':\n    'An error occurred while retrieving the user profile'})",
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "update_or_create_profile",
      "type": "CFG",
      "blocks": [
        {
          "id": 12,
          "label": "#12\n\"\"\"\n    Update the store profile for the authenticated user.\n\n    Args:\n        profile (Profile): The updated profile details\n        user_id (str): ID of the authenticated user\n\n    Returns:\n        CreatorDetails: The updated profile\n\n    Raises:\n        HTTPException: If there is an error updating the profile\n    \"\"\"\ntry:",
          "successors": [
            {
              "id": 13,
              "label": "#13\nupdated_profile = await backend.server.v2.store.db.update_or_create_profile(\n    user_id=user_id, profile=profile)",
              "successors": [
                {
                  "id": 16,
                  "label": "#16\nreturn updated_profile",
                  "successors": []
                }
              ]
            },
            {
              "id": 14,
              "label": "#14\nlogger.exception('Exception occurred whilst updating profile')\nreturn fastapi.responses.JSONResponse(status_code=500, content={'detail':\n    'An error occurred while updating the user profile'})",
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "get_agents",
      "type": "CFG",
      "blocks": [
        {
          "id": 21,
          "label": "#21\n\"\"\"\n    Get a paginated list of agents from the store with optional filtering and sorting.\n\n    Args:\n        featured (bool, optional): Filter to only show featured agents. Defaults to False.\n        creator (str | None, optional): Filter agents by creator username. Defaults to None.\n        sorted_by (str | None, optional): Sort agents by \"runs\" or \"rating\". Defaults to None.\n        search_query (str | None, optional): Search agents by name, subheading and description. Defaults to None.\n        category (str | None, optional): Filter agents by category. Defaults to None.\n        page (int, optional): Page number for pagination. Defaults to 1.\n        page_size (int, optional): Number of agents per page. Defaults to 20.\n\n    Returns:\n        StoreAgentsResponse: Paginated list of agents matching the filters\n\n    Raises:\n        HTTPException: If page or page_size are less than 1\n\n    Used for:\n    - Home Page Featured Agents\n    - Home Page Top Agents\n    - Search Results\n    - Agent Details - Other Agents By Creator\n    - Agent Details - Similar Agents\n    - Creator Details - Agents By Creator\n    \"\"\"\nif page < 1:",
          "successors": [
            {
              "id": 22,
              "label": "#22\nraise fastapi.HTTPException(status_code=422, detail=\n    'Page must be greater than 0')",
              "successors": []
            },
            {
              "id": 23,
              "label": "#23\nif page_size < 1:",
              "successors": [
                {
                  "id": 25,
                  "label": "#25\nraise fastapi.HTTPException(status_code=422, detail=\n    'Page size must be greater than 0')",
                  "successors": []
                },
                {
                  "id": 26,
                  "label": "#26\ntry:",
                  "successors": [
                    {
                      "id": 28,
                      "label": "#28\nagents = await backend.server.v2.store.db.get_store_agents(featured=\n    featured, creator=creator, sorted_by=sorted_by, search_query=\n    search_query, category=category, page=page, page_size=page_size)",
                      "successors": [
                        {
                          "id": 31,
                          "label": "#31\nreturn agents",
                          "successors": []
                        }
                      ]
                    },
                    {
                      "id": 29,
                      "label": "#29\nlogger.exception('Exception occured whilst getting store agents')\nreturn fastapi.responses.JSONResponse(status_code=500, content={'detail':\n    'An error occurred while retrieving the store agents'})",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "get_agent",
      "type": "CFG",
      "blocks": [
        {
          "id": 36,
          "label": "#36\n\"\"\"\n    This is only used on the AgentDetails Page\n\n    It returns the store listing agents details.\n    \"\"\"\ntry:",
          "successors": [
            {
              "id": 37,
              "label": "#37\nusername = urllib.parse.unquote(username).lower()\nagent_name = urllib.parse.unquote(agent_name).lower()\nagent = await backend.server.v2.store.db.get_store_agent_details(username=\n    username, agent_name=agent_name)",
              "successors": [
                {
                  "id": 40,
                  "label": "#40\nreturn agent",
                  "successors": []
                }
              ]
            },
            {
              "id": 38,
              "label": "#38\nlogger.exception('Exception occurred whilst getting store agent details')\nreturn fastapi.responses.JSONResponse(status_code=500, content={'detail':\n    'An error occurred while retrieving the store agent details'})",
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "create_review",
      "type": "CFG",
      "blocks": [
        {
          "id": 45,
          "label": "#45\n\"\"\"\n    Create a review for a store agent.\n\n    Args:\n        username: Creator's username\n        agent_name: Name/slug of the agent\n        review: Review details including score and optional comments\n        user_id: ID of authenticated user creating the review\n\n    Returns:\n        The created review\n    \"\"\"\ntry:",
          "successors": [
            {
              "id": 46,
              "label": "#46\nusername = urllib.parse.unquote(username).lower()\nagent_name = urllib.parse.unquote(agent_name)\ncreated_review = await backend.server.v2.store.db.create_store_review(user_id\n    =user_id, store_listing_version_id=review.store_listing_version_id,\n    score=review.score, comments=review.comments)",
              "successors": [
                {
                  "id": 49,
                  "label": "#49\nreturn created_review",
                  "successors": []
                }
              ]
            },
            {
              "id": 47,
              "label": "#47\nlogger.exception('Exception occurred whilst creating store review')\nreturn fastapi.responses.JSONResponse(status_code=500, content={'detail':\n    'An error occurred while creating the store review'})",
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "get_creators",
      "type": "CFG",
      "blocks": [
        {
          "id": 54,
          "label": "#54\n\"\"\"\n    This is needed for:\n    - Home Page Featured Creators\n    - Search Results Page\n\n    ---\n\n    To support this functionality we need:\n    - featured: bool - to limit the list to just featured agents\n    - search_query: str - vector search based on the creators profile description.\n    - sorted_by: [agent_rating, agent_runs] -\n    \"\"\"\nif page < 1:",
          "successors": [
            {
              "id": 55,
              "label": "#55\nraise fastapi.HTTPException(status_code=422, detail=\n    'Page must be greater than 0')",
              "successors": []
            },
            {
              "id": 56,
              "label": "#56\nif page_size < 1:",
              "successors": [
                {
                  "id": 58,
                  "label": "#58\nraise fastapi.HTTPException(status_code=422, detail=\n    'Page size must be greater than 0')",
                  "successors": []
                },
                {
                  "id": 59,
                  "label": "#59\ntry:",
                  "successors": [
                    {
                      "id": 61,
                      "label": "#61\ncreators = await backend.server.v2.store.db.get_store_creators(featured=\n    featured, search_query=search_query, sorted_by=sorted_by, page=page,\n    page_size=page_size)",
                      "successors": [
                        {
                          "id": 64,
                          "label": "#64\nreturn creators",
                          "successors": []
                        }
                      ]
                    },
                    {
                      "id": 62,
                      "label": "#62\nlogger.exception('Exception occurred whilst getting store creators')\nreturn fastapi.responses.JSONResponse(status_code=500, content={'detail':\n    'An error occurred while retrieving the store creators'})",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "get_creator",
      "type": "CFG",
      "blocks": [
        {
          "id": 69,
          "label": "#69\n\"\"\"\n    Get the details of a creator\n    - Creator Details Page\n    \"\"\"\ntry:",
          "successors": [
            {
              "id": 70,
              "label": "#70\nusername = urllib.parse.unquote(username).lower()\ncreator = await backend.server.v2.store.db.get_store_creator_details(username\n    =username.lower())",
              "successors": [
                {
                  "id": 73,
                  "label": "#73\nreturn creator",
                  "successors": []
                }
              ]
            },
            {
              "id": 71,
              "label": "#71\nlogger.exception('Exception occurred whilst getting creator details')\nreturn fastapi.responses.JSONResponse(status_code=500, content={'detail':\n    'An error occurred while retrieving the creator details'})",
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "get_my_agents",
      "type": "CFG",
      "blocks": [
        {
          "id": 78,
          "label": "#78\ntry:",
          "successors": [
            {
              "id": 79,
              "label": "#79\nagents = await backend.server.v2.store.db.get_my_agents(user_id)",
              "successors": [
                {
                  "id": 82,
                  "label": "#82\nreturn agents",
                  "successors": []
                }
              ]
            },
            {
              "id": 80,
              "label": "#80\nlogger.exception('Exception occurred whilst getting my agents')\nreturn fastapi.responses.JSONResponse(status_code=500, content={'detail':\n    'An error occurred while retrieving the my agents'})",
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "delete_submission",
      "type": "CFG",
      "blocks": [
        {
          "id": 87,
          "label": "#87\n\"\"\"\n    Delete a store listing submission.\n\n    Args:\n        user_id (str): ID of the authenticated user\n        submission_id (str): ID of the submission to be deleted\n\n    Returns:\n        bool: True if the submission was successfully deleted, False otherwise\n    \"\"\"\ntry:",
          "successors": [
            {
              "id": 88,
              "label": "#88\nresult = await backend.server.v2.store.db.delete_store_submission(user_id=\n    user_id, submission_id=submission_id)",
              "successors": [
                {
                  "id": 91,
                  "label": "#91\nreturn result",
                  "successors": []
                }
              ]
            },
            {
              "id": 89,
              "label": "#89\nlogger.exception('Exception occurred whilst deleting store submission')\nreturn fastapi.responses.JSONResponse(status_code=500, content={'detail':\n    'An error occurred while deleting the store submission'})",
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "get_submissions",
      "type": "CFG",
      "blocks": [
        {
          "id": 96,
          "label": "#96\n\"\"\"\n    Get a paginated list of store submissions for the authenticated user.\n\n    Args:\n        user_id (str): ID of the authenticated user\n        page (int, optional): Page number for pagination. Defaults to 1.\n        page_size (int, optional): Number of submissions per page. Defaults to 20.\n\n    Returns:\n        StoreListingsResponse: Paginated list of store submissions\n\n    Raises:\n        HTTPException: If page or page_size are less than 1\n    \"\"\"\nif page < 1:",
          "successors": [
            {
              "id": 97,
              "label": "#97\nraise fastapi.HTTPException(status_code=422, detail=\n    'Page must be greater than 0')",
              "successors": []
            },
            {
              "id": 98,
              "label": "#98\nif page_size < 1:",
              "successors": [
                {
                  "id": 100,
                  "label": "#100\nraise fastapi.HTTPException(status_code=422, detail=\n    'Page size must be greater than 0')",
                  "successors": []
                },
                {
                  "id": 101,
                  "label": "#101\ntry:",
                  "successors": [
                    {
                      "id": 103,
                      "label": "#103\nlistings = await backend.server.v2.store.db.get_store_submissions(user_id=\n    user_id, page=page, page_size=page_size)",
                      "successors": [
                        {
                          "id": 106,
                          "label": "#106\nreturn listings",
                          "successors": []
                        }
                      ]
                    },
                    {
                      "id": 104,
                      "label": "#104\nlogger.exception('Exception occurred whilst getting store submissions')\nreturn fastapi.responses.JSONResponse(status_code=500, content={'detail':\n    'An error occurred while retrieving the store submissions'})",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "create_submission",
      "type": "CFG",
      "blocks": [
        {
          "id": 111,
          "label": "#111\n\"\"\"\n    Create a new store listing submission.\n\n    Args:\n        submission_request (StoreSubmissionRequest): The submission details\n        user_id (str): ID of the authenticated user submitting the listing\n\n    Returns:\n        StoreSubmission: The created store submission\n\n    Raises:\n        HTTPException: If there is an error creating the submission\n    \"\"\"\ntry:",
          "successors": [
            {
              "id": 112,
              "label": "#112\nsubmission = await backend.server.v2.store.db.create_store_submission(user_id\n    =user_id, agent_id=submission_request.agent_id, agent_version=\n    submission_request.agent_version, slug=submission_request.slug, name=\n    submission_request.name, video_url=submission_request.video_url,\n    image_urls=submission_request.image_urls, description=\n    submission_request.description, sub_heading=submission_request.\n    sub_heading, categories=submission_request.categories)",
              "successors": [
                {
                  "id": 115,
                  "label": "#115\nreturn submission",
                  "successors": []
                }
              ]
            },
            {
              "id": 113,
              "label": "#113\nlogger.exception('Exception occurred whilst creating store submission')\nreturn fastapi.responses.JSONResponse(status_code=500, content={'detail':\n    'An error occurred while creating the store submission'})",
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "upload_submission_media",
      "type": "CFG",
      "blocks": [
        {
          "id": 120,
          "label": "#120\n\"\"\"\n    Upload media (images/videos) for a store listing submission.\n\n    Args:\n        file (UploadFile): The media file to upload\n        user_id (str): ID of the authenticated user uploading the media\n\n    Returns:\n        str: URL of the uploaded media file\n\n    Raises:\n        HTTPException: If there is an error uploading the media\n    \"\"\"\ntry:",
          "successors": [
            {
              "id": 121,
              "label": "#121\nmedia_url = await backend.server.v2.store.media.upload_media(user_id=\n    user_id, file=file)",
              "successors": [
                {
                  "id": 124,
                  "label": "#124\nreturn media_url",
                  "successors": []
                }
              ]
            },
            {
              "id": 122,
              "label": "#122\nlogger.exception('Exception occurred whilst uploading submission media')\nreturn fastapi.responses.JSONResponse(status_code=500, content={'detail':\n    'An error occurred while uploading the media file'})",
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "generate_image",
      "type": "CFG",
      "blocks": [
        {
          "id": 129,
          "label": "#129\n\"\"\"\n    Generate an image for a store listing submission.\n\n    Args:\n        agent_id (str): ID of the agent to generate an image for\n        user_id (str): ID of the authenticated user\n\n    Returns:\n        JSONResponse: JSON containing the URL of the generated image\n    \"\"\"\ntry:",
          "successors": [
            {
              "id": 130,
              "label": "#130\nagent = await backend.data.graph.get_graph(agent_id, user_id=user_id)",
              "successors": [
                {
                  "id": 133,
                  "label": "#133\nif not agent:",
                  "successors": [
                    {
                      "id": 134,
                      "label": "#134\nraise fastapi.HTTPException(status_code=404, detail=\n    f'Agent with ID {agent_id} not found')",
                      "successors": []
                    },
                    {
                      "id": 135,
                      "label": "#135\nfilename = f'agent_{agent_id}.jpeg'\nexisting_url = await backend.server.v2.store.media.check_media_exists(user_id,\n    filename)",
                      "successors": [
                        {
                          "id": 137,
                          "label": "#137\nif existing_url:",
                          "successors": [
                            {
                              "id": 138,
                              "label": "#138\nlogger.info(f'Using existing image for agent {agent_id}')\nreturn fastapi.responses.JSONResponse(content={'image_url': existing_url})",
                              "successors": []
                            },
                            {
                              "id": 139,
                              "label": "#139\nimage = await backend.server.v2.store.image_gen.generate_agent_image(agent=\n    agent)",
                              "successors": [
                                {
                                  "id": 141,
                                  "label": "#141\nimage_file = fastapi.UploadFile(file=image, filename=filename)\nimage_url = await backend.server.v2.store.media.upload_media(user_id=\n    user_id, file=image_file, use_file_name=True)",
                                  "successors": [
                                    {
                                      "id": 142,
                                      "label": "#142\nreturn fastapi.responses.JSONResponse(content={'image_url': image_url})",
                                      "successors": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "id": 131,
              "label": "#131\nlogger.exception('Exception occurred whilst generating submission image')\nreturn fastapi.responses.JSONResponse(status_code=500, content={'detail':\n    'An error occurred while generating the image'})",
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    }
  ],
  "classes": []
}