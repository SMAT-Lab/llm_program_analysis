{
  "name": "136.py",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "label": "#1\nimport logging\nimport requests\nfrom fastapi import Request\nfrom backend.data import integrations\nfrom backend.data.model import APIKeyCredentials, Credentials\nfrom backend.integrations.providers import ProviderName\nfrom backend.integrations.webhooks._base import BaseWebhooksManager\nlogger = logging.getLogger(__name__)",
      "start_line": 1,
      "end_line": 99,
      "successors": []
    }
  ],
  "functions": [],
  "classes": [
    {
      "name": "Slant3DWebhooksManager",
      "type": "CFG",
      "blocks": [
        {
          "id": 3,
          "label": "#3\n\"\"\"Manager for Slant3D webhooks\"\"\"\nPROVIDER_NAME = ProviderName.SLANT3D\nBASE_URL = 'https://www.slant3dapi.com/api'",
          "start_line": 15,
          "end_line": 99,
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "_register_webhook",
          "type": "CFG",
          "blocks": [
            {
              "id": 5,
              "label": "#5\n\"\"\"Register a new webhook with Slant3D\"\"\"\nif not isinstance(credentials, APIKeyCredentials):",
              "start_line": 29,
              "end_line": 32,
              "successors": [
                {
                  "id": 6,
                  "label": "#6\nraise ValueError('API key is required to register a webhook')",
                  "start_line": 32,
                  "end_line": 32,
                  "successors": []
                },
                {
                  "id": 7,
                  "label": "#7\nheaders = {'api-key': credentials.api_key.get_secret_value(),\n    'Content-Type': 'application/json'}\npayload = {'endPoint': ingress_url}\nresponse = requests.post(f'{self.BASE_URL}/customer/webhookSubscribe',\n    headers=headers, json=payload)\nif not response.ok:",
                  "start_line": 34,
                  "end_line": 48,
                  "successors": [
                    {
                      "id": 9,
                      "label": "#9\nerror = response.json().get('error', 'Unknown error')\nraise RuntimeError(f'Failed to register webhook: {error}')",
                      "start_line": 47,
                      "end_line": 48,
                      "successors": []
                    },
                    {
                      "id": 10,
                      "label": "#10\nwebhook_config = {'endpoint': ingress_url, 'provider': self.PROVIDER_NAME,\n    'events': ['order.shipped'], 'type': webhook_type}\nreturn '', webhook_config",
                      "start_line": 50,
                      "end_line": 57,
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "validate_payload",
          "type": "CFG",
          "blocks": [
            {
              "id": 15,
              "label": "#15\n\"\"\"Validate incoming webhook payload from Slant3D\"\"\"\npayload = await request.json()",
              "start_line": 63,
              "end_line": 65,
              "successors": [
                {
                  "id": 16,
                  "label": "#16\nrequired_fields = ['orderId', 'status', 'trackingNumber', 'carrierCode']\nmissing_fields = [field for field in required_fields if field not in payload]\nif missing_fields:",
                  "start_line": 68,
                  "end_line": 72,
                  "successors": [
                    {
                      "id": 17,
                      "label": "#17\nraise ValueError(f\"Missing required fields: {', '.join(missing_fields)}\")",
                      "start_line": 72,
                      "end_line": 72,
                      "successors": []
                    },
                    {
                      "id": 18,
                      "label": "#18\nnormalized_payload = {'orderId': payload['orderId'], 'status': payload[\n    'status'], 'trackingNumber': payload['trackingNumber'], 'carrierCode':\n    payload['carrierCode']}\nevent_type = f\"order.{payload['status'].lower()}\"\nreturn normalized_payload, event_type",
                      "start_line": 75,
                      "end_line": 86,
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "_deregister_webhook",
          "type": "CFG",
          "blocks": [
            {
              "id": 23,
              "label": "#23\n\"\"\"\n        Note: Slant3D API currently doesn't provide a deregistration endpoint.\n        This would need to be handled through support.\n        \"\"\"\nlogger.warning(\n    f'Warning: Manual deregistration required for webhook {webhook.id}')\npass",
              "start_line": 91,
              "end_line": 99,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    }
  ]
}