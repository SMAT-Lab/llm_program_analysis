{
  "name": "133.py",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "label": "#1\nimport asyncio\nimport random\nfrom datetime import datetime\nimport prisma.enums\nfrom faker import Faker\nfrom prisma import Prisma\nfaker = Faker()\nNUM_USERS = 100\nNUM_AGENT_BLOCKS = 100\nMIN_GRAPHS_PER_USER = 1\nMAX_GRAPHS_PER_USER = 5\nMIN_NODES_PER_GRAPH = 2\nMAX_NODES_PER_GRAPH = 5\nMIN_PRESETS_PER_USER = 1\nMAX_PRESETS_PER_USER = 5\nMIN_AGENTS_PER_USER = 1\nMAX_AGENTS_PER_USER = 10\nMIN_EXECUTIONS_PER_GRAPH = 1\nMAX_EXECUTIONS_PER_GRAPH = 20\nMIN_REVIEWS_PER_VERSION = 1\nMAX_REVIEWS_PER_VERSION = 5\nif __name__ == '__main__':",
      "start_line": 1,
      "end_line": 436,
      "successors": [
        {
          "id": 120,
          "label": "#120\nasyncio.run(main())",
          "start_line": 436,
          "end_line": 436,
          "successors": []
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "get_image",
      "type": "CFG",
      "blocks": [
        {
          "id": 3,
          "label": "#3\nurl = faker.image_url()",
          "start_line": 43,
          "end_line": 43,
          "successors": [
            {
              "id": 4,
              "label": "#4\nwhile 'placekitten.com' in url:",
              "start_line": 44,
              "end_line": 45,
              "successors": [
                {
                  "id": 5,
                  "label": "#5\nurl = faker.image_url()",
                  "start_line": 45,
                  "end_line": 45,
                  "successors": []
                },
                {
                  "id": 6,
                  "label": "#6\nreturn url",
                  "start_line": 46,
                  "end_line": 46,
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "main",
      "type": "CFG",
      "blocks": [
        {
          "id": 10,
          "label": "#10\ndb = Prisma()\nawait db.connect()",
          "start_line": 50,
          "end_line": 51,
          "successors": [
            {
              "id": 11,
              "label": "#11\nprint(f'Inserting {NUM_USERS} users')\nusers = []",
              "start_line": 54,
              "end_line": 55,
              "successors": [
                {
                  "id": 12,
                  "label": "#12\nfor _ in range(NUM_USERS):",
                  "start_line": 56,
                  "end_line": 66,
                  "successors": [
                    {
                      "id": 13,
                      "label": "#13\nuser = await db.user.create(data={'id': str(faker.uuid4()), 'email': faker.\n    unique.email(), 'name': faker.name(), 'metadata': prisma.Json({}),\n    'integrations': ''})",
                      "start_line": 57,
                      "end_line": 65,
                      "successors": [
                        {
                          "id": 15,
                          "label": "#15\nusers.append(user)",
                          "start_line": 66,
                          "end_line": 66,
                          "successors": []
                        }
                      ]
                    },
                    {
                      "id": 14,
                      "label": "#14\nagent_blocks = []\nprint(f'Inserting {NUM_AGENT_BLOCKS} agent blocks')",
                      "start_line": 69,
                      "end_line": 70,
                      "successors": [
                        {
                          "id": 16,
                          "label": "#16\nfor _ in range(NUM_AGENT_BLOCKS):",
                          "start_line": 71,
                          "end_line": 79,
                          "successors": [
                            {
                              "id": 17,
                              "label": "#17\nblock = await db.agentblock.create(data={'name':\n    f'{faker.word()}_{str(faker.uuid4())[:8]}', 'inputSchema': '{}',\n    'outputSchema': '{}'})",
                              "start_line": 72,
                              "end_line": 78,
                              "successors": [
                                {
                                  "id": 19,
                                  "label": "#19\nagent_blocks.append(block)",
                                  "start_line": 79,
                                  "end_line": 79,
                                  "successors": []
                                }
                              ]
                            },
                            {
                              "id": 18,
                              "label": "#18\nagent_graphs = []\nprint(f'Inserting {NUM_USERS * MAX_GRAPHS_PER_USER} agent graphs')",
                              "start_line": 82,
                              "end_line": 83,
                              "successors": [
                                {
                                  "id": 20,
                                  "label": "#20\nfor user in users:",
                                  "start_line": 84,
                                  "end_line": 97,
                                  "successors": [
                                    {
                                      "id": 21,
                                      "label": "#21\nfor _ in range(random.randint(MIN_GRAPHS_PER_USER, MAX_GRAPHS_PER_USER)):",
                                      "start_line": 85,
                                      "end_line": 97,
                                      "successors": [
                                        {
                                          "id": 23,
                                          "label": "#23\ngraph = await db.agentgraph.create(data={'name': faker.sentence(nb_words=3),\n    'description': faker.text(max_nb_chars=200), 'userId': user.id,\n    'isActive': True, 'isTemplate': False})",
                                          "start_line": 88,
                                          "end_line": 96,
                                          "successors": [
                                            {
                                              "id": 25,
                                              "label": "#25\nagent_graphs.append(graph)",
                                              "start_line": 97,
                                              "end_line": 97,
                                              "successors": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "id": 22,
                                      "label": "#22\nagent_nodes = []\nprint(\n    f'Inserting {NUM_USERS * MAX_GRAPHS_PER_USER * MAX_NODES_PER_GRAPH} agent nodes'\n    )",
                                      "start_line": 100,
                                      "end_line": 103,
                                      "successors": [
                                        {
                                          "id": 26,
                                          "label": "#26\nfor graph in agent_graphs:",
                                          "start_line": 104,
                                          "end_line": 117,
                                          "successors": [
                                            {
                                              "id": 27,
                                              "label": "#27\nnum_nodes = random.randint(MIN_NODES_PER_GRAPH, MAX_NODES_PER_GRAPH)",
                                              "start_line": 105,
                                              "end_line": 105,
                                              "successors": [
                                                {
                                                  "id": 29,
                                                  "label": "#29\nfor _ in range(num_nodes):",
                                                  "start_line": 106,
                                                  "end_line": 117,
                                                  "successors": [
                                                    {
                                                      "id": 30,
                                                      "label": "#30\nblock = random.choice(agent_blocks)\nnode = await db.agentnode.create(data={'agentBlockId': block.id,\n    'agentGraphId': graph.id, 'agentGraphVersion': graph.version,\n    'constantInput': '{}', 'metadata': '{}'})",
                                                      "start_line": 107,
                                                      "end_line": 116,
                                                      "successors": [
                                                        {
                                                          "id": 32,
                                                          "label": "#32\nagent_nodes.append(node)",
                                                          "start_line": 117,
                                                          "end_line": 117,
                                                          "successors": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "id": 28,
                                              "label": "#28\nagent_presets = []\nprint(f'Inserting {NUM_USERS * MAX_PRESETS_PER_USER} agent presets')",
                                              "start_line": 120,
                                              "end_line": 121,
                                              "successors": [
                                                {
                                                  "id": 33,
                                                  "label": "#33\nfor user in users:",
                                                  "start_line": 122,
                                                  "end_line": 136,
                                                  "successors": [
                                                    {
                                                      "id": 34,
                                                      "label": "#34\nnum_presets = random.randint(MIN_PRESETS_PER_USER, MAX_PRESETS_PER_USER)",
                                                      "start_line": 123,
                                                      "end_line": 123,
                                                      "successors": [
                                                        {
                                                          "id": 36,
                                                          "label": "#36\nfor _ in range(num_presets):",
                                                          "start_line": 124,
                                                          "end_line": 136,
                                                          "successors": [
                                                            {
                                                              "id": 37,
                                                              "label": "#37\ngraph = random.choice(agent_graphs)\npreset = await db.agentpreset.create(data={'name': faker.sentence(nb_words=\n    3), 'description': faker.text(max_nb_chars=200), 'userId': user.id,\n    'agentId': graph.id, 'agentVersion': graph.version, 'isActive': True})",
                                                              "start_line": 125,
                                                              "end_line": 135,
                                                              "successors": [
                                                                {
                                                                  "id": 39,
                                                                  "label": "#39\nagent_presets.append(preset)",
                                                                  "start_line": 136,
                                                                  "end_line": 136,
                                                                  "successors": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "id": 35,
                                                      "label": "#35\nuser_agents = []\nprint(f'Inserting {NUM_USERS * MAX_AGENTS_PER_USER} user agents')",
                                                      "start_line": 139,
                                                      "end_line": 140,
                                                      "successors": [
                                                        {
                                                          "id": 40,
                                                          "label": "#40\nfor user in users:",
                                                          "start_line": 141,
                                                          "end_line": 158,
                                                          "successors": [
                                                            {
                                                              "id": 41,
                                                              "label": "#41\nnum_agents = random.randint(MIN_AGENTS_PER_USER, MAX_AGENTS_PER_USER)",
                                                              "start_line": 142,
                                                              "end_line": 142,
                                                              "successors": [
                                                                {
                                                                  "id": 43,
                                                                  "label": "#43\nfor _ in range(num_agents):",
                                                                  "start_line": 143,
                                                                  "end_line": 158,
                                                                  "successors": [
                                                                    {
                                                                      "id": 44,
                                                                      "label": "#44\ngraph = random.choice(agent_graphs)\npreset = random.choice(agent_presets)\nuser_agent = await db.useragent.create(data={'userId': user.id, 'agentId':\n    graph.id, 'agentVersion': graph.version, 'agentPresetId': preset.id,\n    'isFavorite': random.choice([True, False]), 'isCreatedByUser': random.\n    choice([True, False]), 'isArchived': random.choice([True, False]),\n    'isDeleted': random.choice([True, False])})",
                                                                      "start_line": 144,
                                                                      "end_line": 157,
                                                                      "successors": [
                                                                        {
                                                                          "id": 46,
                                                                          "label": "#46\nuser_agents.append(user_agent)",
                                                                          "start_line": 158,
                                                                          "end_line": 158,
                                                                          "successors": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "id": 42,
                                                              "label": "#42\nagent_graph_executions = []\nprint(\n    f'Inserting {NUM_USERS * MAX_GRAPHS_PER_USER * MAX_EXECUTIONS_PER_GRAPH} agent graph executions'\n    )\ngraph_execution_data = []",
                                                              "start_line": 162,
                                                              "end_line": 166,
                                                              "successors": [
                                                                {
                                                                  "id": 47,
                                                                  "label": "#47\nfor graph in agent_graphs:",
                                                                  "start_line": 167,
                                                                  "end_line": 189,
                                                                  "successors": [
                                                                    {
                                                                      "id": 48,
                                                                      "label": "#48\nuser = random.choice(users)\nnum_executions = random.randint(MIN_EXECUTIONS_PER_GRAPH,\n    MAX_EXECUTIONS_PER_GRAPH)",
                                                                      "start_line": 168,
                                                                      "end_line": 171,
                                                                      "successors": [
                                                                        {
                                                                          "id": 50,
                                                                          "label": "#50\nfor _ in range(num_executions):",
                                                                          "start_line": 172,
                                                                          "end_line": 189,
                                                                          "successors": [
                                                                            {
                                                                              "id": 51,
                                                                              "label": "#51\nmatching_presets = [p for p in agent_presets if p.agentId == graph.id]\npreset = random.choice(matching_presets) if matching_presets and random.random(\n    ) < 0.5 else None\ngraph_execution_data.append({'agentGraphId': graph.id, 'agentGraphVersion':\n    graph.version, 'userId': user.id, 'executionStatus': prisma.enums.\n    AgentExecutionStatus.COMPLETED, 'startedAt': faker.date_time_this_year(\n    ), 'agentPresetId': preset.id if preset else None})",
                                                                              "start_line": 173,
                                                                              "end_line": 189,
                                                                              "successors": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "id": 49,
                                                                      "label": "#49\nagent_graph_executions = await db.agentgraphexecution.create_many(data=\n    graph_execution_data)",
                                                                      "start_line": 191,
                                                                      "end_line": 193,
                                                                      "successors": [
                                                                        {
                                                                          "id": 53,
                                                                          "label": "#53\nagent_graph_executions = await db.agentgraphexecution.find_many()",
                                                                          "start_line": 195,
                                                                          "end_line": 195,
                                                                          "successors": [
                                                                            {
                                                                              "id": 54,
                                                                              "label": "#54\nprint(\n    f'Inserting {NUM_USERS * MAX_GRAPHS_PER_USER * MAX_EXECUTIONS_PER_GRAPH} agent node executions'\n    )\nnode_execution_data = []",
                                                                              "start_line": 198,
                                                                              "end_line": 201,
                                                                              "successors": [
                                                                                {
                                                                                  "id": 55,
                                                                                  "label": "#55\nfor execution in agent_graph_executions:",
                                                                                  "start_line": 202,
                                                                                  "end_line": 214,
                                                                                  "successors": [
                                                                                    {
                                                                                      "id": 56,
                                                                                      "label": "#56\nnodes = [node for node in agent_nodes if node.agentGraphId == execution.\n    agentGraphId]",
                                                                                      "start_line": 203,
                                                                                      "end_line": 205,
                                                                                      "successors": [
                                                                                        {
                                                                                          "id": 58,
                                                                                          "label": "#58\nfor node in nodes:",
                                                                                          "start_line": 206,
                                                                                          "end_line": 214,
                                                                                          "successors": [
                                                                                            {
                                                                                              "id": 59,
                                                                                              "label": "#59\nnode_execution_data.append({'agentGraphExecutionId': execution.id,\n    'agentNodeId': node.id, 'executionStatus': prisma.enums.\n    AgentExecutionStatus.COMPLETED, 'addedTime': datetime.now()})",
                                                                                              "start_line": 207,
                                                                                              "end_line": 214,
                                                                                              "successors": []
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "id": 57,
                                                                                      "label": "#57\nagent_node_executions = await db.agentnodeexecution.create_many(data=\n    node_execution_data)",
                                                                                      "start_line": 216,
                                                                                      "end_line": 218,
                                                                                      "successors": [
                                                                                        {
                                                                                          "id": 61,
                                                                                          "label": "#61\nagent_node_executions = await db.agentnodeexecution.find_many()",
                                                                                          "start_line": 220,
                                                                                          "end_line": 220,
                                                                                          "successors": [
                                                                                            {
                                                                                              "id": 62,
                                                                                              "label": "#62\nprint(\n    f'Inserting {NUM_USERS * MAX_GRAPHS_PER_USER * MAX_EXECUTIONS_PER_GRAPH} agent node execution input/outputs'\n    )\ninput_output_data = []",
                                                                                              "start_line": 223,
                                                                                              "end_line": 226,
                                                                                              "successors": [
                                                                                                {
                                                                                                  "id": 63,
                                                                                                  "label": "#63\nfor node_execution in agent_node_executions:",
                                                                                                  "start_line": 227,
                                                                                                  "end_line": 245,
                                                                                                  "successors": [
                                                                                                    {
                                                                                                      "id": 64,
                                                                                                      "label": "#64\ninput_output_data.append({'name': 'input1', 'data': '{}', 'time': datetime.\n    now(), 'referencedByInputExecId': node_execution.id})\ninput_output_data.append({'name': 'output1', 'data': '{}', 'time': datetime\n    .now(), 'referencedByOutputExecId': node_execution.id})",
                                                                                                      "start_line": 229,
                                                                                                      "end_line": 245,
                                                                                                      "successors": []
                                                                                                    },
                                                                                                    {
                                                                                                      "id": 65,
                                                                                                      "label": "#65\nawait db.agentnodeexecutioninputoutput.create_many(data=input_output_data)",
                                                                                                      "start_line": 247,
                                                                                                      "end_line": 247,
                                                                                                      "successors": [
                                                                                                        {
                                                                                                          "id": 66,
                                                                                                          "label": "#66\nprint(f'Inserting {NUM_USERS * MAX_GRAPHS_PER_USER} agent node links')",
                                                                                                          "start_line": 250,
                                                                                                          "end_line": 250,
                                                                                                          "successors": [
                                                                                                            {
                                                                                                              "id": 67,
                                                                                                              "label": "#67\nfor graph in agent_graphs:",
                                                                                                              "start_line": 251,
                                                                                                              "end_line": 264,
                                                                                                              "successors": [
                                                                                                                {
                                                                                                                  "id": 68,
                                                                                                                  "label": "#68\nnodes = [node for node in agent_nodes if node.agentGraphId == graph.id]\nif len(nodes) >= 2:",
                                                                                                                  "start_line": 252,
                                                                                                                  "end_line": 264,
                                                                                                                  "successors": [
                                                                                                                    {
                                                                                                                      "id": 70,
                                                                                                                      "label": "#70\nsource_node = nodes[0]\nsink_node = nodes[1]\nawait db.agentnodelink.create(data={'agentNodeSourceId': source_node.id,\n    'sourceName': 'output1', 'agentNodeSinkId': sink_node.id, 'sinkName':\n    'input1', 'isStatic': False})",
                                                                                                                      "start_line": 254,
                                                                                                                      "end_line": 264,
                                                                                                                      "successors": []
                                                                                                                    }
                                                                                                                  ]
                                                                                                                },
                                                                                                                {
                                                                                                                  "id": 69,
                                                                                                                  "label": "#69\nprint(f'Inserting {NUM_USERS} analytics details')",
                                                                                                                  "start_line": 267,
                                                                                                                  "end_line": 267,
                                                                                                                  "successors": [
                                                                                                                    {
                                                                                                                      "id": 73,
                                                                                                                      "label": "#73\nfor user in users:",
                                                                                                                      "start_line": 268,
                                                                                                                      "end_line": 277,
                                                                                                                      "successors": [
                                                                                                                        {
                                                                                                                          "id": 74,
                                                                                                                          "label": "#74\nfor _ in range(1):",
                                                                                                                          "start_line": 269,
                                                                                                                          "end_line": 277,
                                                                                                                          "successors": [
                                                                                                                            {
                                                                                                                              "id": 76,
                                                                                                                              "label": "#76\nawait db.analyticsdetails.create(data={'userId': user.id, 'type': faker.\n    word(), 'data': prisma.Json({}), 'dataIndex': faker.word()})",
                                                                                                                              "start_line": 270,
                                                                                                                              "end_line": 277,
                                                                                                                              "successors": []
                                                                                                                            }
                                                                                                                          ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                          "id": 75,
                                                                                                                          "label": "#75\nprint(f'Inserting {NUM_USERS} analytics metrics')",
                                                                                                                          "start_line": 280,
                                                                                                                          "end_line": 280,
                                                                                                                          "successors": [
                                                                                                                            {
                                                                                                                              "id": 79,
                                                                                                                              "label": "#79\nfor user in users:",
                                                                                                                              "start_line": 281,
                                                                                                                              "end_line": 290,
                                                                                                                              "successors": [
                                                                                                                                {
                                                                                                                                  "id": 80,
                                                                                                                                  "label": "#80\nfor _ in range(1):",
                                                                                                                                  "start_line": 282,
                                                                                                                                  "end_line": 290,
                                                                                                                                  "successors": [
                                                                                                                                    {
                                                                                                                                      "id": 82,
                                                                                                                                      "label": "#82\nawait db.analyticsmetrics.create(data={'userId': user.id, 'analyticMetric':\n    faker.word(), 'value': random.uniform(0, 100), 'dataString': faker.word()})",
                                                                                                                                      "start_line": 283,
                                                                                                                                      "end_line": 290,
                                                                                                                                      "successors": []
                                                                                                                                    }
                                                                                                                                  ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                  "id": 81,
                                                                                                                                  "label": "#81\nprint(f'Inserting {NUM_USERS} credit transactions')",
                                                                                                                                  "start_line": 293,
                                                                                                                                  "end_line": 293,
                                                                                                                                  "successors": [
                                                                                                                                    {
                                                                                                                                      "id": 85,
                                                                                                                                      "label": "#85\nfor user in users:",
                                                                                                                                      "start_line": 294,
                                                                                                                                      "end_line": 310,
                                                                                                                                      "successors": [
                                                                                                                                        {
                                                                                                                                          "id": 86,
                                                                                                                                          "label": "#86\nfor _ in range(1):",
                                                                                                                                          "start_line": 295,
                                                                                                                                          "end_line": 310,
                                                                                                                                          "successors": [
                                                                                                                                            {
                                                                                                                                              "id": 88,
                                                                                                                                              "label": "#88\nblock = random.choice(agent_blocks)\nawait db.credittransaction.create(data={'transactionKey': str(faker.uuid4()\n    ), 'userId': user.id, 'blockId': block.id, 'amount': random.randint(1, \n    100), 'type': prisma.enums.CreditTransactionType.TOP_UP if random.\n    random() < 0.5 else prisma.enums.CreditTransactionType.USAGE,\n    'metadata': prisma.Json({})})",
                                                                                                                                              "start_line": 296,
                                                                                                                                              "end_line": 310,
                                                                                                                                              "successors": []
                                                                                                                                            }
                                                                                                                                          ]
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                          "id": 87,
                                                                                                                                          "label": "#87\nprofiles = []\nprint(f'Inserting {NUM_USERS} profiles')",
                                                                                                                                          "start_line": 313,
                                                                                                                                          "end_line": 314,
                                                                                                                                          "successors": [
                                                                                                                                            {
                                                                                                                                              "id": 91,
                                                                                                                                              "label": "#91\nfor user in users:",
                                                                                                                                              "start_line": 315,
                                                                                                                                              "end_line": 326,
                                                                                                                                              "successors": [
                                                                                                                                                {
                                                                                                                                                  "id": 92,
                                                                                                                                                  "label": "#92\nprofile = await db.profile.create(data={'userId': user.id, 'name': user.\n    name or faker.name(), 'username': faker.unique.user_name(),\n    'description': faker.text(), 'links': [faker.url() for _ in range(3)],\n    'avatarUrl': get_image()})",
                                                                                                                                                  "start_line": 316,
                                                                                                                                                  "end_line": 325,
                                                                                                                                                  "successors": [
                                                                                                                                                    {
                                                                                                                                                      "id": 94,
                                                                                                                                                      "label": "#94\nprofiles.append(profile)",
                                                                                                                                                      "start_line": 326,
                                                                                                                                                      "end_line": 326,
                                                                                                                                                      "successors": []
                                                                                                                                                    }
                                                                                                                                                  ]
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                  "id": 93,
                                                                                                                                                  "label": "#93\nstore_listings = []\nprint(f'Inserting {NUM_USERS} store listings')",
                                                                                                                                                  "start_line": 329,
                                                                                                                                                  "end_line": 330,
                                                                                                                                                  "successors": [
                                                                                                                                                    {
                                                                                                                                                      "id": 95,
                                                                                                                                                      "label": "#95\nfor graph in agent_graphs:",
                                                                                                                                                      "start_line": 331,
                                                                                                                                                      "end_line": 341,
                                                                                                                                                      "successors": [
                                                                                                                                                        {
                                                                                                                                                          "id": 96,
                                                                                                                                                          "label": "#96\nuser = random.choice(users)\nlisting = await db.storelisting.create(data={'agentId': graph.id,\n    'agentVersion': graph.version, 'owningUserId': user.id, 'isApproved':\n    random.choice([True, False])})",
                                                                                                                                                          "start_line": 332,
                                                                                                                                                          "end_line": 340,
                                                                                                                                                          "successors": [
                                                                                                                                                            {
                                                                                                                                                              "id": 98,
                                                                                                                                                              "label": "#98\nstore_listings.append(listing)",
                                                                                                                                                              "start_line": 341,
                                                                                                                                                              "end_line": 341,
                                                                                                                                                              "successors": []
                                                                                                                                                            }
                                                                                                                                                          ]
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                          "id": 97,
                                                                                                                                                          "label": "#97\nstore_listing_versions = []\nprint(f'Inserting {NUM_USERS} store listing versions')",
                                                                                                                                                          "start_line": 344,
                                                                                                                                                          "end_line": 345,
                                                                                                                                                          "successors": [
                                                                                                                                                            {
                                                                                                                                                              "id": 99,
                                                                                                                                                              "label": "#99\nfor listing in store_listings:",
                                                                                                                                                              "start_line": 346,
                                                                                                                                                              "end_line": 365,
                                                                                                                                                              "successors": [
                                                                                                                                                                {
                                                                                                                                                                  "id": 100,
                                                                                                                                                                  "label": "#100\ngraph = [g for g in agent_graphs if g.id == listing.agentId][0]\nversion = await db.storelistingversion.create(data={'agentId': graph.id,\n    'agentVersion': graph.version, 'slug': faker.slug(), 'name': graph.name or\n    faker.sentence(nb_words=3), 'subHeading': faker.sentence(), 'videoUrl':\n    faker.url(), 'imageUrls': [get_image() for _ in range(3)],\n    'description': faker.text(), 'categories': [faker.word() for _ in range\n    (3)], 'isFeatured': random.choice([True, False]), 'isAvailable': True,\n    'isApproved': random.choice([True, False]), 'storeListingId': listing.id})",
                                                                                                                                                                  "start_line": 347,
                                                                                                                                                                  "end_line": 364,
                                                                                                                                                                  "successors": [
                                                                                                                                                                    {
                                                                                                                                                                      "id": 102,
                                                                                                                                                                      "label": "#102\nstore_listing_versions.append(version)",
                                                                                                                                                                      "start_line": 365,
                                                                                                                                                                      "end_line": 365,
                                                                                                                                                                      "successors": []
                                                                                                                                                                    }
                                                                                                                                                                  ]
                                                                                                                                                                },
                                                                                                                                                                {
                                                                                                                                                                  "id": 101,
                                                                                                                                                                  "label": "#101\nprint(f'Inserting {NUM_USERS * MAX_REVIEWS_PER_VERSION} store listing reviews')",
                                                                                                                                                                  "start_line": 368,
                                                                                                                                                                  "end_line": 368,
                                                                                                                                                                  "successors": [
                                                                                                                                                                    {
                                                                                                                                                                      "id": 103,
                                                                                                                                                                      "label": "#103\nfor version in store_listing_versions:",
                                                                                                                                                                      "start_line": 369,
                                                                                                                                                                      "end_line": 389,
                                                                                                                                                                      "successors": [
                                                                                                                                                                        {
                                                                                                                                                                          "id": 104,
                                                                                                                                                                          "label": "#104\navailable_reviewers = users.copy()\nrandom.shuffle(available_reviewers)\nnum_reviews = min(random.randint(MIN_REVIEWS_PER_VERSION,\n    MAX_REVIEWS_PER_VERSION), len(available_reviewers))",
                                                                                                                                                                          "start_line": 371,
                                                                                                                                                                          "end_line": 378,
                                                                                                                                                                          "successors": [
                                                                                                                                                                            {
                                                                                                                                                                              "id": 106,
                                                                                                                                                                              "label": "#106\nfor reviewer in available_reviewers[:num_reviews]:",
                                                                                                                                                                              "start_line": 381,
                                                                                                                                                                              "end_line": 389,
                                                                                                                                                                              "successors": [
                                                                                                                                                                                {
                                                                                                                                                                                  "id": 107,
                                                                                                                                                                                  "label": "#107\nawait db.storelistingreview.create(data={'storeListingVersionId': version.\n    id, 'reviewByUserId': reviewer.id, 'score': random.randint(1, 5),\n    'comments': faker.text()})",
                                                                                                                                                                                  "start_line": 382,
                                                                                                                                                                                  "end_line": 389,
                                                                                                                                                                                  "successors": []
                                                                                                                                                                                }
                                                                                                                                                                              ]
                                                                                                                                                                            }
                                                                                                                                                                          ]
                                                                                                                                                                        },
                                                                                                                                                                        {
                                                                                                                                                                          "id": 105,
                                                                                                                                                                          "label": "#105\nprint(f'Inserting {NUM_USERS} store listing submissions')",
                                                                                                                                                                          "start_line": 392,
                                                                                                                                                                          "end_line": 392,
                                                                                                                                                                          "successors": [
                                                                                                                                                                            {
                                                                                                                                                                              "id": 110,
                                                                                                                                                                              "label": "#110\nfor listing in store_listings:",
                                                                                                                                                                              "start_line": 393,
                                                                                                                                                                              "end_line": 411,
                                                                                                                                                                              "successors": [
                                                                                                                                                                                {
                                                                                                                                                                                  "id": 111,
                                                                                                                                                                                  "label": "#111\nversion = random.choice(store_listing_versions)\nreviewer = random.choice(users)\nstatus: prisma.enums.SubmissionStatus = random.choice([prisma.enums.\n    SubmissionStatus.PENDING, prisma.enums.SubmissionStatus.APPROVED,\n    prisma.enums.SubmissionStatus.REJECTED])\nawait db.storelistingsubmission.create(data={'storeListingId': listing.id,\n    'storeListingVersionId': version.id, 'reviewerId': reviewer.id,\n    'Status': status, 'reviewComments': faker.text()})",
                                                                                                                                                                                  "start_line": 394,
                                                                                                                                                                                  "end_line": 411,
                                                                                                                                                                                  "successors": []
                                                                                                                                                                                },
                                                                                                                                                                                {
                                                                                                                                                                                  "id": 112,
                                                                                                                                                                                  "label": "#112\nprint(f'Inserting {NUM_USERS} api keys')",
                                                                                                                                                                                  "start_line": 414,
                                                                                                                                                                                  "end_line": 414,
                                                                                                                                                                                  "successors": [
                                                                                                                                                                                    {
                                                                                                                                                                                      "id": 114,
                                                                                                                                                                                      "label": "#114\nfor user in users:",
                                                                                                                                                                                      "start_line": 415,
                                                                                                                                                                                      "end_line": 430,
                                                                                                                                                                                      "successors": [
                                                                                                                                                                                        {
                                                                                                                                                                                          "id": 115,
                                                                                                                                                                                          "label": "#115\nawait db.apikey.create(data={'name': faker.word(), 'prefix': str(faker.\n    uuid4())[:8], 'postfix': str(faker.uuid4())[-8:], 'key': str(faker.\n    sha256()), 'status': prisma.enums.APIKeyStatus.ACTIVE, 'permissions': [\n    prisma.enums.APIKeyPermission.EXECUTE_GRAPH, prisma.enums.\n    APIKeyPermission.READ_GRAPH], 'description': faker.text(), 'userId':\n    user.id})",
                                                                                                                                                                                          "start_line": 416,
                                                                                                                                                                                          "end_line": 430,
                                                                                                                                                                                          "successors": []
                                                                                                                                                                                        },
                                                                                                                                                                                        {
                                                                                                                                                                                          "id": 116,
                                                                                                                                                                                          "label": "#116\nawait db.disconnect()",
                                                                                                                                                                                          "start_line": 432,
                                                                                                                                                                                          "end_line": 432,
                                                                                                                                                                                          "successors": []
                                                                                                                                                                                        }
                                                                                                                                                                                      ]
                                                                                                                                                                                    }
                                                                                                                                                                                  ]
                                                                                                                                                                                }
                                                                                                                                                                              ]
                                                                                                                                                                            }
                                                                                                                                                                          ]
                                                                                                                                                                        }
                                                                                                                                                                      ]
                                                                                                                                                                    }
                                                                                                                                                                  ]
                                                                                                                                                                }
                                                                                                                                                              ]
                                                                                                                                                            }
                                                                                                                                                          ]
                                                                                                                                                        }
                                                                                                                                                      ]
                                                                                                                                                    }
                                                                                                                                                  ]
                                                                                                                                                }
                                                                                                                                              ]
                                                                                                                                            }
                                                                                                                                          ]
                                                                                                                                        }
                                                                                                                                      ]
                                                                                                                                    }
                                                                                                                                  ]
                                                                                                                                }
                                                                                                                              ]
                                                                                                                            }
                                                                                                                          ]
                                                                                                                        }
                                                                                                                      ]
                                                                                                                    }
                                                                                                                  ]
                                                                                                                }
                                                                                                              ]
                                                                                                            }
                                                                                                          ]
                                                                                                        }
                                                                                                      ]
                                                                                                    }
                                                                                                  ]
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    }
  ],
  "classes": []
}