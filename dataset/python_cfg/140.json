{
  "name": "140.py",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "label": "#1\nimport json\nfrom typing import Any, Type, TypeVar, cast, get_args, get_origin\nNUM = TypeVar('NUM', int, float)\nT = TypeVar('T')",
      "successors": []
    }
  ],
  "functions": [
    {
      "name": "__convert_list",
      "type": "CFG",
      "blocks": [
        {
          "id": 6,
          "label": "#6\nif isinstance(value, (list, tuple, set)):",
          "successors": [
            {
              "id": 7,
              "label": "#7\nreturn list(value)",
              "successors": []
            },
            {
              "id": 9,
              "label": "#9\nif isinstance(value, dict):",
              "successors": [
                {
                  "id": 10,
                  "label": "#10\nreturn list(value.items())",
                  "successors": []
                },
                {
                  "id": 12,
                  "label": "#12\nif isinstance(value, str):",
                  "successors": [
                    {
                      "id": 13,
                      "label": "#13\nvalue = value.strip()\nif value.startswith('[') and value.endswith(']'):",
                      "successors": [
                        {
                          "id": 17,
                          "label": "#17\ntry:",
                          "successors": [
                            {
                              "id": 21,
                              "label": "#21\nreturn json.loads(value)",
                              "successors": []
                            },
                            {
                              "id": 22,
                              "label": "#22\nreturn [value]",
                              "successors": []
                            }
                          ]
                        },
                        {
                          "id": 19,
                          "label": "#19\nreturn [value]",
                          "successors": []
                        }
                      ]
                    },
                    {
                      "id": 15,
                      "label": "#15\nreturn [value]",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "__convert_dict",
      "type": "CFG",
      "blocks": [
        {
          "id": 30,
          "label": "#30\nif isinstance(value, str):",
          "successors": [
            {
              "id": 31,
              "label": "#31\ntry:",
              "successors": [
                {
                  "id": 47,
                  "label": "#47\nresult = json.loads(value)\nif isinstance(result, dict):",
                  "successors": [
                    {
                      "id": 50,
                      "label": "#50\nreturn result",
                      "successors": []
                    },
                    {
                      "id": 52,
                      "label": "#52\nreturn {'value': result}",
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 48,
                  "label": "#48\nreturn {'value': value}",
                  "successors": []
                }
              ]
            },
            {
              "id": 33,
              "label": "#33\nif isinstance(value, list):",
              "successors": [
                {
                  "id": 34,
                  "label": "#34\nreturn {i: value[i] for i in range(len(value))}",
                  "successors": []
                },
                {
                  "id": 36,
                  "label": "#36\nif isinstance(value, tuple):",
                  "successors": [
                    {
                      "id": 37,
                      "label": "#37\nreturn {i: value[i] for i in range(len(value))}",
                      "successors": []
                    },
                    {
                      "id": 39,
                      "label": "#39\nif isinstance(value, dict):",
                      "successors": [
                        {
                          "id": 40,
                          "label": "#40\nreturn value",
                          "successors": []
                        },
                        {
                          "id": 42,
                          "label": "#42\nreturn {'value': value}",
                          "successors": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "__convert_tuple",
      "type": "CFG",
      "blocks": [
        {
          "id": 58,
          "label": "#58\nif isinstance(value, (str, list, set)):",
          "successors": [
            {
              "id": 59,
              "label": "#59\nreturn tuple(value)",
              "successors": []
            },
            {
              "id": 61,
              "label": "#61\nif isinstance(value, dict):",
              "successors": [
                {
                  "id": 62,
                  "label": "#62\nreturn tuple(value.items())",
                  "successors": []
                },
                {
                  "id": 64,
                  "label": "#64\nif isinstance(value, (int, float, bool)):",
                  "successors": [
                    {
                      "id": 65,
                      "label": "#65\nreturn value,",
                      "successors": []
                    },
                    {
                      "id": 67,
                      "label": "#67\nif isinstance(value, tuple):",
                      "successors": [
                        {
                          "id": 68,
                          "label": "#68\nreturn value",
                          "successors": []
                        },
                        {
                          "id": 70,
                          "label": "#70\nreturn value,",
                          "successors": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "__convert_set",
      "type": "CFG",
      "blocks": [
        {
          "id": 78,
          "label": "#78\nif isinstance(value, (str, list, tuple)):",
          "successors": [
            {
              "id": 79,
              "label": "#79\nreturn set(value)",
              "successors": []
            },
            {
              "id": 81,
              "label": "#81\nif isinstance(value, dict):",
              "successors": [
                {
                  "id": 82,
                  "label": "#82\nreturn set(value.items())",
                  "successors": []
                },
                {
                  "id": 84,
                  "label": "#84\nif isinstance(value, set):",
                  "successors": [
                    {
                      "id": 85,
                      "label": "#85\nreturn value",
                      "successors": []
                    },
                    {
                      "id": 87,
                      "label": "#87\nreturn {value}",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "__convert_str",
      "type": "CFG",
      "blocks": [
        {
          "id": 94,
          "label": "#94\nif isinstance(value, str):",
          "successors": [
            {
              "id": 95,
              "label": "#95\nreturn value",
              "successors": []
            },
            {
              "id": 97,
              "label": "#97\nreturn json.dumps(value)",
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "__convert_num",
      "type": "CFG",
      "blocks": [
        {
          "id": 102,
          "label": "#102\nif isinstance(value, (list, dict, tuple, set)):",
          "successors": [
            {
              "id": 103,
              "label": "#103\nreturn num_type(len(value))",
              "successors": []
            },
            {
              "id": 105,
              "label": "#105\nif isinstance(value, num_type):",
              "successors": [
                {
                  "id": 106,
                  "label": "#106\nreturn value",
                  "successors": []
                },
                {
                  "id": 108,
                  "label": "#108\ntry:",
                  "successors": [
                    {
                      "id": 109,
                      "label": "#109\nreturn num_type(float(value))",
                      "successors": []
                    },
                    {
                      "id": 110,
                      "label": "#110\nreturn num_type(0)",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "__convert_bool",
      "type": "CFG",
      "blocks": [
        {
          "id": 118,
          "label": "#118\nif isinstance(value, bool):",
          "successors": [
            {
              "id": 119,
              "label": "#119\nreturn value",
              "successors": []
            },
            {
              "id": 121,
              "label": "#121\nif isinstance(value, str):",
              "successors": [
                {
                  "id": 122,
                  "label": "#122\nif value.lower() in ['true', '1']:",
                  "successors": [
                    {
                      "id": 126,
                      "label": "#126\nreturn True",
                      "successors": []
                    },
                    {
                      "id": 128,
                      "label": "#128\nreturn False",
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 124,
                  "label": "#124\nreturn bool(value)",
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "_try_convert",
      "type": "CFG",
      "blocks": [
        {
          "id": 134,
          "label": "#134\norigin = get_origin(target_type)\nargs = get_args(target_type)\nif origin is None:",
          "successors": [
            {
              "id": 135,
              "label": "#135\norigin = target_type",
              "successors": [
                {
                  "id": 136,
                  "label": "#136\nif origin not in [list, dict, tuple, str, set, int, float, bool]:",
                  "successors": [
                    {
                      "id": 137,
                      "label": "#137\nreturn value",
                      "successors": []
                    },
                    {
                      "id": 138,
                      "label": "#138\nif isinstance(value, origin):",
                      "successors": [
                        {
                          "id": 140,
                          "label": "#140\nif not args:",
                          "successors": [
                            {
                              "id": 200,
                              "label": "#200\nreturn value",
                              "successors": []
                            },
                            {
                              "id": 202,
                              "label": "#202\nif origin is list:",
                              "successors": [
                                {
                                  "id": 203,
                                  "label": "#203\nreturn [convert(v, args[0]) for v in value]",
                                  "successors": []
                                },
                                {
                                  "id": 205,
                                  "label": "#205\nif origin is tuple:",
                                  "successors": [
                                    {
                                      "id": 206,
                                      "label": "#206\nif len(args) == 1:",
                                      "successors": [
                                        {
                                          "id": 218,
                                          "label": "#218\nreturn tuple(convert(v, args[0]) for v in value)",
                                          "successors": []
                                        },
                                        {
                                          "id": 220,
                                          "label": "#220\nreturn tuple(convert(v, t) for v, t in zip(value, args))",
                                          "successors": []
                                        }
                                      ]
                                    },
                                    {
                                      "id": 208,
                                      "label": "#208\nif origin is dict:",
                                      "successors": [
                                        {
                                          "id": 209,
                                          "label": "#209\nkey_type, val_type = args\nreturn {convert(k, key_type): convert(v, val_type) for k, v in value.items()}",
                                          "successors": []
                                        },
                                        {
                                          "id": 211,
                                          "label": "#211\nif origin is set:",
                                          "successors": [
                                            {
                                              "id": 212,
                                              "label": "#212\nreturn {convert(v, args[0]) for v in value}",
                                              "successors": []
                                            },
                                            {
                                              "id": 214,
                                              "label": "#214\nreturn value",
                                              "successors": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "id": 142,
                          "label": "#142\nif raise_on_mismatch:",
                          "successors": [
                            {
                              "id": 143,
                              "label": "#143\nraise TypeError(f'Value {value} is not of expected type {target_type}')",
                              "successors": []
                            },
                            {
                              "id": 145,
                              "label": "#145\nif origin is list:",
                              "successors": [
                                {
                                  "id": 146,
                                  "label": "#146\nvalue = __convert_list(value)\nif args:",
                                  "successors": [
                                    {
                                      "id": 194,
                                      "label": "#194\nreturn [convert(v, args[0]) for v in value]",
                                      "successors": []
                                    },
                                    {
                                      "id": 196,
                                      "label": "#196\nreturn value",
                                      "successors": []
                                    }
                                  ]
                                },
                                {
                                  "id": 148,
                                  "label": "#148\nif origin is dict:",
                                  "successors": [
                                    {
                                      "id": 149,
                                      "label": "#149\nvalue = __convert_dict(value)\nif args:",
                                      "successors": [
                                        {
                                          "id": 189,
                                          "label": "#189\nkey_type, val_type = args\nreturn {convert(k, key_type): convert(v, val_type) for k, v in value.items()}",
                                          "successors": []
                                        },
                                        {
                                          "id": 191,
                                          "label": "#191\nreturn value",
                                          "successors": []
                                        }
                                      ]
                                    },
                                    {
                                      "id": 151,
                                      "label": "#151\nif origin is tuple:",
                                      "successors": [
                                        {
                                          "id": 152,
                                          "label": "#152\nvalue = __convert_tuple(value)\nif args:",
                                          "successors": [
                                            {
                                              "id": 180,
                                              "label": "#180\nif len(args) == 1:",
                                              "successors": [
                                                {
                                                  "id": 184,
                                                  "label": "#184\nreturn tuple(convert(v, args[0]) for v in value)",
                                                  "successors": []
                                                },
                                                {
                                                  "id": 186,
                                                  "label": "#186\nreturn tuple(convert(v, t) for v, t in zip(value, args))",
                                                  "successors": []
                                                }
                                              ]
                                            },
                                            {
                                              "id": 182,
                                              "label": "#182\nreturn value",
                                              "successors": []
                                            }
                                          ]
                                        },
                                        {
                                          "id": 154,
                                          "label": "#154\nif origin is str:",
                                          "successors": [
                                            {
                                              "id": 155,
                                              "label": "#155\nreturn __convert_str(value)",
                                              "successors": []
                                            },
                                            {
                                              "id": 157,
                                              "label": "#157\nif origin is set:",
                                              "successors": [
                                                {
                                                  "id": 158,
                                                  "label": "#158\nvalue = __convert_set(value)\nif args:",
                                                  "successors": [
                                                    {
                                                      "id": 174,
                                                      "label": "#174\nreturn {convert(v, args[0]) for v in value}",
                                                      "successors": []
                                                    },
                                                    {
                                                      "id": 176,
                                                      "label": "#176\nreturn value",
                                                      "successors": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "id": 160,
                                                  "label": "#160\nif origin is int:",
                                                  "successors": [
                                                    {
                                                      "id": 161,
                                                      "label": "#161\nreturn __convert_num(value, int)",
                                                      "successors": []
                                                    },
                                                    {
                                                      "id": 163,
                                                      "label": "#163\nif origin is float:",
                                                      "successors": [
                                                        {
                                                          "id": 164,
                                                          "label": "#164\nreturn __convert_num(value, float)",
                                                          "successors": []
                                                        },
                                                        {
                                                          "id": 166,
                                                          "label": "#166\nif origin is bool:",
                                                          "successors": [
                                                            {
                                                              "id": 167,
                                                              "label": "#167\nreturn __convert_bool(value)",
                                                              "successors": []
                                                            },
                                                            {
                                                              "id": 169,
                                                              "label": "#169\nreturn value",
                                                              "successors": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "type_match",
      "type": "CFG",
      "blocks": [
        {
          "id": 227,
          "label": "#227\nreturn cast(T, _try_convert(value, target_type, raise_on_mismatch=True))",
          "successors": []
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "convert",
      "type": "CFG",
      "blocks": [
        {
          "id": 231,
          "label": "#231\ntry:",
          "successors": [
            {
              "id": 232,
              "label": "#232\nreturn cast(T, _try_convert(value, target_type, raise_on_mismatch=False))",
              "successors": []
            },
            {
              "id": 233,
              "label": "#233\nraise ConversionError(f'Failed to convert {value} to {target_type}') from e",
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    }
  ],
  "classes": [
    {
      "name": "ConversionError",
      "type": "CFG",
      "blocks": [
        {
          "id": 3,
          "label": "#3\npass",
          "successors": []
        }
      ],
      "functions": [],
      "classes": []
    }
  ]
}