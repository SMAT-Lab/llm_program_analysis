{
  "name": "183.py",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "label": "#1",
      "start_line": 1,
      "end_line": 38,
      "successors": []
    }
  ],
  "functions": [],
  "classes": [
    {
      "name": "Item",
      "type": "CFG",
      "blocks": [
        {
          "id": 3,
          "label": "#3",
          "start_line": 3,
          "end_line": 5,
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 5,
              "label": "#5\nself.key = key\nself.value = value",
              "start_line": 4,
              "end_line": 5,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    },
    {
      "name": "HashTable",
      "type": "CFG",
      "blocks": [
        {
          "id": 9,
          "label": "#9",
          "start_line": 10,
          "end_line": 38,
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 11,
              "label": "#11\nself.size = size\nself.table = [[] for _ in range(self.size)]",
              "start_line": 11,
              "end_line": 12,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "_hash_function",
          "type": "CFG",
          "blocks": [
            {
              "id": 14,
              "label": "#14\nreturn key % self.size",
              "start_line": 15,
              "end_line": 15,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "set",
          "type": "CFG",
          "blocks": [
            {
              "id": 18,
              "label": "#18\nhash_index = self._hash_function(key)",
              "start_line": 18,
              "end_line": 18,
              "successors": [
                {
                  "id": 19,
                  "label": "#19\nfor item in self.table[hash_index]:",
                  "start_line": 19,
                  "end_line": 22,
                  "successors": [
                    {
                      "id": 20,
                      "label": "#20\nif item.key == key:",
                      "start_line": 20,
                      "end_line": 22,
                      "successors": [
                        {
                          "id": 22,
                          "label": "#22\nitem.value = value\nreturn",
                          "start_line": 21,
                          "end_line": 22,
                          "successors": []
                        }
                      ]
                    },
                    {
                      "id": 21,
                      "label": "#21\nself.table[hash_index].append(Item(key, value))",
                      "start_line": 23,
                      "end_line": 23,
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "get",
          "type": "CFG",
          "blocks": [
            {
              "id": 27,
              "label": "#27\nhash_index = self._hash_function(key)",
              "start_line": 26,
              "end_line": 26,
              "successors": [
                {
                  "id": 28,
                  "label": "#28\nfor item in self.table[hash_index]:",
                  "start_line": 27,
                  "end_line": 29,
                  "successors": [
                    {
                      "id": 29,
                      "label": "#29\nif item.key == key:",
                      "start_line": 28,
                      "end_line": 29,
                      "successors": [
                        {
                          "id": 31,
                          "label": "#31\nreturn item.value",
                          "start_line": 29,
                          "end_line": 29,
                          "successors": []
                        }
                      ]
                    },
                    {
                      "id": 30,
                      "label": "#30\nraise KeyError('Key not found')",
                      "start_line": 30,
                      "end_line": 30,
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "remove",
          "type": "CFG",
          "blocks": [
            {
              "id": 37,
              "label": "#37\nhash_index = self._hash_function(key)",
              "start_line": 33,
              "end_line": 33,
              "successors": [
                {
                  "id": 38,
                  "label": "#38\nfor index, item in enumerate(self.table[hash_index]):",
                  "start_line": 34,
                  "end_line": 37,
                  "successors": [
                    {
                      "id": 39,
                      "label": "#39\nif item.key == key:",
                      "start_line": 35,
                      "end_line": 37,
                      "successors": [
                        {
                          "id": 41,
                          "label": "#41\ndel self.table[hash_index][index]\nreturn",
                          "start_line": 36,
                          "end_line": 37,
                          "successors": []
                        }
                      ]
                    },
                    {
                      "id": 40,
                      "label": "#40\nraise KeyError('Key not found')",
                      "start_line": 38,
                      "end_line": 38,
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    }
  ]
}