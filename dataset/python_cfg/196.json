{
  "name": "196.py",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "label": "#1\nimport logging\nimport pytest\nfrom backend.util.test import SpinTestServer\nlogger = logging.getLogger(__name__)\nch = logging.StreamHandler()\nch.setLevel(logging.INFO)\nformatter = logging.Formatter(\n    '%(asctime)s - %(name)s - %(levelname)s - %(message)s')\nch.setFormatter(formatter)\nlogger.addHandler(ch)",
      "successors": []
    }
  ],
  "functions": [
    {
      "name": "server",
      "type": "CFG",
      "blocks": [
        {
          "id": 3,
          "label": "#3\nasync with SpinTestServer() as server:\n    yield server",
          "successors": [
            {
              "id": 4,
              "label": "#4\nyield server",
              "successors": []
            }
          ]
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "graph_cleanup",
      "type": "CFG",
      "blocks": [
        {
          "id": 9,
          "label": "#9\ncreated_graph_ids = []\noriginal_create_graph = server.agent_server.test_create_graph\ntry:",
          "successors": [
            {
              "id": 15,
              "label": "#15\nserver.agent_server.test_create_graph = create_graph_wrapper\nyield",
              "successors": []
            }
          ]
        }
      ],
      "functions": [
        {
          "name": "create_graph_wrapper",
          "type": "CFG",
          "blocks": [
            {
              "id": 11,
              "label": "#11\ncreated_graph = await original_create_graph(*args, **kwargs)",
              "successors": [
                {
                  "id": 12,
                  "label": "#12\nuser_id = kwargs.get('user_id', args[2] if len(args) > 2 else None)\ncreated_graph_ids.append((created_graph.id, user_id))\nreturn created_graph",
                  "successors": []
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    }
  ],
  "classes": []
}