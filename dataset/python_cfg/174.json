{
  "name": "174.py",
  "type": "CFG",
  "blocks": [
    {
      "id": 1,
      "label": "#1\nfrom collections import deque\nfrom enum import Enum",
      "start_line": 2,
      "end_line": 72,
      "successors": []
    }
  ],
  "functions": [],
  "classes": [
    {
      "name": "State",
      "type": "CFG",
      "blocks": [
        {
          "id": 3,
          "label": "#3\nunvisited = 0\nvisited = 1",
          "start_line": 7,
          "end_line": 8,
          "successors": []
        }
      ],
      "functions": [],
      "classes": []
    },
    {
      "name": "Graph",
      "type": "CFG",
      "blocks": [
        {
          "id": 6,
          "label": "#6",
          "start_line": 13,
          "end_line": 28,
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "bfs",
          "type": "CFG",
          "blocks": [
            {
              "id": 8,
              "label": "#8\nif source is None:",
              "start_line": 14,
              "end_line": 15,
              "successors": [
                {
                  "id": 9,
                  "label": "#9\nreturn False",
                  "start_line": 15,
                  "end_line": 15,
                  "successors": []
                },
                {
                  "id": 10,
                  "label": "#10\nqueue = deque()\nqueue.append(source)\nsource.visit_state = State.visited",
                  "start_line": 16,
                  "end_line": 18,
                  "successors": [
                    {
                      "id": 12,
                      "label": "#12\nwhile queue:",
                      "start_line": 19,
                      "end_line": 27,
                      "successors": [
                        {
                          "id": 13,
                          "label": "#13\nnode = queue.popleft()\nprint(node)\nif dest is node:",
                          "start_line": 20,
                          "end_line": 23,
                          "successors": [
                            {
                              "id": 15,
                              "label": "#15\nreturn True",
                              "start_line": 23,
                              "end_line": 23,
                              "successors": []
                            },
                            {
                              "id": 16,
                              "label": "#16\nfor adjacent_node in node.adj_nodes.values():",
                              "start_line": 24,
                              "end_line": 27,
                              "successors": [
                                {
                                  "id": 18,
                                  "label": "#18\nif adjacent_node.visit_state == State.unvisited:",
                                  "start_line": 25,
                                  "end_line": 27,
                                  "successors": [
                                    {
                                      "id": 20,
                                      "label": "#20\nqueue.append(adjacent_node)\nadjacent_node.visit_state = State.visited",
                                      "start_line": 26,
                                      "end_line": 27,
                                      "successors": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "id": 14,
                          "label": "#14\nreturn False",
                          "start_line": 28,
                          "end_line": 28,
                          "successors": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    },
    {
      "name": "Person",
      "type": "CFG",
      "blocks": [
        {
          "id": 26,
          "label": "#26",
          "start_line": 33,
          "end_line": 36,
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 28,
              "label": "#28\nself.id = id\nself.name = name\nself.friend_ids = []",
              "start_line": 34,
              "end_line": 36,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    },
    {
      "name": "LookupService",
      "type": "CFG",
      "blocks": [
        {
          "id": 32,
          "label": "#32",
          "start_line": 41,
          "end_line": 46,
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 34,
              "label": "#34\nself.lookup = {}",
              "start_line": 42,
              "end_line": 42,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "get_person",
          "type": "CFG",
          "blocks": [
            {
              "id": 37,
              "label": "#37\nperson_server = self.lookup[person_id]\nreturn person_server.people[person_id]",
              "start_line": 45,
              "end_line": 46,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    },
    {
      "name": "PersonServer",
      "type": "CFG",
      "blocks": [
        {
          "id": 42,
          "label": "#42",
          "start_line": 51,
          "end_line": 59,
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 44,
              "label": "#44\nself.people = {}",
              "start_line": 52,
              "end_line": 52,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "get_people",
          "type": "CFG",
          "blocks": [
            {
              "id": 47,
              "label": "#47\nresults = []",
              "start_line": 55,
              "end_line": 55,
              "successors": [
                {
                  "id": 48,
                  "label": "#48\nfor id in ids:",
                  "start_line": 56,
                  "end_line": 58,
                  "successors": [
                    {
                      "id": 49,
                      "label": "#49\nif id in self.people:",
                      "start_line": 57,
                      "end_line": 58,
                      "successors": [
                        {
                          "id": 51,
                          "label": "#51\nresults.append(self.people[id])",
                          "start_line": 58,
                          "end_line": 58,
                          "successors": []
                        }
                      ]
                    },
                    {
                      "id": 50,
                      "label": "#50\nreturn results",
                      "start_line": 59,
                      "end_line": 59,
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    },
    {
      "name": "UserGraphService",
      "type": "CFG",
      "blocks": [
        {
          "id": 57,
          "label": "#57",
          "start_line": 64,
          "end_line": 72,
          "successors": []
        }
      ],
      "functions": [
        {
          "name": "__init__",
          "type": "CFG",
          "blocks": [
            {
              "id": 59,
              "label": "#59\nself.lookup = lookup\nself.person_ids = person_ids\nself.visited_ids = set()",
              "start_line": 65,
              "end_line": 67,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "bfs",
          "type": "CFG",
          "blocks": [
            {
              "id": 62,
              "label": "#62\npass",
              "start_line": 72,
              "end_line": 72,
              "successors": []
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    }
  ]
}