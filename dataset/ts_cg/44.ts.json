{
  "@test/44.ts: EventPipeline.constructor(Broadcast, UserFileDataItem, string, Function)": [
    "@test/44.ts: EventPipeline.evaluateScales()"
  ],
  "@test/44.ts: EventPipeline.onDataChanged(UserFileDataItem)": [
    "@test/44.ts: EventPipeline.evaluateScales()"
  ],
  "@test/44.ts: EventPipeline.onComponentSizeChanged()": [
    "@test/44.ts: EventPipeline.evaluateScales()"
  ],
  "@test/44.ts: EventPipeline.onTouch(TouchEvent)": [
    "@test/44.ts: EventPipeline.emitDirectionChange()",
    "@test/44.ts: EventPipeline.evaluateOffset()"
  ],
  "@test/44.ts: EventPipeline.emitTouchEvent()": [
    "@test/44.ts: EventPipeline.evaluateOffsetRange(number)",
    "@test/44.ts: EventPipeline.evaluateOffset()",
    "@test/44.ts: EventPipeline.evaluateBounds()"
  ],
  "@test/44.ts: EventPipeline.evaluateCompBounds()": [
    "@test/44.ts: EventPipeline.evaluateOffset()"
  ],
  "@test/44.ts: EventPipeline.evaluateImgDisplayBounds()": [
    "@test/44.ts: EventPipeline.evaluateCompBounds()",
    "@test/44.ts: EventPipeline.evaluateImgDisplaySize()"
  ],
  "@test/44.ts: EventPipeline.evaluateBounds()": [
    "@test/44.ts: EventPipeline.evaluateImgDisplaySize()",
    "@test/44.ts: EventPipeline.evaluateImgDisplayBounds()"
  ],
  "@test/44.ts: EventPipeline.onMoveStart(number, number)": [
    "@test/44.ts: EventPipeline.evaluateBounds()"
  ],
  "@test/44.ts: EventPipeline.onMove(number, number)": [
    "@test/44.ts: EventPipeline.evaluateOffsetRange(number)",
    "@test/44.ts: EventPipeline.emitTouchEvent()"
  ],
  "@test/44.ts: EventPipeline.onMoveEnd(unknown, unknown)": [
    "@test/44.ts: EventPipeline.emitPullDownToBackEvent()",
    "@test/44.ts: EventPipeline.startAnimation(@test/44.ts: Matrix4TransitWithMatrix4x4)",
    "@test/44.ts: EventPipeline.emitPullDownCancelEvent()",
    "@test/44.ts: EventPipeline.emitDirectionChange()"
  ],
  "@test/44.ts: EventPipeline.onScaleStart(number, number, number)": [
    "@test/44.ts: EventPipeline.evaluateBounds()",
    "@test/44.ts: EventPipeline.evaluateCenter(number, number)"
  ],
  "@test/44.ts: EventPipeline.evaluateCenter(number, number)": [
    "@test/44.ts: EventPipeline.evaluateCompBounds()",
    "@test/44.ts: EventPipeline.evaluateImgDisplaySize()",
    "@test/44.ts: EventPipeline.evaluateImgDisplayBounds()"
  ],
  "@test/44.ts: EventPipeline.onScale(number)": [
    "@test/44.ts: EventPipeline.evaluateBounds()",
    "@test/44.ts: EventPipeline.emitTouchEvent()"
  ],
  "@test/44.ts: EventPipeline.onScaleEnd()": [
    "@test/44.ts: EventPipeline.evaluateBounds()",
    "@test/44.ts: EventPipeline.emitDirectionChange()",
    "@test/44.ts: EventPipeline.evaluateAnimeMatrix(number, number[])",
    "@test/44.ts: EventPipeline.startAnimation(@test/44.ts: Matrix4TransitWithMatrix4x4)"
  ],
  "@test/44.ts: EventPipeline.evaluateAnimeMatrix(number, number[])": [
    "@test/44.ts: EventPipeline.evaluateOffsetRange(number)"
  ],
  "@test/44.ts: EventPipeline.onDoubleTap(number, number)": [
    "@test/44.ts: EventPipeline.evaluateCenter(number, number)",
    "@test/44.ts: EventPipeline.evaluateAnimeMatrix(number, number[])",
    "@test/44.ts: EventPipeline.startAnimation(@test/44.ts: Matrix4TransitWithMatrix4x4)"
  ],
  "@test/44.ts: EventPipeline.reset()": [
    "@test/44.ts: EventPipeline.emitDirectionChange()"
  ],
  "@test/44.ts: EventPipeline.onAnimationEnd(@test/44.ts: Matrix4TransitWithMatrix4x4)": [
    "@test/44.ts: EventPipeline.evaluateBounds()",
    "@test/44.ts: EventPipeline.emitDirectionChange()"
  ]
}