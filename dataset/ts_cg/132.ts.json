{
  "@test/132.ts: GoogleSheetsMock.constructor(GoogleSheetsConfig)": [
    "@test/132.ts: GoogleSheetsMock.mockAuth()",
    "@test/132.ts: GoogleSheetsMock.mockAPI()"
  ],
  "@test/132.ts: GoogleSheetsMock.cell(string)": [
    "@test/132.ts: GoogleSheetsMock.cellData(string)",
    "@test/132.ts: GoogleSheetsMock.cellValue(CellData)"
  ],
  "@test/132.ts: GoogleSheetsMock.set(string, Value)": [
    "@test/132.ts: GoogleSheetsMock.cellData(string)",
    "@test/132.ts: GoogleSheetsMock.createValue(Value)"
  ],
  "@test/132.ts: GoogleSheetsMock.sheet(string|number)": [
    "@test/132.ts: GoogleSheetsMock.getSheetById(number)",
    "@test/132.ts: GoogleSheetsMock.getSheetByName(string)"
  ],
  "@test/132.ts: GoogleSheetsMock.createSheet(Partial<WorksheetProperties>)": [
    "@test/132.ts: GoogleSheetsMock.defaultWorksheetProperties(Partial<WorksheetProperties>)",
    "@test/132.ts: GoogleSheetsMock.getSheetByName(string)",
    "@test/132.ts: GoogleSheetsMock.handleAddSheet(@test/132.ts: AddSheetRequest)",
    "@test/132.ts: GoogleSheetsMock.getSheetById(number)"
  ],
  "@test/132.ts: GoogleSheetsMock.route(string|string|string, string|RegExp, @test/132.ts: GoogleSheetsMock.%AM0(string, nock.Body))": [
    "@test/132.ts: GoogleSheetsMock.%AM0(string, nock.Body)"
  ],
  "@test/132.ts: GoogleSheetsMock.get(string|RegExp, @test/132.ts: GoogleSheetsMock.%AM1(string, nock.Body))": [
    "@test/132.ts: GoogleSheetsMock.%AM1(string, nock.Body)",
    "@test/132.ts: GoogleSheetsMock.route(string|string|string, string|RegExp, @test/132.ts: GoogleSheetsMock.%AM0(string, nock.Body))"
  ],
  "@test/132.ts: GoogleSheetsMock.put(string|RegExp, @test/132.ts: GoogleSheetsMock.%AM2(string, nock.Body))": [
    "@test/132.ts: GoogleSheetsMock.%AM2(string, nock.Body)",
    "@test/132.ts: GoogleSheetsMock.route(string|string|string, string|RegExp, @test/132.ts: GoogleSheetsMock.%AM0(string, nock.Body))"
  ],
  "@test/132.ts: GoogleSheetsMock.post(string|RegExp, @test/132.ts: GoogleSheetsMock.%AM3(string, nock.Body))": [
    "@test/132.ts: GoogleSheetsMock.%AM3(string, nock.Body)",
    "@test/132.ts: GoogleSheetsMock.route(string|string|string, string|RegExp, @test/132.ts: GoogleSheetsMock.%AM0(string, nock.Body))"
  ],
  "@test/132.ts: GoogleSheetsMock.mockAPI()": [
    "@test/132.ts: GoogleSheetsMock.%AM6$mockAPI()",
    "@test/132.ts: GoogleSheetsMock.get(string|RegExp, @test/132.ts: GoogleSheetsMock.%AM1(string, nock.Body))",
    "@test/132.ts: GoogleSheetsMock.%AM7$mockAPI(string, nock.Body)",
    "@test/132.ts: GoogleSheetsMock.post(string|RegExp, @test/132.ts: GoogleSheetsMock.%AM3(string, nock.Body))",
    "@test/132.ts: GoogleSheetsMock.%AM8$mockAPI(string, nock.Body)",
    "@test/132.ts: GoogleSheetsMock.put(string|RegExp, @test/132.ts: GoogleSheetsMock.%AM2(string, nock.Body))",
    "@test/132.ts: GoogleSheetsMock.%AM9$mockAPI(string)",
    "@test/132.ts: GoogleSheetsMock.%AM10$mockAPI(string)",
    "@test/132.ts: GoogleSheetsMock.%AM11$mockAPI(string, nock.Body)"
  ],
  "@test/132.ts: GoogleSheetsMock.handleValueAppend(@test/132.ts: AppendRequest)": [
    "@test/132.ts: GoogleSheetsMock.parseA1Notation(string)",
    "@test/132.ts: GoogleSheetsMock.getSheetById(number)",
    "@test/132.ts: GoogleSheetsMock.%AM12$handleValueAppend(unknown)",
    "@test/132.ts: GoogleSheetsMock.createA1(Required<GridRange>)"
  ],
  "@test/132.ts: GoogleSheetsMock.handleBatchUpdate(@test/132.ts: BatchUpdateRequest)": [
    "@test/132.ts: GoogleSheetsMock.handleDeleteRange(@test/132.ts: DeleteRangeRequest)",
    "@test/132.ts: GoogleSheetsMock.handleDeleteSheet(@test/132.ts: DeleteSheetRequest)"
  ],
  "@test/132.ts: GoogleSheetsMock.handleAddSheet(@test/132.ts: AddSheetRequest)": [
    "@test/132.ts: GoogleSheetsMock.defaultWorksheetProperties(Partial<WorksheetProperties>)"
  ],
  "@test/132.ts: GoogleSheetsMock.handleDeleteRange(@test/132.ts: DeleteRangeRequest)": [
    "@test/132.ts: GoogleSheetsMock.%AM13$handleDeleteRange(CellData)",
    "@test/132.ts: GoogleSheetsMock.iterateRange(GridRange, @test/132.ts: GoogleSheetsMock.%AM4(CellData))"
  ],
  "@test/132.ts: GoogleSheetsMock.handleValueUpdate(@test/132.ts: ValueRange)": [
    "@test/132.ts: GoogleSheetsMock.%AM14$handleValueUpdate(CellData, Value)",
    "@test/132.ts: GoogleSheetsMock.iterateValueRange(@test/132.ts: ValueRange, @test/132.ts: GoogleSheetsMock.%AM5(CellData, Value))"
  ],
  "@test/132.ts: GoogleSheetsMock.iterateRange(GridRange, @test/132.ts: GoogleSheetsMock.%AM4(CellData))": [
    "@test/132.ts: GoogleSheetsMock.ensureGridRange(GridRange)",
    "@test/132.ts: GoogleSheetsMock.getCellNumericIndexes(@test/132.ts: Sheet|number, number, number)"
  ],
  "@test/132.ts: GoogleSheetsMock.iterateValueRange(@test/132.ts: ValueRange, @test/132.ts: GoogleSheetsMock.%AM5(CellData, Value))": [
    "@test/132.ts: GoogleSheetsMock.parseA1Notation(string)",
    "@test/132.ts: GoogleSheetsMock.getCellNumericIndexes(@test/132.ts: Sheet|number, number, number)"
  ],
  "@test/132.ts: GoogleSheetsMock.getValueRange(string)": [
    "@test/132.ts: GoogleSheetsMock.parseA1Notation(string)",
    "@test/132.ts: GoogleSheetsMock.getCellNumericIndexes(@test/132.ts: Sheet|number, number, number)",
    "@test/132.ts: GoogleSheetsMock.cellValue(CellData)",
    "@test/132.ts: GoogleSheetsMock.trimValueRange(@test/132.ts: ValueRange)"
  ],
  "@test/132.ts: GoogleSheetsMock.trimValueRange(@test/132.ts: ValueRange)": [
    "@test/132.ts: GoogleSheetsMock.%AM15$trimValueRange(unknown)"
  ],
  "@test/132.ts: GoogleSheetsMock.cellValue(CellData)": [
    "@test/132.ts: GoogleSheetsMock.unwrapValue(ExtendedValue)"
  ],
  "@test/132.ts: GoogleSheetsMock.createEmptyGrid(number, number)": [
    "@test/132.ts: GoogleSheetsMock.createCellData(Value)"
  ],
  "@test/132.ts: GoogleSheetsMock.cellData(string)": [
    "@test/132.ts: GoogleSheetsMock.parseA1Notation(string)",
    "@test/132.ts: GoogleSheetsMock.getCellNumericIndexes(@test/132.ts: Sheet|number, number, number)"
  ],
  "@test/132.ts: GoogleSheetsMock.getCellNumericIndexes(@test/132.ts: Sheet|number, number, number)": [
    "@test/132.ts: GoogleSheetsMock.getSheetById(number)"
  ],
  "@test/132.ts: GoogleSheetsMock.parseA1Notation(string)": [
    "@test/132.ts: GoogleSheetsMock.getSheetByName(string)",
    "@test/132.ts: GoogleSheetsMock.ensureGridRange(GridRange)",
    "@test/132.ts: GoogleSheetsMock.parseCell(string)"
  ],
  "@test/132.ts: GoogleSheetsMock.ensureGridRange(GridRange)": [
    "@test/132.ts: GoogleSheetsMock.getSheetById(number)"
  ],
  "@test/132.ts: GoogleSheetsMock.createA1(Required<GridRange>)": [
    "@test/132.ts: GoogleSheetsMock.getSheetById(number)",
    "@test/132.ts: GoogleSheetsMock.numberToLetter(number)"
  ],
  "@test/132.ts: GoogleSheetsMock.parseCell(string)": [
    "@test/132.ts: GoogleSheetsMock.isInteger(string)",
    "@test/132.ts: GoogleSheetsMock.letterToNumber(string)"
  ],
  "@test/132.ts: GoogleSheetsMock.getSheetByName(string)": [
    "@test/132.ts: GoogleSheetsMock.%AM16$getSheetByName([name], unknown)"
  ],
  "@test/132.ts: GoogleSheetsMock.getSheetById(number)": [
    "@test/132.ts: GoogleSheetsMock.%AM17$getSheetById([id], unknown)"
  ],
  "@test/132.ts: GoogleSheetsMock.%AM6$mockAPI()": [
    "@test/132.ts: GoogleSheetsMock.handleGetSpreadsheet()"
  ],
  "@test/132.ts: GoogleSheetsMock.%AM7$mockAPI(string, nock.Body)": [
    "@test/132.ts: GoogleSheetsMock.handleBatchUpdate(@test/132.ts: BatchUpdateRequest)"
  ],
  "@test/132.ts: GoogleSheetsMock.%AM8$mockAPI(string, nock.Body)": [
    "@test/132.ts: GoogleSheetsMock.handleValueUpdate(@test/132.ts: ValueRange)"
  ],
  "@test/132.ts: GoogleSheetsMock.%AM9$mockAPI(string)": [
    "@test/132.ts: GoogleSheetsMock.handleBatchGet(@test/132.ts: BatchGetParams)"
  ],
  "@test/132.ts: GoogleSheetsMock.%AM10$mockAPI(string)": [
    "@test/132.ts: GoogleSheetsMock.getValueRange(string)"
  ],
  "@test/132.ts: GoogleSheetsMock.%AM11$mockAPI(string, nock.Body)": [
    "@test/132.ts: GoogleSheetsMock.handleValueAppend(@test/132.ts: AppendRequest)"
  ],
  "@test/132.ts: GoogleSheetsMock.%AM12$handleValueAppend(unknown)": [
    "@test/132.ts: GoogleSheetsMock.valuesToRowData(Value[])"
  ],
  "@test/132.ts: GoogleSheetsMock.%AM13$handleDeleteRange(CellData)": [
    "@test/132.ts: GoogleSheetsMock.createValue(Value)"
  ],
  "@test/132.ts: GoogleSheetsMock.%AM14$handleValueUpdate(CellData, Value)": [
    "@test/132.ts: GoogleSheetsMock.createValue(Value)"
  ],
  "@test/132.ts: GoogleSheetsMock.[static]forDatasource(Datasource)": [
    "@test/132.ts: GoogleSheetsMock.constructor(GoogleSheetsConfig)"
  ],
  "@test/132.ts: %AC$GoogleSheetsMock$handleBatchGet$30.%instInit()": [
    "@test/132.ts: %AC$GoogleSheetsMock$handleBatchGet$30.%AM0$%instInit(unknown)"
  ],
  "@test/132.ts: %AC$GoogleSheetsMock$valuesToRowData$43.%instInit()": [
    "@test/132.ts: %AC$GoogleSheetsMock$valuesToRowData$43.%AM0$%instInit(unknown)"
  ]
}