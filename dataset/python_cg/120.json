{
    "main": [
        "typing.TypeVar",
        "backend.util.settings.Config"
    ],
    "BlockCategory.dict": [],
    "BlockSchema.jsonschema": [
        "BlockSchema.jsonschema.ref_to_dict",
        "pydantic.BaseModel.model_json_schema",
        "typing.cast",
        "<builtin>.isinstance",
        "jsonref.replace_refs"
    ],
    "BlockSchema.jsonschema.ref_to_dict": [
        "BlockSchema.jsonschema.ref_to_dict",
        "<builtin>.isinstance",
        "<builtin>.len",
        "<builtin>.next"
    ],
    "BlockSchema.validate_data": [
        "BlockSchema.jsonschema",
        "backend.util.json.validate_with_jsonschema"
    ],
    "BlockSchema.validate_field": [
        "BlockSchema.jsonschema",
        "backend.util.json.to_dict",
        "<builtin>.str"
    ],
    "BlockSchema.get_fields": [
        "<builtin>.set",
        "pydantic.BaseModel.model_fields.keys"
    ],
    "BlockSchema.get_required_fields": [
        "pydantic.BaseModel.model_fields.items"
    ],
    "BlockSchema.__pydantic_init_subclass__": [
        "<builtin>.ValueError",
        "inspect.isclass",
        "<builtin>.issubclass",
        "<builtin>.TypeError",
        "pydantic.BaseModel.model_fields.get",
        "<builtin>.super",
        "typing.get_origin",
        "pydantic.BaseModel.model_fields.items",
        "<builtin>.len",
        "typing.cast",
        "pydantic.BaseModel.model_fields.keys"
    ],
    "Block.__init__": [
        "<builtin>.TypeError",
        "<builtin>.issubclass",
        "<builtin>.set",
        "<builtin>.all",
        "<builtin>.NotImplementedError",
        "<builtin>.isinstance"
    ],
    "Block.create": [
        "Block.__init__"
    ],
    "Block": [
        "abc.abstractmethod"
    ],
    "Block.run": [],
    "Block.run_once": [
        "Block.run",
        "<builtin>.ValueError"
    ],
    "Block.merge_stats": [
        "<builtin>.isinstance"
    ],
    "Block.name": [],
    "Block.to_dict": [
        "BlockSchema.jsonschema"
    ],
    "Block.execute": [
        "<builtin>.ValueError",
        "BlockSchema.validate_data",
        "pydantic.BaseModel.__init__",
        "<builtin>.RuntimeError",
        "Block.run",
        "BlockSchema.validate_field"
    ],
    "get_blocks": [],
    "initialize_blocks": [
        "prisma.models.AgentBlock.prisma",
        "backend.blocks.AVAILABLE_BLOCKS.values",
        "backend.util.json.dumps",
        "get_blocks"
    ],
    "get_block": [
        "get_blocks",
        "backend.blocks.AVAILABLE_BLOCKS.get"
    ]
}