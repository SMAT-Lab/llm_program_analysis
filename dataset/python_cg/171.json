{
    "main": [
        "logging.getLogger",
        "<builtin>.vars",
        "typing.TypeVar",
        "backend.util.settings.Config"
    ],
    "expose": [
        "Pyro5.api.expose",
        "register_pydantic_serializers"
    ],
    "expose.wrapper": [],
    "register_pydantic_serializers": [
        "_make_custom_serializer",
        "<builtin>.TypeError",
        "_make_custom_deserializer",
        "Pyro5.api.register_class_to_dict",
        "_pydantic_models_from_type_annotation",
        "Pyro5.api.register_dict_to_class"
    ],
    "_pydantic_models_from_type_annotation": [
        "typing.get_args",
        "<builtin>.TypeError",
        "<builtin>.issubclass",
        "typing.get_origin",
        "<builtin>.hasattr",
        "<builtin>.getattr",
        "<builtin>.isinstance",
        "_pydantic_models_from_type_annotation"
    ],
    "_make_custom_serializer": [],
    "_make_custom_deserializer": [],
    "_make_custom_serializer.custom_class_to_dict": [],
    "_make_custom_deserializer.custom_dict_to_class": [],
    "AppService.__init__": [],
    "AppService": [
        "backend.util.retry.conn_retry",
        "abc.abstractmethod"
    ],
    "AppService.get_port": [],
    "AppService.get_host": [
        "os.environ.get",
        "backend.util.process.AppProcess.service_name.upper"
    ],
    "AppService.run_service": [
        "time.sleep"
    ],
    "AppService.__run_async": [
        "asyncio.run_coroutine_threadsafe"
    ],
    "AppService.run_and_wait": [
        "AppService.__run_async"
    ],
    "AppService.run": [
        "backend.util.settings.Secrets",
        "asyncio.get_event_loop",
        "supabase.create_client",
        "backend.data.db.connect",
        "threading.Thread",
        "AppService.run_service",
        "backend.data.redis.connect"
    ],
    "AppService.cleanup": [
        "backend.data.redis.disconnect",
        "AppService.run_and_wait",
        "backend.data.db.disconnect"
    ],
    "AppService.__start_pyro": [
        "AppService.get_port",
        "<builtin>.max"
    ],
    "AppService.__start_async_loop": [],
    "close_service_client": [
        "<builtin>.isinstance",
        "<builtin>.RuntimeError"
    ],
    "get_service_client": [
        "typing.cast",
        "get_service_client.DynamicClient.__init__"
    ],
    "get_service_client.DynamicClient": [
        "backend.util.retry.conn_retry"
    ],
    "get_service_client.DynamicClient.__init__": [
        "os.environ.get"
    ],
    "get_service_client.DynamicClient.__getattr__": [
        "<builtin>.getattr"
    ]
}