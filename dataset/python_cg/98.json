{
    "main": [],
    "TestValidadeFormat.test_error_message_return_and_return_type": [
        "unittest.TestCase.assertEqual",
        "unittest.TestCase.assertIsInstance",
        "validate.format.error_message"
    ],
    "TestValidadeFormat.test_if_get_categories_content_return_correct_data_of_categories": [
        "unittest.TestCase.subTest",
        "unittest.TestCase.assertEqual",
        "validate.format.get_categories_content",
        "unittest.TestCase.assertIsInstance",
        "<builtin>.zip"
    ],
    "TestValidadeFormat.test_if_check_alphabetical_order_return_correct_msg_error": [
        "unittest.TestCase.subTest",
        "unittest.TestCase.assertEqual",
        "unittest.TestCase.assertIsInstance",
        "<builtin>.len",
        "<builtin>.zip",
        "validate.format.check_alphabetical_order"
    ],
    "TestValidadeFormat.test_check_title_with_correct_title": [
        "validate.format.check_title",
        "unittest.TestCase.assertIsInstance",
        "<builtin>.len",
        "unittest.TestCase.assertEqual"
    ],
    "TestValidadeFormat.test_check_title_with_markdown_syntax_incorrect": [
        "validate.format.check_title",
        "unittest.TestCase.assertIsInstance",
        "<builtin>.len",
        "unittest.TestCase.assertEqual"
    ],
    "TestValidadeFormat.test_check_title_with_api_at_the_end_of_the_title": [
        "validate.format.check_title",
        "unittest.TestCase.assertIsInstance",
        "<builtin>.len",
        "unittest.TestCase.assertEqual"
    ],
    "TestValidadeFormat.test_check_description_with_correct_description": [
        "validate.format.check_description",
        "unittest.TestCase.assertIsInstance",
        "<builtin>.len",
        "unittest.TestCase.assertEqual"
    ],
    "TestValidadeFormat.test_check_description_with_first_char_is_not_capitalized": [
        "validate.format.check_description",
        "unittest.TestCase.assertIsInstance",
        "<builtin>.len",
        "unittest.TestCase.assertEqual"
    ],
    "TestValidadeFormat.test_check_description_with_punctuation_in_the_end": [
        "unittest.TestCase.subTest",
        "validate.format.check_description",
        "unittest.TestCase.assertEqual",
        "unittest.TestCase.assertIsInstance",
        "<builtin>.len"
    ],
    "TestValidadeFormat.test_check_description_that_exceeds_the_character_limit": [
        "unittest.TestCase.assertEqual",
        "validate.format.check_description",
        "<builtin>.len",
        "unittest.TestCase.assertIsInstance"
    ],
    "TestValidadeFormat.test_check_auth_with_valid_auth": [
        "unittest.TestCase.subTest",
        "unittest.TestCase.assertEqual",
        "unittest.TestCase.assertIsInstance",
        "<builtin>.len",
        "validate.format.check_auth"
    ],
    "TestValidadeFormat.test_check_auth_without_backtick": [
        "unittest.TestCase.subTest",
        "unittest.TestCase.assertEqual",
        "unittest.TestCase.assertIsInstance",
        "<builtin>.len",
        "validate.format.check_auth"
    ],
    "TestValidadeFormat.test_check_auth_with_invalid_auth": [
        "unittest.TestCase.subTest",
        "unittest.TestCase.assertEqual",
        "unittest.TestCase.assertIsInstance",
        "<builtin>.len",
        "validate.format.check_auth"
    ],
    "TestValidadeFormat.test_check_https_with_valid_https": [
        "unittest.TestCase.subTest",
        "unittest.TestCase.assertEqual",
        "validate.format.check_https",
        "unittest.TestCase.assertIsInstance",
        "<builtin>.len"
    ],
    "TestValidadeFormat.test_check_https_with_invalid_https": [
        "unittest.TestCase.subTest",
        "unittest.TestCase.assertEqual",
        "validate.format.check_https",
        "unittest.TestCase.assertIsInstance",
        "<builtin>.len"
    ],
    "TestValidadeFormat.test_check_cors_with_valid_cors": [
        "unittest.TestCase.subTest",
        "validate.format.check_cors",
        "unittest.TestCase.assertEqual",
        "unittest.TestCase.assertIsInstance",
        "<builtin>.len"
    ],
    "TestValidadeFormat.test_check_cors_with_invalid_cors": [
        "unittest.TestCase.subTest",
        "validate.format.check_cors",
        "unittest.TestCase.assertEqual",
        "unittest.TestCase.assertIsInstance",
        "<builtin>.len"
    ],
    "TestValidadeFormat.test_check_entry_with_correct_segments": [
        "unittest.TestCase.assertEqual",
        "validate.format.check_entry",
        "<builtin>.len",
        "unittest.TestCase.assertIsInstance"
    ],
    "TestValidadeFormat.test_check_entry_with_incorrect_segments": [
        "unittest.TestCase.subTest",
        "unittest.TestCase.assertEqual",
        "<builtin>.len",
        "unittest.TestCase.assertIsInstance",
        "validate.format.check_entry"
    ],
    "TestValidadeFormat.test_check_file_format_with_correct_format": [
        "validate.format.check_file_format",
        "unittest.TestCase.assertIsInstance",
        "<builtin>.len",
        "unittest.TestCase.assertEqual"
    ],
    "TestValidadeFormat.test_check_file_format_with_category_header_not_added_to_index": [
        "validate.format.check_file_format",
        "unittest.TestCase.assertIsInstance",
        "<builtin>.len",
        "unittest.TestCase.assertEqual"
    ],
    "TestValidadeFormat.test_check_file_format_with_category_without_min_entries": [
        "validate.format.check_file_format",
        "unittest.TestCase.assertIsInstance",
        "<builtin>.len",
        "unittest.TestCase.assertEqual"
    ],
    "TestValidadeFormat.test_check_file_format_entry_without_all_necessary_columns": [
        "validate.format.check_file_format",
        "unittest.TestCase.assertIsInstance",
        "<builtin>.len",
        "unittest.TestCase.assertEqual"
    ],
    "TestValidadeFormat.test_check_file_format_without_1_space_between_the_segments": [
        "validate.format.check_file_format",
        "unittest.TestCase.assertIsInstance",
        "<builtin>.len",
        "unittest.TestCase.assertEqual"
    ]
}