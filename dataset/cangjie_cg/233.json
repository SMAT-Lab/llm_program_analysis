{
    "recording": [
        "SamplingDecision.RECORD_AND_SAMPLE.equals",
        "SamplingDecision.RECORD_ONLY.equals"
    ],
    "shouldSample": [
        "SamplingResult.drop",
        "SamplingResult.recordAndSample",
        "scope.fetchAdd",
        "scope.fetchSub",
        "scope.load"
    ],
    "GloabalRatioBasedSampler": [
        "AtomicInt64",
        "Float64.parse",
        "Int64.parse",
        "ReentrantMutex",
        "base.toString",
        "format",
        "ratio.toString"
    ],
    "create": [
        "Exception",
        "GloabalRatioBasedSampler"
    ],
    "new": [
        "GloabalRatioBasedSampler"
    ]
}