{
    "SplitCurrentState": [
        "EDGE",
        "VERTEX",
        "coreEdge.NextEdgeLeft",
        "coreEdge.NextEdgeLeft.getOrThrow",
        "coreEdge.NextEdgeLeft.getOrThrow.GetEdge",
        "joinEdge.GetSource",
        "joinSourceLeft.SplitVertex",
        "rewriteEndingElements.put",
        "rewriteStartingElements.put"
    ],
    "GetCoreSourceVertices": [
        "Edge",
        "PARTIAL",
        "VERTEX",
        "coreEdge.GetArity",
        "coreEdge.GetGraph",
        "input.GetWidth",
        "rewriteStartingElements.put",
        "signal.GetWidth"
    ],
    "CreateOutputJoinEdges": [
        "DELAY",
        "Edge",
        "JOIN",
        "Some",
        "VERTEX",
        "mapi",
        "rewriteEndingElements.put",
        "v.GetWidth",
        "v.SplitVertex"
    ],
    "GetCoreTargetVertices": [
        "coreEdge.GetCoarity"
    ],
    "GetOutputData": [
        "GetOutputTerm",
        "f.GetOutput",
        "f.GetOutput.GetVertex",
        "map"
    ],
    "UpdateInputOutputHistory": [
        "GetOutputData",
        "InputOutput",
        "graph.GetArity",
        "graph.GetCoarity",
        "history.inputHistoryPerPort.append",
        "history.inputHistoryPerTick.append",
        "history.inputOutputHistoryPerTick.append",
        "history.outputHistoryPerPort.append",
        "history.outputHistoryPerTick.append"
    ],
    "CollapseSingleOutput": [
        "FROM_EDGE",
        "label.GetName",
        "rootVertex.GetGraph",
        "rootVertex.GetGraph.CollapseSubgraph",
        "rootVertex.GetInEdge",
        "rootVertex.GetInEdge.getOrThrow"
    ],
    "CollapseOutputs": [
        "CollapseSingleOutput",
        "e.GetSource",
        "mapi"
    ],
    "PerformCycle": [
        "AssertHasInputs",
        "CollapseOutputs",
        "CreateOutputJoinEdges",
        "DEFINITE",
        "GetCoreSourceVertices",
        "GetCoreTargetVertices",
        "PerformCycle",
        "RewriteCombinational",
        "Signal",
        "SplitCurrentState",
        "UpdateInputOutputHistory",
        "V.DecToSignal",
        "coreEdge.Clone",
        "graph.GetGraph",
        "graph.GetInput",
        "graph.GetInput.GetWidth",
        "graph.GetLabel",
        "history.GetCurrentTick",
        "map",
        "mapi"
    ],
    "PerformCycles": [
        "ArrayOfInputsToArrayOfTicks",
        "AssertHasInputs",
        "PerformCycle",
        "PerformCycles"
    ]
}