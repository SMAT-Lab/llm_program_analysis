{
    "HeaderWriter": [
        "RawIO"
    ],
    "writeLocalFileHeader": [
        "ByteArrayStream",
        "HeaderSignature.ZIP64_EXTRA_FIELD_SIGNATURE.getValue",
        "HeaderUtil.getBytesFromString",
        "Int32",
        "NoneValueException",
        "UInt8",
        "Zip4cjUtil.isStringNotNullAndNotEmpty",
        "aesExtraDataRecord.getAesKeyStrength",
        "aesExtraDataRecord.getAesKeyStrength.getRawCode",
        "aesExtraDataRecord.getAesVersion",
        "aesExtraDataRecord.getAesVersion.getVersionNumber",
        "aesExtraDataRecord.getCompressionMethod",
        "aesExtraDataRecord.getCompressionMethod.getCode",
        "aesExtraDataRecord.getDataSize",
        "aesExtraDataRecord.getSignature",
        "aesExtraDataRecord.getSignature.getOrThrow",
        "aesExtraDataRecord.getSignature.getOrThrow.getValue",
        "aesExtraDataRecord.getVendorID",
        "byteArrayOutputStream.bytes",
        "byteArrayOutputStream.write",
        "localFileHeader.getAesExtraDataRecord",
        "localFileHeader.getAesExtraDataRecord.isSome",
        "localFileHeader.getCompressedSize",
        "localFileHeader.getCompressionMethod",
        "localFileHeader.getCompressionMethod.getOrThrow",
        "localFileHeader.getCompressionMethod.getOrThrow.getCode",
        "localFileHeader.getCrc",
        "localFileHeader.getFileName",
        "localFileHeader.getFileName.getOrThrow",
        "localFileHeader.getGeneralPurposeFlag",
        "localFileHeader.getLastModifiedTime",
        "localFileHeader.getSignature",
        "localFileHeader.getSignature.getOrThrow",
        "localFileHeader.getSignature.getOrThrow.getValue",
        "localFileHeader.getUncompressedSize",
        "localFileHeader.getVersionNeededToExtract",
        "localFileHeader.setWriteCompressedSizeInZip64ExtraRecord",
        "outputStream.write",
        "rawIO.writeIntLittleEndian",
        "rawIO.writeLongLittleEndian",
        "rawIO.writeShortLittleEndian",
        "zipModel.setZip64Format"
    ],
    "writeExtendedLocalHeader": [
        "ByteArrayStream",
        "HeaderSignature.EXTRA_DATA_RECORD.getValue",
        "Int32",
        "ZipException",
        "byteArrayOutputStream.bytes",
        "byteArrayOutputStream.write",
        "localFileHeader.getOrThrow",
        "localFileHeader.getOrThrow.getCompressedSize",
        "localFileHeader.getOrThrow.getCrc",
        "localFileHeader.getOrThrow.getUncompressedSize",
        "localFileHeader.getOrThrow.isWriteCompressedSizeInZip64ExtraRecord",
        "localFileHeader.isNone",
        "outputStream.write",
        "rawIO.writeIntLittleEndian",
        "rawIO.writeLongLittleEndian"
    ],
    "finalizeZipFile": [
        "ByteArrayStream",
        "Int32",
        "Int64",
        "Zip64EndOfCentralDirectoryLocator",
        "buildZip64EndOfCentralDirectoryRecord",
        "byteArrayOutputStream.bytes",
        "getCurrentSplitFileCounter",
        "getOffsetOfCentralDirectory",
        "isSplitZipFile",
        "processHeaderData",
        "writeCentralDirectory",
        "writeEndOfCentralDirectoryRecord",
        "writeZip64EndOfCentralDirectoryLocator",
        "writeZip64EndOfCentralDirectoryRecord",
        "writeZipHeaderBytes",
        "zipModel.getCentralDirectory",
        "zipModel.getCentralDirectory.getOrThrow",
        "zipModel.getCentralDirectory.getOrThrow.getFileHeaders",
        "zipModel.getZip64EndOfCentralDirectoryLocator",
        "zipModel.getZip64EndOfCentralDirectoryLocator.getOrThrow",
        "zipModel.getZip64EndOfCentralDirectoryLocator.getOrThrow.setNumberOfDiskStartOfZip64EndOfCentralDirectoryRecord",
        "zipModel.getZip64EndOfCentralDirectoryLocator.getOrThrow.setOffsetZip64EndOfCentralDirectoryRecord",
        "zipModel.getZip64EndOfCentralDirectoryLocator.getOrThrow.setTotalNumberOfDiscs",
        "zipModel.getZip64EndOfCentralDirectoryLocator.isNone",
        "zipModel.isZip64Format",
        "zipModel.setZip64EndOfCentralDirectoryLocator",
        "zipModel.setZip64EndOfCentralDirectoryRecord"
    ],
    "finalizeZipFileWithoutValidations": [
        "ByteArrayStream",
        "Int32",
        "buildZip64EndOfCentralDirectoryRecord",
        "byteArrayOutputStream.bytes",
        "getOffsetOfCentralDirectory",
        "writeCentralDirectory",
        "writeEndOfCentralDirectoryRecord",
        "writeZip64EndOfCentralDirectoryLocator",
        "writeZip64EndOfCentralDirectoryRecord",
        "writeZipHeaderBytes",
        "zipModel.getCentralDirectory",
        "zipModel.getCentralDirectory.getOrThrow",
        "zipModel.getCentralDirectory.getOrThrow.getFileHeaders",
        "zipModel.getZip64EndOfCentralDirectoryLocator",
        "zipModel.getZip64EndOfCentralDirectoryLocator.getOrThrow",
        "zipModel.getZip64EndOfCentralDirectoryLocator.getOrThrow.setOffsetZip64EndOfCentralDirectoryRecord",
        "zipModel.isZip64Format",
        "zipModel.setZip64EndOfCentralDirectoryRecord"
    ],
    "updateLocalFileHeader": [
        "FileUtils.getZipFileNameWithoutExtension",
        "Int64",
        "Path",
        "SplitOutputStream",
        "currOutputStream.close",
        "currOutputStream.getFilePointer",
        "currOutputStream.seek",
        "currOutputStream.write",
        "fileHeader.getCrc",
        "fileHeader.getDiskNumberStart",
        "fileHeader.getOffsetLocalHeader",
        "outputStream.getCurrentSplitFileCounter",
        "outputStream.seek",
        "parentFile.getOrThrow",
        "parentFile.getOrThrow.toString",
        "parentFile.isSome",
        "rawIO.writeLongLittleEndian",
        "updateFileSizesInLocalFileHeader",
        "zipModel.getZipFile",
        "zipModel.getZipFile.getOrThrow",
        "zipModel.getZipFile.getOrThrow.fileName.getOrThrow"
    ],
    "updateFileSizesInLocalFileHeader": [
        "ZipException",
        "fileHeader.getCompressedSize",
        "fileHeader.getFileNameLength",
        "fileHeader.getUncompressedSize",
        "outputStream.skipBytes",
        "outputStream.write",
        "rawIO.writeLongLittleEndian"
    ],
    "isSplitZipFile": [
        "output.isSplitZipFile"
    ],
    "getCurrentSplitFileCounter": [
        "output.getCurrentSplitFileCounter"
    ],
    "writeZipHeaderBytes": [
        "Int32",
        "finalizeZipFile",
        "output.checkBuffSizeAndStartNextSplitFile",
        "outputStream.write"
    ],
    "processHeaderData": [
        "output.getCurrentSplitFileCounter",
        "output.getFilePointer",
        "zipModel.getEndOfCentralDirectoryRecord",
        "zipModel.getEndOfCentralDirectoryRecord.getOffsetOfStartOfCentralDirectory",
        "zipModel.getEndOfCentralDirectoryRecord.setNumberOfThisDisk",
        "zipModel.getEndOfCentralDirectoryRecord.setNumberOfThisDiskStartOfCentralDir",
        "zipModel.getEndOfCentralDirectoryRecord.setOffsetOfStartOfCentralDirectory",
        "zipModel.getZip64EndOfCentralDirectoryLocator",
        "zipModel.getZip64EndOfCentralDirectoryLocator.getOrThrow",
        "zipModel.getZip64EndOfCentralDirectoryLocator.getOrThrow.setNumberOfDiskStartOfZip64EndOfCentralDirectoryRecord",
        "zipModel.getZip64EndOfCentralDirectoryLocator.getOrThrow.setTotalNumberOfDiscs",
        "zipModel.getZip64EndOfCentralDirectoryRecord",
        "zipModel.getZip64EndOfCentralDirectoryRecord.setOffsetStartCentralDirectoryWRTStartDiskNumber",
        "zipModel.isZip64Format"
    ],
    "writeCentralDirectory": [
        "writeFileHeader",
        "zipModel.getCentralDirectory",
        "zipModel.getCentralDirectory.getOrThrow",
        "zipModel.getCentralDirectory.getOrThrow.getFileHeaders"
    ],
    "writeFileHeader": [
        "ArrayCopy",
        "HeaderSignature.ZIP64_EXTRA_FIELD_SIGNATURE.getValue",
        "HeaderUtil.getBytesFromString",
        "Int32",
        "UInt8",
        "Zip4cjUtil.isStringNotNullAndNotEmpty",
        "aesExtraDataRecord.getAesKeyStrength",
        "aesExtraDataRecord.getAesKeyStrength.getRawCode",
        "aesExtraDataRecord.getAesVersion",
        "aesExtraDataRecord.getAesVersion.getVersionNumber",
        "aesExtraDataRecord.getCompressionMethod",
        "aesExtraDataRecord.getCompressionMethod.getCode",
        "aesExtraDataRecord.getDataSize",
        "aesExtraDataRecord.getSignature",
        "aesExtraDataRecord.getSignature.getOrThrow",
        "aesExtraDataRecord.getSignature.getOrThrow.getValue",
        "aesExtraDataRecord.getVendorID",
        "byteArrayOutputStream.write",
        "calculateExtraDataRecordsSize",
        "fileComment.getOrThrow",
        "fileHeader.getAesExtraDataRecord",
        "fileHeader.getCompressedSize",
        "fileHeader.getCompressionMethod",
        "fileHeader.getCompressionMethod.getOrThrow",
        "fileHeader.getCompressionMethod.getOrThrow.getCode",
        "fileHeader.getCrc",
        "fileHeader.getDiskNumberStart",
        "fileHeader.getExternalFileAttributes",
        "fileHeader.getExternalFileAttributes.getOrThrow",
        "fileHeader.getFileComment",
        "fileHeader.getFileName",
        "fileHeader.getFileName.getOrThrow",
        "fileHeader.getGeneralPurposeFlag",
        "fileHeader.getGeneralPurposeFlag.getOrThrow",
        "fileHeader.getLastModifiedTime",
        "fileHeader.getOffsetLocalHeader",
        "fileHeader.getSignature",
        "fileHeader.getSignature.getOrThrow",
        "fileHeader.getSignature.getOrThrow.getValue",
        "fileHeader.getUncompressedSize",
        "fileHeader.getVersionMadeBy",
        "fileHeader.getVersionNeededToExtract",
        "isZip64Entry",
        "rawIO.writeIntLittleEndian",
        "rawIO.writeLongLittleEndian",
        "rawIO.writeShortLittleEndian",
        "writeRemainingExtraDataRecordsIfPresent",
        "zipModel.setZip64Format"
    ],
    "calculateExtraDataRecordsSize": [
        "HeaderSignature.AES_EXTRA_DATA_RECORD.getValue",
        "HeaderSignature.ZIP64_EXTRA_FIELD_SIGNATURE.getValue",
        "Int32",
        "extraDataRecord.getHeader",
        "extraDataRecord.getSizeOfData",
        "fileHeader.getAesExtraDataRecord",
        "fileHeader.getAesExtraDataRecord.isSome",
        "fileHeader.getExtraDataRecords"
    ],
    "writeRemainingExtraDataRecordsIfPresent": [
        "HeaderSignature.AES_EXTRA_DATA_RECORD.getValue",
        "HeaderSignature.ZIP64_EXTRA_FIELD_SIGNATURE.getValue",
        "Int32",
        "extraDataRecord.getData",
        "extraDataRecord.getData.getOrThrow",
        "extraDataRecord.getHeader",
        "extraDataRecord.getSizeOfData",
        "fileHeader.getExtraDataRecords",
        "fileHeader.getExtraDataRecords.getOrThrow",
        "fileHeader.getExtraDataRecords.isNone",
        "outputStream.write",
        "rawIO.writeShortLittleEndian"
    ],
    "writeZip64EndOfCentralDirectoryRecord": [
        "Int32",
        "rawIO.writeIntLittleEndian",
        "rawIO.writeLongLittleEndian",
        "rawIO.writeShortLittleEndian",
        "zip64EndOfCentralDirectoryRecord.getNumberOfThisDisk",
        "zip64EndOfCentralDirectoryRecord.getNumberOfThisDiskStartOfCentralDirectory",
        "zip64EndOfCentralDirectoryRecord.getOffsetStartCentralDirectoryWRTStartDiskNumber",
        "zip64EndOfCentralDirectoryRecord.getSignature",
        "zip64EndOfCentralDirectoryRecord.getSignature.getOrThrow",
        "zip64EndOfCentralDirectoryRecord.getSignature.getOrThrow.getValue",
        "zip64EndOfCentralDirectoryRecord.getSizeOfCentralDirectory",
        "zip64EndOfCentralDirectoryRecord.getSizeOfZip64EndCentralDirectoryRecord",
        "zip64EndOfCentralDirectoryRecord.getTotalNumberOfEntriesInCentralDirectory",
        "zip64EndOfCentralDirectoryRecord.getTotalNumberOfEntriesInCentralDirectoryOnThisDisk",
        "zip64EndOfCentralDirectoryRecord.getVersionMadeBy",
        "zip64EndOfCentralDirectoryRecord.getVersionNeededToExtract"
    ],
    "writeZip64EndOfCentralDirectoryLocator": [
        "HeaderSignature.ZIP64_END_CENTRAL_DIRECTORY_LOCATOR.getValue",
        "Int32",
        "rawIO.writeIntLittleEndian",
        "rawIO.writeLongLittleEndian",
        "zip64EndOfCentralDirectoryLocator.getNumberOfDiskStartOfZip64EndOfCentralDirectoryRecord",
        "zip64EndOfCentralDirectoryLocator.getOffsetZip64EndOfCentralDirectoryRecord",
        "zip64EndOfCentralDirectoryLocator.getTotalNumberOfDiscs"
    ],
    "writeEndOfCentralDirectoryRecord": [
        "HeaderSignature.END_OF_CENTRAL_DIRECTORY.getValue",
        "HeaderUtil.getBytesFromString",
        "Int32",
        "Int64",
        "Zip4cjUtil.isStringNotNullAndNotEmpty",
        "byteArrayOutputStream.write",
        "countNumberOfFileHeaderEntriesOnDisk",
        "rawIO.writeIntLittleEndian",
        "rawIO.writeLongLittleEndian",
        "rawIO.writeShortLittleEndian",
        "zipModel.getCentralDirectory",
        "zipModel.getCentralDirectory.getOrThrow",
        "zipModel.getCentralDirectory.getOrThrow.getFileHeaders",
        "zipModel.getEndOfCentralDirectoryRecord",
        "zipModel.getEndOfCentralDirectoryRecord.getComment",
        "zipModel.getEndOfCentralDirectoryRecord.getNumberOfThisDisk",
        "zipModel.getEndOfCentralDirectoryRecord.getNumberOfThisDiskStartOfCentralDir",
        "zipModel.isSplitArchive"
    ],
    "countNumberOfFileHeaderEntriesOnDisk": [
        "fileHeader.getDiskNumberStart"
    ],
    "isZip64Entry": [
        "fileHeader.getCompressedSize",
        "fileHeader.getDiskNumberStart",
        "fileHeader.getOffsetLocalHeader",
        "fileHeader.getUncompressedSize"
    ],
    "getOffsetOfCentralDirectory": [
        "zipModel.getEndOfCentralDirectoryRecord",
        "zipModel.getEndOfCentralDirectoryRecord.getOffsetOfStartOfCentralDirectory",
        "zipModel.getZip64EndOfCentralDirectoryRecord",
        "zipModel.getZip64EndOfCentralDirectoryRecord.getOffsetStartCentralDirectoryWRTStartDiskNumber",
        "zipModel.isZip64Format"
    ],
    "buildZip64EndOfCentralDirectoryRecord": [
        "Int64",
        "Zip64EndOfCentralDirectoryRecord",
        "countNumberOfFileHeaderEntriesOnDisk",
        "firstFileHeader.getVersionMadeBy",
        "firstFileHeader.getVersionNeededToExtract",
        "zip64EndOfCentralDirectoryRecord.setNumberOfThisDisk",
        "zip64EndOfCentralDirectoryRecord.setNumberOfThisDiskStartOfCentralDirectory",
        "zip64EndOfCentralDirectoryRecord.setOffsetStartCentralDirectoryWRTStartDiskNumber",
        "zip64EndOfCentralDirectoryRecord.setSignature",
        "zip64EndOfCentralDirectoryRecord.setSizeOfCentralDirectory",
        "zip64EndOfCentralDirectoryRecord.setSizeOfZip64EndCentralDirectoryRecord",
        "zip64EndOfCentralDirectoryRecord.setTotalNumberOfEntriesInCentralDirectory",
        "zip64EndOfCentralDirectoryRecord.setTotalNumberOfEntriesInCentralDirectoryOnThisDisk",
        "zip64EndOfCentralDirectoryRecord.setVersionMadeBy",
        "zip64EndOfCentralDirectoryRecord.setVersionNeededToExtract",
        "zipModel.getCentralDirectory",
        "zipModel.getCentralDirectory.getOrThrow",
        "zipModel.getCentralDirectory.getOrThrow.getFileHeaders",
        "zipModel.getEndOfCentralDirectoryRecord",
        "zipModel.getEndOfCentralDirectoryRecord.getNumberOfThisDisk",
        "zipModel.getEndOfCentralDirectoryRecord.getNumberOfThisDiskStartOfCentralDir",
        "zipModel.isSplitArchive"
    ]
}