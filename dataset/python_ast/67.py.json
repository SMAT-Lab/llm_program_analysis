{
    "type": "module",
    "label": "import logging\nfrom typing import TYPE_CHECKING, Callable, Optional, cast\n\nfrom backend.data.block import BlockWebhookConfig, get_block\nfrom backend.data.graph import set_node_webhook\nfrom backend.data.model import CREDENTIALS_FIELD_NAME\nfrom backend.integrations.webhooks import WEBHOOK_MANAGERS_BY_NAME\n\nif TYPE_CHECKING:\n    from backend.data.graph import GraphModel, NodeModel\n    from backend.data.model import Credentials\n\n    from ._base import BaseWebhooksManager\n\nlogger = logging.getLogger(__name__)\n\n\nasync def on_graph_activate(\n    graph: \"GraphModel\", get_credentials: Callable[[str], \"Credentials | None\"]\n):\n    \"\"\"\n    Hook to be called when a graph is activated/created.\n\n    ⚠️ Assuming node entities are not re-used between graph versions, ⚠️\n    this hook calls `on_node_activate` on all nodes in this graph.\n\n    Params:\n        get_credentials: `credentials_id` -> Credentials\n    \"\"\"\n    # Compare nodes in new_graph_version with previous_graph_version\n    updated_nodes = []\n    for new_node in graph.nodes:\n        node_credentials = None\n        if creds_meta := new_node.input_default.get(CREDENTIALS_FIELD_NAME):\n            node_credentials = get_credentials(creds_meta[\"id\"])\n            if not node_credentials:\n                raise ValueError(\n                    f\"Node #{new_node.id} updated with non-existent \"\n                    f\"credentials #{node_credentials}\"\n                )\n\n        updated_node = await on_node_activate(\n            graph.user_id, new_node, credentials=node_credentials\n        )\n        updated_nodes.append(updated_node)\n\n    graph.nodes = updated_nodes\n    return graph\n\n\nasync def on_graph_deactivate(\n    graph: \"GraphModel\", get_credentials: Callable[[str], \"Credentials | None\"]\n):\n    \"\"\"\n    Hook to be called when a graph is deactivated/deleted.\n\n    ⚠️ Assuming node entities are not re-used between graph versions, ⚠️\n    this hook calls `on_node_deactivate` on all nodes in `graph`.\n\n    Params:\n        get_credentials: `credentials_id` -> Credentials\n    \"\"\"\n    updated_nodes = []\n    for node in graph.nodes:\n        node_credentials = None\n        if creds_meta := node.input_default.get(CREDENTIALS_FIELD_NAME):\n            node_credentials = get_credentials(creds_meta[\"id\"])\n            if not node_credentials:\n                logger.error(\n                    f\"Node #{node.id} referenced non-existent \"\n                    f\"credentials #{creds_meta['id']}\"\n                )\n\n        updated_node = await on_node_deactivate(node, credentials=node_credentials)\n        updated_nodes.append(updated_node)\n\n    graph.nodes = updated_nodes\n    return graph\n\n\nasync def on_node_activate(\n    user_id: str,\n    node: \"NodeModel\",\n    *,\n    credentials: Optional[\"Credentials\"] = None,\n) -> \"NodeModel\":\n    \"\"\"Hook to be called when the node is activated/created\"\"\"\n\n    block = get_block(node.block_id)\n    if not block:\n        raise ValueError(\n            f\"Node #{node.id} is instance of unknown block #{node.block_id}\"\n        )\n\n    if not block.webhook_config:\n        return node\n\n    provider = block.webhook_config.provider\n    if provider not in WEBHOOK_MANAGERS_BY_NAME:\n        raise ValueError(\n            f\"Block #{block.id} has webhook_config for provider {provider} \"\n            \"which does not support webhooks\"\n        )\n\n    logger.debug(\n        f\"Activating webhook node #{node.id} with config {block.webhook_config}\"\n    )\n\n    webhooks_manager = WEBHOOK_MANAGERS_BY_NAME[provider]()\n\n    if auto_setup_webhook := isinstance(block.webhook_config, BlockWebhookConfig):\n        try:\n            resource = block.webhook_config.resource_format.format(**node.input_default)\n        except KeyError:\n            resource = None\n        logger.debug(\n            f\"Constructed resource string {resource} from input {node.input_default}\"\n        )\n    else:\n        resource = \"\"  # not relevant for manual webhooks\n\n    needs_credentials = CREDENTIALS_FIELD_NAME in block.input_schema.model_fields\n    credentials_meta = (\n        node.input_default.get(CREDENTIALS_FIELD_NAME) if needs_credentials else None\n    )\n    event_filter_input_name = block.webhook_config.event_filter_input\n    has_everything_for_webhook = (\n        resource is not None\n        and (credentials_meta or not needs_credentials)\n        and (\n            not event_filter_input_name\n            or (\n                event_filter_input_name in node.input_default\n                and any(\n                    is_on\n                    for is_on in node.input_default[event_filter_input_name].values()\n                )\n            )\n        )\n    )\n\n    if has_everything_for_webhook and resource is not None:\n        logger.debug(f\"Node #{node} has everything for a webhook!\")\n        if credentials_meta and not credentials:\n            raise ValueError(\n                f\"Cannot set up webhook for node #{node.id}: \"\n                f\"credentials #{credentials_meta['id']} not available\"\n            )\n\n        if event_filter_input_name:\n            # Shape of the event filter is enforced in Block.__init__\n            event_filter = cast(dict, node.input_default[event_filter_input_name])\n            events = [\n                block.webhook_config.event_format.format(event=event)\n                for event, enabled in event_filter.items()\n                if enabled is True\n            ]\n            logger.debug(f\"Webhook events to subscribe to: {', '.join(events)}\")\n        else:\n            events = []\n\n        # Find/make and attach a suitable webhook to the node\n        if auto_setup_webhook:\n            assert credentials is not None\n            new_webhook = await webhooks_manager.get_suitable_auto_webhook(\n                user_id,\n                credentials,\n                block.webhook_config.webhook_type,\n                resource,\n                events,\n            )\n        else:\n            # Manual webhook -> no credentials -> don't register but do create\n            new_webhook = await webhooks_manager.get_manual_webhook(\n                user_id,\n                node.graph_id,\n                block.webhook_config.webhook_type,\n                events,\n            )\n        logger.debug(f\"Acquired webhook: {new_webhook}\")\n        return await set_node_webhook(node.id, new_webhook.id)\n    else:\n        logger.debug(f\"Node #{node.id} does not have everything for a webhook\")\n\n    return node\n\n\nasync def on_node_deactivate(\n    node: \"NodeModel\",\n    *,\n    credentials: Optional[\"Credentials\"] = None,\n    webhooks_manager: Optional[\"BaseWebhooksManager\"] = None,\n) -> \"NodeModel\":\n    \"\"\"Hook to be called when node is deactivated/deleted\"\"\"\n\n    logger.debug(f\"Deactivating node #{node.id}\")\n    block = get_block(node.block_id)\n    if not block:\n        raise ValueError(\n            f\"Node #{node.id} is instance of unknown block #{node.block_id}\"\n        )\n\n    if not block.webhook_config:\n        return node\n\n    provider = block.webhook_config.provider\n    if provider not in WEBHOOK_MANAGERS_BY_NAME:\n        raise ValueError(\n            f\"Block #{block.id} has webhook_config for provider {provider} \"\n            \"which does not support webhooks\"\n        )\n\n    webhooks_manager = WEBHOOK_MANAGERS_BY_NAME[provider]()\n\n    if node.webhook_id:\n        logger.debug(f\"Node #{node.id} has webhook_id {node.webhook_id}\")\n        if not node.webhook:\n            logger.error(f\"Node #{node.id} has webhook_id but no webhook object\")\n            raise ValueError(\"node.webhook not included\")\n\n        # Detach webhook from node\n        logger.debug(f\"Detaching webhook from node #{node.id}\")\n        updated_node = await set_node_webhook(node.id, None)\n\n        # Prune and deregister the webhook if it is no longer used anywhere\n        webhook = node.webhook\n        logger.debug(\n            f\"Pruning{' and deregistering' if credentials else ''} \"\n            f\"webhook #{webhook.id}\"\n        )\n        await webhooks_manager.prune_webhook_if_dangling(webhook.id, credentials)\n        if (\n            CREDENTIALS_FIELD_NAME in block.input_schema.model_fields\n            and not credentials\n        ):\n            logger.warning(\n                f\"Cannot deregister webhook #{webhook.id}: credentials \"\n                f\"#{webhook.credentials_id} not available \"\n                f\"({webhook.provider.value} webhook ID: {webhook.provider_webhook_id})\"\n            )\n        return updated_node\n\n    logger.debug(f\"Node #{node.id} has no webhook_id, returning\")\n    return node\n",
    "children": [
        {
            "type": "import_statement",
            "label": "import logging",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "logging",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "logging",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from typing import TYPE_CHECKING, Callable, Optional, cast",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "typing",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "typing",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "TYPE_CHECKING",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "TYPE_CHECKING",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Callable",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Callable",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Optional",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Optional",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "cast",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "cast",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.data.block import BlockWebhookConfig, get_block",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.data.block",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "data",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "block",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "BlockWebhookConfig",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "BlockWebhookConfig",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "get_block",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "get_block",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.data.graph import set_node_webhook",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.data.graph",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "data",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "graph",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "set_node_webhook",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "set_node_webhook",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.data.model import CREDENTIALS_FIELD_NAME",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.data.model",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "data",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "model",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "CREDENTIALS_FIELD_NAME",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "CREDENTIALS_FIELD_NAME",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.integrations.webhooks import WEBHOOK_MANAGERS_BY_NAME",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.integrations.webhooks",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "integrations",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "webhooks",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "WEBHOOK_MANAGERS_BY_NAME",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "WEBHOOK_MANAGERS_BY_NAME",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "if_statement",
            "label": "if TYPE_CHECKING:\n    from backend.data.graph import GraphModel, NodeModel\n    from backend.data.model import Credentials\n\n    from ._base import BaseWebhooksManager",
            "children": [
                {
                    "type": "identifier",
                    "label": "TYPE_CHECKING",
                    "children": []
                },
                {
                    "type": "block",
                    "label": "from backend.data.graph import GraphModel, NodeModel\n    from backend.data.model import Credentials\n\n    from ._base import BaseWebhooksManager",
                    "children": [
                        {
                            "type": "import_from_statement",
                            "label": "from backend.data.graph import GraphModel, NodeModel",
                            "children": [
                                {
                                    "type": "dotted_name",
                                    "label": "backend.data.graph",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "backend",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "data",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "graph",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "dotted_name",
                                    "label": "GraphModel",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "GraphModel",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "dotted_name",
                                    "label": "NodeModel",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "NodeModel",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "import_from_statement",
                            "label": "from backend.data.model import Credentials",
                            "children": [
                                {
                                    "type": "dotted_name",
                                    "label": "backend.data.model",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "backend",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "data",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "model",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "dotted_name",
                                    "label": "Credentials",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "Credentials",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "import_from_statement",
                            "label": "from ._base import BaseWebhooksManager",
                            "children": [
                                {
                                    "type": "relative_import",
                                    "label": "._base",
                                    "children": [
                                        {
                                            "type": "import_prefix",
                                            "label": ".",
                                            "children": []
                                        },
                                        {
                                            "type": "dotted_name",
                                            "label": "_base",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "_base",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "dotted_name",
                                    "label": "BaseWebhooksManager",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "BaseWebhooksManager",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "logger = logging.getLogger(__name__)",
            "children": [
                {
                    "type": "assignment",
                    "label": "logger = logging.getLogger(__name__)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "logger",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "logging.getLogger(__name__)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "logging.getLogger",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "logging",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "getLogger",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(__name__)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "__name__",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def on_graph_activate(\n    graph: \"GraphModel\", get_credentials: Callable[[str], \"Credentials | None\"]\n):\n    \"\"\"\n    Hook to be called when a graph is activated/created.\n\n    ⚠️ Assuming node entities are not re-used between graph versions, ⚠️\n    this hook calls `on_node_activate` on all nodes in this graph.\n\n    Params:\n        get_credentials: `credentials_id` -> Credentials\n    \"\"\"\n    # Compare nodes in new_graph_version with previous_graph_version\n    updated_nodes = []\n    for new_node in graph.nodes:\n        node_credentials = None\n        if creds_meta := new_node.input_default.get(CREDENTIALS_FIELD_NAME):\n            node_credentials = get_credentials(creds_meta[\"id\"])\n            if not node_credentials:\n                raise ValueError(\n                    f\"Node #{new_node.id} updated with non-existent \"\n                    f\"credentials #{node_credentials}\"\n                )\n\n        updated_node = await on_node_activate(\n            graph.user_id, new_node, credentials=node_credentials\n        )\n        updated_nodes.append(updated_node)\n\n    graph.nodes = updated_nodes\n    return graph",
            "children": [
                {
                    "type": "identifier",
                    "label": "on_graph_activate",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(\n    graph: \"GraphModel\", get_credentials: Callable[[str], \"Credentials | None\"]\n)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "graph: \"GraphModel\"",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "graph",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "\"GraphModel\"",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"GraphModel\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "GraphModel",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "get_credentials: Callable[[str], \"Credentials | None\"]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "get_credentials",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "Callable[[str], \"Credentials | None\"]",
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "Callable[[str], \"Credentials | None\"]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "Callable",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[[str], \"Credentials | None\"]",
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "[str]",
                                                            "children": [
                                                                {
                                                                    "type": "list",
                                                                    "label": "[str]",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "\"Credentials | None\"",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"Credentials | None\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "Credentials | None",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    Hook to be called when a graph is activated/created.\n\n    ⚠️ Assuming node entities are not re-used between graph versions, ⚠️\n    this hook calls `on_node_activate` on all nodes in this graph.\n\n    Params:\n        get_credentials: `credentials_id` -> Credentials\n    \"\"\"\n    # Compare nodes in new_graph_version with previous_graph_version\n    updated_nodes = []\n    for new_node in graph.nodes:\n        node_credentials = None\n        if creds_meta := new_node.input_default.get(CREDENTIALS_FIELD_NAME):\n            node_credentials = get_credentials(creds_meta[\"id\"])\n            if not node_credentials:\n                raise ValueError(\n                    f\"Node #{new_node.id} updated with non-existent \"\n                    f\"credentials #{node_credentials}\"\n                )\n\n        updated_node = await on_node_activate(\n            graph.user_id, new_node, credentials=node_credentials\n        )\n        updated_nodes.append(updated_node)\n\n    graph.nodes = updated_nodes\n    return graph",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    Hook to be called when a graph is activated/created.\n\n    ⚠️ Assuming node entities are not re-used between graph versions, ⚠️\n    this hook calls `on_node_activate` on all nodes in this graph.\n\n    Params:\n        get_credentials: `credentials_id` -> Credentials\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    Hook to be called when a graph is activated/created.\n\n    ⚠️ Assuming node entities are not re-used between graph versions, ⚠️\n    this hook calls `on_node_activate` on all nodes in this graph.\n\n    Params:\n        get_credentials: `credentials_id` -> Credentials\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    Hook to be called when a graph is activated/created.\n\n    ⚠️ Assuming node entities are not re-used between graph versions, ⚠️\n    this hook calls `on_node_activate` on all nodes in this graph.\n\n    Params:\n        get_credentials: `credentials_id` -> Credentials\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# Compare nodes in new_graph_version with previous_graph_version",
                            "children": []
                        },
                        {
                            "type": "expression_statement",
                            "label": "updated_nodes = []",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "updated_nodes = []",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "updated_nodes",
                                            "children": []
                                        },
                                        {
                                            "type": "list",
                                            "label": "[]",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "for_statement",
                            "label": "for new_node in graph.nodes:\n        node_credentials = None\n        if creds_meta := new_node.input_default.get(CREDENTIALS_FIELD_NAME):\n            node_credentials = get_credentials(creds_meta[\"id\"])\n            if not node_credentials:\n                raise ValueError(\n                    f\"Node #{new_node.id} updated with non-existent \"\n                    f\"credentials #{node_credentials}\"\n                )\n\n        updated_node = await on_node_activate(\n            graph.user_id, new_node, credentials=node_credentials\n        )\n        updated_nodes.append(updated_node)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "new_node",
                                    "children": []
                                },
                                {
                                    "type": "attribute",
                                    "label": "graph.nodes",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graph",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "nodes",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "node_credentials = None\n        if creds_meta := new_node.input_default.get(CREDENTIALS_FIELD_NAME):\n            node_credentials = get_credentials(creds_meta[\"id\"])\n            if not node_credentials:\n                raise ValueError(\n                    f\"Node #{new_node.id} updated with non-existent \"\n                    f\"credentials #{node_credentials}\"\n                )\n\n        updated_node = await on_node_activate(\n            graph.user_id, new_node, credentials=node_credentials\n        )\n        updated_nodes.append(updated_node)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "node_credentials = None",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "node_credentials = None",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "node_credentials",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "none",
                                                            "label": "None",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if creds_meta := new_node.input_default.get(CREDENTIALS_FIELD_NAME):\n            node_credentials = get_credentials(creds_meta[\"id\"])\n            if not node_credentials:\n                raise ValueError(\n                    f\"Node #{new_node.id} updated with non-existent \"\n                    f\"credentials #{node_credentials}\"\n                )",
                                            "children": [
                                                {
                                                    "type": "named_expression",
                                                    "label": "creds_meta := new_node.input_default.get(CREDENTIALS_FIELD_NAME)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "creds_meta",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "new_node.input_default.get(CREDENTIALS_FIELD_NAME)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "new_node.input_default.get",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "new_node.input_default",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "new_node",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "input_default",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "get",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(CREDENTIALS_FIELD_NAME)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "CREDENTIALS_FIELD_NAME",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "node_credentials = get_credentials(creds_meta[\"id\"])\n            if not node_credentials:\n                raise ValueError(\n                    f\"Node #{new_node.id} updated with non-existent \"\n                    f\"credentials #{node_credentials}\"\n                )",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "node_credentials = get_credentials(creds_meta[\"id\"])",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "node_credentials = get_credentials(creds_meta[\"id\"])",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "node_credentials",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "label": "get_credentials(creds_meta[\"id\"])",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "get_credentials",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(creds_meta[\"id\"])",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "subscript",
                                                                                            "label": "creds_meta[\"id\"]",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "creds_meta",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"id\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "id",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "if_statement",
                                                            "label": "if not node_credentials:\n                raise ValueError(\n                    f\"Node #{new_node.id} updated with non-existent \"\n                    f\"credentials #{node_credentials}\"\n                )",
                                                            "children": [
                                                                {
                                                                    "type": "not_operator",
                                                                    "label": "not node_credentials",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "node_credentials",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": "raise ValueError(\n                    f\"Node #{new_node.id} updated with non-existent \"\n                    f\"credentials #{node_credentials}\"\n                )",
                                                                    "children": [
                                                                        {
                                                                            "type": "raise_statement",
                                                                            "label": "raise ValueError(\n                    f\"Node #{new_node.id} updated with non-existent \"\n                    f\"credentials #{node_credentials}\"\n                )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "ValueError(\n                    f\"Node #{new_node.id} updated with non-existent \"\n                    f\"credentials #{node_credentials}\"\n                )",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "ValueError",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(\n                    f\"Node #{new_node.id} updated with non-existent \"\n                    f\"credentials #{node_credentials}\"\n                )",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "concatenated_string",
                                                                                                    "label": "f\"Node #{new_node.id} updated with non-existent \"\n                    f\"credentials #{node_credentials}\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "f\"Node #{new_node.id} updated with non-existent \"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "f\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "Node #",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "interpolation",
                                                                                                                    "label": "{new_node.id}",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "attribute",
                                                                                                                            "label": "new_node.id",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "new_node",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "id",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": " updated with non-existent ",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "f\"credentials #{node_credentials}\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "f\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "credentials #",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "interpolation",
                                                                                                                    "label": "{node_credentials}",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "node_credentials",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "updated_node = await on_node_activate(\n            graph.user_id, new_node, credentials=node_credentials\n        )",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "updated_node = await on_node_activate(\n            graph.user_id, new_node, credentials=node_credentials\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "updated_node",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "await",
                                                            "label": "await on_node_activate(\n            graph.user_id, new_node, credentials=node_credentials\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "on_node_activate(\n            graph.user_id, new_node, credentials=node_credentials\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "on_node_activate",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(\n            graph.user_id, new_node, credentials=node_credentials\n        )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "graph.user_id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "graph",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "new_node",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "credentials=node_credentials",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "credentials",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "node_credentials",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "updated_nodes.append(updated_node)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "updated_nodes.append(updated_node)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "updated_nodes.append",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "updated_nodes",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "append",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(updated_node)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "updated_node",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "graph.nodes = updated_nodes",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "graph.nodes = updated_nodes",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "graph.nodes",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "graph",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "nodes",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "updated_nodes",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return graph",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "graph",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def on_graph_deactivate(\n    graph: \"GraphModel\", get_credentials: Callable[[str], \"Credentials | None\"]\n):\n    \"\"\"\n    Hook to be called when a graph is deactivated/deleted.\n\n    ⚠️ Assuming node entities are not re-used between graph versions, ⚠️\n    this hook calls `on_node_deactivate` on all nodes in `graph`.\n\n    Params:\n        get_credentials: `credentials_id` -> Credentials\n    \"\"\"\n    updated_nodes = []\n    for node in graph.nodes:\n        node_credentials = None\n        if creds_meta := node.input_default.get(CREDENTIALS_FIELD_NAME):\n            node_credentials = get_credentials(creds_meta[\"id\"])\n            if not node_credentials:\n                logger.error(\n                    f\"Node #{node.id} referenced non-existent \"\n                    f\"credentials #{creds_meta['id']}\"\n                )\n\n        updated_node = await on_node_deactivate(node, credentials=node_credentials)\n        updated_nodes.append(updated_node)\n\n    graph.nodes = updated_nodes\n    return graph",
            "children": [
                {
                    "type": "identifier",
                    "label": "on_graph_deactivate",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(\n    graph: \"GraphModel\", get_credentials: Callable[[str], \"Credentials | None\"]\n)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "graph: \"GraphModel\"",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "graph",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "\"GraphModel\"",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"GraphModel\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "GraphModel",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "get_credentials: Callable[[str], \"Credentials | None\"]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "get_credentials",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "Callable[[str], \"Credentials | None\"]",
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "Callable[[str], \"Credentials | None\"]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "Callable",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[[str], \"Credentials | None\"]",
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "[str]",
                                                            "children": [
                                                                {
                                                                    "type": "list",
                                                                    "label": "[str]",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "\"Credentials | None\"",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"Credentials | None\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "Credentials | None",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    Hook to be called when a graph is deactivated/deleted.\n\n    ⚠️ Assuming node entities are not re-used between graph versions, ⚠️\n    this hook calls `on_node_deactivate` on all nodes in `graph`.\n\n    Params:\n        get_credentials: `credentials_id` -> Credentials\n    \"\"\"\n    updated_nodes = []\n    for node in graph.nodes:\n        node_credentials = None\n        if creds_meta := node.input_default.get(CREDENTIALS_FIELD_NAME):\n            node_credentials = get_credentials(creds_meta[\"id\"])\n            if not node_credentials:\n                logger.error(\n                    f\"Node #{node.id} referenced non-existent \"\n                    f\"credentials #{creds_meta['id']}\"\n                )\n\n        updated_node = await on_node_deactivate(node, credentials=node_credentials)\n        updated_nodes.append(updated_node)\n\n    graph.nodes = updated_nodes\n    return graph",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    Hook to be called when a graph is deactivated/deleted.\n\n    ⚠️ Assuming node entities are not re-used between graph versions, ⚠️\n    this hook calls `on_node_deactivate` on all nodes in `graph`.\n\n    Params:\n        get_credentials: `credentials_id` -> Credentials\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    Hook to be called when a graph is deactivated/deleted.\n\n    ⚠️ Assuming node entities are not re-used between graph versions, ⚠️\n    this hook calls `on_node_deactivate` on all nodes in `graph`.\n\n    Params:\n        get_credentials: `credentials_id` -> Credentials\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    Hook to be called when a graph is deactivated/deleted.\n\n    ⚠️ Assuming node entities are not re-used between graph versions, ⚠️\n    this hook calls `on_node_deactivate` on all nodes in `graph`.\n\n    Params:\n        get_credentials: `credentials_id` -> Credentials\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "updated_nodes = []",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "updated_nodes = []",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "updated_nodes",
                                            "children": []
                                        },
                                        {
                                            "type": "list",
                                            "label": "[]",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "for_statement",
                            "label": "for node in graph.nodes:\n        node_credentials = None\n        if creds_meta := node.input_default.get(CREDENTIALS_FIELD_NAME):\n            node_credentials = get_credentials(creds_meta[\"id\"])\n            if not node_credentials:\n                logger.error(\n                    f\"Node #{node.id} referenced non-existent \"\n                    f\"credentials #{creds_meta['id']}\"\n                )\n\n        updated_node = await on_node_deactivate(node, credentials=node_credentials)\n        updated_nodes.append(updated_node)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "node",
                                    "children": []
                                },
                                {
                                    "type": "attribute",
                                    "label": "graph.nodes",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graph",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "nodes",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "node_credentials = None\n        if creds_meta := node.input_default.get(CREDENTIALS_FIELD_NAME):\n            node_credentials = get_credentials(creds_meta[\"id\"])\n            if not node_credentials:\n                logger.error(\n                    f\"Node #{node.id} referenced non-existent \"\n                    f\"credentials #{creds_meta['id']}\"\n                )\n\n        updated_node = await on_node_deactivate(node, credentials=node_credentials)\n        updated_nodes.append(updated_node)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "node_credentials = None",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "node_credentials = None",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "node_credentials",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "none",
                                                            "label": "None",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if creds_meta := node.input_default.get(CREDENTIALS_FIELD_NAME):\n            node_credentials = get_credentials(creds_meta[\"id\"])\n            if not node_credentials:\n                logger.error(\n                    f\"Node #{node.id} referenced non-existent \"\n                    f\"credentials #{creds_meta['id']}\"\n                )",
                                            "children": [
                                                {
                                                    "type": "named_expression",
                                                    "label": "creds_meta := node.input_default.get(CREDENTIALS_FIELD_NAME)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "creds_meta",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "node.input_default.get(CREDENTIALS_FIELD_NAME)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "node.input_default.get",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "node.input_default",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "node",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "input_default",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "get",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(CREDENTIALS_FIELD_NAME)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "CREDENTIALS_FIELD_NAME",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "node_credentials = get_credentials(creds_meta[\"id\"])\n            if not node_credentials:\n                logger.error(\n                    f\"Node #{node.id} referenced non-existent \"\n                    f\"credentials #{creds_meta['id']}\"\n                )",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "node_credentials = get_credentials(creds_meta[\"id\"])",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "node_credentials = get_credentials(creds_meta[\"id\"])",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "node_credentials",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "label": "get_credentials(creds_meta[\"id\"])",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "get_credentials",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(creds_meta[\"id\"])",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "subscript",
                                                                                            "label": "creds_meta[\"id\"]",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "creds_meta",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"id\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "id",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "if_statement",
                                                            "label": "if not node_credentials:\n                logger.error(\n                    f\"Node #{node.id} referenced non-existent \"\n                    f\"credentials #{creds_meta['id']}\"\n                )",
                                                            "children": [
                                                                {
                                                                    "type": "not_operator",
                                                                    "label": "not node_credentials",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "node_credentials",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": "logger.error(\n                    f\"Node #{node.id} referenced non-existent \"\n                    f\"credentials #{creds_meta['id']}\"\n                )",
                                                                    "children": [
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "label": "logger.error(\n                    f\"Node #{node.id} referenced non-existent \"\n                    f\"credentials #{creds_meta['id']}\"\n                )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "logger.error(\n                    f\"Node #{node.id} referenced non-existent \"\n                    f\"credentials #{creds_meta['id']}\"\n                )",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "logger.error",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "logger",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "error",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(\n                    f\"Node #{node.id} referenced non-existent \"\n                    f\"credentials #{creds_meta['id']}\"\n                )",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "concatenated_string",
                                                                                                    "label": "f\"Node #{node.id} referenced non-existent \"\n                    f\"credentials #{creds_meta['id']}\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "f\"Node #{node.id} referenced non-existent \"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "f\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "Node #",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "interpolation",
                                                                                                                    "label": "{node.id}",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "attribute",
                                                                                                                            "label": "node.id",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "node",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "id",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": " referenced non-existent ",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "f\"credentials #{creds_meta['id']}\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "f\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "credentials #",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "interpolation",
                                                                                                                    "label": "{creds_meta['id']}",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "subscript",
                                                                                                                            "label": "creds_meta['id']",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "creds_meta",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "string",
                                                                                                                                    "label": "'id'",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "string_start",
                                                                                                                                            "label": "'",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "string_content",
                                                                                                                                            "label": "id",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "string_end",
                                                                                                                                            "label": "'",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "updated_node = await on_node_deactivate(node, credentials=node_credentials)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "updated_node = await on_node_deactivate(node, credentials=node_credentials)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "updated_node",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "await",
                                                            "label": "await on_node_deactivate(node, credentials=node_credentials)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "on_node_deactivate(node, credentials=node_credentials)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "on_node_deactivate",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(node, credentials=node_credentials)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "node",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "credentials=node_credentials",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "credentials",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "node_credentials",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "updated_nodes.append(updated_node)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "updated_nodes.append(updated_node)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "updated_nodes.append",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "updated_nodes",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "append",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(updated_node)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "updated_node",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "graph.nodes = updated_nodes",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "graph.nodes = updated_nodes",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "graph.nodes",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "graph",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "nodes",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "updated_nodes",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return graph",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "graph",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def on_node_activate(\n    user_id: str,\n    node: \"NodeModel\",\n    *,\n    credentials: Optional[\"Credentials\"] = None,\n) -> \"NodeModel\":\n    \"\"\"Hook to be called when the node is activated/created\"\"\"\n\n    block = get_block(node.block_id)\n    if not block:\n        raise ValueError(\n            f\"Node #{node.id} is instance of unknown block #{node.block_id}\"\n        )\n\n    if not block.webhook_config:\n        return node\n\n    provider = block.webhook_config.provider\n    if provider not in WEBHOOK_MANAGERS_BY_NAME:\n        raise ValueError(\n            f\"Block #{block.id} has webhook_config for provider {provider} \"\n            \"which does not support webhooks\"\n        )\n\n    logger.debug(\n        f\"Activating webhook node #{node.id} with config {block.webhook_config}\"\n    )\n\n    webhooks_manager = WEBHOOK_MANAGERS_BY_NAME[provider]()\n\n    if auto_setup_webhook := isinstance(block.webhook_config, BlockWebhookConfig):\n        try:\n            resource = block.webhook_config.resource_format.format(**node.input_default)\n        except KeyError:\n            resource = None\n        logger.debug(\n            f\"Constructed resource string {resource} from input {node.input_default}\"\n        )\n    else:\n        resource = \"\"  # not relevant for manual webhooks\n\n    needs_credentials = CREDENTIALS_FIELD_NAME in block.input_schema.model_fields\n    credentials_meta = (\n        node.input_default.get(CREDENTIALS_FIELD_NAME) if needs_credentials else None\n    )\n    event_filter_input_name = block.webhook_config.event_filter_input\n    has_everything_for_webhook = (\n        resource is not None\n        and (credentials_meta or not needs_credentials)\n        and (\n            not event_filter_input_name\n            or (\n                event_filter_input_name in node.input_default\n                and any(\n                    is_on\n                    for is_on in node.input_default[event_filter_input_name].values()\n                )\n            )\n        )\n    )\n\n    if has_everything_for_webhook and resource is not None:\n        logger.debug(f\"Node #{node} has everything for a webhook!\")\n        if credentials_meta and not credentials:\n            raise ValueError(\n                f\"Cannot set up webhook for node #{node.id}: \"\n                f\"credentials #{credentials_meta['id']} not available\"\n            )\n\n        if event_filter_input_name:\n            # Shape of the event filter is enforced in Block.__init__\n            event_filter = cast(dict, node.input_default[event_filter_input_name])\n            events = [\n                block.webhook_config.event_format.format(event=event)\n                for event, enabled in event_filter.items()\n                if enabled is True\n            ]\n            logger.debug(f\"Webhook events to subscribe to: {', '.join(events)}\")\n        else:\n            events = []\n\n        # Find/make and attach a suitable webhook to the node\n        if auto_setup_webhook:\n            assert credentials is not None\n            new_webhook = await webhooks_manager.get_suitable_auto_webhook(\n                user_id,\n                credentials,\n                block.webhook_config.webhook_type,\n                resource,\n                events,\n            )\n        else:\n            # Manual webhook -> no credentials -> don't register but do create\n            new_webhook = await webhooks_manager.get_manual_webhook(\n                user_id,\n                node.graph_id,\n                block.webhook_config.webhook_type,\n                events,\n            )\n        logger.debug(f\"Acquired webhook: {new_webhook}\")\n        return await set_node_webhook(node.id, new_webhook.id)\n    else:\n        logger.debug(f\"Node #{node.id} does not have everything for a webhook\")\n\n    return node",
            "children": [
                {
                    "type": "identifier",
                    "label": "on_node_activate",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(\n    user_id: str,\n    node: \"NodeModel\",\n    *,\n    credentials: Optional[\"Credentials\"] = None,\n)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "user_id: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "user_id",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "node: \"NodeModel\"",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "node",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "\"NodeModel\"",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"NodeModel\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "NodeModel",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "keyword_separator",
                            "label": "*",
                            "children": []
                        },
                        {
                            "type": "typed_default_parameter",
                            "label": "credentials: Optional[\"Credentials\"] = None",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "credentials",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "Optional[\"Credentials\"]",
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "Optional[\"Credentials\"]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "Optional",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[\"Credentials\"]",
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "\"Credentials\"",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"Credentials\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "Credentials",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "none",
                                    "label": "None",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "\"NodeModel\"",
                    "children": [
                        {
                            "type": "string",
                            "label": "\"NodeModel\"",
                            "children": [
                                {
                                    "type": "string_start",
                                    "label": "\"",
                                    "children": []
                                },
                                {
                                    "type": "string_content",
                                    "label": "NodeModel",
                                    "children": []
                                },
                                {
                                    "type": "string_end",
                                    "label": "\"",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"Hook to be called when the node is activated/created\"\"\"\n\n    block = get_block(node.block_id)\n    if not block:\n        raise ValueError(\n            f\"Node #{node.id} is instance of unknown block #{node.block_id}\"\n        )\n\n    if not block.webhook_config:\n        return node\n\n    provider = block.webhook_config.provider\n    if provider not in WEBHOOK_MANAGERS_BY_NAME:\n        raise ValueError(\n            f\"Block #{block.id} has webhook_config for provider {provider} \"\n            \"which does not support webhooks\"\n        )\n\n    logger.debug(\n        f\"Activating webhook node #{node.id} with config {block.webhook_config}\"\n    )\n\n    webhooks_manager = WEBHOOK_MANAGERS_BY_NAME[provider]()\n\n    if auto_setup_webhook := isinstance(block.webhook_config, BlockWebhookConfig):\n        try:\n            resource = block.webhook_config.resource_format.format(**node.input_default)\n        except KeyError:\n            resource = None\n        logger.debug(\n            f\"Constructed resource string {resource} from input {node.input_default}\"\n        )\n    else:\n        resource = \"\"  # not relevant for manual webhooks\n\n    needs_credentials = CREDENTIALS_FIELD_NAME in block.input_schema.model_fields\n    credentials_meta = (\n        node.input_default.get(CREDENTIALS_FIELD_NAME) if needs_credentials else None\n    )\n    event_filter_input_name = block.webhook_config.event_filter_input\n    has_everything_for_webhook = (\n        resource is not None\n        and (credentials_meta or not needs_credentials)\n        and (\n            not event_filter_input_name\n            or (\n                event_filter_input_name in node.input_default\n                and any(\n                    is_on\n                    for is_on in node.input_default[event_filter_input_name].values()\n                )\n            )\n        )\n    )\n\n    if has_everything_for_webhook and resource is not None:\n        logger.debug(f\"Node #{node} has everything for a webhook!\")\n        if credentials_meta and not credentials:\n            raise ValueError(\n                f\"Cannot set up webhook for node #{node.id}: \"\n                f\"credentials #{credentials_meta['id']} not available\"\n            )\n\n        if event_filter_input_name:\n            # Shape of the event filter is enforced in Block.__init__\n            event_filter = cast(dict, node.input_default[event_filter_input_name])\n            events = [\n                block.webhook_config.event_format.format(event=event)\n                for event, enabled in event_filter.items()\n                if enabled is True\n            ]\n            logger.debug(f\"Webhook events to subscribe to: {', '.join(events)}\")\n        else:\n            events = []\n\n        # Find/make and attach a suitable webhook to the node\n        if auto_setup_webhook:\n            assert credentials is not None\n            new_webhook = await webhooks_manager.get_suitable_auto_webhook(\n                user_id,\n                credentials,\n                block.webhook_config.webhook_type,\n                resource,\n                events,\n            )\n        else:\n            # Manual webhook -> no credentials -> don't register but do create\n            new_webhook = await webhooks_manager.get_manual_webhook(\n                user_id,\n                node.graph_id,\n                block.webhook_config.webhook_type,\n                events,\n            )\n        logger.debug(f\"Acquired webhook: {new_webhook}\")\n        return await set_node_webhook(node.id, new_webhook.id)\n    else:\n        logger.debug(f\"Node #{node.id} does not have everything for a webhook\")\n\n    return node",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"Hook to be called when the node is activated/created\"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"Hook to be called when the node is activated/created\"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "Hook to be called when the node is activated/created",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "block = get_block(node.block_id)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "block = get_block(node.block_id)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "block",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "get_block(node.block_id)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "get_block",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(node.block_id)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "node.block_id",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "node",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "block_id",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if not block:\n        raise ValueError(\n            f\"Node #{node.id} is instance of unknown block #{node.block_id}\"\n        )",
                            "children": [
                                {
                                    "type": "not_operator",
                                    "label": "not block",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "block",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "raise ValueError(\n            f\"Node #{node.id} is instance of unknown block #{node.block_id}\"\n        )",
                                    "children": [
                                        {
                                            "type": "raise_statement",
                                            "label": "raise ValueError(\n            f\"Node #{node.id} is instance of unknown block #{node.block_id}\"\n        )",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "ValueError(\n            f\"Node #{node.id} is instance of unknown block #{node.block_id}\"\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "ValueError",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n            f\"Node #{node.id} is instance of unknown block #{node.block_id}\"\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "f\"Node #{node.id} is instance of unknown block #{node.block_id}\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "f\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "Node #",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{node.id}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "node.id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "node",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": " is instance of unknown block #",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{node.block_id}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "node.block_id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "node",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "block_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if not block.webhook_config:\n        return node",
                            "children": [
                                {
                                    "type": "not_operator",
                                    "label": "not block.webhook_config",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "block.webhook_config",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "block",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "webhook_config",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "return node",
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "label": "return node",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "node",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "provider = block.webhook_config.provider",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "provider = block.webhook_config.provider",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "provider",
                                            "children": []
                                        },
                                        {
                                            "type": "attribute",
                                            "label": "block.webhook_config.provider",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "block.webhook_config",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "block",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "webhook_config",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "provider",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if provider not in WEBHOOK_MANAGERS_BY_NAME:\n        raise ValueError(\n            f\"Block #{block.id} has webhook_config for provider {provider} \"\n            \"which does not support webhooks\"\n        )",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "label": "provider not in WEBHOOK_MANAGERS_BY_NAME",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "provider",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "WEBHOOK_MANAGERS_BY_NAME",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "raise ValueError(\n            f\"Block #{block.id} has webhook_config for provider {provider} \"\n            \"which does not support webhooks\"\n        )",
                                    "children": [
                                        {
                                            "type": "raise_statement",
                                            "label": "raise ValueError(\n            f\"Block #{block.id} has webhook_config for provider {provider} \"\n            \"which does not support webhooks\"\n        )",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "ValueError(\n            f\"Block #{block.id} has webhook_config for provider {provider} \"\n            \"which does not support webhooks\"\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "ValueError",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n            f\"Block #{block.id} has webhook_config for provider {provider} \"\n            \"which does not support webhooks\"\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "concatenated_string",
                                                                    "label": "f\"Block #{block.id} has webhook_config for provider {provider} \"\n            \"which does not support webhooks\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "f\"Block #{block.id} has webhook_config for provider {provider} \"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "f\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "Block #",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{block.id}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "block.id",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "block",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": " has webhook_config for provider ",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{provider}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "provider",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": " ",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"which does not support webhooks\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "which does not support webhooks",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "logger.debug(\n        f\"Activating webhook node #{node.id} with config {block.webhook_config}\"\n    )",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "logger.debug(\n        f\"Activating webhook node #{node.id} with config {block.webhook_config}\"\n    )",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "logger.debug",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "logger",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "debug",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(\n        f\"Activating webhook node #{node.id} with config {block.webhook_config}\"\n    )",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "f\"Activating webhook node #{node.id} with config {block.webhook_config}\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "f\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Activating webhook node #",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "interpolation",
                                                            "label": "{node.id}",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "node.id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "node",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": " with config ",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "interpolation",
                                                            "label": "{block.webhook_config}",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "block.webhook_config",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "block",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "webhook_config",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "webhooks_manager = WEBHOOK_MANAGERS_BY_NAME[provider]()",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "webhooks_manager = WEBHOOK_MANAGERS_BY_NAME[provider]()",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "webhooks_manager",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "WEBHOOK_MANAGERS_BY_NAME[provider]()",
                                            "children": [
                                                {
                                                    "type": "subscript",
                                                    "label": "WEBHOOK_MANAGERS_BY_NAME[provider]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "WEBHOOK_MANAGERS_BY_NAME",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "provider",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "()",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if auto_setup_webhook := isinstance(block.webhook_config, BlockWebhookConfig):\n        try:\n            resource = block.webhook_config.resource_format.format(**node.input_default)\n        except KeyError:\n            resource = None\n        logger.debug(\n            f\"Constructed resource string {resource} from input {node.input_default}\"\n        )\n    else:\n        resource = \"\"  # not relevant for manual webhooks",
                            "children": [
                                {
                                    "type": "named_expression",
                                    "label": "auto_setup_webhook := isinstance(block.webhook_config, BlockWebhookConfig)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "auto_setup_webhook",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "isinstance(block.webhook_config, BlockWebhookConfig)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "isinstance",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(block.webhook_config, BlockWebhookConfig)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "block.webhook_config",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "block",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "webhook_config",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "BlockWebhookConfig",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "try:\n            resource = block.webhook_config.resource_format.format(**node.input_default)\n        except KeyError:\n            resource = None\n        logger.debug(\n            f\"Constructed resource string {resource} from input {node.input_default}\"\n        )",
                                    "children": [
                                        {
                                            "type": "try_statement",
                                            "label": "try:\n            resource = block.webhook_config.resource_format.format(**node.input_default)\n        except KeyError:\n            resource = None",
                                            "children": [
                                                {
                                                    "type": "block",
                                                    "label": "resource = block.webhook_config.resource_format.format(**node.input_default)",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "resource = block.webhook_config.resource_format.format(**node.input_default)",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "resource = block.webhook_config.resource_format.format(**node.input_default)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "resource",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "label": "block.webhook_config.resource_format.format(**node.input_default)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "block.webhook_config.resource_format.format",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "block.webhook_config.resource_format",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "block.webhook_config",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "block",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "webhook_config",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "resource_format",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "format",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(**node.input_default)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "dictionary_splat",
                                                                                            "label": "**node.input_default",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "node.input_default",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "node",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "input_default",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "except_clause",
                                                    "label": "except KeyError:\n            resource = None",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "KeyError",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "resource = None",
                                                            "children": [
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "resource = None",
                                                                    "children": [
                                                                        {
                                                                            "type": "assignment",
                                                                            "label": "resource = None",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "resource",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "none",
                                                                                    "label": "None",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "logger.debug(\n            f\"Constructed resource string {resource} from input {node.input_default}\"\n        )",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "logger.debug(\n            f\"Constructed resource string {resource} from input {node.input_default}\"\n        )",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "logger.debug",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "logger",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "debug",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n            f\"Constructed resource string {resource} from input {node.input_default}\"\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "f\"Constructed resource string {resource} from input {node.input_default}\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "f\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "Constructed resource string ",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{resource}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "resource",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": " from input ",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{node.input_default}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "node.input_default",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "node",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "input_default",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "else_clause",
                                    "label": "else:\n        resource = \"\"  # not relevant for manual webhooks",
                                    "children": [
                                        {
                                            "type": "block",
                                            "label": "resource = \"\"  # not relevant for manual webhooks",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "resource = \"\"",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "resource = \"\"",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "resource",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "comment",
                                                    "label": "# not relevant for manual webhooks",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "needs_credentials = CREDENTIALS_FIELD_NAME in block.input_schema.model_fields",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "needs_credentials = CREDENTIALS_FIELD_NAME in block.input_schema.model_fields",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "needs_credentials",
                                            "children": []
                                        },
                                        {
                                            "type": "comparison_operator",
                                            "label": "CREDENTIALS_FIELD_NAME in block.input_schema.model_fields",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "CREDENTIALS_FIELD_NAME",
                                                    "children": []
                                                },
                                                {
                                                    "type": "attribute",
                                                    "label": "block.input_schema.model_fields",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "block.input_schema",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "block",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "input_schema",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "model_fields",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "credentials_meta = (\n        node.input_default.get(CREDENTIALS_FIELD_NAME) if needs_credentials else None\n    )",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "credentials_meta = (\n        node.input_default.get(CREDENTIALS_FIELD_NAME) if needs_credentials else None\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "credentials_meta",
                                            "children": []
                                        },
                                        {
                                            "type": "parenthesized_expression",
                                            "label": "(\n        node.input_default.get(CREDENTIALS_FIELD_NAME) if needs_credentials else None\n    )",
                                            "children": [
                                                {
                                                    "type": "conditional_expression",
                                                    "label": "node.input_default.get(CREDENTIALS_FIELD_NAME) if needs_credentials else None",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "node.input_default.get(CREDENTIALS_FIELD_NAME)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "node.input_default.get",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "node.input_default",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "node",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "input_default",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "get",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(CREDENTIALS_FIELD_NAME)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "CREDENTIALS_FIELD_NAME",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "needs_credentials",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "none",
                                                            "label": "None",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "event_filter_input_name = block.webhook_config.event_filter_input",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "event_filter_input_name = block.webhook_config.event_filter_input",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "event_filter_input_name",
                                            "children": []
                                        },
                                        {
                                            "type": "attribute",
                                            "label": "block.webhook_config.event_filter_input",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "block.webhook_config",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "block",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "webhook_config",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "event_filter_input",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "has_everything_for_webhook = (\n        resource is not None\n        and (credentials_meta or not needs_credentials)\n        and (\n            not event_filter_input_name\n            or (\n                event_filter_input_name in node.input_default\n                and any(\n                    is_on\n                    for is_on in node.input_default[event_filter_input_name].values()\n                )\n            )\n        )\n    )",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "has_everything_for_webhook = (\n        resource is not None\n        and (credentials_meta or not needs_credentials)\n        and (\n            not event_filter_input_name\n            or (\n                event_filter_input_name in node.input_default\n                and any(\n                    is_on\n                    for is_on in node.input_default[event_filter_input_name].values()\n                )\n            )\n        )\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "has_everything_for_webhook",
                                            "children": []
                                        },
                                        {
                                            "type": "parenthesized_expression",
                                            "label": "(\n        resource is not None\n        and (credentials_meta or not needs_credentials)\n        and (\n            not event_filter_input_name\n            or (\n                event_filter_input_name in node.input_default\n                and any(\n                    is_on\n                    for is_on in node.input_default[event_filter_input_name].values()\n                )\n            )\n        )\n    )",
                                            "children": [
                                                {
                                                    "type": "boolean_operator",
                                                    "label": "resource is not None\n        and (credentials_meta or not needs_credentials)\n        and (\n            not event_filter_input_name\n            or (\n                event_filter_input_name in node.input_default\n                and any(\n                    is_on\n                    for is_on in node.input_default[event_filter_input_name].values()\n                )\n            )\n        )",
                                                    "children": [
                                                        {
                                                            "type": "boolean_operator",
                                                            "label": "resource is not None\n        and (credentials_meta or not needs_credentials)",
                                                            "children": [
                                                                {
                                                                    "type": "comparison_operator",
                                                                    "label": "resource is not None",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "resource",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "none",
                                                                            "label": "None",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "parenthesized_expression",
                                                                    "label": "(credentials_meta or not needs_credentials)",
                                                                    "children": [
                                                                        {
                                                                            "type": "boolean_operator",
                                                                            "label": "credentials_meta or not needs_credentials",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "credentials_meta",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "not_operator",
                                                                                    "label": "not needs_credentials",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "needs_credentials",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "parenthesized_expression",
                                                            "label": "(\n            not event_filter_input_name\n            or (\n                event_filter_input_name in node.input_default\n                and any(\n                    is_on\n                    for is_on in node.input_default[event_filter_input_name].values()\n                )\n            )\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "boolean_operator",
                                                                    "label": "not event_filter_input_name\n            or (\n                event_filter_input_name in node.input_default\n                and any(\n                    is_on\n                    for is_on in node.input_default[event_filter_input_name].values()\n                )\n            )",
                                                                    "children": [
                                                                        {
                                                                            "type": "not_operator",
                                                                            "label": "not event_filter_input_name",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "event_filter_input_name",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "parenthesized_expression",
                                                                            "label": "(\n                event_filter_input_name in node.input_default\n                and any(\n                    is_on\n                    for is_on in node.input_default[event_filter_input_name].values()\n                )\n            )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "boolean_operator",
                                                                                    "label": "event_filter_input_name in node.input_default\n                and any(\n                    is_on\n                    for is_on in node.input_default[event_filter_input_name].values()\n                )",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "comparison_operator",
                                                                                            "label": "event_filter_input_name in node.input_default",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "event_filter_input_name",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "node.input_default",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "node",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "input_default",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "any(\n                    is_on\n                    for is_on in node.input_default[event_filter_input_name].values()\n                )",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "any",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "generator_expression",
                                                                                                    "label": "(\n                    is_on\n                    for is_on in node.input_default[event_filter_input_name].values()\n                )",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "is_on",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "for_in_clause",
                                                                                                            "label": "for is_on in node.input_default[event_filter_input_name].values()",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "is_on",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "call",
                                                                                                                    "label": "node.input_default[event_filter_input_name].values()",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "attribute",
                                                                                                                            "label": "node.input_default[event_filter_input_name].values",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "subscript",
                                                                                                                                    "label": "node.input_default[event_filter_input_name]",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "attribute",
                                                                                                                                            "label": "node.input_default",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "node",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "input_default",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "event_filter_input_name",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "values",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "argument_list",
                                                                                                                            "label": "()",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if has_everything_for_webhook and resource is not None:\n        logger.debug(f\"Node #{node} has everything for a webhook!\")\n        if credentials_meta and not credentials:\n            raise ValueError(\n                f\"Cannot set up webhook for node #{node.id}: \"\n                f\"credentials #{credentials_meta['id']} not available\"\n            )\n\n        if event_filter_input_name:\n            # Shape of the event filter is enforced in Block.__init__\n            event_filter = cast(dict, node.input_default[event_filter_input_name])\n            events = [\n                block.webhook_config.event_format.format(event=event)\n                for event, enabled in event_filter.items()\n                if enabled is True\n            ]\n            logger.debug(f\"Webhook events to subscribe to: {', '.join(events)}\")\n        else:\n            events = []\n\n        # Find/make and attach a suitable webhook to the node\n        if auto_setup_webhook:\n            assert credentials is not None\n            new_webhook = await webhooks_manager.get_suitable_auto_webhook(\n                user_id,\n                credentials,\n                block.webhook_config.webhook_type,\n                resource,\n                events,\n            )\n        else:\n            # Manual webhook -> no credentials -> don't register but do create\n            new_webhook = await webhooks_manager.get_manual_webhook(\n                user_id,\n                node.graph_id,\n                block.webhook_config.webhook_type,\n                events,\n            )\n        logger.debug(f\"Acquired webhook: {new_webhook}\")\n        return await set_node_webhook(node.id, new_webhook.id)\n    else:\n        logger.debug(f\"Node #{node.id} does not have everything for a webhook\")",
                            "children": [
                                {
                                    "type": "boolean_operator",
                                    "label": "has_everything_for_webhook and resource is not None",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "has_everything_for_webhook",
                                            "children": []
                                        },
                                        {
                                            "type": "comparison_operator",
                                            "label": "resource is not None",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "resource",
                                                    "children": []
                                                },
                                                {
                                                    "type": "none",
                                                    "label": "None",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "logger.debug(f\"Node #{node} has everything for a webhook!\")\n        if credentials_meta and not credentials:\n            raise ValueError(\n                f\"Cannot set up webhook for node #{node.id}: \"\n                f\"credentials #{credentials_meta['id']} not available\"\n            )\n\n        if event_filter_input_name:\n            # Shape of the event filter is enforced in Block.__init__\n            event_filter = cast(dict, node.input_default[event_filter_input_name])\n            events = [\n                block.webhook_config.event_format.format(event=event)\n                for event, enabled in event_filter.items()\n                if enabled is True\n            ]\n            logger.debug(f\"Webhook events to subscribe to: {', '.join(events)}\")\n        else:\n            events = []\n\n        # Find/make and attach a suitable webhook to the node\n        if auto_setup_webhook:\n            assert credentials is not None\n            new_webhook = await webhooks_manager.get_suitable_auto_webhook(\n                user_id,\n                credentials,\n                block.webhook_config.webhook_type,\n                resource,\n                events,\n            )\n        else:\n            # Manual webhook -> no credentials -> don't register but do create\n            new_webhook = await webhooks_manager.get_manual_webhook(\n                user_id,\n                node.graph_id,\n                block.webhook_config.webhook_type,\n                events,\n            )\n        logger.debug(f\"Acquired webhook: {new_webhook}\")\n        return await set_node_webhook(node.id, new_webhook.id)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "logger.debug(f\"Node #{node} has everything for a webhook!\")",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "logger.debug(f\"Node #{node} has everything for a webhook!\")",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "logger.debug",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "logger",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "debug",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(f\"Node #{node} has everything for a webhook!\")",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "f\"Node #{node} has everything for a webhook!\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "f\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "Node #",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{node}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "node",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": " has everything for a webhook!",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if credentials_meta and not credentials:\n            raise ValueError(\n                f\"Cannot set up webhook for node #{node.id}: \"\n                f\"credentials #{credentials_meta['id']} not available\"\n            )",
                                            "children": [
                                                {
                                                    "type": "boolean_operator",
                                                    "label": "credentials_meta and not credentials",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "credentials_meta",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "not_operator",
                                                            "label": "not credentials",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "credentials",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "raise ValueError(\n                f\"Cannot set up webhook for node #{node.id}: \"\n                f\"credentials #{credentials_meta['id']} not available\"\n            )",
                                                    "children": [
                                                        {
                                                            "type": "raise_statement",
                                                            "label": "raise ValueError(\n                f\"Cannot set up webhook for node #{node.id}: \"\n                f\"credentials #{credentials_meta['id']} not available\"\n            )",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "ValueError(\n                f\"Cannot set up webhook for node #{node.id}: \"\n                f\"credentials #{credentials_meta['id']} not available\"\n            )",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "ValueError",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(\n                f\"Cannot set up webhook for node #{node.id}: \"\n                f\"credentials #{credentials_meta['id']} not available\"\n            )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "concatenated_string",
                                                                                    "label": "f\"Cannot set up webhook for node #{node.id}: \"\n                f\"credentials #{credentials_meta['id']} not available\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "f\"Cannot set up webhook for node #{node.id}: \"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "f\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "Cannot set up webhook for node #",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{node.id}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "node.id",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "node",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "id",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": ": ",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "f\"credentials #{credentials_meta['id']} not available\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "f\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "credentials #",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{credentials_meta['id']}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "subscript",
                                                                                                            "label": "credentials_meta['id']",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "credentials_meta",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string",
                                                                                                                    "label": "'id'",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "string_start",
                                                                                                                            "label": "'",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": "id",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_end",
                                                                                                                            "label": "'",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": " not available",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if event_filter_input_name:\n            # Shape of the event filter is enforced in Block.__init__\n            event_filter = cast(dict, node.input_default[event_filter_input_name])\n            events = [\n                block.webhook_config.event_format.format(event=event)\n                for event, enabled in event_filter.items()\n                if enabled is True\n            ]\n            logger.debug(f\"Webhook events to subscribe to: {', '.join(events)}\")\n        else:\n            events = []",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "event_filter_input_name",
                                                    "children": []
                                                },
                                                {
                                                    "type": "comment",
                                                    "label": "# Shape of the event filter is enforced in Block.__init__",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "event_filter = cast(dict, node.input_default[event_filter_input_name])\n            events = [\n                block.webhook_config.event_format.format(event=event)\n                for event, enabled in event_filter.items()\n                if enabled is True\n            ]\n            logger.debug(f\"Webhook events to subscribe to: {', '.join(events)}\")",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "event_filter = cast(dict, node.input_default[event_filter_input_name])",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "event_filter = cast(dict, node.input_default[event_filter_input_name])",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "event_filter",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "label": "cast(dict, node.input_default[event_filter_input_name])",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "cast",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(dict, node.input_default[event_filter_input_name])",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "dict",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "subscript",
                                                                                            "label": "node.input_default[event_filter_input_name]",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "node.input_default",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "node",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "input_default",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "event_filter_input_name",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "events = [\n                block.webhook_config.event_format.format(event=event)\n                for event, enabled in event_filter.items()\n                if enabled is True\n            ]",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "events = [\n                block.webhook_config.event_format.format(event=event)\n                for event, enabled in event_filter.items()\n                if enabled is True\n            ]",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "events",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "list_comprehension",
                                                                            "label": "[\n                block.webhook_config.event_format.format(event=event)\n                for event, enabled in event_filter.items()\n                if enabled is True\n            ]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "block.webhook_config.event_format.format(event=event)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "block.webhook_config.event_format.format",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "block.webhook_config.event_format",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "block.webhook_config",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "block",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "webhook_config",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "event_format",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "format",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(event=event)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "keyword_argument",
                                                                                                    "label": "event=event",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "event",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "event",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "for_in_clause",
                                                                                    "label": "for event, enabled in event_filter.items()",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "pattern_list",
                                                                                            "label": "event, enabled",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "event",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "enabled",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "event_filter.items()",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "event_filter.items",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "event_filter",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "items",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "()",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "if_clause",
                                                                                    "label": "if enabled is True",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "comparison_operator",
                                                                                            "label": "enabled is True",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "enabled",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "true",
                                                                                                    "label": "True",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "logger.debug(f\"Webhook events to subscribe to: {', '.join(events)}\")",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "logger.debug(f\"Webhook events to subscribe to: {', '.join(events)}\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "logger.debug",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "logger",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "debug",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(f\"Webhook events to subscribe to: {', '.join(events)}\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "f\"Webhook events to subscribe to: {', '.join(events)}\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "f\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Webhook events to subscribe to: ",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "interpolation",
                                                                                            "label": "{', '.join(events)}",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "', '.join(events)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "', '.join",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string",
                                                                                                                    "label": "', '",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "string_start",
                                                                                                                            "label": "'",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": ", ",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_end",
                                                                                                                            "label": "'",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "join",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(events)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "events",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "else_clause",
                                                    "label": "else:\n            events = []",
                                                    "children": [
                                                        {
                                                            "type": "block",
                                                            "label": "events = []",
                                                            "children": [
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "events = []",
                                                                    "children": [
                                                                        {
                                                                            "type": "assignment",
                                                                            "label": "events = []",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "events",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "list",
                                                                                    "label": "[]",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "label": "# Find/make and attach a suitable webhook to the node",
                                            "children": []
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if auto_setup_webhook:\n            assert credentials is not None\n            new_webhook = await webhooks_manager.get_suitable_auto_webhook(\n                user_id,\n                credentials,\n                block.webhook_config.webhook_type,\n                resource,\n                events,\n            )\n        else:\n            # Manual webhook -> no credentials -> don't register but do create\n            new_webhook = await webhooks_manager.get_manual_webhook(\n                user_id,\n                node.graph_id,\n                block.webhook_config.webhook_type,\n                events,\n            )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "auto_setup_webhook",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "assert credentials is not None\n            new_webhook = await webhooks_manager.get_suitable_auto_webhook(\n                user_id,\n                credentials,\n                block.webhook_config.webhook_type,\n                resource,\n                events,\n            )",
                                                    "children": [
                                                        {
                                                            "type": "assert_statement",
                                                            "label": "assert credentials is not None",
                                                            "children": [
                                                                {
                                                                    "type": "comparison_operator",
                                                                    "label": "credentials is not None",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "credentials",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "none",
                                                                            "label": "None",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "new_webhook = await webhooks_manager.get_suitable_auto_webhook(\n                user_id,\n                credentials,\n                block.webhook_config.webhook_type,\n                resource,\n                events,\n            )",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "new_webhook = await webhooks_manager.get_suitable_auto_webhook(\n                user_id,\n                credentials,\n                block.webhook_config.webhook_type,\n                resource,\n                events,\n            )",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "new_webhook",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "await",
                                                                            "label": "await webhooks_manager.get_suitable_auto_webhook(\n                user_id,\n                credentials,\n                block.webhook_config.webhook_type,\n                resource,\n                events,\n            )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "webhooks_manager.get_suitable_auto_webhook(\n                user_id,\n                credentials,\n                block.webhook_config.webhook_type,\n                resource,\n                events,\n            )",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "webhooks_manager.get_suitable_auto_webhook",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "webhooks_manager",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "get_suitable_auto_webhook",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(\n                user_id,\n                credentials,\n                block.webhook_config.webhook_type,\n                resource,\n                events,\n            )",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "user_id",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "credentials",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "block.webhook_config.webhook_type",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "block.webhook_config",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "block",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "webhook_config",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "webhook_type",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "resource",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "events",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "else_clause",
                                                    "label": "else:\n            # Manual webhook -> no credentials -> don't register but do create\n            new_webhook = await webhooks_manager.get_manual_webhook(\n                user_id,\n                node.graph_id,\n                block.webhook_config.webhook_type,\n                events,\n            )",
                                                    "children": [
                                                        {
                                                            "type": "comment",
                                                            "label": "# Manual webhook -> no credentials -> don't register but do create",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "new_webhook = await webhooks_manager.get_manual_webhook(\n                user_id,\n                node.graph_id,\n                block.webhook_config.webhook_type,\n                events,\n            )",
                                                            "children": [
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "new_webhook = await webhooks_manager.get_manual_webhook(\n                user_id,\n                node.graph_id,\n                block.webhook_config.webhook_type,\n                events,\n            )",
                                                                    "children": [
                                                                        {
                                                                            "type": "assignment",
                                                                            "label": "new_webhook = await webhooks_manager.get_manual_webhook(\n                user_id,\n                node.graph_id,\n                block.webhook_config.webhook_type,\n                events,\n            )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "new_webhook",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "await",
                                                                                    "label": "await webhooks_manager.get_manual_webhook(\n                user_id,\n                node.graph_id,\n                block.webhook_config.webhook_type,\n                events,\n            )",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "webhooks_manager.get_manual_webhook(\n                user_id,\n                node.graph_id,\n                block.webhook_config.webhook_type,\n                events,\n            )",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "webhooks_manager.get_manual_webhook",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "webhooks_manager",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "get_manual_webhook",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(\n                user_id,\n                node.graph_id,\n                block.webhook_config.webhook_type,\n                events,\n            )",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "user_id",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "node.graph_id",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "node",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "graph_id",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "block.webhook_config.webhook_type",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "attribute",
                                                                                                                    "label": "block.webhook_config",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "block",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "webhook_config",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "webhook_type",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "events",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "logger.debug(f\"Acquired webhook: {new_webhook}\")",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "logger.debug(f\"Acquired webhook: {new_webhook}\")",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "logger.debug",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "logger",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "debug",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(f\"Acquired webhook: {new_webhook}\")",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "f\"Acquired webhook: {new_webhook}\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "f\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "Acquired webhook: ",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{new_webhook}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "new_webhook",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "label": "return await set_node_webhook(node.id, new_webhook.id)",
                                            "children": [
                                                {
                                                    "type": "await",
                                                    "label": "await set_node_webhook(node.id, new_webhook.id)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "set_node_webhook(node.id, new_webhook.id)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "set_node_webhook",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(node.id, new_webhook.id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "node.id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "node",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "new_webhook.id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "new_webhook",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "else_clause",
                                    "label": "else:\n        logger.debug(f\"Node #{node.id} does not have everything for a webhook\")",
                                    "children": [
                                        {
                                            "type": "block",
                                            "label": "logger.debug(f\"Node #{node.id} does not have everything for a webhook\")",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "logger.debug(f\"Node #{node.id} does not have everything for a webhook\")",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "logger.debug(f\"Node #{node.id} does not have everything for a webhook\")",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "logger.debug",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "logger",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "debug",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(f\"Node #{node.id} does not have everything for a webhook\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "f\"Node #{node.id} does not have everything for a webhook\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "f\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "Node #",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{node.id}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "node.id",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "node",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": " does not have everything for a webhook",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return node",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "node",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def on_node_deactivate(\n    node: \"NodeModel\",\n    *,\n    credentials: Optional[\"Credentials\"] = None,\n    webhooks_manager: Optional[\"BaseWebhooksManager\"] = None,\n) -> \"NodeModel\":\n    \"\"\"Hook to be called when node is deactivated/deleted\"\"\"\n\n    logger.debug(f\"Deactivating node #{node.id}\")\n    block = get_block(node.block_id)\n    if not block:\n        raise ValueError(\n            f\"Node #{node.id} is instance of unknown block #{node.block_id}\"\n        )\n\n    if not block.webhook_config:\n        return node\n\n    provider = block.webhook_config.provider\n    if provider not in WEBHOOK_MANAGERS_BY_NAME:\n        raise ValueError(\n            f\"Block #{block.id} has webhook_config for provider {provider} \"\n            \"which does not support webhooks\"\n        )\n\n    webhooks_manager = WEBHOOK_MANAGERS_BY_NAME[provider]()\n\n    if node.webhook_id:\n        logger.debug(f\"Node #{node.id} has webhook_id {node.webhook_id}\")\n        if not node.webhook:\n            logger.error(f\"Node #{node.id} has webhook_id but no webhook object\")\n            raise ValueError(\"node.webhook not included\")\n\n        # Detach webhook from node\n        logger.debug(f\"Detaching webhook from node #{node.id}\")\n        updated_node = await set_node_webhook(node.id, None)\n\n        # Prune and deregister the webhook if it is no longer used anywhere\n        webhook = node.webhook\n        logger.debug(\n            f\"Pruning{' and deregistering' if credentials else ''} \"\n            f\"webhook #{webhook.id}\"\n        )\n        await webhooks_manager.prune_webhook_if_dangling(webhook.id, credentials)\n        if (\n            CREDENTIALS_FIELD_NAME in block.input_schema.model_fields\n            and not credentials\n        ):\n            logger.warning(\n                f\"Cannot deregister webhook #{webhook.id}: credentials \"\n                f\"#{webhook.credentials_id} not available \"\n                f\"({webhook.provider.value} webhook ID: {webhook.provider_webhook_id})\"\n            )\n        return updated_node\n\n    logger.debug(f\"Node #{node.id} has no webhook_id, returning\")\n    return node",
            "children": [
                {
                    "type": "identifier",
                    "label": "on_node_deactivate",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(\n    node: \"NodeModel\",\n    *,\n    credentials: Optional[\"Credentials\"] = None,\n    webhooks_manager: Optional[\"BaseWebhooksManager\"] = None,\n)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "node: \"NodeModel\"",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "node",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "\"NodeModel\"",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"NodeModel\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "NodeModel",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "keyword_separator",
                            "label": "*",
                            "children": []
                        },
                        {
                            "type": "typed_default_parameter",
                            "label": "credentials: Optional[\"Credentials\"] = None",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "credentials",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "Optional[\"Credentials\"]",
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "Optional[\"Credentials\"]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "Optional",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[\"Credentials\"]",
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "\"Credentials\"",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"Credentials\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "Credentials",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "none",
                                    "label": "None",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "typed_default_parameter",
                            "label": "webhooks_manager: Optional[\"BaseWebhooksManager\"] = None",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "webhooks_manager",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "Optional[\"BaseWebhooksManager\"]",
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "Optional[\"BaseWebhooksManager\"]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "Optional",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[\"BaseWebhooksManager\"]",
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "\"BaseWebhooksManager\"",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"BaseWebhooksManager\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "BaseWebhooksManager",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "none",
                                    "label": "None",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "\"NodeModel\"",
                    "children": [
                        {
                            "type": "string",
                            "label": "\"NodeModel\"",
                            "children": [
                                {
                                    "type": "string_start",
                                    "label": "\"",
                                    "children": []
                                },
                                {
                                    "type": "string_content",
                                    "label": "NodeModel",
                                    "children": []
                                },
                                {
                                    "type": "string_end",
                                    "label": "\"",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"Hook to be called when node is deactivated/deleted\"\"\"\n\n    logger.debug(f\"Deactivating node #{node.id}\")\n    block = get_block(node.block_id)\n    if not block:\n        raise ValueError(\n            f\"Node #{node.id} is instance of unknown block #{node.block_id}\"\n        )\n\n    if not block.webhook_config:\n        return node\n\n    provider = block.webhook_config.provider\n    if provider not in WEBHOOK_MANAGERS_BY_NAME:\n        raise ValueError(\n            f\"Block #{block.id} has webhook_config for provider {provider} \"\n            \"which does not support webhooks\"\n        )\n\n    webhooks_manager = WEBHOOK_MANAGERS_BY_NAME[provider]()\n\n    if node.webhook_id:\n        logger.debug(f\"Node #{node.id} has webhook_id {node.webhook_id}\")\n        if not node.webhook:\n            logger.error(f\"Node #{node.id} has webhook_id but no webhook object\")\n            raise ValueError(\"node.webhook not included\")\n\n        # Detach webhook from node\n        logger.debug(f\"Detaching webhook from node #{node.id}\")\n        updated_node = await set_node_webhook(node.id, None)\n\n        # Prune and deregister the webhook if it is no longer used anywhere\n        webhook = node.webhook\n        logger.debug(\n            f\"Pruning{' and deregistering' if credentials else ''} \"\n            f\"webhook #{webhook.id}\"\n        )\n        await webhooks_manager.prune_webhook_if_dangling(webhook.id, credentials)\n        if (\n            CREDENTIALS_FIELD_NAME in block.input_schema.model_fields\n            and not credentials\n        ):\n            logger.warning(\n                f\"Cannot deregister webhook #{webhook.id}: credentials \"\n                f\"#{webhook.credentials_id} not available \"\n                f\"({webhook.provider.value} webhook ID: {webhook.provider_webhook_id})\"\n            )\n        return updated_node\n\n    logger.debug(f\"Node #{node.id} has no webhook_id, returning\")\n    return node",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"Hook to be called when node is deactivated/deleted\"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"Hook to be called when node is deactivated/deleted\"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "Hook to be called when node is deactivated/deleted",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "logger.debug(f\"Deactivating node #{node.id}\")",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "logger.debug(f\"Deactivating node #{node.id}\")",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "logger.debug",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "logger",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "debug",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(f\"Deactivating node #{node.id}\")",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "f\"Deactivating node #{node.id}\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "f\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Deactivating node #",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "interpolation",
                                                            "label": "{node.id}",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "node.id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "node",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "block = get_block(node.block_id)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "block = get_block(node.block_id)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "block",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "get_block(node.block_id)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "get_block",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(node.block_id)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "node.block_id",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "node",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "block_id",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if not block:\n        raise ValueError(\n            f\"Node #{node.id} is instance of unknown block #{node.block_id}\"\n        )",
                            "children": [
                                {
                                    "type": "not_operator",
                                    "label": "not block",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "block",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "raise ValueError(\n            f\"Node #{node.id} is instance of unknown block #{node.block_id}\"\n        )",
                                    "children": [
                                        {
                                            "type": "raise_statement",
                                            "label": "raise ValueError(\n            f\"Node #{node.id} is instance of unknown block #{node.block_id}\"\n        )",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "ValueError(\n            f\"Node #{node.id} is instance of unknown block #{node.block_id}\"\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "ValueError",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n            f\"Node #{node.id} is instance of unknown block #{node.block_id}\"\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "f\"Node #{node.id} is instance of unknown block #{node.block_id}\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "f\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "Node #",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{node.id}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "node.id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "node",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": " is instance of unknown block #",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{node.block_id}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "node.block_id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "node",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "block_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if not block.webhook_config:\n        return node",
                            "children": [
                                {
                                    "type": "not_operator",
                                    "label": "not block.webhook_config",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "block.webhook_config",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "block",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "webhook_config",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "return node",
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "label": "return node",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "node",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "provider = block.webhook_config.provider",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "provider = block.webhook_config.provider",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "provider",
                                            "children": []
                                        },
                                        {
                                            "type": "attribute",
                                            "label": "block.webhook_config.provider",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "block.webhook_config",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "block",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "webhook_config",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "provider",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if provider not in WEBHOOK_MANAGERS_BY_NAME:\n        raise ValueError(\n            f\"Block #{block.id} has webhook_config for provider {provider} \"\n            \"which does not support webhooks\"\n        )",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "label": "provider not in WEBHOOK_MANAGERS_BY_NAME",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "provider",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "WEBHOOK_MANAGERS_BY_NAME",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "raise ValueError(\n            f\"Block #{block.id} has webhook_config for provider {provider} \"\n            \"which does not support webhooks\"\n        )",
                                    "children": [
                                        {
                                            "type": "raise_statement",
                                            "label": "raise ValueError(\n            f\"Block #{block.id} has webhook_config for provider {provider} \"\n            \"which does not support webhooks\"\n        )",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "ValueError(\n            f\"Block #{block.id} has webhook_config for provider {provider} \"\n            \"which does not support webhooks\"\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "ValueError",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n            f\"Block #{block.id} has webhook_config for provider {provider} \"\n            \"which does not support webhooks\"\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "concatenated_string",
                                                                    "label": "f\"Block #{block.id} has webhook_config for provider {provider} \"\n            \"which does not support webhooks\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "f\"Block #{block.id} has webhook_config for provider {provider} \"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "f\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "Block #",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{block.id}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "block.id",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "block",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": " has webhook_config for provider ",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{provider}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "provider",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": " ",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"which does not support webhooks\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "which does not support webhooks",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "webhooks_manager = WEBHOOK_MANAGERS_BY_NAME[provider]()",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "webhooks_manager = WEBHOOK_MANAGERS_BY_NAME[provider]()",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "webhooks_manager",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "WEBHOOK_MANAGERS_BY_NAME[provider]()",
                                            "children": [
                                                {
                                                    "type": "subscript",
                                                    "label": "WEBHOOK_MANAGERS_BY_NAME[provider]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "WEBHOOK_MANAGERS_BY_NAME",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "provider",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "()",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if node.webhook_id:\n        logger.debug(f\"Node #{node.id} has webhook_id {node.webhook_id}\")\n        if not node.webhook:\n            logger.error(f\"Node #{node.id} has webhook_id but no webhook object\")\n            raise ValueError(\"node.webhook not included\")\n\n        # Detach webhook from node\n        logger.debug(f\"Detaching webhook from node #{node.id}\")\n        updated_node = await set_node_webhook(node.id, None)\n\n        # Prune and deregister the webhook if it is no longer used anywhere\n        webhook = node.webhook\n        logger.debug(\n            f\"Pruning{' and deregistering' if credentials else ''} \"\n            f\"webhook #{webhook.id}\"\n        )\n        await webhooks_manager.prune_webhook_if_dangling(webhook.id, credentials)\n        if (\n            CREDENTIALS_FIELD_NAME in block.input_schema.model_fields\n            and not credentials\n        ):\n            logger.warning(\n                f\"Cannot deregister webhook #{webhook.id}: credentials \"\n                f\"#{webhook.credentials_id} not available \"\n                f\"({webhook.provider.value} webhook ID: {webhook.provider_webhook_id})\"\n            )\n        return updated_node",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "node.webhook_id",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "node",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "webhook_id",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "logger.debug(f\"Node #{node.id} has webhook_id {node.webhook_id}\")\n        if not node.webhook:\n            logger.error(f\"Node #{node.id} has webhook_id but no webhook object\")\n            raise ValueError(\"node.webhook not included\")\n\n        # Detach webhook from node\n        logger.debug(f\"Detaching webhook from node #{node.id}\")\n        updated_node = await set_node_webhook(node.id, None)\n\n        # Prune and deregister the webhook if it is no longer used anywhere\n        webhook = node.webhook\n        logger.debug(\n            f\"Pruning{' and deregistering' if credentials else ''} \"\n            f\"webhook #{webhook.id}\"\n        )\n        await webhooks_manager.prune_webhook_if_dangling(webhook.id, credentials)\n        if (\n            CREDENTIALS_FIELD_NAME in block.input_schema.model_fields\n            and not credentials\n        ):\n            logger.warning(\n                f\"Cannot deregister webhook #{webhook.id}: credentials \"\n                f\"#{webhook.credentials_id} not available \"\n                f\"({webhook.provider.value} webhook ID: {webhook.provider_webhook_id})\"\n            )\n        return updated_node",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "logger.debug(f\"Node #{node.id} has webhook_id {node.webhook_id}\")",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "logger.debug(f\"Node #{node.id} has webhook_id {node.webhook_id}\")",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "logger.debug",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "logger",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "debug",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(f\"Node #{node.id} has webhook_id {node.webhook_id}\")",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "f\"Node #{node.id} has webhook_id {node.webhook_id}\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "f\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "Node #",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{node.id}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "node.id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "node",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": " has webhook_id ",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{node.webhook_id}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "node.webhook_id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "node",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "webhook_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if not node.webhook:\n            logger.error(f\"Node #{node.id} has webhook_id but no webhook object\")\n            raise ValueError(\"node.webhook not included\")",
                                            "children": [
                                                {
                                                    "type": "not_operator",
                                                    "label": "not node.webhook",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "node.webhook",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "node",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "webhook",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "logger.error(f\"Node #{node.id} has webhook_id but no webhook object\")\n            raise ValueError(\"node.webhook not included\")",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "logger.error(f\"Node #{node.id} has webhook_id but no webhook object\")",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "logger.error(f\"Node #{node.id} has webhook_id but no webhook object\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "logger.error",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "logger",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "error",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(f\"Node #{node.id} has webhook_id but no webhook object\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "f\"Node #{node.id} has webhook_id but no webhook object\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "f\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Node #",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "interpolation",
                                                                                            "label": "{node.id}",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "node.id",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "node",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "id",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": " has webhook_id but no webhook object",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "raise_statement",
                                                            "label": "raise ValueError(\"node.webhook not included\")",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "ValueError(\"node.webhook not included\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "ValueError",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(\"node.webhook not included\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"node.webhook not included\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "node.webhook not included",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "label": "# Detach webhook from node",
                                            "children": []
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "logger.debug(f\"Detaching webhook from node #{node.id}\")",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "logger.debug(f\"Detaching webhook from node #{node.id}\")",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "logger.debug",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "logger",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "debug",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(f\"Detaching webhook from node #{node.id}\")",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "f\"Detaching webhook from node #{node.id}\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "f\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "Detaching webhook from node #",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{node.id}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "node.id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "node",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "updated_node = await set_node_webhook(node.id, None)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "updated_node = await set_node_webhook(node.id, None)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "updated_node",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "await",
                                                            "label": "await set_node_webhook(node.id, None)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "set_node_webhook(node.id, None)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "set_node_webhook",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(node.id, None)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "node.id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "node",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "none",
                                                                                    "label": "None",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "label": "# Prune and deregister the webhook if it is no longer used anywhere",
                                            "children": []
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "webhook = node.webhook",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "webhook = node.webhook",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "webhook",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "attribute",
                                                            "label": "node.webhook",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "node",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "webhook",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "logger.debug(\n            f\"Pruning{' and deregistering' if credentials else ''} \"\n            f\"webhook #{webhook.id}\"\n        )",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "logger.debug(\n            f\"Pruning{' and deregistering' if credentials else ''} \"\n            f\"webhook #{webhook.id}\"\n        )",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "logger.debug",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "logger",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "debug",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n            f\"Pruning{' and deregistering' if credentials else ''} \"\n            f\"webhook #{webhook.id}\"\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "concatenated_string",
                                                                    "label": "f\"Pruning{' and deregistering' if credentials else ''} \"\n            f\"webhook #{webhook.id}\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "f\"Pruning{' and deregistering' if credentials else ''} \"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "f\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "Pruning",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{' and deregistering' if credentials else ''}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "conditional_expression",
                                                                                            "label": "' and deregistering' if credentials else ''",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "' and deregistering'",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "'",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": " and deregistering",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "'",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "credentials",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "''",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "'",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "'",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": " ",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "f\"webhook #{webhook.id}\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "f\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "webhook #",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{webhook.id}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "webhook.id",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "webhook",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "await webhooks_manager.prune_webhook_if_dangling(webhook.id, credentials)",
                                            "children": [
                                                {
                                                    "type": "await",
                                                    "label": "await webhooks_manager.prune_webhook_if_dangling(webhook.id, credentials)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "webhooks_manager.prune_webhook_if_dangling(webhook.id, credentials)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "webhooks_manager.prune_webhook_if_dangling",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "webhooks_manager",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "prune_webhook_if_dangling",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(webhook.id, credentials)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "webhook.id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "webhook",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "credentials",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if (\n            CREDENTIALS_FIELD_NAME in block.input_schema.model_fields\n            and not credentials\n        ):\n            logger.warning(\n                f\"Cannot deregister webhook #{webhook.id}: credentials \"\n                f\"#{webhook.credentials_id} not available \"\n                f\"({webhook.provider.value} webhook ID: {webhook.provider_webhook_id})\"\n            )",
                                            "children": [
                                                {
                                                    "type": "parenthesized_expression",
                                                    "label": "(\n            CREDENTIALS_FIELD_NAME in block.input_schema.model_fields\n            and not credentials\n        )",
                                                    "children": [
                                                        {
                                                            "type": "boolean_operator",
                                                            "label": "CREDENTIALS_FIELD_NAME in block.input_schema.model_fields\n            and not credentials",
                                                            "children": [
                                                                {
                                                                    "type": "comparison_operator",
                                                                    "label": "CREDENTIALS_FIELD_NAME in block.input_schema.model_fields",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "CREDENTIALS_FIELD_NAME",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "block.input_schema.model_fields",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "block.input_schema",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "block",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "input_schema",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "model_fields",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "not_operator",
                                                                    "label": "not credentials",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "credentials",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "logger.warning(\n                f\"Cannot deregister webhook #{webhook.id}: credentials \"\n                f\"#{webhook.credentials_id} not available \"\n                f\"({webhook.provider.value} webhook ID: {webhook.provider_webhook_id})\"\n            )",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "logger.warning(\n                f\"Cannot deregister webhook #{webhook.id}: credentials \"\n                f\"#{webhook.credentials_id} not available \"\n                f\"({webhook.provider.value} webhook ID: {webhook.provider_webhook_id})\"\n            )",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "logger.warning(\n                f\"Cannot deregister webhook #{webhook.id}: credentials \"\n                f\"#{webhook.credentials_id} not available \"\n                f\"({webhook.provider.value} webhook ID: {webhook.provider_webhook_id})\"\n            )",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "logger.warning",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "logger",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "warning",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(\n                f\"Cannot deregister webhook #{webhook.id}: credentials \"\n                f\"#{webhook.credentials_id} not available \"\n                f\"({webhook.provider.value} webhook ID: {webhook.provider_webhook_id})\"\n            )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "concatenated_string",
                                                                                    "label": "f\"Cannot deregister webhook #{webhook.id}: credentials \"\n                f\"#{webhook.credentials_id} not available \"\n                f\"({webhook.provider.value} webhook ID: {webhook.provider_webhook_id})\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "f\"Cannot deregister webhook #{webhook.id}: credentials \"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "f\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "Cannot deregister webhook #",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{webhook.id}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "webhook.id",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "webhook",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "id",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": ": credentials ",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "f\"#{webhook.credentials_id} not available \"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "f\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "#",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{webhook.credentials_id}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "webhook.credentials_id",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "webhook",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "credentials_id",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": " not available ",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "f\"({webhook.provider.value} webhook ID: {webhook.provider_webhook_id})\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "f\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "(",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{webhook.provider.value}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "webhook.provider.value",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "attribute",
                                                                                                                    "label": "webhook.provider",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "webhook",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "provider",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "value",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": " webhook ID: ",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{webhook.provider_webhook_id}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "webhook.provider_webhook_id",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "webhook",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "provider_webhook_id",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": ")",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "label": "return updated_node",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "updated_node",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "logger.debug(f\"Node #{node.id} has no webhook_id, returning\")",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "logger.debug(f\"Node #{node.id} has no webhook_id, returning\")",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "logger.debug",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "logger",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "debug",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(f\"Node #{node.id} has no webhook_id, returning\")",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "f\"Node #{node.id} has no webhook_id, returning\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "f\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Node #",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "interpolation",
                                                            "label": "{node.id}",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "node.id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "node",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": " has no webhook_id, returning",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return node",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "node",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}