{
    "type": "module",
    "label": "import logging\nimport os\nfrom urllib.parse import parse_qs, urlencode, urlparse, urlunparse\n\nfrom apscheduler.events import EVENT_JOB_ERROR, EVENT_JOB_EXECUTED\nfrom apscheduler.job import Job as JobObj\nfrom apscheduler.jobstores.sqlalchemy import SQLAlchemyJobStore\nfrom apscheduler.schedulers.blocking import BlockingScheduler\nfrom apscheduler.triggers.cron import CronTrigger\nfrom autogpt_libs.utils.cache import thread_cached\nfrom dotenv import load_dotenv\nfrom pydantic import BaseModel\nfrom sqlalchemy import MetaData, create_engine\n\nfrom backend.data.block import BlockInput\nfrom backend.executor.manager import ExecutionManager\nfrom backend.util.service import AppService, expose, get_service_client\nfrom backend.util.settings import Config\n\n\ndef _extract_schema_from_url(database_url) -> tuple[str, str]:\n    \"\"\"\n    Extracts the schema from the DATABASE_URL and returns the schema and cleaned URL.\n    \"\"\"\n    parsed_url = urlparse(database_url)\n    query_params = parse_qs(parsed_url.query)\n\n    # Extract the 'schema' parameter\n    schema_list = query_params.pop(\"schema\", None)\n    schema = schema_list[0] if schema_list else \"public\"\n\n    # Reconstruct the query string without the 'schema' parameter\n    new_query = urlencode(query_params, doseq=True)\n    new_parsed_url = parsed_url._replace(query=new_query)\n    database_url_clean = str(urlunparse(new_parsed_url))\n\n    return schema, database_url_clean\n\n\nlogger = logging.getLogger(__name__)\nconfig = Config()\n\n\ndef log(msg, **kwargs):\n    logger.info(\"[ExecutionScheduler] \" + msg, **kwargs)\n\n\ndef job_listener(event):\n    \"\"\"Logs job execution outcomes for better monitoring.\"\"\"\n    if event.exception:\n        log(f\"Job {event.job_id} failed.\")\n    else:\n        log(f\"Job {event.job_id} completed successfully.\")\n\n\n@thread_cached\ndef get_execution_client() -> ExecutionManager:\n    return get_service_client(ExecutionManager)\n\n\ndef execute_graph(**kwargs):\n    args = JobArgs(**kwargs)\n    try:\n        log(f\"Executing recurring job for graph #{args.graph_id}\")\n        get_execution_client().add_execution(\n            args.graph_id, args.input_data, args.user_id\n        )\n    except Exception as e:\n        logger.exception(f\"Error executing graph {args.graph_id}: {e}\")\n\n\nclass JobArgs(BaseModel):\n    graph_id: str\n    input_data: BlockInput\n    user_id: str\n    graph_version: int\n    cron: str\n\n\nclass JobInfo(JobArgs):\n    id: str\n    name: str\n    next_run_time: str\n\n    @staticmethod\n    def from_db(job_args: JobArgs, job_obj: JobObj) -> \"JobInfo\":\n        return JobInfo(\n            id=job_obj.id,\n            name=job_obj.name,\n            next_run_time=job_obj.next_run_time.isoformat(),\n            **job_args.model_dump(),\n        )\n\n\nclass ExecutionScheduler(AppService):\n    scheduler: BlockingScheduler\n\n    @classmethod\n    def get_port(cls) -> int:\n        return config.execution_scheduler_port\n\n    @property\n    @thread_cached\n    def execution_client(self) -> ExecutionManager:\n        return get_service_client(ExecutionManager)\n\n    def run_service(self):\n        load_dotenv()\n        db_schema, db_url = _extract_schema_from_url(os.getenv(\"DATABASE_URL\"))\n        self.scheduler = BlockingScheduler(\n            jobstores={\n                \"default\": SQLAlchemyJobStore(\n                    engine=create_engine(db_url),\n                    metadata=MetaData(schema=db_schema),\n                )\n            }\n        )\n        self.scheduler.add_listener(job_listener, EVENT_JOB_EXECUTED | EVENT_JOB_ERROR)\n        self.scheduler.start()\n\n    @expose\n    def add_execution_schedule(\n        self,\n        graph_id: str,\n        graph_version: int,\n        cron: str,\n        input_data: BlockInput,\n        user_id: str,\n    ) -> JobInfo:\n        job_args = JobArgs(\n            graph_id=graph_id,\n            input_data=input_data,\n            user_id=user_id,\n            graph_version=graph_version,\n            cron=cron,\n        )\n        job = self.scheduler.add_job(\n            execute_graph,\n            CronTrigger.from_crontab(cron),\n            kwargs=job_args.model_dump(),\n            replace_existing=True,\n        )\n        log(f\"Added job {job.id} with cron schedule '{cron}' input data: {input_data}\")\n        return JobInfo.from_db(job_args, job)\n\n    @expose\n    def delete_schedule(self, schedule_id: str, user_id: str) -> JobInfo:\n        job = self.scheduler.get_job(schedule_id)\n        if not job:\n            log(f\"Job {schedule_id} not found.\")\n            raise ValueError(f\"Job #{schedule_id} not found.\")\n\n        job_args = JobArgs(**job.kwargs)\n        if job_args.user_id != user_id:\n            raise ValueError(\"User ID does not match the job's user ID.\")\n\n        log(f\"Deleting job {schedule_id}\")\n        job.remove()\n\n        return JobInfo.from_db(job_args, job)\n\n    @expose\n    def get_execution_schedules(\n        self, graph_id: str | None = None, user_id: str | None = None\n    ) -> list[JobInfo]:\n        schedules = []\n        for job in self.scheduler.get_jobs():\n            job_args = JobArgs(**job.kwargs)\n            if (\n                job.next_run_time is not None\n                and (graph_id is None or job_args.graph_id == graph_id)\n                and (user_id is None or job_args.user_id == user_id)\n            ):\n                schedules.append(JobInfo.from_db(job_args, job))\n        return schedules\n",
    "children": [
        {
            "type": "import_statement",
            "label": "import logging",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "logging",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "logging",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import os",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "os",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "os",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from urllib.parse import parse_qs, urlencode, urlparse, urlunparse",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "urllib.parse",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "urllib",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "parse",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "parse_qs",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "parse_qs",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "urlencode",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "urlencode",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "urlparse",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "urlparse",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "urlunparse",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "urlunparse",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from apscheduler.events import EVENT_JOB_ERROR, EVENT_JOB_EXECUTED",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "apscheduler.events",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "apscheduler",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "events",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "EVENT_JOB_ERROR",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "EVENT_JOB_ERROR",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "EVENT_JOB_EXECUTED",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "EVENT_JOB_EXECUTED",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from apscheduler.job import Job as JobObj",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "apscheduler.job",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "apscheduler",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "job",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "aliased_import",
                    "label": "Job as JobObj",
                    "children": [
                        {
                            "type": "dotted_name",
                            "label": "Job",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "Job",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "identifier",
                            "label": "JobObj",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from apscheduler.jobstores.sqlalchemy import SQLAlchemyJobStore",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "apscheduler.jobstores.sqlalchemy",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "apscheduler",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "jobstores",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "sqlalchemy",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "SQLAlchemyJobStore",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "SQLAlchemyJobStore",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from apscheduler.schedulers.blocking import BlockingScheduler",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "apscheduler.schedulers.blocking",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "apscheduler",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "schedulers",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "blocking",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "BlockingScheduler",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "BlockingScheduler",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from apscheduler.triggers.cron import CronTrigger",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "apscheduler.triggers.cron",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "apscheduler",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "triggers",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "cron",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "CronTrigger",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "CronTrigger",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from autogpt_libs.utils.cache import thread_cached",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "autogpt_libs.utils.cache",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "autogpt_libs",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "utils",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "cache",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "thread_cached",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "thread_cached",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from dotenv import load_dotenv",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "dotenv",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "dotenv",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "load_dotenv",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "load_dotenv",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from pydantic import BaseModel",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "pydantic",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "pydantic",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "BaseModel",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "BaseModel",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from sqlalchemy import MetaData, create_engine",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "sqlalchemy",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "sqlalchemy",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "MetaData",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "MetaData",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "create_engine",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "create_engine",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.data.block import BlockInput",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.data.block",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "data",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "block",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "BlockInput",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "BlockInput",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.executor.manager import ExecutionManager",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.executor.manager",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "executor",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "manager",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "ExecutionManager",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "ExecutionManager",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.util.service import AppService, expose, get_service_client",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.util.service",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "util",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "service",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "AppService",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "AppService",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "expose",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "expose",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "get_service_client",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "get_service_client",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.util.settings import Config",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.util.settings",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "util",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "settings",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Config",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Config",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def _extract_schema_from_url(database_url) -> tuple[str, str]:\n    \"\"\"\n    Extracts the schema from the DATABASE_URL and returns the schema and cleaned URL.\n    \"\"\"\n    parsed_url = urlparse(database_url)\n    query_params = parse_qs(parsed_url.query)\n\n    # Extract the 'schema' parameter\n    schema_list = query_params.pop(\"schema\", None)\n    schema = schema_list[0] if schema_list else \"public\"\n\n    # Reconstruct the query string without the 'schema' parameter\n    new_query = urlencode(query_params, doseq=True)\n    new_parsed_url = parsed_url._replace(query=new_query)\n    database_url_clean = str(urlunparse(new_parsed_url))\n\n    return schema, database_url_clean",
            "children": [
                {
                    "type": "identifier",
                    "label": "_extract_schema_from_url",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(database_url)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "database_url",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "tuple[str, str]",
                    "children": [
                        {
                            "type": "generic_type",
                            "label": "tuple[str, str]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "tuple",
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "label": "[str, str]",
                                    "children": [
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    Extracts the schema from the DATABASE_URL and returns the schema and cleaned URL.\n    \"\"\"\n    parsed_url = urlparse(database_url)\n    query_params = parse_qs(parsed_url.query)\n\n    # Extract the 'schema' parameter\n    schema_list = query_params.pop(\"schema\", None)\n    schema = schema_list[0] if schema_list else \"public\"\n\n    # Reconstruct the query string without the 'schema' parameter\n    new_query = urlencode(query_params, doseq=True)\n    new_parsed_url = parsed_url._replace(query=new_query)\n    database_url_clean = str(urlunparse(new_parsed_url))\n\n    return schema, database_url_clean",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    Extracts the schema from the DATABASE_URL and returns the schema and cleaned URL.\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    Extracts the schema from the DATABASE_URL and returns the schema and cleaned URL.\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    Extracts the schema from the DATABASE_URL and returns the schema and cleaned URL.\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "parsed_url = urlparse(database_url)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "parsed_url = urlparse(database_url)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "parsed_url",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "urlparse(database_url)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "urlparse",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(database_url)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "database_url",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "query_params = parse_qs(parsed_url.query)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "query_params = parse_qs(parsed_url.query)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "query_params",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "parse_qs(parsed_url.query)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "parse_qs",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(parsed_url.query)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "parsed_url.query",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "parsed_url",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "query",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# Extract the 'schema' parameter",
                            "children": []
                        },
                        {
                            "type": "expression_statement",
                            "label": "schema_list = query_params.pop(\"schema\", None)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "schema_list = query_params.pop(\"schema\", None)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "schema_list",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "query_params.pop(\"schema\", None)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "query_params.pop",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "query_params",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "pop",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(\"schema\", None)",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"schema\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "schema",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "none",
                                                            "label": "None",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "schema = schema_list[0] if schema_list else \"public\"",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "schema = schema_list[0] if schema_list else \"public\"",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "schema",
                                            "children": []
                                        },
                                        {
                                            "type": "conditional_expression",
                                            "label": "schema_list[0] if schema_list else \"public\"",
                                            "children": [
                                                {
                                                    "type": "subscript",
                                                    "label": "schema_list[0]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "schema_list",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "label": "0",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "schema_list",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"public\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "public",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# Reconstruct the query string without the 'schema' parameter",
                            "children": []
                        },
                        {
                            "type": "expression_statement",
                            "label": "new_query = urlencode(query_params, doseq=True)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "new_query = urlencode(query_params, doseq=True)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "new_query",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "urlencode(query_params, doseq=True)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "urlencode",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(query_params, doseq=True)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "query_params",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "doseq=True",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "doseq",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "true",
                                                                    "label": "True",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "new_parsed_url = parsed_url._replace(query=new_query)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "new_parsed_url = parsed_url._replace(query=new_query)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "new_parsed_url",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "parsed_url._replace(query=new_query)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "parsed_url._replace",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "parsed_url",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "_replace",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(query=new_query)",
                                                    "children": [
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "query=new_query",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "query",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "new_query",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "database_url_clean = str(urlunparse(new_parsed_url))",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "database_url_clean = str(urlunparse(new_parsed_url))",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "database_url_clean",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "str(urlunparse(new_parsed_url))",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(urlunparse(new_parsed_url))",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "urlunparse(new_parsed_url)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "urlunparse",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(new_parsed_url)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "new_parsed_url",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return schema, database_url_clean",
                            "children": [
                                {
                                    "type": "expression_list",
                                    "label": "schema, database_url_clean",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "schema",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "database_url_clean",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "logger = logging.getLogger(__name__)",
            "children": [
                {
                    "type": "assignment",
                    "label": "logger = logging.getLogger(__name__)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "logger",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "logging.getLogger(__name__)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "logging.getLogger",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "logging",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "getLogger",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(__name__)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "__name__",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "config = Config()",
            "children": [
                {
                    "type": "assignment",
                    "label": "config = Config()",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "config",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "Config()",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "Config",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "label": "()",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def log(msg, **kwargs):\n    logger.info(\"[ExecutionScheduler] \" + msg, **kwargs)",
            "children": [
                {
                    "type": "identifier",
                    "label": "log",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(msg, **kwargs)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "msg",
                            "children": []
                        },
                        {
                            "type": "dictionary_splat_pattern",
                            "label": "**kwargs",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "kwargs",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "logger.info(\"[ExecutionScheduler] \" + msg, **kwargs)",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "logger.info(\"[ExecutionScheduler] \" + msg, **kwargs)",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "logger.info(\"[ExecutionScheduler] \" + msg, **kwargs)",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "logger.info",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "logger",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "info",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(\"[ExecutionScheduler] \" + msg, **kwargs)",
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "label": "\"[ExecutionScheduler] \" + msg",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"[ExecutionScheduler] \"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "[ExecutionScheduler] ",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "msg",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "dictionary_splat",
                                                    "label": "**kwargs",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "kwargs",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def job_listener(event):\n    \"\"\"Logs job execution outcomes for better monitoring.\"\"\"\n    if event.exception:\n        log(f\"Job {event.job_id} failed.\")\n    else:\n        log(f\"Job {event.job_id} completed successfully.\")",
            "children": [
                {
                    "type": "identifier",
                    "label": "job_listener",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(event)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "event",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"Logs job execution outcomes for better monitoring.\"\"\"\n    if event.exception:\n        log(f\"Job {event.job_id} failed.\")\n    else:\n        log(f\"Job {event.job_id} completed successfully.\")",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"Logs job execution outcomes for better monitoring.\"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"Logs job execution outcomes for better monitoring.\"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "Logs job execution outcomes for better monitoring.",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if event.exception:\n        log(f\"Job {event.job_id} failed.\")\n    else:\n        log(f\"Job {event.job_id} completed successfully.\")",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "event.exception",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "event",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "exception",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "log(f\"Job {event.job_id} failed.\")",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "log(f\"Job {event.job_id} failed.\")",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "log(f\"Job {event.job_id} failed.\")",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "log",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(f\"Job {event.job_id} failed.\")",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "f\"Job {event.job_id} failed.\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "f\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "Job ",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{event.job_id}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "event.job_id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "event",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "job_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": " failed.",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "else_clause",
                                    "label": "else:\n        log(f\"Job {event.job_id} completed successfully.\")",
                                    "children": [
                                        {
                                            "type": "block",
                                            "label": "log(f\"Job {event.job_id} completed successfully.\")",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "log(f\"Job {event.job_id} completed successfully.\")",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "log(f\"Job {event.job_id} completed successfully.\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "log",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(f\"Job {event.job_id} completed successfully.\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "f\"Job {event.job_id} completed successfully.\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "f\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "Job ",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{event.job_id}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "event.job_id",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "event",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "job_id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": " completed successfully.",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@thread_cached\ndef get_execution_client() -> ExecutionManager:\n    return get_service_client(ExecutionManager)",
            "children": [
                {
                    "type": "decorator",
                    "label": "@thread_cached",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "thread_cached",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "def get_execution_client() -> ExecutionManager:\n    return get_service_client(ExecutionManager)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "get_execution_client",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "()",
                            "children": []
                        },
                        {
                            "type": "type",
                            "label": "ExecutionManager",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "ExecutionManager",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "return get_service_client(ExecutionManager)",
                            "children": [
                                {
                                    "type": "return_statement",
                                    "label": "return get_service_client(ExecutionManager)",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "get_service_client(ExecutionManager)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "get_service_client",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(ExecutionManager)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "ExecutionManager",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def execute_graph(**kwargs):\n    args = JobArgs(**kwargs)\n    try:\n        log(f\"Executing recurring job for graph #{args.graph_id}\")\n        get_execution_client().add_execution(\n            args.graph_id, args.input_data, args.user_id\n        )\n    except Exception as e:\n        logger.exception(f\"Error executing graph {args.graph_id}: {e}\")",
            "children": [
                {
                    "type": "identifier",
                    "label": "execute_graph",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(**kwargs)",
                    "children": [
                        {
                            "type": "dictionary_splat_pattern",
                            "label": "**kwargs",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "kwargs",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "args = JobArgs(**kwargs)\n    try:\n        log(f\"Executing recurring job for graph #{args.graph_id}\")\n        get_execution_client().add_execution(\n            args.graph_id, args.input_data, args.user_id\n        )\n    except Exception as e:\n        logger.exception(f\"Error executing graph {args.graph_id}: {e}\")",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "args = JobArgs(**kwargs)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "args = JobArgs(**kwargs)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "args",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "JobArgs(**kwargs)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "JobArgs",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(**kwargs)",
                                                    "children": [
                                                        {
                                                            "type": "dictionary_splat",
                                                            "label": "**kwargs",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "kwargs",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "try_statement",
                            "label": "try:\n        log(f\"Executing recurring job for graph #{args.graph_id}\")\n        get_execution_client().add_execution(\n            args.graph_id, args.input_data, args.user_id\n        )\n    except Exception as e:\n        logger.exception(f\"Error executing graph {args.graph_id}: {e}\")",
                            "children": [
                                {
                                    "type": "block",
                                    "label": "log(f\"Executing recurring job for graph #{args.graph_id}\")\n        get_execution_client().add_execution(\n            args.graph_id, args.input_data, args.user_id\n        )",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "log(f\"Executing recurring job for graph #{args.graph_id}\")",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "log(f\"Executing recurring job for graph #{args.graph_id}\")",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "log",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(f\"Executing recurring job for graph #{args.graph_id}\")",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "f\"Executing recurring job for graph #{args.graph_id}\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "f\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "Executing recurring job for graph #",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{args.graph_id}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "args.graph_id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "args",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "graph_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "get_execution_client().add_execution(\n            args.graph_id, args.input_data, args.user_id\n        )",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "get_execution_client().add_execution(\n            args.graph_id, args.input_data, args.user_id\n        )",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "get_execution_client().add_execution",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "get_execution_client()",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "get_execution_client",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "add_execution",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n            args.graph_id, args.input_data, args.user_id\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "args.graph_id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "args",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "graph_id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "args.input_data",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "args",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "input_data",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "args.user_id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "args",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "user_id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "except_clause",
                                    "label": "except Exception as e:\n        logger.exception(f\"Error executing graph {args.graph_id}: {e}\")",
                                    "children": [
                                        {
                                            "type": "as_pattern",
                                            "label": "Exception as e",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "Exception",
                                                    "children": []
                                                },
                                                {
                                                    "type": "as_pattern_target",
                                                    "label": "e",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "e",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "logger.exception(f\"Error executing graph {args.graph_id}: {e}\")",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "logger.exception(f\"Error executing graph {args.graph_id}: {e}\")",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "logger.exception(f\"Error executing graph {args.graph_id}: {e}\")",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "logger.exception",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "logger",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "exception",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(f\"Error executing graph {args.graph_id}: {e}\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "f\"Error executing graph {args.graph_id}: {e}\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "f\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "Error executing graph ",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{args.graph_id}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "args.graph_id",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "args",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "graph_id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": ": ",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{e}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "e",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "label": "class JobArgs(BaseModel):\n    graph_id: str\n    input_data: BlockInput\n    user_id: str\n    graph_version: int\n    cron: str",
            "children": [
                {
                    "type": "identifier",
                    "label": "JobArgs",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "(BaseModel)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "BaseModel",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "graph_id: str\n    input_data: BlockInput\n    user_id: str\n    graph_version: int\n    cron: str",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "graph_id: str",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "graph_id: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graph_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "input_data: BlockInput",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "input_data: BlockInput",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "input_data",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "BlockInput",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "BlockInput",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "user_id: str",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "user_id: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "graph_version: int",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "graph_version: int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graph_version",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "int",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "int",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "cron: str",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "cron: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "cron",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "label": "class JobInfo(JobArgs):\n    id: str\n    name: str\n    next_run_time: str\n\n    @staticmethod\n    def from_db(job_args: JobArgs, job_obj: JobObj) -> \"JobInfo\":\n        return JobInfo(\n            id=job_obj.id,\n            name=job_obj.name,\n            next_run_time=job_obj.next_run_time.isoformat(),\n            **job_args.model_dump(),\n        )",
            "children": [
                {
                    "type": "identifier",
                    "label": "JobInfo",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "(JobArgs)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "JobArgs",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "id: str\n    name: str\n    next_run_time: str\n\n    @staticmethod\n    def from_db(job_args: JobArgs, job_obj: JobObj) -> \"JobInfo\":\n        return JobInfo(\n            id=job_obj.id,\n            name=job_obj.name,\n            next_run_time=job_obj.next_run_time.isoformat(),\n            **job_args.model_dump(),\n        )",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "id: str",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "id: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "name: str",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "name: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "name",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "next_run_time: str",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "next_run_time: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "next_run_time",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "decorated_definition",
                            "label": "@staticmethod\n    def from_db(job_args: JobArgs, job_obj: JobObj) -> \"JobInfo\":\n        return JobInfo(\n            id=job_obj.id,\n            name=job_obj.name,\n            next_run_time=job_obj.next_run_time.isoformat(),\n            **job_args.model_dump(),\n        )",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@staticmethod",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "staticmethod",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "function_definition",
                                    "label": "def from_db(job_args: JobArgs, job_obj: JobObj) -> \"JobInfo\":\n        return JobInfo(\n            id=job_obj.id,\n            name=job_obj.name,\n            next_run_time=job_obj.next_run_time.isoformat(),\n            **job_args.model_dump(),\n        )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "from_db",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(job_args: JobArgs, job_obj: JobObj)",
                                            "children": [
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "job_args: JobArgs",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "job_args",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "JobArgs",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "JobArgs",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "job_obj: JobObj",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "job_obj",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "JobObj",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "JobObj",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "\"JobInfo\"",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "\"JobInfo\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "JobInfo",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "return JobInfo(\n            id=job_obj.id,\n            name=job_obj.name,\n            next_run_time=job_obj.next_run_time.isoformat(),\n            **job_args.model_dump(),\n        )",
                                            "children": [
                                                {
                                                    "type": "return_statement",
                                                    "label": "return JobInfo(\n            id=job_obj.id,\n            name=job_obj.name,\n            next_run_time=job_obj.next_run_time.isoformat(),\n            **job_args.model_dump(),\n        )",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "JobInfo(\n            id=job_obj.id,\n            name=job_obj.name,\n            next_run_time=job_obj.next_run_time.isoformat(),\n            **job_args.model_dump(),\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "JobInfo",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n            id=job_obj.id,\n            name=job_obj.name,\n            next_run_time=job_obj.next_run_time.isoformat(),\n            **job_args.model_dump(),\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "id=job_obj.id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "job_obj.id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "job_obj",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "name=job_obj.name",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "name",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "job_obj.name",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "job_obj",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "name",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "next_run_time=job_obj.next_run_time.isoformat()",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "next_run_time",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "job_obj.next_run_time.isoformat()",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "job_obj.next_run_time.isoformat",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "job_obj.next_run_time",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "job_obj",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "next_run_time",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "isoformat",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "()",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "dictionary_splat",
                                                                            "label": "**job_args.model_dump()",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "job_args.model_dump()",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "job_args.model_dump",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "job_args",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "model_dump",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "()",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "label": "class ExecutionScheduler(AppService):\n    scheduler: BlockingScheduler\n\n    @classmethod\n    def get_port(cls) -> int:\n        return config.execution_scheduler_port\n\n    @property\n    @thread_cached\n    def execution_client(self) -> ExecutionManager:\n        return get_service_client(ExecutionManager)\n\n    def run_service(self):\n        load_dotenv()\n        db_schema, db_url = _extract_schema_from_url(os.getenv(\"DATABASE_URL\"))\n        self.scheduler = BlockingScheduler(\n            jobstores={\n                \"default\": SQLAlchemyJobStore(\n                    engine=create_engine(db_url),\n                    metadata=MetaData(schema=db_schema),\n                )\n            }\n        )\n        self.scheduler.add_listener(job_listener, EVENT_JOB_EXECUTED | EVENT_JOB_ERROR)\n        self.scheduler.start()\n\n    @expose\n    def add_execution_schedule(\n        self,\n        graph_id: str,\n        graph_version: int,\n        cron: str,\n        input_data: BlockInput,\n        user_id: str,\n    ) -> JobInfo:\n        job_args = JobArgs(\n            graph_id=graph_id,\n            input_data=input_data,\n            user_id=user_id,\n            graph_version=graph_version,\n            cron=cron,\n        )\n        job = self.scheduler.add_job(\n            execute_graph,\n            CronTrigger.from_crontab(cron),\n            kwargs=job_args.model_dump(),\n            replace_existing=True,\n        )\n        log(f\"Added job {job.id} with cron schedule '{cron}' input data: {input_data}\")\n        return JobInfo.from_db(job_args, job)\n\n    @expose\n    def delete_schedule(self, schedule_id: str, user_id: str) -> JobInfo:\n        job = self.scheduler.get_job(schedule_id)\n        if not job:\n            log(f\"Job {schedule_id} not found.\")\n            raise ValueError(f\"Job #{schedule_id} not found.\")\n\n        job_args = JobArgs(**job.kwargs)\n        if job_args.user_id != user_id:\n            raise ValueError(\"User ID does not match the job's user ID.\")\n\n        log(f\"Deleting job {schedule_id}\")\n        job.remove()\n\n        return JobInfo.from_db(job_args, job)\n\n    @expose\n    def get_execution_schedules(\n        self, graph_id: str | None = None, user_id: str | None = None\n    ) -> list[JobInfo]:\n        schedules = []\n        for job in self.scheduler.get_jobs():\n            job_args = JobArgs(**job.kwargs)\n            if (\n                job.next_run_time is not None\n                and (graph_id is None or job_args.graph_id == graph_id)\n                and (user_id is None or job_args.user_id == user_id)\n            ):\n                schedules.append(JobInfo.from_db(job_args, job))\n        return schedules",
            "children": [
                {
                    "type": "identifier",
                    "label": "ExecutionScheduler",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "(AppService)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "AppService",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "scheduler: BlockingScheduler\n\n    @classmethod\n    def get_port(cls) -> int:\n        return config.execution_scheduler_port\n\n    @property\n    @thread_cached\n    def execution_client(self) -> ExecutionManager:\n        return get_service_client(ExecutionManager)\n\n    def run_service(self):\n        load_dotenv()\n        db_schema, db_url = _extract_schema_from_url(os.getenv(\"DATABASE_URL\"))\n        self.scheduler = BlockingScheduler(\n            jobstores={\n                \"default\": SQLAlchemyJobStore(\n                    engine=create_engine(db_url),\n                    metadata=MetaData(schema=db_schema),\n                )\n            }\n        )\n        self.scheduler.add_listener(job_listener, EVENT_JOB_EXECUTED | EVENT_JOB_ERROR)\n        self.scheduler.start()\n\n    @expose\n    def add_execution_schedule(\n        self,\n        graph_id: str,\n        graph_version: int,\n        cron: str,\n        input_data: BlockInput,\n        user_id: str,\n    ) -> JobInfo:\n        job_args = JobArgs(\n            graph_id=graph_id,\n            input_data=input_data,\n            user_id=user_id,\n            graph_version=graph_version,\n            cron=cron,\n        )\n        job = self.scheduler.add_job(\n            execute_graph,\n            CronTrigger.from_crontab(cron),\n            kwargs=job_args.model_dump(),\n            replace_existing=True,\n        )\n        log(f\"Added job {job.id} with cron schedule '{cron}' input data: {input_data}\")\n        return JobInfo.from_db(job_args, job)\n\n    @expose\n    def delete_schedule(self, schedule_id: str, user_id: str) -> JobInfo:\n        job = self.scheduler.get_job(schedule_id)\n        if not job:\n            log(f\"Job {schedule_id} not found.\")\n            raise ValueError(f\"Job #{schedule_id} not found.\")\n\n        job_args = JobArgs(**job.kwargs)\n        if job_args.user_id != user_id:\n            raise ValueError(\"User ID does not match the job's user ID.\")\n\n        log(f\"Deleting job {schedule_id}\")\n        job.remove()\n\n        return JobInfo.from_db(job_args, job)\n\n    @expose\n    def get_execution_schedules(\n        self, graph_id: str | None = None, user_id: str | None = None\n    ) -> list[JobInfo]:\n        schedules = []\n        for job in self.scheduler.get_jobs():\n            job_args = JobArgs(**job.kwargs)\n            if (\n                job.next_run_time is not None\n                and (graph_id is None or job_args.graph_id == graph_id)\n                and (user_id is None or job_args.user_id == user_id)\n            ):\n                schedules.append(JobInfo.from_db(job_args, job))\n        return schedules",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "scheduler: BlockingScheduler",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "scheduler: BlockingScheduler",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "scheduler",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "BlockingScheduler",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "BlockingScheduler",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "decorated_definition",
                            "label": "@classmethod\n    def get_port(cls) -> int:\n        return config.execution_scheduler_port",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@classmethod",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "classmethod",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "function_definition",
                                    "label": "def get_port(cls) -> int:\n        return config.execution_scheduler_port",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "get_port",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(cls)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "cls",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "int",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "int",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "return config.execution_scheduler_port",
                                            "children": [
                                                {
                                                    "type": "return_statement",
                                                    "label": "return config.execution_scheduler_port",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "config.execution_scheduler_port",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "config",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "execution_scheduler_port",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "decorated_definition",
                            "label": "@property\n    @thread_cached\n    def execution_client(self) -> ExecutionManager:\n        return get_service_client(ExecutionManager)",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@property",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "property",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "decorator",
                                    "label": "@thread_cached",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "thread_cached",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "function_definition",
                                    "label": "def execution_client(self) -> ExecutionManager:\n        return get_service_client(ExecutionManager)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "execution_client",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(self)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "self",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "ExecutionManager",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "ExecutionManager",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "return get_service_client(ExecutionManager)",
                                            "children": [
                                                {
                                                    "type": "return_statement",
                                                    "label": "return get_service_client(ExecutionManager)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "get_service_client(ExecutionManager)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "get_service_client",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(ExecutionManager)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "ExecutionManager",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def run_service(self):\n        load_dotenv()\n        db_schema, db_url = _extract_schema_from_url(os.getenv(\"DATABASE_URL\"))\n        self.scheduler = BlockingScheduler(\n            jobstores={\n                \"default\": SQLAlchemyJobStore(\n                    engine=create_engine(db_url),\n                    metadata=MetaData(schema=db_schema),\n                )\n            }\n        )\n        self.scheduler.add_listener(job_listener, EVENT_JOB_EXECUTED | EVENT_JOB_ERROR)\n        self.scheduler.start()",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "run_service",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "load_dotenv()\n        db_schema, db_url = _extract_schema_from_url(os.getenv(\"DATABASE_URL\"))\n        self.scheduler = BlockingScheduler(\n            jobstores={\n                \"default\": SQLAlchemyJobStore(\n                    engine=create_engine(db_url),\n                    metadata=MetaData(schema=db_schema),\n                )\n            }\n        )\n        self.scheduler.add_listener(job_listener, EVENT_JOB_EXECUTED | EVENT_JOB_ERROR)\n        self.scheduler.start()",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "load_dotenv()",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "load_dotenv()",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "load_dotenv",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "()",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "db_schema, db_url = _extract_schema_from_url(os.getenv(\"DATABASE_URL\"))",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "db_schema, db_url = _extract_schema_from_url(os.getenv(\"DATABASE_URL\"))",
                                                    "children": [
                                                        {
                                                            "type": "pattern_list",
                                                            "label": "db_schema, db_url",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "db_schema",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "db_url",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "_extract_schema_from_url(os.getenv(\"DATABASE_URL\"))",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "_extract_schema_from_url",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(os.getenv(\"DATABASE_URL\"))",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "os.getenv(\"DATABASE_URL\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "os.getenv",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "os",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "getenv",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(\"DATABASE_URL\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"DATABASE_URL\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "DATABASE_URL",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "self.scheduler = BlockingScheduler(\n            jobstores={\n                \"default\": SQLAlchemyJobStore(\n                    engine=create_engine(db_url),\n                    metadata=MetaData(schema=db_schema),\n                )\n            }\n        )",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "self.scheduler = BlockingScheduler(\n            jobstores={\n                \"default\": SQLAlchemyJobStore(\n                    engine=create_engine(db_url),\n                    metadata=MetaData(schema=db_schema),\n                )\n            }\n        )",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.scheduler",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "scheduler",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "BlockingScheduler(\n            jobstores={\n                \"default\": SQLAlchemyJobStore(\n                    engine=create_engine(db_url),\n                    metadata=MetaData(schema=db_schema),\n                )\n            }\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "BlockingScheduler",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n            jobstores={\n                \"default\": SQLAlchemyJobStore(\n                    engine=create_engine(db_url),\n                    metadata=MetaData(schema=db_schema),\n                )\n            }\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "jobstores={\n                \"default\": SQLAlchemyJobStore(\n                    engine=create_engine(db_url),\n                    metadata=MetaData(schema=db_schema),\n                )\n            }",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "jobstores",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "dictionary",
                                                                                    "label": "{\n                \"default\": SQLAlchemyJobStore(\n                    engine=create_engine(db_url),\n                    metadata=MetaData(schema=db_schema),\n                )\n            }",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "pair",
                                                                                            "label": "\"default\": SQLAlchemyJobStore(\n                    engine=create_engine(db_url),\n                    metadata=MetaData(schema=db_schema),\n                )",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"default\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "default",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "SQLAlchemyJobStore(\n                    engine=create_engine(db_url),\n                    metadata=MetaData(schema=db_schema),\n                )",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "SQLAlchemyJobStore",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(\n                    engine=create_engine(db_url),\n                    metadata=MetaData(schema=db_schema),\n                )",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "keyword_argument",
                                                                                                                    "label": "engine=create_engine(db_url)",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "engine",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "call",
                                                                                                                            "label": "create_engine(db_url)",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "create_engine",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "argument_list",
                                                                                                                                    "label": "(db_url)",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "db_url",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "keyword_argument",
                                                                                                                    "label": "metadata=MetaData(schema=db_schema)",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "metadata",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "call",
                                                                                                                            "label": "MetaData(schema=db_schema)",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "MetaData",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "argument_list",
                                                                                                                                    "label": "(schema=db_schema)",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "keyword_argument",
                                                                                                                                            "label": "schema=db_schema",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "schema",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "db_schema",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "self.scheduler.add_listener(job_listener, EVENT_JOB_EXECUTED | EVENT_JOB_ERROR)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "self.scheduler.add_listener(job_listener, EVENT_JOB_EXECUTED | EVENT_JOB_ERROR)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.scheduler.add_listener",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "self.scheduler",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "self",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "scheduler",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "add_listener",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(job_listener, EVENT_JOB_EXECUTED | EVENT_JOB_ERROR)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "job_listener",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "binary_operator",
                                                                    "label": "EVENT_JOB_EXECUTED | EVENT_JOB_ERROR",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "EVENT_JOB_EXECUTED",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "EVENT_JOB_ERROR",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "self.scheduler.start()",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "self.scheduler.start()",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.scheduler.start",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "self.scheduler",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "self",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "scheduler",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "start",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "()",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "decorated_definition",
                            "label": "@expose\n    def add_execution_schedule(\n        self,\n        graph_id: str,\n        graph_version: int,\n        cron: str,\n        input_data: BlockInput,\n        user_id: str,\n    ) -> JobInfo:\n        job_args = JobArgs(\n            graph_id=graph_id,\n            input_data=input_data,\n            user_id=user_id,\n            graph_version=graph_version,\n            cron=cron,\n        )\n        job = self.scheduler.add_job(\n            execute_graph,\n            CronTrigger.from_crontab(cron),\n            kwargs=job_args.model_dump(),\n            replace_existing=True,\n        )\n        log(f\"Added job {job.id} with cron schedule '{cron}' input data: {input_data}\")\n        return JobInfo.from_db(job_args, job)",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@expose",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "expose",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "function_definition",
                                    "label": "def add_execution_schedule(\n        self,\n        graph_id: str,\n        graph_version: int,\n        cron: str,\n        input_data: BlockInput,\n        user_id: str,\n    ) -> JobInfo:\n        job_args = JobArgs(\n            graph_id=graph_id,\n            input_data=input_data,\n            user_id=user_id,\n            graph_version=graph_version,\n            cron=cron,\n        )\n        job = self.scheduler.add_job(\n            execute_graph,\n            CronTrigger.from_crontab(cron),\n            kwargs=job_args.model_dump(),\n            replace_existing=True,\n        )\n        log(f\"Added job {job.id} with cron schedule '{cron}' input data: {input_data}\")\n        return JobInfo.from_db(job_args, job)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "add_execution_schedule",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(\n        self,\n        graph_id: str,\n        graph_version: int,\n        cron: str,\n        input_data: BlockInput,\n        user_id: str,\n    )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "self",
                                                    "children": []
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "graph_id: str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "graph_id",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "graph_version: int",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "graph_version",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "int",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "int",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "cron: str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "cron",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "input_data: BlockInput",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "input_data",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "BlockInput",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "BlockInput",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "user_id: str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "user_id",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "JobInfo",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "JobInfo",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "job_args = JobArgs(\n            graph_id=graph_id,\n            input_data=input_data,\n            user_id=user_id,\n            graph_version=graph_version,\n            cron=cron,\n        )\n        job = self.scheduler.add_job(\n            execute_graph,\n            CronTrigger.from_crontab(cron),\n            kwargs=job_args.model_dump(),\n            replace_existing=True,\n        )\n        log(f\"Added job {job.id} with cron schedule '{cron}' input data: {input_data}\")\n        return JobInfo.from_db(job_args, job)",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "job_args = JobArgs(\n            graph_id=graph_id,\n            input_data=input_data,\n            user_id=user_id,\n            graph_version=graph_version,\n            cron=cron,\n        )",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "job_args = JobArgs(\n            graph_id=graph_id,\n            input_data=input_data,\n            user_id=user_id,\n            graph_version=graph_version,\n            cron=cron,\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "job_args",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "JobArgs(\n            graph_id=graph_id,\n            input_data=input_data,\n            user_id=user_id,\n            graph_version=graph_version,\n            cron=cron,\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "JobArgs",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(\n            graph_id=graph_id,\n            input_data=input_data,\n            user_id=user_id,\n            graph_version=graph_version,\n            cron=cron,\n        )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "graph_id=graph_id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "graph_id",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "graph_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "input_data=input_data",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "input_data",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "input_data",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "user_id=user_id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "user_id",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "graph_version=graph_version",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "graph_version",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "graph_version",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "cron=cron",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "cron",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "cron",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "job = self.scheduler.add_job(\n            execute_graph,\n            CronTrigger.from_crontab(cron),\n            kwargs=job_args.model_dump(),\n            replace_existing=True,\n        )",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "job = self.scheduler.add_job(\n            execute_graph,\n            CronTrigger.from_crontab(cron),\n            kwargs=job_args.model_dump(),\n            replace_existing=True,\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "job",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "self.scheduler.add_job(\n            execute_graph,\n            CronTrigger.from_crontab(cron),\n            kwargs=job_args.model_dump(),\n            replace_existing=True,\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "self.scheduler.add_job",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "self.scheduler",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "self",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "scheduler",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "add_job",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(\n            execute_graph,\n            CronTrigger.from_crontab(cron),\n            kwargs=job_args.model_dump(),\n            replace_existing=True,\n        )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "execute_graph",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "CronTrigger.from_crontab(cron)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "CronTrigger.from_crontab",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "CronTrigger",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "from_crontab",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(cron)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "cron",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "kwargs=job_args.model_dump()",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "kwargs",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "job_args.model_dump()",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "job_args.model_dump",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "job_args",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "model_dump",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "()",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "replace_existing=True",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "replace_existing",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "true",
                                                                                            "label": "True",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "log(f\"Added job {job.id} with cron schedule '{cron}' input data: {input_data}\")",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "log(f\"Added job {job.id} with cron schedule '{cron}' input data: {input_data}\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "log",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(f\"Added job {job.id} with cron schedule '{cron}' input data: {input_data}\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "f\"Added job {job.id} with cron schedule '{cron}' input data: {input_data}\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "f\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "Added job ",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{job.id}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "job.id",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "job",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": " with cron schedule '",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{cron}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "cron",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "' input data: ",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{input_data}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "input_data",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "return_statement",
                                                    "label": "return JobInfo.from_db(job_args, job)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "JobInfo.from_db(job_args, job)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "JobInfo.from_db",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "JobInfo",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "from_db",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(job_args, job)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "job_args",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "job",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "decorated_definition",
                            "label": "@expose\n    def delete_schedule(self, schedule_id: str, user_id: str) -> JobInfo:\n        job = self.scheduler.get_job(schedule_id)\n        if not job:\n            log(f\"Job {schedule_id} not found.\")\n            raise ValueError(f\"Job #{schedule_id} not found.\")\n\n        job_args = JobArgs(**job.kwargs)\n        if job_args.user_id != user_id:\n            raise ValueError(\"User ID does not match the job's user ID.\")\n\n        log(f\"Deleting job {schedule_id}\")\n        job.remove()\n\n        return JobInfo.from_db(job_args, job)",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@expose",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "expose",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "function_definition",
                                    "label": "def delete_schedule(self, schedule_id: str, user_id: str) -> JobInfo:\n        job = self.scheduler.get_job(schedule_id)\n        if not job:\n            log(f\"Job {schedule_id} not found.\")\n            raise ValueError(f\"Job #{schedule_id} not found.\")\n\n        job_args = JobArgs(**job.kwargs)\n        if job_args.user_id != user_id:\n            raise ValueError(\"User ID does not match the job's user ID.\")\n\n        log(f\"Deleting job {schedule_id}\")\n        job.remove()\n\n        return JobInfo.from_db(job_args, job)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "delete_schedule",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(self, schedule_id: str, user_id: str)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "self",
                                                    "children": []
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "schedule_id: str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "schedule_id",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "user_id: str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "user_id",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "JobInfo",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "JobInfo",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "job = self.scheduler.get_job(schedule_id)\n        if not job:\n            log(f\"Job {schedule_id} not found.\")\n            raise ValueError(f\"Job #{schedule_id} not found.\")\n\n        job_args = JobArgs(**job.kwargs)\n        if job_args.user_id != user_id:\n            raise ValueError(\"User ID does not match the job's user ID.\")\n\n        log(f\"Deleting job {schedule_id}\")\n        job.remove()\n\n        return JobInfo.from_db(job_args, job)",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "job = self.scheduler.get_job(schedule_id)",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "job = self.scheduler.get_job(schedule_id)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "job",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "self.scheduler.get_job(schedule_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "self.scheduler.get_job",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "self.scheduler",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "self",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "scheduler",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "get_job",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(schedule_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "schedule_id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "if_statement",
                                                    "label": "if not job:\n            log(f\"Job {schedule_id} not found.\")\n            raise ValueError(f\"Job #{schedule_id} not found.\")",
                                                    "children": [
                                                        {
                                                            "type": "not_operator",
                                                            "label": "not job",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "job",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "log(f\"Job {schedule_id} not found.\")\n            raise ValueError(f\"Job #{schedule_id} not found.\")",
                                                            "children": [
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "log(f\"Job {schedule_id} not found.\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "log(f\"Job {schedule_id} not found.\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "log",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(f\"Job {schedule_id} not found.\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "f\"Job {schedule_id} not found.\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "f\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "Job ",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{schedule_id}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "schedule_id",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": " not found.",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "raise_statement",
                                                                    "label": "raise ValueError(f\"Job #{schedule_id} not found.\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "ValueError(f\"Job #{schedule_id} not found.\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "ValueError",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(f\"Job #{schedule_id} not found.\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "f\"Job #{schedule_id} not found.\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "f\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "Job #",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{schedule_id}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "schedule_id",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": " not found.",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "job_args = JobArgs(**job.kwargs)",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "job_args = JobArgs(**job.kwargs)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "job_args",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "JobArgs(**job.kwargs)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "JobArgs",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(**job.kwargs)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "dictionary_splat",
                                                                                    "label": "**job.kwargs",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "job.kwargs",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "job",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "kwargs",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "if_statement",
                                                    "label": "if job_args.user_id != user_id:\n            raise ValueError(\"User ID does not match the job's user ID.\")",
                                                    "children": [
                                                        {
                                                            "type": "comparison_operator",
                                                            "label": "job_args.user_id != user_id",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "job_args.user_id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "job_args",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "user_id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "user_id",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "raise ValueError(\"User ID does not match the job's user ID.\")",
                                                            "children": [
                                                                {
                                                                    "type": "raise_statement",
                                                                    "label": "raise ValueError(\"User ID does not match the job's user ID.\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "ValueError(\"User ID does not match the job's user ID.\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "ValueError",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(\"User ID does not match the job's user ID.\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"User ID does not match the job's user ID.\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "User ID does not match the job's user ID.",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "log(f\"Deleting job {schedule_id}\")",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "log(f\"Deleting job {schedule_id}\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "log",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(f\"Deleting job {schedule_id}\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "f\"Deleting job {schedule_id}\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "f\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "Deleting job ",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{schedule_id}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "schedule_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "job.remove()",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "job.remove()",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "job.remove",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "job",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "remove",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "return_statement",
                                                    "label": "return JobInfo.from_db(job_args, job)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "JobInfo.from_db(job_args, job)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "JobInfo.from_db",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "JobInfo",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "from_db",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(job_args, job)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "job_args",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "job",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "decorated_definition",
                            "label": "@expose\n    def get_execution_schedules(\n        self, graph_id: str | None = None, user_id: str | None = None\n    ) -> list[JobInfo]:\n        schedules = []\n        for job in self.scheduler.get_jobs():\n            job_args = JobArgs(**job.kwargs)\n            if (\n                job.next_run_time is not None\n                and (graph_id is None or job_args.graph_id == graph_id)\n                and (user_id is None or job_args.user_id == user_id)\n            ):\n                schedules.append(JobInfo.from_db(job_args, job))\n        return schedules",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@expose",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "expose",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "function_definition",
                                    "label": "def get_execution_schedules(\n        self, graph_id: str | None = None, user_id: str | None = None\n    ) -> list[JobInfo]:\n        schedules = []\n        for job in self.scheduler.get_jobs():\n            job_args = JobArgs(**job.kwargs)\n            if (\n                job.next_run_time is not None\n                and (graph_id is None or job_args.graph_id == graph_id)\n                and (user_id is None or job_args.user_id == user_id)\n            ):\n                schedules.append(JobInfo.from_db(job_args, job))\n        return schedules",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "get_execution_schedules",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(\n        self, graph_id: str | None = None, user_id: str | None = None\n    )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "self",
                                                    "children": []
                                                },
                                                {
                                                    "type": "typed_default_parameter",
                                                    "label": "graph_id: str | None = None",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "graph_id",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "str | None",
                                                            "children": [
                                                                {
                                                                    "type": "binary_operator",
                                                                    "label": "str | None",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "none",
                                                                            "label": "None",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "none",
                                                            "label": "None",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "typed_default_parameter",
                                                    "label": "user_id: str | None = None",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "user_id",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "str | None",
                                                            "children": [
                                                                {
                                                                    "type": "binary_operator",
                                                                    "label": "str | None",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "none",
                                                                            "label": "None",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "none",
                                                            "label": "None",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "list[JobInfo]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "list[JobInfo]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "list",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[JobInfo]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "JobInfo",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "JobInfo",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "schedules = []\n        for job in self.scheduler.get_jobs():\n            job_args = JobArgs(**job.kwargs)\n            if (\n                job.next_run_time is not None\n                and (graph_id is None or job_args.graph_id == graph_id)\n                and (user_id is None or job_args.user_id == user_id)\n            ):\n                schedules.append(JobInfo.from_db(job_args, job))\n        return schedules",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "schedules = []",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "schedules = []",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "schedules",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "list",
                                                                    "label": "[]",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "for_statement",
                                                    "label": "for job in self.scheduler.get_jobs():\n            job_args = JobArgs(**job.kwargs)\n            if (\n                job.next_run_time is not None\n                and (graph_id is None or job_args.graph_id == graph_id)\n                and (user_id is None or job_args.user_id == user_id)\n            ):\n                schedules.append(JobInfo.from_db(job_args, job))",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "job",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "self.scheduler.get_jobs()",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "self.scheduler.get_jobs",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "self.scheduler",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "self",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "scheduler",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "get_jobs",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "job_args = JobArgs(**job.kwargs)\n            if (\n                job.next_run_time is not None\n                and (graph_id is None or job_args.graph_id == graph_id)\n                and (user_id is None or job_args.user_id == user_id)\n            ):\n                schedules.append(JobInfo.from_db(job_args, job))",
                                                            "children": [
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "job_args = JobArgs(**job.kwargs)",
                                                                    "children": [
                                                                        {
                                                                            "type": "assignment",
                                                                            "label": "job_args = JobArgs(**job.kwargs)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "job_args",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "JobArgs(**job.kwargs)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "JobArgs",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(**job.kwargs)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "dictionary_splat",
                                                                                                    "label": "**job.kwargs",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "job.kwargs",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "job",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "kwargs",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "if_statement",
                                                                    "label": "if (\n                job.next_run_time is not None\n                and (graph_id is None or job_args.graph_id == graph_id)\n                and (user_id is None or job_args.user_id == user_id)\n            ):\n                schedules.append(JobInfo.from_db(job_args, job))",
                                                                    "children": [
                                                                        {
                                                                            "type": "parenthesized_expression",
                                                                            "label": "(\n                job.next_run_time is not None\n                and (graph_id is None or job_args.graph_id == graph_id)\n                and (user_id is None or job_args.user_id == user_id)\n            )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "boolean_operator",
                                                                                    "label": "job.next_run_time is not None\n                and (graph_id is None or job_args.graph_id == graph_id)\n                and (user_id is None or job_args.user_id == user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "boolean_operator",
                                                                                            "label": "job.next_run_time is not None\n                and (graph_id is None or job_args.graph_id == graph_id)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "comparison_operator",
                                                                                                    "label": "job.next_run_time is not None",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "job.next_run_time",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "job",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "next_run_time",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "none",
                                                                                                            "label": "None",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "parenthesized_expression",
                                                                                                    "label": "(graph_id is None or job_args.graph_id == graph_id)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "boolean_operator",
                                                                                                            "label": "graph_id is None or job_args.graph_id == graph_id",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "comparison_operator",
                                                                                                                    "label": "graph_id is None",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "graph_id",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "none",
                                                                                                                            "label": "None",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "comparison_operator",
                                                                                                                    "label": "job_args.graph_id == graph_id",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "attribute",
                                                                                                                            "label": "job_args.graph_id",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "job_args",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "graph_id",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "graph_id",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "parenthesized_expression",
                                                                                            "label": "(user_id is None or job_args.user_id == user_id)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "boolean_operator",
                                                                                                    "label": "user_id is None or job_args.user_id == user_id",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "comparison_operator",
                                                                                                            "label": "user_id is None",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "user_id",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "none",
                                                                                                                    "label": "None",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "comparison_operator",
                                                                                                            "label": "job_args.user_id == user_id",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "attribute",
                                                                                                                    "label": "job_args.user_id",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "job_args",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "user_id",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "user_id",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "block",
                                                                            "label": "schedules.append(JobInfo.from_db(job_args, job))",
                                                                            "children": [
                                                                                {
                                                                                    "type": "expression_statement",
                                                                                    "label": "schedules.append(JobInfo.from_db(job_args, job))",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "schedules.append(JobInfo.from_db(job_args, job))",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "schedules.append",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "schedules",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "append",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(JobInfo.from_db(job_args, job))",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "call",
                                                                                                            "label": "JobInfo.from_db(job_args, job)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "attribute",
                                                                                                                    "label": "JobInfo.from_db",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "JobInfo",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "from_db",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "argument_list",
                                                                                                                    "label": "(job_args, job)",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "job_args",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "job",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "return_statement",
                                                    "label": "return schedules",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "schedules",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}