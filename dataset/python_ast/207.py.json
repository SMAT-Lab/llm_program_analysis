{
    "type": "module",
    "label": "\"\"\"\nWord Ladder is a classic problem in computer science.\nThe problem is to transform a start word into an end word\nby changing one letter at a time.\nEach intermediate word must be a valid word from a given list of words.\nThe goal is to find a transformation sequence\nfrom the start word to the end word.\n\nWikipedia: https://en.wikipedia.org/wiki/Word_ladder\n\"\"\"\n\nimport string\n\n\ndef backtrack(\n    current_word: str, path: list[str], end_word: str, word_set: set[str]\n) -> list[str]:\n    \"\"\"\n    Helper function to perform backtracking to find the transformation\n    from the current_word to the end_word.\n\n    Parameters:\n    current_word (str): The current word in the transformation sequence.\n    path (list[str]): The list of transformations from begin_word to current_word.\n    end_word (str): The target word for transformation.\n    word_set (set[str]): The set of valid words for transformation.\n\n    Returns:\n    list[str]: The list of transformations from begin_word to end_word.\n               Returns an empty list if there is no valid\n                transformation from current_word to end_word.\n\n    Example:\n    >>> backtrack(\"hit\", [\"hit\"], \"cog\", {\"hot\", \"dot\", \"dog\", \"lot\", \"log\", \"cog\"})\n    ['hit', 'hot', 'dot', 'lot', 'log', 'cog']\n\n    >>> backtrack(\"hit\", [\"hit\"], \"cog\", {\"hot\", \"dot\", \"dog\", \"lot\", \"log\"})\n    []\n\n    >>> backtrack(\"lead\", [\"lead\"], \"gold\", {\"load\", \"goad\", \"gold\", \"lead\", \"lord\"})\n    ['lead', 'lead', 'load', 'goad', 'gold']\n\n    >>> backtrack(\"game\", [\"game\"], \"code\", {\"came\", \"cage\", \"code\", \"cade\", \"gave\"})\n    ['game', 'came', 'cade', 'code']\n    \"\"\"\n\n    # Base case: If the current word is the end word, return the path\n    if current_word == end_word:\n        return path\n\n    # Try all possible single-letter transformations\n    for i in range(len(current_word)):\n        for c in string.ascii_lowercase:  # Try changing each letter\n            transformed_word = current_word[:i] + c + current_word[i + 1 :]\n            if transformed_word in word_set:\n                word_set.remove(transformed_word)\n                # Recur with the new word added to the path\n                result = backtrack(\n                    transformed_word, [*path, transformed_word], end_word, word_set\n                )\n                if result:  # valid transformation found\n                    return result\n                word_set.add(transformed_word)  # backtrack\n\n    return []  # No valid transformation found\n\n\ndef word_ladder(begin_word: str, end_word: str, word_set: set[str]) -> list[str]:\n    \"\"\"\n    Solve the Word Ladder problem using Backtracking and return\n    the list of transformations from begin_word to end_word.\n\n    Parameters:\n    begin_word (str): The word from which the transformation starts.\n    end_word (str): The target word for transformation.\n    word_list (list[str]): The list of valid words for transformation.\n\n    Returns:\n    list[str]: The list of transformations from begin_word to end_word.\n               Returns an empty list if there is no valid transformation.\n\n    Example:\n    >>> word_ladder(\"hit\", \"cog\", [\"hot\", \"dot\", \"dog\", \"lot\", \"log\", \"cog\"])\n    ['hit', 'hot', 'dot', 'lot', 'log', 'cog']\n\n    >>> word_ladder(\"hit\", \"cog\", [\"hot\", \"dot\", \"dog\", \"lot\", \"log\"])\n    []\n\n    >>> word_ladder(\"lead\", \"gold\", [\"load\", \"goad\", \"gold\", \"lead\", \"lord\"])\n    ['lead', 'lead', 'load', 'goad', 'gold']\n\n    >>> word_ladder(\"game\", \"code\", [\"came\", \"cage\", \"code\", \"cade\", \"gave\"])\n    ['game', 'came', 'cade', 'code']\n    \"\"\"\n\n    if end_word not in word_set:  # no valid transformation possible\n        return []\n\n    # Perform backtracking starting from the begin_word\n    return backtrack(begin_word, [begin_word], end_word, word_set)\n",
    "start_token": 0,
    "end_token": 399,
    "children": [
        {
            "type": "expression_statement",
            "label": "\"\"\"\nWord Ladder is a classic problem in computer science.\nThe problem is to transform a start word into an end word\nby changing one letter at a time.\nEach intermediate word must be a valid word from a given list of words.\nThe goal is to find a transformation sequence\nfrom the start word to the end word.\n\nWikipedia: https://en.wikipedia.org/wiki/Word_ladder\n\"\"\"",
            "start_token": 0,
            "end_token": 2,
            "children": [
                {
                    "type": "string",
                    "label": "\"\"\"\nWord Ladder is a classic problem in computer science.\nThe problem is to transform a start word into an end word\nby changing one letter at a time.\nEach intermediate word must be a valid word from a given list of words.\nThe goal is to find a transformation sequence\nfrom the start word to the end word.\n\nWikipedia: https://en.wikipedia.org/wiki/Word_ladder\n\"\"\"",
                    "start_token": 0,
                    "end_token": 2,
                    "children": [
                        {
                            "type": "string_start",
                            "label": "\"\"\"",
                            "start_token": 0,
                            "end_token": 1,
                            "children": []
                        },
                        {
                            "type": "string_content",
                            "label": "\nWord Ladder is a classic problem in computer science.\nThe problem is to transform a start word into an end word\nby changing one letter at a time.\nEach intermediate word must be a valid word from a given list of words.\nThe goal is to find a transformation sequence\nfrom the start word to the end word.\n\nWikipedia: https://en.wikipedia.org/wiki/Word_ladder\n",
                            "start_token": 1,
                            "end_token": 1,
                            "children": []
                        },
                        {
                            "type": "string_end",
                            "label": "\"\"\"",
                            "start_token": 1,
                            "end_token": 2,
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import string",
            "start_token": 5,
            "end_token": 6,
            "children": [
                {
                    "type": "dotted_name",
                    "label": "string",
                    "start_token": 6,
                    "end_token": 6,
                    "children": [
                        {
                            "type": "identifier",
                            "label": "string",
                            "start_token": 6,
                            "end_token": 6,
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def backtrack(\n    current_word: str, path: list[str], end_word: str, word_set: set[str]\n) -> list[str]:\n    \"\"\"\n    Helper function to perform backtracking to find the transformation\n    from the current_word to the end_word.\n\n    Parameters:\n    current_word (str): The current word in the transformation sequence.\n    path (list[str]): The list of transformations from begin_word to current_word.\n    end_word (str): The target word for transformation.\n    word_set (set[str]): The set of valid words for transformation.\n\n    Returns:\n    list[str]: The list of transformations from begin_word to end_word.\n               Returns an empty list if there is no valid\n                transformation from current_word to end_word.\n\n    Example:\n    >>> backtrack(\"hit\", [\"hit\"], \"cog\", {\"hot\", \"dot\", \"dog\", \"lot\", \"log\", \"cog\"})\n    ['hit', 'hot', 'dot', 'lot', 'log', 'cog']\n\n    >>> backtrack(\"hit\", [\"hit\"], \"cog\", {\"hot\", \"dot\", \"dog\", \"lot\", \"log\"})\n    []\n\n    >>> backtrack(\"lead\", [\"lead\"], \"gold\", {\"load\", \"goad\", \"gold\", \"lead\", \"lord\"})\n    ['lead', 'lead', 'load', 'goad', 'gold']\n\n    >>> backtrack(\"game\", [\"game\"], \"code\", {\"came\", \"cage\", \"code\", \"cade\", \"gave\"})\n    ['game', 'came', 'cade', 'code']\n    \"\"\"\n\n    # Base case: If the current word is the end word, return the path\n    if current_word == end_word:\n        return path\n\n    # Try all possible single-letter transformations\n    for i in range(len(current_word)):\n        for c in string.ascii_lowercase:  # Try changing each letter\n            transformed_word = current_word[:i] + c + current_word[i + 1 :]\n            if transformed_word in word_set:\n                word_set.remove(transformed_word)\n                # Recur with the new word added to the path\n                result = backtrack(\n                    transformed_word, [*path, transformed_word], end_word, word_set\n                )\n                if result:  # valid transformation found\n                    return result\n                word_set.add(transformed_word)  # backtrack\n\n    return []  # No valid transformation found",
            "start_token": 10,
            "end_token": 268,
            "children": [
                {
                    "type": "identifier",
                    "label": "backtrack",
                    "start_token": 11,
                    "end_token": 11,
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(\n    current_word: str, path: list[str], end_word: str, word_set: set[str]\n)",
                    "start_token": 12,
                    "end_token": 36,
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "current_word: str",
                            "start_token": 14,
                            "end_token": 16,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "current_word",
                                    "start_token": 14,
                                    "end_token": 14,
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "start_token": 16,
                                    "end_token": 16,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "start_token": 16,
                                            "end_token": 16,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "path: list[str]",
                            "start_token": 18,
                            "end_token": 23,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "path",
                                    "start_token": 18,
                                    "end_token": 18,
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "list[str]",
                                    "start_token": 20,
                                    "end_token": 23,
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "list[str]",
                                            "start_token": 20,
                                            "end_token": 23,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "list",
                                                    "start_token": 20,
                                                    "end_token": 20,
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[str]",
                                                    "start_token": 21,
                                                    "end_token": 23,
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "start_token": 22,
                                                            "end_token": 22,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "start_token": 22,
                                                                    "end_token": 22,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "end_word: str",
                            "start_token": 25,
                            "end_token": 27,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "end_word",
                                    "start_token": 25,
                                    "end_token": 25,
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "word_set: set[str]",
                            "start_token": 29,
                            "end_token": 34,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "word_set",
                                    "start_token": 29,
                                    "end_token": 29,
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "set[str]",
                                    "start_token": 31,
                                    "end_token": 34,
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "set[str]",
                                            "start_token": 31,
                                            "end_token": 34,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "set",
                                                    "start_token": 31,
                                                    "end_token": 31,
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[str]",
                                                    "start_token": 32,
                                                    "end_token": 34,
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "start_token": 33,
                                                            "end_token": 33,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "start_token": 33,
                                                                    "end_token": 33,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "list[str]",
                    "start_token": 39,
                    "end_token": 42,
                    "children": [
                        {
                            "type": "generic_type",
                            "label": "list[str]",
                            "start_token": 39,
                            "end_token": 42,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "list",
                                    "start_token": 39,
                                    "end_token": 39,
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "label": "[str]",
                                    "start_token": 40,
                                    "end_token": 42,
                                    "children": [
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "start_token": 41,
                                            "end_token": 41,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "start_token": 41,
                                                    "end_token": 41,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    Helper function to perform backtracking to find the transformation\n    from the current_word to the end_word.\n\n    Parameters:\n    current_word (str): The current word in the transformation sequence.\n    path (list[str]): The list of transformations from begin_word to current_word.\n    end_word (str): The target word for transformation.\n    word_set (set[str]): The set of valid words for transformation.\n\n    Returns:\n    list[str]: The list of transformations from begin_word to end_word.\n               Returns an empty list if there is no valid\n                transformation from current_word to end_word.\n\n    Example:\n    >>> backtrack(\"hit\", [\"hit\"], \"cog\", {\"hot\", \"dot\", \"dog\", \"lot\", \"log\", \"cog\"})\n    ['hit', 'hot', 'dot', 'lot', 'log', 'cog']\n\n    >>> backtrack(\"hit\", [\"hit\"], \"cog\", {\"hot\", \"dot\", \"dog\", \"lot\", \"log\"})\n    []\n\n    >>> backtrack(\"lead\", [\"lead\"], \"gold\", {\"load\", \"goad\", \"gold\", \"lead\", \"lord\"})\n    ['lead', 'lead', 'load', 'goad', 'gold']\n\n    >>> backtrack(\"game\", [\"game\"], \"code\", {\"came\", \"cage\", \"code\", \"cade\", \"gave\"})\n    ['game', 'came', 'cade', 'code']\n    \"\"\"\n\n    # Base case: If the current word is the end word, return the path\n    if current_word == end_word:\n        return path\n\n    # Try all possible single-letter transformations\n    for i in range(len(current_word)):\n        for c in string.ascii_lowercase:  # Try changing each letter\n            transformed_word = current_word[:i] + c + current_word[i + 1 :]\n            if transformed_word in word_set:\n                word_set.remove(transformed_word)\n                # Recur with the new word added to the path\n                result = backtrack(\n                    transformed_word, [*path, transformed_word], end_word, word_set\n                )\n                if result:  # valid transformation found\n                    return result\n                word_set.add(transformed_word)  # backtrack\n\n    return []  # No valid transformation found",
                    "start_token": 45,
                    "end_token": 268,
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    Helper function to perform backtracking to find the transformation\n    from the current_word to the end_word.\n\n    Parameters:\n    current_word (str): The current word in the transformation sequence.\n    path (list[str]): The list of transformations from begin_word to current_word.\n    end_word (str): The target word for transformation.\n    word_set (set[str]): The set of valid words for transformation.\n\n    Returns:\n    list[str]: The list of transformations from begin_word to end_word.\n               Returns an empty list if there is no valid\n                transformation from current_word to end_word.\n\n    Example:\n    >>> backtrack(\"hit\", [\"hit\"], \"cog\", {\"hot\", \"dot\", \"dog\", \"lot\", \"log\", \"cog\"})\n    ['hit', 'hot', 'dot', 'lot', 'log', 'cog']\n\n    >>> backtrack(\"hit\", [\"hit\"], \"cog\", {\"hot\", \"dot\", \"dog\", \"lot\", \"log\"})\n    []\n\n    >>> backtrack(\"lead\", [\"lead\"], \"gold\", {\"load\", \"goad\", \"gold\", \"lead\", \"lord\"})\n    ['lead', 'lead', 'load', 'goad', 'gold']\n\n    >>> backtrack(\"game\", [\"game\"], \"code\", {\"came\", \"cage\", \"code\", \"cade\", \"gave\"})\n    ['game', 'came', 'cade', 'code']\n    \"\"\"",
                            "start_token": 45,
                            "end_token": 113,
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    Helper function to perform backtracking to find the transformation\n    from the current_word to the end_word.\n\n    Parameters:\n    current_word (str): The current word in the transformation sequence.\n    path (list[str]): The list of transformations from begin_word to current_word.\n    end_word (str): The target word for transformation.\n    word_set (set[str]): The set of valid words for transformation.\n\n    Returns:\n    list[str]: The list of transformations from begin_word to end_word.\n               Returns an empty list if there is no valid\n                transformation from current_word to end_word.\n\n    Example:\n    >>> backtrack(\"hit\", [\"hit\"], \"cog\", {\"hot\", \"dot\", \"dog\", \"lot\", \"log\", \"cog\"})\n    ['hit', 'hot', 'dot', 'lot', 'log', 'cog']\n\n    >>> backtrack(\"hit\", [\"hit\"], \"cog\", {\"hot\", \"dot\", \"dog\", \"lot\", \"log\"})\n    []\n\n    >>> backtrack(\"lead\", [\"lead\"], \"gold\", {\"load\", \"goad\", \"gold\", \"lead\", \"lord\"})\n    ['lead', 'lead', 'load', 'goad', 'gold']\n\n    >>> backtrack(\"game\", [\"game\"], \"code\", {\"came\", \"cage\", \"code\", \"cade\", \"gave\"})\n    ['game', 'came', 'cade', 'code']\n    \"\"\"",
                                    "start_token": 45,
                                    "end_token": 113,
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "start_token": 45,
                                            "end_token": 46,
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    Helper function to perform backtracking to find the transformation\n    from the current_word to the end_word.\n\n    Parameters:\n    current_word (str): The current word in the transformation sequence.\n    path (list[str]): The list of transformations from begin_word to current_word.\n    end_word (str): The target word for transformation.\n    word_set (set[str]): The set of valid words for transformation.\n\n    Returns:\n    list[str]: The list of transformations from begin_word to end_word.\n               Returns an empty list if there is no valid\n                transformation from current_word to end_word.\n\n    Example:\n    >>> backtrack(\"hit\", [\"hit\"], \"cog\", {\"hot\", \"dot\", \"dog\", \"lot\", \"log\", \"cog\"})\n    ['hit', 'hot', 'dot', 'lot', 'log', 'cog']\n\n    >>> backtrack(\"hit\", [\"hit\"], \"cog\", {\"hot\", \"dot\", \"dog\", \"lot\", \"log\"})\n    []\n\n    >>> backtrack(\"lead\", [\"lead\"], \"gold\", {\"load\", \"goad\", \"gold\", \"lead\", \"lord\"})\n    ['lead', 'lead', 'load', 'goad', 'gold']\n\n    >>> backtrack(\"game\", [\"game\"], \"code\", {\"came\", \"cage\", \"code\", \"cade\", \"gave\"})\n    ['game', 'came', 'cade', 'code']\n    ",
                                            "start_token": 46,
                                            "end_token": 112,
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "start_token": 112,
                                            "end_token": 113,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# Base case: If the current word is the end word, return the path",
                            "start_token": 116,
                            "end_token": 131,
                            "children": []
                        },
                        {
                            "type": "if_statement",
                            "label": "if current_word == end_word:\n        return path",
                            "start_token": 133,
                            "end_token": 141,
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "label": "current_word == end_word",
                                    "start_token": 134,
                                    "end_token": 137,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "current_word",
                                            "start_token": 134,
                                            "end_token": 134,
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "end_word",
                                            "start_token": 137,
                                            "end_token": 137,
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "return path",
                                    "start_token": 140,
                                    "end_token": 141,
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "label": "return path",
                                            "start_token": 140,
                                            "end_token": 141,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "path",
                                                    "start_token": 141,
                                                    "end_token": 141,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# Try all possible single-letter transformations",
                            "start_token": 144,
                            "end_token": 151,
                            "children": []
                        },
                        {
                            "type": "for_statement",
                            "label": "for i in range(len(current_word)):\n        for c in string.ascii_lowercase:  # Try changing each letter\n            transformed_word = current_word[:i] + c + current_word[i + 1 :]\n            if transformed_word in word_set:\n                word_set.remove(transformed_word)\n                # Recur with the new word added to the path\n                result = backtrack(\n                    transformed_word, [*path, transformed_word], end_word, word_set\n                )\n                if result:  # valid transformation found\n                    return result\n                word_set.add(transformed_word)  # backtrack",
                            "start_token": 153,
                            "end_token": 258,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "i",
                                    "start_token": 154,
                                    "end_token": 154,
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "label": "range(len(current_word))",
                                    "start_token": 156,
                                    "end_token": 162,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "range",
                                            "start_token": 156,
                                            "end_token": 156,
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(len(current_word))",
                                            "start_token": 157,
                                            "end_token": 162,
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "len(current_word)",
                                                    "start_token": 158,
                                                    "end_token": 161,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "len",
                                                            "start_token": 158,
                                                            "end_token": 158,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(current_word)",
                                                            "start_token": 159,
                                                            "end_token": 161,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "current_word",
                                                                    "start_token": 160,
                                                                    "end_token": 160,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "for c in string.ascii_lowercase:  # Try changing each letter\n            transformed_word = current_word[:i] + c + current_word[i + 1 :]\n            if transformed_word in word_set:\n                word_set.remove(transformed_word)\n                # Recur with the new word added to the path\n                result = backtrack(\n                    transformed_word, [*path, transformed_word], end_word, word_set\n                )\n                if result:  # valid transformation found\n                    return result\n                word_set.add(transformed_word)  # backtrack",
                                    "start_token": 165,
                                    "end_token": 258,
                                    "children": [
                                        {
                                            "type": "for_statement",
                                            "label": "for c in string.ascii_lowercase:  # Try changing each letter\n            transformed_word = current_word[:i] + c + current_word[i + 1 :]\n            if transformed_word in word_set:\n                word_set.remove(transformed_word)\n                # Recur with the new word added to the path\n                result = backtrack(\n                    transformed_word, [*path, transformed_word], end_word, word_set\n                )\n                if result:  # valid transformation found\n                    return result\n                word_set.add(transformed_word)  # backtrack",
                                            "start_token": 165,
                                            "end_token": 258,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "c",
                                                    "start_token": 166,
                                                    "end_token": 166,
                                                    "children": []
                                                },
                                                {
                                                    "type": "attribute",
                                                    "label": "string.ascii_lowercase",
                                                    "start_token": 168,
                                                    "end_token": 170,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "string",
                                                            "start_token": 168,
                                                            "end_token": 168,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "ascii_lowercase",
                                                            "start_token": 170,
                                                            "end_token": 170,
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "comment",
                                                    "label": "# Try changing each letter",
                                                    "start_token": 172,
                                                    "end_token": 176,
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "transformed_word = current_word[:i] + c + current_word[i + 1 :]\n            if transformed_word in word_set:\n                word_set.remove(transformed_word)\n                # Recur with the new word added to the path\n                result = backtrack(\n                    transformed_word, [*path, transformed_word], end_word, word_set\n                )\n                if result:  # valid transformation found\n                    return result\n                word_set.add(transformed_word)  # backtrack",
                                                    "start_token": 178,
                                                    "end_token": 258,
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "transformed_word = current_word[:i] + c + current_word[i + 1 :]",
                                                            "start_token": 178,
                                                            "end_token": 194,
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "transformed_word = current_word[:i] + c + current_word[i + 1 :]",
                                                                    "start_token": 178,
                                                                    "end_token": 194,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "transformed_word",
                                                                            "start_token": 178,
                                                                            "end_token": 178,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "binary_operator",
                                                                            "label": "current_word[:i] + c + current_word[i + 1 :]",
                                                                            "start_token": 180,
                                                                            "end_token": 194,
                                                                            "children": [
                                                                                {
                                                                                    "type": "binary_operator",
                                                                                    "label": "current_word[:i] + c",
                                                                                    "start_token": 180,
                                                                                    "end_token": 186,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "subscript",
                                                                                            "label": "current_word[:i]",
                                                                                            "start_token": 180,
                                                                                            "end_token": 184,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "current_word",
                                                                                                    "start_token": 180,
                                                                                                    "end_token": 180,
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "slice",
                                                                                                    "label": ":i",
                                                                                                    "start_token": 182,
                                                                                                    "end_token": 183,
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "i",
                                                                                                            "start_token": 183,
                                                                                                            "end_token": 183,
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "c",
                                                                                            "start_token": 186,
                                                                                            "end_token": 186,
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "subscript",
                                                                                    "label": "current_word[i + 1 :]",
                                                                                    "start_token": 188,
                                                                                    "end_token": 194,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "current_word",
                                                                                            "start_token": 188,
                                                                                            "end_token": 188,
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "slice",
                                                                                            "label": "i + 1 :",
                                                                                            "start_token": 190,
                                                                                            "end_token": 193,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "binary_operator",
                                                                                                    "label": "i + 1",
                                                                                                    "start_token": 190,
                                                                                                    "end_token": 192,
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "i",
                                                                                                            "start_token": 190,
                                                                                                            "end_token": 190,
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "integer",
                                                                                                            "label": "1",
                                                                                                            "start_token": 192,
                                                                                                            "end_token": 192,
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "if_statement",
                                                            "label": "if transformed_word in word_set:\n                word_set.remove(transformed_word)\n                # Recur with the new word added to the path\n                result = backtrack(\n                    transformed_word, [*path, transformed_word], end_word, word_set\n                )\n                if result:  # valid transformation found\n                    return result\n                word_set.add(transformed_word)  # backtrack",
                                                            "start_token": 196,
                                                            "end_token": 258,
                                                            "children": [
                                                                {
                                                                    "type": "comparison_operator",
                                                                    "label": "transformed_word in word_set",
                                                                    "start_token": 197,
                                                                    "end_token": 199,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "transformed_word",
                                                                            "start_token": 197,
                                                                            "end_token": 197,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "word_set",
                                                                            "start_token": 199,
                                                                            "end_token": 199,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": "word_set.remove(transformed_word)\n                # Recur with the new word added to the path\n                result = backtrack(\n                    transformed_word, [*path, transformed_word], end_word, word_set\n                )\n                if result:  # valid transformation found\n                    return result\n                word_set.add(transformed_word)  # backtrack",
                                                                    "start_token": 202,
                                                                    "end_token": 258,
                                                                    "children": [
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "label": "word_set.remove(transformed_word)",
                                                                            "start_token": 202,
                                                                            "end_token": 207,
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "word_set.remove(transformed_word)",
                                                                                    "start_token": 202,
                                                                                    "end_token": 207,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "word_set.remove",
                                                                                            "start_token": 202,
                                                                                            "end_token": 204,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "word_set",
                                                                                                    "start_token": 202,
                                                                                                    "end_token": 202,
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "remove",
                                                                                                    "start_token": 204,
                                                                                                    "end_token": 204,
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(transformed_word)",
                                                                                            "start_token": 205,
                                                                                            "end_token": 207,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "transformed_word",
                                                                                                    "start_token": 206,
                                                                                                    "end_token": 206,
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "comment",
                                                                            "label": "# Recur with the new word added to the path",
                                                                            "start_token": 209,
                                                                            "end_token": 218,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "label": "result = backtrack(\n                    transformed_word, [*path, transformed_word], end_word, word_set\n                )",
                                                                            "start_token": 220,
                                                                            "end_token": 238,
                                                                            "children": [
                                                                                {
                                                                                    "type": "assignment",
                                                                                    "label": "result = backtrack(\n                    transformed_word, [*path, transformed_word], end_word, word_set\n                )",
                                                                                    "start_token": 220,
                                                                                    "end_token": 238,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "result",
                                                                                            "start_token": 220,
                                                                                            "end_token": 220,
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "backtrack(\n                    transformed_word, [*path, transformed_word], end_word, word_set\n                )",
                                                                                            "start_token": 222,
                                                                                            "end_token": 238,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "backtrack",
                                                                                                    "start_token": 222,
                                                                                                    "end_token": 222,
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(\n                    transformed_word, [*path, transformed_word], end_word, word_set\n                )",
                                                                                                    "start_token": 223,
                                                                                                    "end_token": 238,
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "transformed_word",
                                                                                                            "start_token": 225,
                                                                                                            "end_token": 225,
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "list",
                                                                                                            "label": "[*path, transformed_word]",
                                                                                                            "start_token": 227,
                                                                                                            "end_token": 232,
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "list_splat",
                                                                                                                    "label": "*path",
                                                                                                                    "start_token": 228,
                                                                                                                    "end_token": 229,
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "path",
                                                                                                                            "start_token": 229,
                                                                                                                            "end_token": 229,
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "transformed_word",
                                                                                                                    "start_token": 231,
                                                                                                                    "end_token": 231,
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "end_word",
                                                                                                            "start_token": 234,
                                                                                                            "end_token": 234,
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "word_set",
                                                                                                            "start_token": 236,
                                                                                                            "end_token": 236,
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "if_statement",
                                                                            "label": "if result:  # valid transformation found\n                    return result",
                                                                            "start_token": 240,
                                                                            "end_token": 249,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "result",
                                                                                    "start_token": 241,
                                                                                    "end_token": 241,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "comment",
                                                                                    "label": "# valid transformation found",
                                                                                    "start_token": 243,
                                                                                    "end_token": 246,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "block",
                                                                                    "label": "return result",
                                                                                    "start_token": 248,
                                                                                    "end_token": 249,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "return_statement",
                                                                                            "label": "return result",
                                                                                            "start_token": 248,
                                                                                            "end_token": 249,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "result",
                                                                                                    "start_token": 249,
                                                                                                    "end_token": 249,
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "label": "word_set.add(transformed_word)",
                                                                            "start_token": 251,
                                                                            "end_token": 256,
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "word_set.add(transformed_word)",
                                                                                    "start_token": 251,
                                                                                    "end_token": 256,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "word_set.add",
                                                                                            "start_token": 251,
                                                                                            "end_token": 253,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "word_set",
                                                                                                    "start_token": 251,
                                                                                                    "end_token": 251,
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "add",
                                                                                                    "start_token": 253,
                                                                                                    "end_token": 253,
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(transformed_word)",
                                                                                            "start_token": 254,
                                                                                            "end_token": 256,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "transformed_word",
                                                                                                    "start_token": 255,
                                                                                                    "end_token": 255,
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "comment",
                                                                            "label": "# backtrack",
                                                                            "start_token": 257,
                                                                            "end_token": 258,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return []",
                            "start_token": 261,
                            "end_token": 263,
                            "children": [
                                {
                                    "type": "list",
                                    "label": "[]",
                                    "start_token": 262,
                                    "end_token": 263,
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# No valid transformation found",
                            "start_token": 264,
                            "end_token": 268,
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def word_ladder(begin_word: str, end_word: str, word_set: set[str]) -> list[str]:\n    \"\"\"\n    Solve the Word Ladder problem using Backtracking and return\n    the list of transformations from begin_word to end_word.\n\n    Parameters:\n    begin_word (str): The word from which the transformation starts.\n    end_word (str): The target word for transformation.\n    word_list (list[str]): The list of valid words for transformation.\n\n    Returns:\n    list[str]: The list of transformations from begin_word to end_word.\n               Returns an empty list if there is no valid transformation.\n\n    Example:\n    >>> word_ladder(\"hit\", \"cog\", [\"hot\", \"dot\", \"dog\", \"lot\", \"log\", \"cog\"])\n    ['hit', 'hot', 'dot', 'lot', 'log', 'cog']\n\n    >>> word_ladder(\"hit\", \"cog\", [\"hot\", \"dot\", \"dog\", \"lot\", \"log\"])\n    []\n\n    >>> word_ladder(\"lead\", \"gold\", [\"load\", \"goad\", \"gold\", \"lead\", \"lord\"])\n    ['lead', 'lead', 'load', 'goad', 'gold']\n\n    >>> word_ladder(\"game\", \"code\", [\"came\", \"cage\", \"code\", \"cade\", \"gave\"])\n    ['game', 'came', 'cade', 'code']\n    \"\"\"\n\n    if end_word not in word_set:  # no valid transformation possible\n        return []\n\n    # Perform backtracking starting from the begin_word\n    return backtrack(begin_word, [begin_word], end_word, word_set)",
            "start_token": 272,
            "end_token": 398,
            "children": [
                {
                    "type": "identifier",
                    "label": "word_ladder",
                    "start_token": 273,
                    "end_token": 273,
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(begin_word: str, end_word: str, word_set: set[str])",
                    "start_token": 274,
                    "end_token": 289,
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "begin_word: str",
                            "start_token": 275,
                            "end_token": 277,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "begin_word",
                                    "start_token": 275,
                                    "end_token": 275,
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "start_token": 277,
                                    "end_token": 277,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "start_token": 277,
                                            "end_token": 277,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "end_word: str",
                            "start_token": 279,
                            "end_token": 281,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "end_word",
                                    "start_token": 279,
                                    "end_token": 279,
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "start_token": 281,
                                    "end_token": 281,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "start_token": 281,
                                            "end_token": 281,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "word_set: set[str]",
                            "start_token": 283,
                            "end_token": 288,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "word_set",
                                    "start_token": 283,
                                    "end_token": 283,
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "set[str]",
                                    "start_token": 285,
                                    "end_token": 288,
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "set[str]",
                                            "start_token": 285,
                                            "end_token": 288,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "set",
                                                    "start_token": 285,
                                                    "end_token": 285,
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[str]",
                                                    "start_token": 286,
                                                    "end_token": 288,
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "start_token": 287,
                                                            "end_token": 287,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "start_token": 287,
                                                                    "end_token": 287,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "list[str]",
                    "start_token": 292,
                    "end_token": 295,
                    "children": [
                        {
                            "type": "generic_type",
                            "label": "list[str]",
                            "start_token": 292,
                            "end_token": 295,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "list",
                                    "start_token": 292,
                                    "end_token": 292,
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "label": "[str]",
                                    "start_token": 293,
                                    "end_token": 295,
                                    "children": [
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "start_token": 294,
                                            "end_token": 294,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "start_token": 294,
                                                    "end_token": 294,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    Solve the Word Ladder problem using Backtracking and return\n    the list of transformations from begin_word to end_word.\n\n    Parameters:\n    begin_word (str): The word from which the transformation starts.\n    end_word (str): The target word for transformation.\n    word_list (list[str]): The list of valid words for transformation.\n\n    Returns:\n    list[str]: The list of transformations from begin_word to end_word.\n               Returns an empty list if there is no valid transformation.\n\n    Example:\n    >>> word_ladder(\"hit\", \"cog\", [\"hot\", \"dot\", \"dog\", \"lot\", \"log\", \"cog\"])\n    ['hit', 'hot', 'dot', 'lot', 'log', 'cog']\n\n    >>> word_ladder(\"hit\", \"cog\", [\"hot\", \"dot\", \"dog\", \"lot\", \"log\"])\n    []\n\n    >>> word_ladder(\"lead\", \"gold\", [\"load\", \"goad\", \"gold\", \"lead\", \"lord\"])\n    ['lead', 'lead', 'load', 'goad', 'gold']\n\n    >>> word_ladder(\"game\", \"code\", [\"came\", \"cage\", \"code\", \"cade\", \"gave\"])\n    ['game', 'came', 'cade', 'code']\n    \"\"\"\n\n    if end_word not in word_set:  # no valid transformation possible\n        return []\n\n    # Perform backtracking starting from the begin_word\n    return backtrack(begin_word, [begin_word], end_word, word_set)",
                    "start_token": 298,
                    "end_token": 398,
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    Solve the Word Ladder problem using Backtracking and return\n    the list of transformations from begin_word to end_word.\n\n    Parameters:\n    begin_word (str): The word from which the transformation starts.\n    end_word (str): The target word for transformation.\n    word_list (list[str]): The list of valid words for transformation.\n\n    Returns:\n    list[str]: The list of transformations from begin_word to end_word.\n               Returns an empty list if there is no valid transformation.\n\n    Example:\n    >>> word_ladder(\"hit\", \"cog\", [\"hot\", \"dot\", \"dog\", \"lot\", \"log\", \"cog\"])\n    ['hit', 'hot', 'dot', 'lot', 'log', 'cog']\n\n    >>> word_ladder(\"hit\", \"cog\", [\"hot\", \"dot\", \"dog\", \"lot\", \"log\"])\n    []\n\n    >>> word_ladder(\"lead\", \"gold\", [\"load\", \"goad\", \"gold\", \"lead\", \"lord\"])\n    ['lead', 'lead', 'load', 'goad', 'gold']\n\n    >>> word_ladder(\"game\", \"code\", [\"came\", \"cage\", \"code\", \"cade\", \"gave\"])\n    ['game', 'came', 'cade', 'code']\n    \"\"\"",
                            "start_token": 298,
                            "end_token": 358,
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    Solve the Word Ladder problem using Backtracking and return\n    the list of transformations from begin_word to end_word.\n\n    Parameters:\n    begin_word (str): The word from which the transformation starts.\n    end_word (str): The target word for transformation.\n    word_list (list[str]): The list of valid words for transformation.\n\n    Returns:\n    list[str]: The list of transformations from begin_word to end_word.\n               Returns an empty list if there is no valid transformation.\n\n    Example:\n    >>> word_ladder(\"hit\", \"cog\", [\"hot\", \"dot\", \"dog\", \"lot\", \"log\", \"cog\"])\n    ['hit', 'hot', 'dot', 'lot', 'log', 'cog']\n\n    >>> word_ladder(\"hit\", \"cog\", [\"hot\", \"dot\", \"dog\", \"lot\", \"log\"])\n    []\n\n    >>> word_ladder(\"lead\", \"gold\", [\"load\", \"goad\", \"gold\", \"lead\", \"lord\"])\n    ['lead', 'lead', 'load', 'goad', 'gold']\n\n    >>> word_ladder(\"game\", \"code\", [\"came\", \"cage\", \"code\", \"cade\", \"gave\"])\n    ['game', 'came', 'cade', 'code']\n    \"\"\"",
                                    "start_token": 298,
                                    "end_token": 358,
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "start_token": 298,
                                            "end_token": 299,
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    Solve the Word Ladder problem using Backtracking and return\n    the list of transformations from begin_word to end_word.\n\n    Parameters:\n    begin_word (str): The word from which the transformation starts.\n    end_word (str): The target word for transformation.\n    word_list (list[str]): The list of valid words for transformation.\n\n    Returns:\n    list[str]: The list of transformations from begin_word to end_word.\n               Returns an empty list if there is no valid transformation.\n\n    Example:\n    >>> word_ladder(\"hit\", \"cog\", [\"hot\", \"dot\", \"dog\", \"lot\", \"log\", \"cog\"])\n    ['hit', 'hot', 'dot', 'lot', 'log', 'cog']\n\n    >>> word_ladder(\"hit\", \"cog\", [\"hot\", \"dot\", \"dog\", \"lot\", \"log\"])\n    []\n\n    >>> word_ladder(\"lead\", \"gold\", [\"load\", \"goad\", \"gold\", \"lead\", \"lord\"])\n    ['lead', 'lead', 'load', 'goad', 'gold']\n\n    >>> word_ladder(\"game\", \"code\", [\"came\", \"cage\", \"code\", \"cade\", \"gave\"])\n    ['game', 'came', 'cade', 'code']\n    ",
                                            "start_token": 299,
                                            "end_token": 357,
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "start_token": 357,
                                            "end_token": 358,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if end_word not in word_set:  # no valid transformation possible\n        return []",
                            "start_token": 361,
                            "end_token": 375,
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "label": "end_word not in word_set",
                                    "start_token": 362,
                                    "end_token": 365,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "end_word",
                                            "start_token": 362,
                                            "end_token": 362,
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "word_set",
                                            "start_token": 365,
                                            "end_token": 365,
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "comment",
                                    "label": "# no valid transformation possible",
                                    "start_token": 367,
                                    "end_token": 371,
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "label": "return []",
                                    "start_token": 373,
                                    "end_token": 375,
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "label": "return []",
                                            "start_token": 373,
                                            "end_token": 375,
                                            "children": [
                                                {
                                                    "type": "list",
                                                    "label": "[]",
                                                    "start_token": 374,
                                                    "end_token": 375,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# Perform backtracking starting from the begin_word",
                            "start_token": 378,
                            "end_token": 384,
                            "children": []
                        },
                        {
                            "type": "return_statement",
                            "label": "return backtrack(begin_word, [begin_word], end_word, word_set)",
                            "start_token": 386,
                            "end_token": 398,
                            "children": [
                                {
                                    "type": "call",
                                    "label": "backtrack(begin_word, [begin_word], end_word, word_set)",
                                    "start_token": 387,
                                    "end_token": 398,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "backtrack",
                                            "start_token": 387,
                                            "end_token": 387,
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(begin_word, [begin_word], end_word, word_set)",
                                            "start_token": 388,
                                            "end_token": 398,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "begin_word",
                                                    "start_token": 389,
                                                    "end_token": 389,
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[begin_word]",
                                                    "start_token": 391,
                                                    "end_token": 393,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "begin_word",
                                                            "start_token": 392,
                                                            "end_token": 392,
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "end_word",
                                                    "start_token": 395,
                                                    "end_token": 395,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "word_set",
                                                    "start_token": 397,
                                                    "end_token": 397,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}