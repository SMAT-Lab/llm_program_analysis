{
    "type": "module",
    "label": "from math import cos, sin, sqrt, tau\n\nfrom audio_filters.iir_filter import IIRFilter\n\n\"\"\"\nCreate 2nd-order IIR filters with Butterworth design.\n\nCode based on https://webaudio.github.io/Audio-EQ-Cookbook/audio-eq-cookbook.html\nAlternatively you can use scipy.signal.butter, which should yield the same results.\n\"\"\"\n\n\ndef make_lowpass(\n    frequency: int,\n    samplerate: int,\n    q_factor: float = 1 / sqrt(2),\n) -> IIRFilter:\n    \"\"\"\n    Creates a low-pass filter\n\n    >>> filter = make_lowpass(1000, 48000)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.004277569313094809,\n     0.008555138626189618, 0.004277569313094809]\n    \"\"\"\n    w0 = tau * frequency / samplerate\n    _sin = sin(w0)\n    _cos = cos(w0)\n    alpha = _sin / (2 * q_factor)\n\n    b0 = (1 - _cos) / 2\n    b1 = 1 - _cos\n\n    a0 = 1 + alpha\n    a1 = -2 * _cos\n    a2 = 1 - alpha\n\n    filt = IIRFilter(2)\n    filt.set_coefficients([a0, a1, a2], [b0, b1, b0])\n    return filt\n\n\ndef make_highpass(\n    frequency: int,\n    samplerate: int,\n    q_factor: float = 1 / sqrt(2),\n) -> IIRFilter:\n    \"\"\"\n    Creates a high-pass filter\n\n    >>> filter = make_highpass(1000, 48000)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.9957224306869052,\n     -1.9914448613738105, 0.9957224306869052]\n    \"\"\"\n    w0 = tau * frequency / samplerate\n    _sin = sin(w0)\n    _cos = cos(w0)\n    alpha = _sin / (2 * q_factor)\n\n    b0 = (1 + _cos) / 2\n    b1 = -1 - _cos\n\n    a0 = 1 + alpha\n    a1 = -2 * _cos\n    a2 = 1 - alpha\n\n    filt = IIRFilter(2)\n    filt.set_coefficients([a0, a1, a2], [b0, b1, b0])\n    return filt\n\n\ndef make_bandpass(\n    frequency: int,\n    samplerate: int,\n    q_factor: float = 1 / sqrt(2),\n) -> IIRFilter:\n    \"\"\"\n    Creates a band-pass filter\n\n    >>> filter = make_bandpass(1000, 48000)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.06526309611002579,\n     0, -0.06526309611002579]\n    \"\"\"\n    w0 = tau * frequency / samplerate\n    _sin = sin(w0)\n    _cos = cos(w0)\n    alpha = _sin / (2 * q_factor)\n\n    b0 = _sin / 2\n    b1 = 0\n    b2 = -b0\n\n    a0 = 1 + alpha\n    a1 = -2 * _cos\n    a2 = 1 - alpha\n\n    filt = IIRFilter(2)\n    filt.set_coefficients([a0, a1, a2], [b0, b1, b2])\n    return filt\n\n\ndef make_allpass(\n    frequency: int,\n    samplerate: int,\n    q_factor: float = 1 / sqrt(2),\n) -> IIRFilter:\n    \"\"\"\n    Creates an all-pass filter\n\n    >>> filter = make_allpass(1000, 48000)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.9077040443587427,\n     -1.9828897227476208, 1.0922959556412573]\n    \"\"\"\n    w0 = tau * frequency / samplerate\n    _sin = sin(w0)\n    _cos = cos(w0)\n    alpha = _sin / (2 * q_factor)\n\n    b0 = 1 - alpha\n    b1 = -2 * _cos\n    b2 = 1 + alpha\n\n    filt = IIRFilter(2)\n    filt.set_coefficients([b2, b1, b0], [b0, b1, b2])\n    return filt\n\n\ndef make_peak(\n    frequency: int,\n    samplerate: int,\n    gain_db: float,\n    q_factor: float = 1 / sqrt(2),\n) -> IIRFilter:\n    \"\"\"\n    Creates a peak filter\n\n    >>> filter = make_peak(1000, 48000, 6)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [1.0653405327119334, -1.9828897227476208, 0.9346594672880666, 1.1303715025601122,\n     -1.9828897227476208, 0.8696284974398878]\n    \"\"\"\n    w0 = tau * frequency / samplerate\n    _sin = sin(w0)\n    _cos = cos(w0)\n    alpha = _sin / (2 * q_factor)\n    big_a = 10 ** (gain_db / 40)\n\n    b0 = 1 + alpha * big_a\n    b1 = -2 * _cos\n    b2 = 1 - alpha * big_a\n    a0 = 1 + alpha / big_a\n    a1 = -2 * _cos\n    a2 = 1 - alpha / big_a\n\n    filt = IIRFilter(2)\n    filt.set_coefficients([a0, a1, a2], [b0, b1, b2])\n    return filt\n\n\ndef make_lowshelf(\n    frequency: int,\n    samplerate: int,\n    gain_db: float,\n    q_factor: float = 1 / sqrt(2),\n) -> IIRFilter:\n    \"\"\"\n    Creates a low-shelf filter\n\n    >>> filter = make_lowshelf(1000, 48000, 6)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [3.0409336710888786, -5.608870992220748, 2.602157875636628, 3.139954022810743,\n     -5.591841778072785, 2.5201667380627257]\n    \"\"\"\n    w0 = tau * frequency / samplerate\n    _sin = sin(w0)\n    _cos = cos(w0)\n    alpha = _sin / (2 * q_factor)\n    big_a = 10 ** (gain_db / 40)\n    pmc = (big_a + 1) - (big_a - 1) * _cos\n    ppmc = (big_a + 1) + (big_a - 1) * _cos\n    mpc = (big_a - 1) - (big_a + 1) * _cos\n    pmpc = (big_a - 1) + (big_a + 1) * _cos\n    aa2 = 2 * sqrt(big_a) * alpha\n\n    b0 = big_a * (pmc + aa2)\n    b1 = 2 * big_a * mpc\n    b2 = big_a * (pmc - aa2)\n    a0 = ppmc + aa2\n    a1 = -2 * pmpc\n    a2 = ppmc - aa2\n\n    filt = IIRFilter(2)\n    filt.set_coefficients([a0, a1, a2], [b0, b1, b2])\n    return filt\n\n\ndef make_highshelf(\n    frequency: int,\n    samplerate: int,\n    gain_db: float,\n    q_factor: float = 1 / sqrt(2),\n) -> IIRFilter:\n    \"\"\"\n    Creates a high-shelf filter\n\n    >>> filter = make_highshelf(1000, 48000, 6)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [2.2229172136088806, -3.9587208137297303, 1.7841414181566304, 4.295432981120543,\n     -7.922740859457287, 3.6756456963725253]\n    \"\"\"\n    w0 = tau * frequency / samplerate\n    _sin = sin(w0)\n    _cos = cos(w0)\n    alpha = _sin / (2 * q_factor)\n    big_a = 10 ** (gain_db / 40)\n    pmc = (big_a + 1) - (big_a - 1) * _cos\n    ppmc = (big_a + 1) + (big_a - 1) * _cos\n    mpc = (big_a - 1) - (big_a + 1) * _cos\n    pmpc = (big_a - 1) + (big_a + 1) * _cos\n    aa2 = 2 * sqrt(big_a) * alpha\n\n    b0 = big_a * (ppmc + aa2)\n    b1 = -2 * big_a * pmpc\n    b2 = big_a * (ppmc - aa2)\n    a0 = pmc + aa2\n    a1 = 2 * mpc\n    a2 = pmc - aa2\n\n    filt = IIRFilter(2)\n    filt.set_coefficients([a0, a1, a2], [b0, b1, b2])\n    return filt\n",
    "children": [
        {
            "type": "import_from_statement",
            "label": "from math import cos, sin, sqrt, tau",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "math",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "math",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "cos",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "cos",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "sin",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "sin",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "sqrt",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "sqrt",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "tau",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "tau",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from audio_filters.iir_filter import IIRFilter",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "audio_filters.iir_filter",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "audio_filters",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "iir_filter",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "IIRFilter",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "IIRFilter",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "\"\"\"\nCreate 2nd-order IIR filters with Butterworth design.\n\nCode based on https://webaudio.github.io/Audio-EQ-Cookbook/audio-eq-cookbook.html\nAlternatively you can use scipy.signal.butter, which should yield the same results.\n\"\"\"",
            "children": [
                {
                    "type": "string",
                    "label": "\"\"\"\nCreate 2nd-order IIR filters with Butterworth design.\n\nCode based on https://webaudio.github.io/Audio-EQ-Cookbook/audio-eq-cookbook.html\nAlternatively you can use scipy.signal.butter, which should yield the same results.\n\"\"\"",
                    "children": [
                        {
                            "type": "string_start",
                            "label": "\"\"\"",
                            "children": []
                        },
                        {
                            "type": "string_content",
                            "label": "\nCreate 2nd-order IIR filters with Butterworth design.\n\nCode based on https://webaudio.github.io/Audio-EQ-Cookbook/audio-eq-cookbook.html\nAlternatively you can use scipy.signal.butter, which should yield the same results.\n",
                            "children": []
                        },
                        {
                            "type": "string_end",
                            "label": "\"\"\"",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def make_lowpass(\n    frequency: int,\n    samplerate: int,\n    q_factor: float = 1 / sqrt(2),\n) -> IIRFilter:\n    \"\"\"\n    Creates a low-pass filter\n\n    >>> filter = make_lowpass(1000, 48000)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.004277569313094809,\n     0.008555138626189618, 0.004277569313094809]\n    \"\"\"\n    w0 = tau * frequency / samplerate\n    _sin = sin(w0)\n    _cos = cos(w0)\n    alpha = _sin / (2 * q_factor)\n\n    b0 = (1 - _cos) / 2\n    b1 = 1 - _cos\n\n    a0 = 1 + alpha\n    a1 = -2 * _cos\n    a2 = 1 - alpha\n\n    filt = IIRFilter(2)\n    filt.set_coefficients([a0, a1, a2], [b0, b1, b0])\n    return filt",
            "children": [
                {
                    "type": "identifier",
                    "label": "make_lowpass",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(\n    frequency: int,\n    samplerate: int,\n    q_factor: float = 1 / sqrt(2),\n)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "frequency: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "frequency",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "samplerate: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "samplerate",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_default_parameter",
                            "label": "q_factor: float = 1 / sqrt(2)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "q_factor",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "float",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "float",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "binary_operator",
                                    "label": "1 / sqrt(2)",
                                    "children": [
                                        {
                                            "type": "integer",
                                            "label": "1",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "sqrt(2)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "sqrt",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(2)",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "label": "2",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "IIRFilter",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "IIRFilter",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    Creates a low-pass filter\n\n    >>> filter = make_lowpass(1000, 48000)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.004277569313094809,\n     0.008555138626189618, 0.004277569313094809]\n    \"\"\"\n    w0 = tau * frequency / samplerate\n    _sin = sin(w0)\n    _cos = cos(w0)\n    alpha = _sin / (2 * q_factor)\n\n    b0 = (1 - _cos) / 2\n    b1 = 1 - _cos\n\n    a0 = 1 + alpha\n    a1 = -2 * _cos\n    a2 = 1 - alpha\n\n    filt = IIRFilter(2)\n    filt.set_coefficients([a0, a1, a2], [b0, b1, b0])\n    return filt",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    Creates a low-pass filter\n\n    >>> filter = make_lowpass(1000, 48000)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.004277569313094809,\n     0.008555138626189618, 0.004277569313094809]\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    Creates a low-pass filter\n\n    >>> filter = make_lowpass(1000, 48000)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.004277569313094809,\n     0.008555138626189618, 0.004277569313094809]\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    Creates a low-pass filter\n\n    >>> filter = make_lowpass(1000, 48000)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.004277569313094809,\n     0.008555138626189618, 0.004277569313094809]\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "w0 = tau * frequency / samplerate",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "w0 = tau * frequency / samplerate",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "w0",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "tau * frequency / samplerate",
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "label": "tau * frequency",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "tau",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "frequency",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "samplerate",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "_sin = sin(w0)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "_sin = sin(w0)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "_sin",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "sin(w0)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "sin",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(w0)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "w0",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "_cos = cos(w0)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "_cos = cos(w0)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "_cos",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "cos(w0)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "cos",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(w0)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "w0",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "alpha = _sin / (2 * q_factor)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "alpha = _sin / (2 * q_factor)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "alpha",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "_sin / (2 * q_factor)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "_sin",
                                                    "children": []
                                                },
                                                {
                                                    "type": "parenthesized_expression",
                                                    "label": "(2 * q_factor)",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "label": "2 * q_factor",
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "label": "2",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "q_factor",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "b0 = (1 - _cos) / 2",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "b0 = (1 - _cos) / 2",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "b0",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "(1 - _cos) / 2",
                                            "children": [
                                                {
                                                    "type": "parenthesized_expression",
                                                    "label": "(1 - _cos)",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "label": "1 - _cos",
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "label": "1",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "_cos",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "integer",
                                                    "label": "2",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "b1 = 1 - _cos",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "b1 = 1 - _cos",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "b1",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "1 - _cos",
                                            "children": [
                                                {
                                                    "type": "integer",
                                                    "label": "1",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "_cos",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "a0 = 1 + alpha",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "a0 = 1 + alpha",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "a0",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "1 + alpha",
                                            "children": [
                                                {
                                                    "type": "integer",
                                                    "label": "1",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "alpha",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "a1 = -2 * _cos",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "a1 = -2 * _cos",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "a1",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "-2 * _cos",
                                            "children": [
                                                {
                                                    "type": "unary_operator",
                                                    "label": "-2",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "label": "2",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "_cos",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "a2 = 1 - alpha",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "a2 = 1 - alpha",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "a2",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "1 - alpha",
                                            "children": [
                                                {
                                                    "type": "integer",
                                                    "label": "1",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "alpha",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "filt = IIRFilter(2)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "filt = IIRFilter(2)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "filt",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "IIRFilter(2)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "IIRFilter",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(2)",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "label": "2",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "filt.set_coefficients([a0, a1, a2], [b0, b1, b0])",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "filt.set_coefficients([a0, a1, a2], [b0, b1, b0])",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "filt.set_coefficients",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "filt",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "set_coefficients",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "([a0, a1, a2], [b0, b1, b0])",
                                            "children": [
                                                {
                                                    "type": "list",
                                                    "label": "[a0, a1, a2]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "a0",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "a1",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "a2",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[b0, b1, b0]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "b0",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "b1",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "b0",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return filt",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "filt",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def make_highpass(\n    frequency: int,\n    samplerate: int,\n    q_factor: float = 1 / sqrt(2),\n) -> IIRFilter:\n    \"\"\"\n    Creates a high-pass filter\n\n    >>> filter = make_highpass(1000, 48000)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.9957224306869052,\n     -1.9914448613738105, 0.9957224306869052]\n    \"\"\"\n    w0 = tau * frequency / samplerate\n    _sin = sin(w0)\n    _cos = cos(w0)\n    alpha = _sin / (2 * q_factor)\n\n    b0 = (1 + _cos) / 2\n    b1 = -1 - _cos\n\n    a0 = 1 + alpha\n    a1 = -2 * _cos\n    a2 = 1 - alpha\n\n    filt = IIRFilter(2)\n    filt.set_coefficients([a0, a1, a2], [b0, b1, b0])\n    return filt",
            "children": [
                {
                    "type": "identifier",
                    "label": "make_highpass",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(\n    frequency: int,\n    samplerate: int,\n    q_factor: float = 1 / sqrt(2),\n)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "frequency: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "frequency",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "samplerate: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "samplerate",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_default_parameter",
                            "label": "q_factor: float = 1 / sqrt(2)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "q_factor",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "float",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "float",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "binary_operator",
                                    "label": "1 / sqrt(2)",
                                    "children": [
                                        {
                                            "type": "integer",
                                            "label": "1",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "sqrt(2)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "sqrt",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(2)",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "label": "2",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "IIRFilter",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "IIRFilter",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    Creates a high-pass filter\n\n    >>> filter = make_highpass(1000, 48000)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.9957224306869052,\n     -1.9914448613738105, 0.9957224306869052]\n    \"\"\"\n    w0 = tau * frequency / samplerate\n    _sin = sin(w0)\n    _cos = cos(w0)\n    alpha = _sin / (2 * q_factor)\n\n    b0 = (1 + _cos) / 2\n    b1 = -1 - _cos\n\n    a0 = 1 + alpha\n    a1 = -2 * _cos\n    a2 = 1 - alpha\n\n    filt = IIRFilter(2)\n    filt.set_coefficients([a0, a1, a2], [b0, b1, b0])\n    return filt",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    Creates a high-pass filter\n\n    >>> filter = make_highpass(1000, 48000)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.9957224306869052,\n     -1.9914448613738105, 0.9957224306869052]\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    Creates a high-pass filter\n\n    >>> filter = make_highpass(1000, 48000)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.9957224306869052,\n     -1.9914448613738105, 0.9957224306869052]\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    Creates a high-pass filter\n\n    >>> filter = make_highpass(1000, 48000)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.9957224306869052,\n     -1.9914448613738105, 0.9957224306869052]\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "w0 = tau * frequency / samplerate",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "w0 = tau * frequency / samplerate",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "w0",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "tau * frequency / samplerate",
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "label": "tau * frequency",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "tau",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "frequency",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "samplerate",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "_sin = sin(w0)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "_sin = sin(w0)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "_sin",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "sin(w0)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "sin",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(w0)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "w0",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "_cos = cos(w0)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "_cos = cos(w0)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "_cos",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "cos(w0)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "cos",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(w0)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "w0",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "alpha = _sin / (2 * q_factor)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "alpha = _sin / (2 * q_factor)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "alpha",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "_sin / (2 * q_factor)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "_sin",
                                                    "children": []
                                                },
                                                {
                                                    "type": "parenthesized_expression",
                                                    "label": "(2 * q_factor)",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "label": "2 * q_factor",
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "label": "2",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "q_factor",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "b0 = (1 + _cos) / 2",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "b0 = (1 + _cos) / 2",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "b0",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "(1 + _cos) / 2",
                                            "children": [
                                                {
                                                    "type": "parenthesized_expression",
                                                    "label": "(1 + _cos)",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "label": "1 + _cos",
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "label": "1",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "_cos",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "integer",
                                                    "label": "2",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "b1 = -1 - _cos",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "b1 = -1 - _cos",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "b1",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "-1 - _cos",
                                            "children": [
                                                {
                                                    "type": "unary_operator",
                                                    "label": "-1",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "label": "1",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "_cos",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "a0 = 1 + alpha",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "a0 = 1 + alpha",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "a0",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "1 + alpha",
                                            "children": [
                                                {
                                                    "type": "integer",
                                                    "label": "1",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "alpha",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "a1 = -2 * _cos",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "a1 = -2 * _cos",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "a1",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "-2 * _cos",
                                            "children": [
                                                {
                                                    "type": "unary_operator",
                                                    "label": "-2",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "label": "2",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "_cos",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "a2 = 1 - alpha",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "a2 = 1 - alpha",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "a2",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "1 - alpha",
                                            "children": [
                                                {
                                                    "type": "integer",
                                                    "label": "1",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "alpha",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "filt = IIRFilter(2)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "filt = IIRFilter(2)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "filt",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "IIRFilter(2)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "IIRFilter",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(2)",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "label": "2",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "filt.set_coefficients([a0, a1, a2], [b0, b1, b0])",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "filt.set_coefficients([a0, a1, a2], [b0, b1, b0])",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "filt.set_coefficients",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "filt",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "set_coefficients",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "([a0, a1, a2], [b0, b1, b0])",
                                            "children": [
                                                {
                                                    "type": "list",
                                                    "label": "[a0, a1, a2]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "a0",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "a1",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "a2",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[b0, b1, b0]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "b0",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "b1",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "b0",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return filt",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "filt",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def make_bandpass(\n    frequency: int,\n    samplerate: int,\n    q_factor: float = 1 / sqrt(2),\n) -> IIRFilter:\n    \"\"\"\n    Creates a band-pass filter\n\n    >>> filter = make_bandpass(1000, 48000)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.06526309611002579,\n     0, -0.06526309611002579]\n    \"\"\"\n    w0 = tau * frequency / samplerate\n    _sin = sin(w0)\n    _cos = cos(w0)\n    alpha = _sin / (2 * q_factor)\n\n    b0 = _sin / 2\n    b1 = 0\n    b2 = -b0\n\n    a0 = 1 + alpha\n    a1 = -2 * _cos\n    a2 = 1 - alpha\n\n    filt = IIRFilter(2)\n    filt.set_coefficients([a0, a1, a2], [b0, b1, b2])\n    return filt",
            "children": [
                {
                    "type": "identifier",
                    "label": "make_bandpass",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(\n    frequency: int,\n    samplerate: int,\n    q_factor: float = 1 / sqrt(2),\n)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "frequency: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "frequency",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "samplerate: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "samplerate",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_default_parameter",
                            "label": "q_factor: float = 1 / sqrt(2)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "q_factor",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "float",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "float",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "binary_operator",
                                    "label": "1 / sqrt(2)",
                                    "children": [
                                        {
                                            "type": "integer",
                                            "label": "1",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "sqrt(2)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "sqrt",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(2)",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "label": "2",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "IIRFilter",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "IIRFilter",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    Creates a band-pass filter\n\n    >>> filter = make_bandpass(1000, 48000)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.06526309611002579,\n     0, -0.06526309611002579]\n    \"\"\"\n    w0 = tau * frequency / samplerate\n    _sin = sin(w0)\n    _cos = cos(w0)\n    alpha = _sin / (2 * q_factor)\n\n    b0 = _sin / 2\n    b1 = 0\n    b2 = -b0\n\n    a0 = 1 + alpha\n    a1 = -2 * _cos\n    a2 = 1 - alpha\n\n    filt = IIRFilter(2)\n    filt.set_coefficients([a0, a1, a2], [b0, b1, b2])\n    return filt",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    Creates a band-pass filter\n\n    >>> filter = make_bandpass(1000, 48000)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.06526309611002579,\n     0, -0.06526309611002579]\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    Creates a band-pass filter\n\n    >>> filter = make_bandpass(1000, 48000)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.06526309611002579,\n     0, -0.06526309611002579]\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    Creates a band-pass filter\n\n    >>> filter = make_bandpass(1000, 48000)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.06526309611002579,\n     0, -0.06526309611002579]\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "w0 = tau * frequency / samplerate",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "w0 = tau * frequency / samplerate",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "w0",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "tau * frequency / samplerate",
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "label": "tau * frequency",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "tau",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "frequency",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "samplerate",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "_sin = sin(w0)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "_sin = sin(w0)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "_sin",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "sin(w0)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "sin",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(w0)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "w0",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "_cos = cos(w0)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "_cos = cos(w0)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "_cos",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "cos(w0)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "cos",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(w0)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "w0",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "alpha = _sin / (2 * q_factor)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "alpha = _sin / (2 * q_factor)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "alpha",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "_sin / (2 * q_factor)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "_sin",
                                                    "children": []
                                                },
                                                {
                                                    "type": "parenthesized_expression",
                                                    "label": "(2 * q_factor)",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "label": "2 * q_factor",
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "label": "2",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "q_factor",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "b0 = _sin / 2",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "b0 = _sin / 2",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "b0",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "_sin / 2",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "_sin",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "label": "2",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "b1 = 0",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "b1 = 0",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "b1",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "b2 = -b0",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "b2 = -b0",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "b2",
                                            "children": []
                                        },
                                        {
                                            "type": "unary_operator",
                                            "label": "-b0",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "b0",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "a0 = 1 + alpha",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "a0 = 1 + alpha",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "a0",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "1 + alpha",
                                            "children": [
                                                {
                                                    "type": "integer",
                                                    "label": "1",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "alpha",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "a1 = -2 * _cos",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "a1 = -2 * _cos",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "a1",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "-2 * _cos",
                                            "children": [
                                                {
                                                    "type": "unary_operator",
                                                    "label": "-2",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "label": "2",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "_cos",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "a2 = 1 - alpha",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "a2 = 1 - alpha",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "a2",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "1 - alpha",
                                            "children": [
                                                {
                                                    "type": "integer",
                                                    "label": "1",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "alpha",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "filt = IIRFilter(2)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "filt = IIRFilter(2)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "filt",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "IIRFilter(2)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "IIRFilter",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(2)",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "label": "2",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "filt.set_coefficients([a0, a1, a2], [b0, b1, b2])",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "filt.set_coefficients([a0, a1, a2], [b0, b1, b2])",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "filt.set_coefficients",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "filt",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "set_coefficients",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "([a0, a1, a2], [b0, b1, b2])",
                                            "children": [
                                                {
                                                    "type": "list",
                                                    "label": "[a0, a1, a2]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "a0",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "a1",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "a2",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[b0, b1, b2]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "b0",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "b1",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "b2",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return filt",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "filt",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def make_allpass(\n    frequency: int,\n    samplerate: int,\n    q_factor: float = 1 / sqrt(2),\n) -> IIRFilter:\n    \"\"\"\n    Creates an all-pass filter\n\n    >>> filter = make_allpass(1000, 48000)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.9077040443587427,\n     -1.9828897227476208, 1.0922959556412573]\n    \"\"\"\n    w0 = tau * frequency / samplerate\n    _sin = sin(w0)\n    _cos = cos(w0)\n    alpha = _sin / (2 * q_factor)\n\n    b0 = 1 - alpha\n    b1 = -2 * _cos\n    b2 = 1 + alpha\n\n    filt = IIRFilter(2)\n    filt.set_coefficients([b2, b1, b0], [b0, b1, b2])\n    return filt",
            "children": [
                {
                    "type": "identifier",
                    "label": "make_allpass",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(\n    frequency: int,\n    samplerate: int,\n    q_factor: float = 1 / sqrt(2),\n)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "frequency: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "frequency",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "samplerate: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "samplerate",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_default_parameter",
                            "label": "q_factor: float = 1 / sqrt(2)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "q_factor",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "float",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "float",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "binary_operator",
                                    "label": "1 / sqrt(2)",
                                    "children": [
                                        {
                                            "type": "integer",
                                            "label": "1",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "sqrt(2)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "sqrt",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(2)",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "label": "2",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "IIRFilter",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "IIRFilter",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    Creates an all-pass filter\n\n    >>> filter = make_allpass(1000, 48000)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.9077040443587427,\n     -1.9828897227476208, 1.0922959556412573]\n    \"\"\"\n    w0 = tau * frequency / samplerate\n    _sin = sin(w0)\n    _cos = cos(w0)\n    alpha = _sin / (2 * q_factor)\n\n    b0 = 1 - alpha\n    b1 = -2 * _cos\n    b2 = 1 + alpha\n\n    filt = IIRFilter(2)\n    filt.set_coefficients([b2, b1, b0], [b0, b1, b2])\n    return filt",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    Creates an all-pass filter\n\n    >>> filter = make_allpass(1000, 48000)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.9077040443587427,\n     -1.9828897227476208, 1.0922959556412573]\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    Creates an all-pass filter\n\n    >>> filter = make_allpass(1000, 48000)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.9077040443587427,\n     -1.9828897227476208, 1.0922959556412573]\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    Creates an all-pass filter\n\n    >>> filter = make_allpass(1000, 48000)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.9077040443587427,\n     -1.9828897227476208, 1.0922959556412573]\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "w0 = tau * frequency / samplerate",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "w0 = tau * frequency / samplerate",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "w0",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "tau * frequency / samplerate",
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "label": "tau * frequency",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "tau",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "frequency",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "samplerate",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "_sin = sin(w0)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "_sin = sin(w0)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "_sin",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "sin(w0)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "sin",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(w0)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "w0",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "_cos = cos(w0)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "_cos = cos(w0)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "_cos",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "cos(w0)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "cos",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(w0)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "w0",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "alpha = _sin / (2 * q_factor)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "alpha = _sin / (2 * q_factor)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "alpha",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "_sin / (2 * q_factor)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "_sin",
                                                    "children": []
                                                },
                                                {
                                                    "type": "parenthesized_expression",
                                                    "label": "(2 * q_factor)",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "label": "2 * q_factor",
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "label": "2",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "q_factor",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "b0 = 1 - alpha",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "b0 = 1 - alpha",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "b0",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "1 - alpha",
                                            "children": [
                                                {
                                                    "type": "integer",
                                                    "label": "1",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "alpha",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "b1 = -2 * _cos",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "b1 = -2 * _cos",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "b1",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "-2 * _cos",
                                            "children": [
                                                {
                                                    "type": "unary_operator",
                                                    "label": "-2",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "label": "2",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "_cos",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "b2 = 1 + alpha",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "b2 = 1 + alpha",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "b2",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "1 + alpha",
                                            "children": [
                                                {
                                                    "type": "integer",
                                                    "label": "1",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "alpha",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "filt = IIRFilter(2)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "filt = IIRFilter(2)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "filt",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "IIRFilter(2)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "IIRFilter",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(2)",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "label": "2",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "filt.set_coefficients([b2, b1, b0], [b0, b1, b2])",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "filt.set_coefficients([b2, b1, b0], [b0, b1, b2])",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "filt.set_coefficients",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "filt",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "set_coefficients",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "([b2, b1, b0], [b0, b1, b2])",
                                            "children": [
                                                {
                                                    "type": "list",
                                                    "label": "[b2, b1, b0]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "b2",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "b1",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "b0",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[b0, b1, b2]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "b0",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "b1",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "b2",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return filt",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "filt",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def make_peak(\n    frequency: int,\n    samplerate: int,\n    gain_db: float,\n    q_factor: float = 1 / sqrt(2),\n) -> IIRFilter:\n    \"\"\"\n    Creates a peak filter\n\n    >>> filter = make_peak(1000, 48000, 6)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [1.0653405327119334, -1.9828897227476208, 0.9346594672880666, 1.1303715025601122,\n     -1.9828897227476208, 0.8696284974398878]\n    \"\"\"\n    w0 = tau * frequency / samplerate\n    _sin = sin(w0)\n    _cos = cos(w0)\n    alpha = _sin / (2 * q_factor)\n    big_a = 10 ** (gain_db / 40)\n\n    b0 = 1 + alpha * big_a\n    b1 = -2 * _cos\n    b2 = 1 - alpha * big_a\n    a0 = 1 + alpha / big_a\n    a1 = -2 * _cos\n    a2 = 1 - alpha / big_a\n\n    filt = IIRFilter(2)\n    filt.set_coefficients([a0, a1, a2], [b0, b1, b2])\n    return filt",
            "children": [
                {
                    "type": "identifier",
                    "label": "make_peak",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(\n    frequency: int,\n    samplerate: int,\n    gain_db: float,\n    q_factor: float = 1 / sqrt(2),\n)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "frequency: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "frequency",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "samplerate: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "samplerate",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "gain_db: float",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "gain_db",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "float",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "float",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_default_parameter",
                            "label": "q_factor: float = 1 / sqrt(2)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "q_factor",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "float",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "float",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "binary_operator",
                                    "label": "1 / sqrt(2)",
                                    "children": [
                                        {
                                            "type": "integer",
                                            "label": "1",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "sqrt(2)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "sqrt",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(2)",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "label": "2",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "IIRFilter",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "IIRFilter",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    Creates a peak filter\n\n    >>> filter = make_peak(1000, 48000, 6)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [1.0653405327119334, -1.9828897227476208, 0.9346594672880666, 1.1303715025601122,\n     -1.9828897227476208, 0.8696284974398878]\n    \"\"\"\n    w0 = tau * frequency / samplerate\n    _sin = sin(w0)\n    _cos = cos(w0)\n    alpha = _sin / (2 * q_factor)\n    big_a = 10 ** (gain_db / 40)\n\n    b0 = 1 + alpha * big_a\n    b1 = -2 * _cos\n    b2 = 1 - alpha * big_a\n    a0 = 1 + alpha / big_a\n    a1 = -2 * _cos\n    a2 = 1 - alpha / big_a\n\n    filt = IIRFilter(2)\n    filt.set_coefficients([a0, a1, a2], [b0, b1, b2])\n    return filt",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    Creates a peak filter\n\n    >>> filter = make_peak(1000, 48000, 6)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [1.0653405327119334, -1.9828897227476208, 0.9346594672880666, 1.1303715025601122,\n     -1.9828897227476208, 0.8696284974398878]\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    Creates a peak filter\n\n    >>> filter = make_peak(1000, 48000, 6)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [1.0653405327119334, -1.9828897227476208, 0.9346594672880666, 1.1303715025601122,\n     -1.9828897227476208, 0.8696284974398878]\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    Creates a peak filter\n\n    >>> filter = make_peak(1000, 48000, 6)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [1.0653405327119334, -1.9828897227476208, 0.9346594672880666, 1.1303715025601122,\n     -1.9828897227476208, 0.8696284974398878]\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "w0 = tau * frequency / samplerate",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "w0 = tau * frequency / samplerate",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "w0",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "tau * frequency / samplerate",
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "label": "tau * frequency",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "tau",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "frequency",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "samplerate",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "_sin = sin(w0)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "_sin = sin(w0)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "_sin",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "sin(w0)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "sin",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(w0)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "w0",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "_cos = cos(w0)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "_cos = cos(w0)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "_cos",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "cos(w0)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "cos",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(w0)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "w0",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "alpha = _sin / (2 * q_factor)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "alpha = _sin / (2 * q_factor)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "alpha",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "_sin / (2 * q_factor)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "_sin",
                                                    "children": []
                                                },
                                                {
                                                    "type": "parenthesized_expression",
                                                    "label": "(2 * q_factor)",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "label": "2 * q_factor",
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "label": "2",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "q_factor",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "big_a = 10 ** (gain_db / 40)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "big_a = 10 ** (gain_db / 40)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "big_a",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "10 ** (gain_db / 40)",
                                            "children": [
                                                {
                                                    "type": "integer",
                                                    "label": "10",
                                                    "children": []
                                                },
                                                {
                                                    "type": "parenthesized_expression",
                                                    "label": "(gain_db / 40)",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "label": "gain_db / 40",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "gain_db",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "label": "40",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "b0 = 1 + alpha * big_a",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "b0 = 1 + alpha * big_a",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "b0",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "1 + alpha * big_a",
                                            "children": [
                                                {
                                                    "type": "integer",
                                                    "label": "1",
                                                    "children": []
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "label": "alpha * big_a",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "alpha",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "big_a",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "b1 = -2 * _cos",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "b1 = -2 * _cos",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "b1",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "-2 * _cos",
                                            "children": [
                                                {
                                                    "type": "unary_operator",
                                                    "label": "-2",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "label": "2",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "_cos",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "b2 = 1 - alpha * big_a",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "b2 = 1 - alpha * big_a",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "b2",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "1 - alpha * big_a",
                                            "children": [
                                                {
                                                    "type": "integer",
                                                    "label": "1",
                                                    "children": []
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "label": "alpha * big_a",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "alpha",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "big_a",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "a0 = 1 + alpha / big_a",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "a0 = 1 + alpha / big_a",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "a0",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "1 + alpha / big_a",
                                            "children": [
                                                {
                                                    "type": "integer",
                                                    "label": "1",
                                                    "children": []
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "label": "alpha / big_a",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "alpha",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "big_a",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "a1 = -2 * _cos",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "a1 = -2 * _cos",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "a1",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "-2 * _cos",
                                            "children": [
                                                {
                                                    "type": "unary_operator",
                                                    "label": "-2",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "label": "2",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "_cos",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "a2 = 1 - alpha / big_a",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "a2 = 1 - alpha / big_a",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "a2",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "1 - alpha / big_a",
                                            "children": [
                                                {
                                                    "type": "integer",
                                                    "label": "1",
                                                    "children": []
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "label": "alpha / big_a",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "alpha",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "big_a",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "filt = IIRFilter(2)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "filt = IIRFilter(2)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "filt",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "IIRFilter(2)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "IIRFilter",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(2)",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "label": "2",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "filt.set_coefficients([a0, a1, a2], [b0, b1, b2])",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "filt.set_coefficients([a0, a1, a2], [b0, b1, b2])",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "filt.set_coefficients",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "filt",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "set_coefficients",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "([a0, a1, a2], [b0, b1, b2])",
                                            "children": [
                                                {
                                                    "type": "list",
                                                    "label": "[a0, a1, a2]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "a0",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "a1",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "a2",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[b0, b1, b2]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "b0",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "b1",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "b2",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return filt",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "filt",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def make_lowshelf(\n    frequency: int,\n    samplerate: int,\n    gain_db: float,\n    q_factor: float = 1 / sqrt(2),\n) -> IIRFilter:\n    \"\"\"\n    Creates a low-shelf filter\n\n    >>> filter = make_lowshelf(1000, 48000, 6)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [3.0409336710888786, -5.608870992220748, 2.602157875636628, 3.139954022810743,\n     -5.591841778072785, 2.5201667380627257]\n    \"\"\"\n    w0 = tau * frequency / samplerate\n    _sin = sin(w0)\n    _cos = cos(w0)\n    alpha = _sin / (2 * q_factor)\n    big_a = 10 ** (gain_db / 40)\n    pmc = (big_a + 1) - (big_a - 1) * _cos\n    ppmc = (big_a + 1) + (big_a - 1) * _cos\n    mpc = (big_a - 1) - (big_a + 1) * _cos\n    pmpc = (big_a - 1) + (big_a + 1) * _cos\n    aa2 = 2 * sqrt(big_a) * alpha\n\n    b0 = big_a * (pmc + aa2)\n    b1 = 2 * big_a * mpc\n    b2 = big_a * (pmc - aa2)\n    a0 = ppmc + aa2\n    a1 = -2 * pmpc\n    a2 = ppmc - aa2\n\n    filt = IIRFilter(2)\n    filt.set_coefficients([a0, a1, a2], [b0, b1, b2])\n    return filt",
            "children": [
                {
                    "type": "identifier",
                    "label": "make_lowshelf",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(\n    frequency: int,\n    samplerate: int,\n    gain_db: float,\n    q_factor: float = 1 / sqrt(2),\n)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "frequency: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "frequency",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "samplerate: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "samplerate",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "gain_db: float",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "gain_db",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "float",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "float",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_default_parameter",
                            "label": "q_factor: float = 1 / sqrt(2)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "q_factor",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "float",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "float",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "binary_operator",
                                    "label": "1 / sqrt(2)",
                                    "children": [
                                        {
                                            "type": "integer",
                                            "label": "1",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "sqrt(2)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "sqrt",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(2)",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "label": "2",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "IIRFilter",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "IIRFilter",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    Creates a low-shelf filter\n\n    >>> filter = make_lowshelf(1000, 48000, 6)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [3.0409336710888786, -5.608870992220748, 2.602157875636628, 3.139954022810743,\n     -5.591841778072785, 2.5201667380627257]\n    \"\"\"\n    w0 = tau * frequency / samplerate\n    _sin = sin(w0)\n    _cos = cos(w0)\n    alpha = _sin / (2 * q_factor)\n    big_a = 10 ** (gain_db / 40)\n    pmc = (big_a + 1) - (big_a - 1) * _cos\n    ppmc = (big_a + 1) + (big_a - 1) * _cos\n    mpc = (big_a - 1) - (big_a + 1) * _cos\n    pmpc = (big_a - 1) + (big_a + 1) * _cos\n    aa2 = 2 * sqrt(big_a) * alpha\n\n    b0 = big_a * (pmc + aa2)\n    b1 = 2 * big_a * mpc\n    b2 = big_a * (pmc - aa2)\n    a0 = ppmc + aa2\n    a1 = -2 * pmpc\n    a2 = ppmc - aa2\n\n    filt = IIRFilter(2)\n    filt.set_coefficients([a0, a1, a2], [b0, b1, b2])\n    return filt",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    Creates a low-shelf filter\n\n    >>> filter = make_lowshelf(1000, 48000, 6)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [3.0409336710888786, -5.608870992220748, 2.602157875636628, 3.139954022810743,\n     -5.591841778072785, 2.5201667380627257]\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    Creates a low-shelf filter\n\n    >>> filter = make_lowshelf(1000, 48000, 6)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [3.0409336710888786, -5.608870992220748, 2.602157875636628, 3.139954022810743,\n     -5.591841778072785, 2.5201667380627257]\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    Creates a low-shelf filter\n\n    >>> filter = make_lowshelf(1000, 48000, 6)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [3.0409336710888786, -5.608870992220748, 2.602157875636628, 3.139954022810743,\n     -5.591841778072785, 2.5201667380627257]\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "w0 = tau * frequency / samplerate",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "w0 = tau * frequency / samplerate",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "w0",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "tau * frequency / samplerate",
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "label": "tau * frequency",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "tau",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "frequency",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "samplerate",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "_sin = sin(w0)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "_sin = sin(w0)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "_sin",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "sin(w0)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "sin",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(w0)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "w0",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "_cos = cos(w0)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "_cos = cos(w0)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "_cos",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "cos(w0)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "cos",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(w0)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "w0",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "alpha = _sin / (2 * q_factor)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "alpha = _sin / (2 * q_factor)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "alpha",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "_sin / (2 * q_factor)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "_sin",
                                                    "children": []
                                                },
                                                {
                                                    "type": "parenthesized_expression",
                                                    "label": "(2 * q_factor)",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "label": "2 * q_factor",
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "label": "2",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "q_factor",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "big_a = 10 ** (gain_db / 40)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "big_a = 10 ** (gain_db / 40)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "big_a",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "10 ** (gain_db / 40)",
                                            "children": [
                                                {
                                                    "type": "integer",
                                                    "label": "10",
                                                    "children": []
                                                },
                                                {
                                                    "type": "parenthesized_expression",
                                                    "label": "(gain_db / 40)",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "label": "gain_db / 40",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "gain_db",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "label": "40",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "pmc = (big_a + 1) - (big_a - 1) * _cos",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "pmc = (big_a + 1) - (big_a - 1) * _cos",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "pmc",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "(big_a + 1) - (big_a - 1) * _cos",
                                            "children": [
                                                {
                                                    "type": "parenthesized_expression",
                                                    "label": "(big_a + 1)",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "label": "big_a + 1",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "big_a",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "label": "1",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "label": "(big_a - 1) * _cos",
                                                    "children": [
                                                        {
                                                            "type": "parenthesized_expression",
                                                            "label": "(big_a - 1)",
                                                            "children": [
                                                                {
                                                                    "type": "binary_operator",
                                                                    "label": "big_a - 1",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "big_a",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "1",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "_cos",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "ppmc = (big_a + 1) + (big_a - 1) * _cos",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "ppmc = (big_a + 1) + (big_a - 1) * _cos",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "ppmc",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "(big_a + 1) + (big_a - 1) * _cos",
                                            "children": [
                                                {
                                                    "type": "parenthesized_expression",
                                                    "label": "(big_a + 1)",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "label": "big_a + 1",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "big_a",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "label": "1",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "label": "(big_a - 1) * _cos",
                                                    "children": [
                                                        {
                                                            "type": "parenthesized_expression",
                                                            "label": "(big_a - 1)",
                                                            "children": [
                                                                {
                                                                    "type": "binary_operator",
                                                                    "label": "big_a - 1",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "big_a",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "1",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "_cos",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "mpc = (big_a - 1) - (big_a + 1) * _cos",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "mpc = (big_a - 1) - (big_a + 1) * _cos",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "mpc",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "(big_a - 1) - (big_a + 1) * _cos",
                                            "children": [
                                                {
                                                    "type": "parenthesized_expression",
                                                    "label": "(big_a - 1)",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "label": "big_a - 1",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "big_a",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "label": "1",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "label": "(big_a + 1) * _cos",
                                                    "children": [
                                                        {
                                                            "type": "parenthesized_expression",
                                                            "label": "(big_a + 1)",
                                                            "children": [
                                                                {
                                                                    "type": "binary_operator",
                                                                    "label": "big_a + 1",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "big_a",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "1",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "_cos",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "pmpc = (big_a - 1) + (big_a + 1) * _cos",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "pmpc = (big_a - 1) + (big_a + 1) * _cos",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "pmpc",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "(big_a - 1) + (big_a + 1) * _cos",
                                            "children": [
                                                {
                                                    "type": "parenthesized_expression",
                                                    "label": "(big_a - 1)",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "label": "big_a - 1",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "big_a",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "label": "1",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "label": "(big_a + 1) * _cos",
                                                    "children": [
                                                        {
                                                            "type": "parenthesized_expression",
                                                            "label": "(big_a + 1)",
                                                            "children": [
                                                                {
                                                                    "type": "binary_operator",
                                                                    "label": "big_a + 1",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "big_a",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "1",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "_cos",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "aa2 = 2 * sqrt(big_a) * alpha",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "aa2 = 2 * sqrt(big_a) * alpha",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "aa2",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "2 * sqrt(big_a) * alpha",
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "label": "2 * sqrt(big_a)",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "label": "2",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "sqrt(big_a)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "sqrt",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(big_a)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "big_a",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "alpha",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "b0 = big_a * (pmc + aa2)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "b0 = big_a * (pmc + aa2)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "b0",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "big_a * (pmc + aa2)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "big_a",
                                                    "children": []
                                                },
                                                {
                                                    "type": "parenthesized_expression",
                                                    "label": "(pmc + aa2)",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "label": "pmc + aa2",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "pmc",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "aa2",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "b1 = 2 * big_a * mpc",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "b1 = 2 * big_a * mpc",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "b1",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "2 * big_a * mpc",
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "label": "2 * big_a",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "label": "2",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "big_a",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "mpc",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "b2 = big_a * (pmc - aa2)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "b2 = big_a * (pmc - aa2)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "b2",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "big_a * (pmc - aa2)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "big_a",
                                                    "children": []
                                                },
                                                {
                                                    "type": "parenthesized_expression",
                                                    "label": "(pmc - aa2)",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "label": "pmc - aa2",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "pmc",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "aa2",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "a0 = ppmc + aa2",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "a0 = ppmc + aa2",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "a0",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "ppmc + aa2",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "ppmc",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "aa2",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "a1 = -2 * pmpc",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "a1 = -2 * pmpc",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "a1",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "-2 * pmpc",
                                            "children": [
                                                {
                                                    "type": "unary_operator",
                                                    "label": "-2",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "label": "2",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "pmpc",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "a2 = ppmc - aa2",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "a2 = ppmc - aa2",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "a2",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "ppmc - aa2",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "ppmc",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "aa2",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "filt = IIRFilter(2)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "filt = IIRFilter(2)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "filt",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "IIRFilter(2)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "IIRFilter",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(2)",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "label": "2",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "filt.set_coefficients([a0, a1, a2], [b0, b1, b2])",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "filt.set_coefficients([a0, a1, a2], [b0, b1, b2])",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "filt.set_coefficients",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "filt",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "set_coefficients",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "([a0, a1, a2], [b0, b1, b2])",
                                            "children": [
                                                {
                                                    "type": "list",
                                                    "label": "[a0, a1, a2]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "a0",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "a1",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "a2",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[b0, b1, b2]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "b0",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "b1",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "b2",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return filt",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "filt",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def make_highshelf(\n    frequency: int,\n    samplerate: int,\n    gain_db: float,\n    q_factor: float = 1 / sqrt(2),\n) -> IIRFilter:\n    \"\"\"\n    Creates a high-shelf filter\n\n    >>> filter = make_highshelf(1000, 48000, 6)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [2.2229172136088806, -3.9587208137297303, 1.7841414181566304, 4.295432981120543,\n     -7.922740859457287, 3.6756456963725253]\n    \"\"\"\n    w0 = tau * frequency / samplerate\n    _sin = sin(w0)\n    _cos = cos(w0)\n    alpha = _sin / (2 * q_factor)\n    big_a = 10 ** (gain_db / 40)\n    pmc = (big_a + 1) - (big_a - 1) * _cos\n    ppmc = (big_a + 1) + (big_a - 1) * _cos\n    mpc = (big_a - 1) - (big_a + 1) * _cos\n    pmpc = (big_a - 1) + (big_a + 1) * _cos\n    aa2 = 2 * sqrt(big_a) * alpha\n\n    b0 = big_a * (ppmc + aa2)\n    b1 = -2 * big_a * pmpc\n    b2 = big_a * (ppmc - aa2)\n    a0 = pmc + aa2\n    a1 = 2 * mpc\n    a2 = pmc - aa2\n\n    filt = IIRFilter(2)\n    filt.set_coefficients([a0, a1, a2], [b0, b1, b2])\n    return filt",
            "children": [
                {
                    "type": "identifier",
                    "label": "make_highshelf",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(\n    frequency: int,\n    samplerate: int,\n    gain_db: float,\n    q_factor: float = 1 / sqrt(2),\n)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "frequency: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "frequency",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "samplerate: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "samplerate",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "gain_db: float",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "gain_db",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "float",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "float",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_default_parameter",
                            "label": "q_factor: float = 1 / sqrt(2)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "q_factor",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "float",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "float",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "binary_operator",
                                    "label": "1 / sqrt(2)",
                                    "children": [
                                        {
                                            "type": "integer",
                                            "label": "1",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "sqrt(2)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "sqrt",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(2)",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "label": "2",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "IIRFilter",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "IIRFilter",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    Creates a high-shelf filter\n\n    >>> filter = make_highshelf(1000, 48000, 6)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [2.2229172136088806, -3.9587208137297303, 1.7841414181566304, 4.295432981120543,\n     -7.922740859457287, 3.6756456963725253]\n    \"\"\"\n    w0 = tau * frequency / samplerate\n    _sin = sin(w0)\n    _cos = cos(w0)\n    alpha = _sin / (2 * q_factor)\n    big_a = 10 ** (gain_db / 40)\n    pmc = (big_a + 1) - (big_a - 1) * _cos\n    ppmc = (big_a + 1) + (big_a - 1) * _cos\n    mpc = (big_a - 1) - (big_a + 1) * _cos\n    pmpc = (big_a - 1) + (big_a + 1) * _cos\n    aa2 = 2 * sqrt(big_a) * alpha\n\n    b0 = big_a * (ppmc + aa2)\n    b1 = -2 * big_a * pmpc\n    b2 = big_a * (ppmc - aa2)\n    a0 = pmc + aa2\n    a1 = 2 * mpc\n    a2 = pmc - aa2\n\n    filt = IIRFilter(2)\n    filt.set_coefficients([a0, a1, a2], [b0, b1, b2])\n    return filt",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    Creates a high-shelf filter\n\n    >>> filter = make_highshelf(1000, 48000, 6)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [2.2229172136088806, -3.9587208137297303, 1.7841414181566304, 4.295432981120543,\n     -7.922740859457287, 3.6756456963725253]\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    Creates a high-shelf filter\n\n    >>> filter = make_highshelf(1000, 48000, 6)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [2.2229172136088806, -3.9587208137297303, 1.7841414181566304, 4.295432981120543,\n     -7.922740859457287, 3.6756456963725253]\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    Creates a high-shelf filter\n\n    >>> filter = make_highshelf(1000, 48000, 6)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [2.2229172136088806, -3.9587208137297303, 1.7841414181566304, 4.295432981120543,\n     -7.922740859457287, 3.6756456963725253]\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "w0 = tau * frequency / samplerate",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "w0 = tau * frequency / samplerate",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "w0",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "tau * frequency / samplerate",
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "label": "tau * frequency",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "tau",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "frequency",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "samplerate",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "_sin = sin(w0)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "_sin = sin(w0)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "_sin",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "sin(w0)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "sin",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(w0)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "w0",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "_cos = cos(w0)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "_cos = cos(w0)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "_cos",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "cos(w0)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "cos",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(w0)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "w0",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "alpha = _sin / (2 * q_factor)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "alpha = _sin / (2 * q_factor)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "alpha",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "_sin / (2 * q_factor)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "_sin",
                                                    "children": []
                                                },
                                                {
                                                    "type": "parenthesized_expression",
                                                    "label": "(2 * q_factor)",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "label": "2 * q_factor",
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "label": "2",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "q_factor",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "big_a = 10 ** (gain_db / 40)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "big_a = 10 ** (gain_db / 40)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "big_a",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "10 ** (gain_db / 40)",
                                            "children": [
                                                {
                                                    "type": "integer",
                                                    "label": "10",
                                                    "children": []
                                                },
                                                {
                                                    "type": "parenthesized_expression",
                                                    "label": "(gain_db / 40)",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "label": "gain_db / 40",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "gain_db",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "label": "40",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "pmc = (big_a + 1) - (big_a - 1) * _cos",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "pmc = (big_a + 1) - (big_a - 1) * _cos",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "pmc",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "(big_a + 1) - (big_a - 1) * _cos",
                                            "children": [
                                                {
                                                    "type": "parenthesized_expression",
                                                    "label": "(big_a + 1)",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "label": "big_a + 1",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "big_a",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "label": "1",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "label": "(big_a - 1) * _cos",
                                                    "children": [
                                                        {
                                                            "type": "parenthesized_expression",
                                                            "label": "(big_a - 1)",
                                                            "children": [
                                                                {
                                                                    "type": "binary_operator",
                                                                    "label": "big_a - 1",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "big_a",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "1",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "_cos",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "ppmc = (big_a + 1) + (big_a - 1) * _cos",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "ppmc = (big_a + 1) + (big_a - 1) * _cos",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "ppmc",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "(big_a + 1) + (big_a - 1) * _cos",
                                            "children": [
                                                {
                                                    "type": "parenthesized_expression",
                                                    "label": "(big_a + 1)",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "label": "big_a + 1",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "big_a",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "label": "1",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "label": "(big_a - 1) * _cos",
                                                    "children": [
                                                        {
                                                            "type": "parenthesized_expression",
                                                            "label": "(big_a - 1)",
                                                            "children": [
                                                                {
                                                                    "type": "binary_operator",
                                                                    "label": "big_a - 1",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "big_a",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "1",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "_cos",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "mpc = (big_a - 1) - (big_a + 1) * _cos",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "mpc = (big_a - 1) - (big_a + 1) * _cos",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "mpc",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "(big_a - 1) - (big_a + 1) * _cos",
                                            "children": [
                                                {
                                                    "type": "parenthesized_expression",
                                                    "label": "(big_a - 1)",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "label": "big_a - 1",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "big_a",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "label": "1",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "label": "(big_a + 1) * _cos",
                                                    "children": [
                                                        {
                                                            "type": "parenthesized_expression",
                                                            "label": "(big_a + 1)",
                                                            "children": [
                                                                {
                                                                    "type": "binary_operator",
                                                                    "label": "big_a + 1",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "big_a",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "1",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "_cos",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "pmpc = (big_a - 1) + (big_a + 1) * _cos",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "pmpc = (big_a - 1) + (big_a + 1) * _cos",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "pmpc",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "(big_a - 1) + (big_a + 1) * _cos",
                                            "children": [
                                                {
                                                    "type": "parenthesized_expression",
                                                    "label": "(big_a - 1)",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "label": "big_a - 1",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "big_a",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "label": "1",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "label": "(big_a + 1) * _cos",
                                                    "children": [
                                                        {
                                                            "type": "parenthesized_expression",
                                                            "label": "(big_a + 1)",
                                                            "children": [
                                                                {
                                                                    "type": "binary_operator",
                                                                    "label": "big_a + 1",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "big_a",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "1",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "_cos",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "aa2 = 2 * sqrt(big_a) * alpha",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "aa2 = 2 * sqrt(big_a) * alpha",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "aa2",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "2 * sqrt(big_a) * alpha",
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "label": "2 * sqrt(big_a)",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "label": "2",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "sqrt(big_a)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "sqrt",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(big_a)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "big_a",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "alpha",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "b0 = big_a * (ppmc + aa2)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "b0 = big_a * (ppmc + aa2)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "b0",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "big_a * (ppmc + aa2)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "big_a",
                                                    "children": []
                                                },
                                                {
                                                    "type": "parenthesized_expression",
                                                    "label": "(ppmc + aa2)",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "label": "ppmc + aa2",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "ppmc",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "aa2",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "b1 = -2 * big_a * pmpc",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "b1 = -2 * big_a * pmpc",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "b1",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "-2 * big_a * pmpc",
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "label": "-2 * big_a",
                                                    "children": [
                                                        {
                                                            "type": "unary_operator",
                                                            "label": "-2",
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "label": "2",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "big_a",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "pmpc",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "b2 = big_a * (ppmc - aa2)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "b2 = big_a * (ppmc - aa2)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "b2",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "big_a * (ppmc - aa2)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "big_a",
                                                    "children": []
                                                },
                                                {
                                                    "type": "parenthesized_expression",
                                                    "label": "(ppmc - aa2)",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "label": "ppmc - aa2",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "ppmc",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "aa2",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "a0 = pmc + aa2",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "a0 = pmc + aa2",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "a0",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "pmc + aa2",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "pmc",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "aa2",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "a1 = 2 * mpc",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "a1 = 2 * mpc",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "a1",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "2 * mpc",
                                            "children": [
                                                {
                                                    "type": "integer",
                                                    "label": "2",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "mpc",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "a2 = pmc - aa2",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "a2 = pmc - aa2",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "a2",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "pmc - aa2",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "pmc",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "aa2",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "filt = IIRFilter(2)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "filt = IIRFilter(2)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "filt",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "IIRFilter(2)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "IIRFilter",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(2)",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "label": "2",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "filt.set_coefficients([a0, a1, a2], [b0, b1, b2])",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "filt.set_coefficients([a0, a1, a2], [b0, b1, b2])",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "filt.set_coefficients",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "filt",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "set_coefficients",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "([a0, a1, a2], [b0, b1, b2])",
                                            "children": [
                                                {
                                                    "type": "list",
                                                    "label": "[a0, a1, a2]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "a0",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "a1",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "a2",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "list",
                                                    "label": "[b0, b1, b2]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "b0",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "b1",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "b2",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return filt",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "filt",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}