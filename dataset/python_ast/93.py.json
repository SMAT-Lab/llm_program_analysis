{
    "type": "module",
    "label": "# https://www.geeksforgeeks.org/solve-crossword-puzzle/\n\n\ndef is_valid(\n    puzzle: list[list[str]], word: str, row: int, col: int, vertical: bool\n) -> bool:\n    \"\"\"\n    Check if a word can be placed at the given position.\n\n    >>> puzzle = [\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', '']\n    ... ]\n    >>> is_valid(puzzle, 'word', 0, 0, True)\n    True\n    >>> puzzle = [\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', '']\n    ... ]\n    >>> is_valid(puzzle, 'word', 0, 0, False)\n    True\n    \"\"\"\n    for i in range(len(word)):\n        if vertical:\n            if row + i >= len(puzzle) or puzzle[row + i][col] != \"\":\n                return False\n        elif col + i >= len(puzzle[0]) or puzzle[row][col + i] != \"\":\n            return False\n    return True\n\n\ndef place_word(\n    puzzle: list[list[str]], word: str, row: int, col: int, vertical: bool\n) -> None:\n    \"\"\"\n    Place a word at the given position.\n\n    >>> puzzle = [\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', '']\n    ... ]\n    >>> place_word(puzzle, 'word', 0, 0, True)\n    >>> puzzle\n    [['w', '', '', ''], ['o', '', '', ''], ['r', '', '', ''], ['d', '', '', '']]\n    \"\"\"\n    for i, char in enumerate(word):\n        if vertical:\n            puzzle[row + i][col] = char\n        else:\n            puzzle[row][col + i] = char\n\n\ndef remove_word(\n    puzzle: list[list[str]], word: str, row: int, col: int, vertical: bool\n) -> None:\n    \"\"\"\n    Remove a word from the given position.\n\n    >>> puzzle = [\n    ...     ['w', '', '', ''],\n    ...     ['o', '', '', ''],\n    ...     ['r', '', '', ''],\n    ...     ['d', '', '', '']\n    ... ]\n    >>> remove_word(puzzle, 'word', 0, 0, True)\n    >>> puzzle\n    [['', '', '', ''], ['', '', '', ''], ['', '', '', ''], ['', '', '', '']]\n    \"\"\"\n    for i in range(len(word)):\n        if vertical:\n            puzzle[row + i][col] = \"\"\n        else:\n            puzzle[row][col + i] = \"\"\n\n\ndef solve_crossword(puzzle: list[list[str]], words: list[str]) -> bool:\n    \"\"\"\n    Solve the crossword puzzle using backtracking.\n\n    >>> puzzle = [\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', '']\n    ... ]\n\n    >>> words = ['word', 'four', 'more', 'last']\n    >>> solve_crossword(puzzle, words)\n    True\n    >>> puzzle = [\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', '']\n    ... ]\n    >>> words = ['word', 'four', 'more', 'paragraphs']\n    >>> solve_crossword(puzzle, words)\n    False\n    \"\"\"\n    for row in range(len(puzzle)):\n        for col in range(len(puzzle[0])):\n            if puzzle[row][col] == \"\":\n                for word in words:\n                    for vertical in [True, False]:\n                        if is_valid(puzzle, word, row, col, vertical):\n                            place_word(puzzle, word, row, col, vertical)\n                            words.remove(word)\n                            if solve_crossword(puzzle, words):\n                                return True\n                            words.append(word)\n                            remove_word(puzzle, word, row, col, vertical)\n                return False\n    return True\n\n\nif __name__ == \"__main__\":\n    PUZZLE = [[\"\"] * 3 for _ in range(3)]\n    WORDS = [\"cat\", \"dog\", \"car\"]\n\n    if solve_crossword(PUZZLE, WORDS):\n        print(\"Solution found:\")\n        for row in PUZZLE:\n            print(\" \".join(row))\n    else:\n        print(\"No solution found:\")\n",
    "children": [
        {
            "type": "comment",
            "label": "# https://www.geeksforgeeks.org/solve-crossword-puzzle/",
            "children": []
        },
        {
            "type": "function_definition",
            "label": "def is_valid(\n    puzzle: list[list[str]], word: str, row: int, col: int, vertical: bool\n) -> bool:\n    \"\"\"\n    Check if a word can be placed at the given position.\n\n    >>> puzzle = [\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', '']\n    ... ]\n    >>> is_valid(puzzle, 'word', 0, 0, True)\n    True\n    >>> puzzle = [\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', '']\n    ... ]\n    >>> is_valid(puzzle, 'word', 0, 0, False)\n    True\n    \"\"\"\n    for i in range(len(word)):\n        if vertical:\n            if row + i >= len(puzzle) or puzzle[row + i][col] != \"\":\n                return False\n        elif col + i >= len(puzzle[0]) or puzzle[row][col + i] != \"\":\n            return False\n    return True",
            "children": [
                {
                    "type": "identifier",
                    "label": "is_valid",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(\n    puzzle: list[list[str]], word: str, row: int, col: int, vertical: bool\n)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "puzzle: list[list[str]]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "puzzle",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "list[list[str]]",
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "list[list[str]]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "list",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[list[str]]",
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "list[str]",
                                                            "children": [
                                                                {
                                                                    "type": "generic_type",
                                                                    "label": "list[str]",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "list",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "type_parameter",
                                                                            "label": "[str]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "type",
                                                                                    "label": "str",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "str",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "word: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "word",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "row: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "row",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "col: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "col",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "vertical: bool",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "vertical",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "bool",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "bool",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "bool",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "bool",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    Check if a word can be placed at the given position.\n\n    >>> puzzle = [\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', '']\n    ... ]\n    >>> is_valid(puzzle, 'word', 0, 0, True)\n    True\n    >>> puzzle = [\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', '']\n    ... ]\n    >>> is_valid(puzzle, 'word', 0, 0, False)\n    True\n    \"\"\"\n    for i in range(len(word)):\n        if vertical:\n            if row + i >= len(puzzle) or puzzle[row + i][col] != \"\":\n                return False\n        elif col + i >= len(puzzle[0]) or puzzle[row][col + i] != \"\":\n            return False\n    return True",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    Check if a word can be placed at the given position.\n\n    >>> puzzle = [\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', '']\n    ... ]\n    >>> is_valid(puzzle, 'word', 0, 0, True)\n    True\n    >>> puzzle = [\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', '']\n    ... ]\n    >>> is_valid(puzzle, 'word', 0, 0, False)\n    True\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    Check if a word can be placed at the given position.\n\n    >>> puzzle = [\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', '']\n    ... ]\n    >>> is_valid(puzzle, 'word', 0, 0, True)\n    True\n    >>> puzzle = [\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', '']\n    ... ]\n    >>> is_valid(puzzle, 'word', 0, 0, False)\n    True\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    Check if a word can be placed at the given position.\n\n    >>> puzzle = [\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', '']\n    ... ]\n    >>> is_valid(puzzle, 'word', 0, 0, True)\n    True\n    >>> puzzle = [\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', '']\n    ... ]\n    >>> is_valid(puzzle, 'word', 0, 0, False)\n    True\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "for_statement",
                            "label": "for i in range(len(word)):\n        if vertical:\n            if row + i >= len(puzzle) or puzzle[row + i][col] != \"\":\n                return False\n        elif col + i >= len(puzzle[0]) or puzzle[row][col + i] != \"\":\n            return False",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "i",
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "label": "range(len(word))",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "range",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(len(word))",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "len(word)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "len",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(word)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "word",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "if vertical:\n            if row + i >= len(puzzle) or puzzle[row + i][col] != \"\":\n                return False\n        elif col + i >= len(puzzle[0]) or puzzle[row][col + i] != \"\":\n            return False",
                                    "children": [
                                        {
                                            "type": "if_statement",
                                            "label": "if vertical:\n            if row + i >= len(puzzle) or puzzle[row + i][col] != \"\":\n                return False\n        elif col + i >= len(puzzle[0]) or puzzle[row][col + i] != \"\":\n            return False",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "vertical",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "if row + i >= len(puzzle) or puzzle[row + i][col] != \"\":\n                return False",
                                                    "children": [
                                                        {
                                                            "type": "if_statement",
                                                            "label": "if row + i >= len(puzzle) or puzzle[row + i][col] != \"\":\n                return False",
                                                            "children": [
                                                                {
                                                                    "type": "boolean_operator",
                                                                    "label": "row + i >= len(puzzle) or puzzle[row + i][col] != \"\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "comparison_operator",
                                                                            "label": "row + i >= len(puzzle)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "binary_operator",
                                                                                    "label": "row + i",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "row",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "i",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "len(puzzle)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "len",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(puzzle)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "puzzle",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "comparison_operator",
                                                                            "label": "puzzle[row + i][col] != \"\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "subscript",
                                                                                    "label": "puzzle[row + i][col]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "subscript",
                                                                                            "label": "puzzle[row + i]",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "puzzle",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "binary_operator",
                                                                                                    "label": "row + i",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "row",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "i",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "col",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": "return False",
                                                                    "children": [
                                                                        {
                                                                            "type": "return_statement",
                                                                            "label": "return False",
                                                                            "children": [
                                                                                {
                                                                                    "type": "false",
                                                                                    "label": "False",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "elif_clause",
                                                    "label": "elif col + i >= len(puzzle[0]) or puzzle[row][col + i] != \"\":\n            return False",
                                                    "children": [
                                                        {
                                                            "type": "boolean_operator",
                                                            "label": "col + i >= len(puzzle[0]) or puzzle[row][col + i] != \"\"",
                                                            "children": [
                                                                {
                                                                    "type": "comparison_operator",
                                                                    "label": "col + i >= len(puzzle[0])",
                                                                    "children": [
                                                                        {
                                                                            "type": "binary_operator",
                                                                            "label": "col + i",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "col",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "i",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "label": "len(puzzle[0])",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "len",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(puzzle[0])",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "subscript",
                                                                                            "label": "puzzle[0]",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "puzzle",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "integer",
                                                                                                    "label": "0",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "comparison_operator",
                                                                    "label": "puzzle[row][col + i] != \"\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "subscript",
                                                                            "label": "puzzle[row][col + i]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "subscript",
                                                                                    "label": "puzzle[row]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "puzzle",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "row",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "binary_operator",
                                                                                    "label": "col + i",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "col",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "i",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "return False",
                                                            "children": [
                                                                {
                                                                    "type": "return_statement",
                                                                    "label": "return False",
                                                                    "children": [
                                                                        {
                                                                            "type": "false",
                                                                            "label": "False",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return True",
                            "children": [
                                {
                                    "type": "true",
                                    "label": "True",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def place_word(\n    puzzle: list[list[str]], word: str, row: int, col: int, vertical: bool\n) -> None:\n    \"\"\"\n    Place a word at the given position.\n\n    >>> puzzle = [\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', '']\n    ... ]\n    >>> place_word(puzzle, 'word', 0, 0, True)\n    >>> puzzle\n    [['w', '', '', ''], ['o', '', '', ''], ['r', '', '', ''], ['d', '', '', '']]\n    \"\"\"\n    for i, char in enumerate(word):\n        if vertical:\n            puzzle[row + i][col] = char\n        else:\n            puzzle[row][col + i] = char",
            "children": [
                {
                    "type": "identifier",
                    "label": "place_word",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(\n    puzzle: list[list[str]], word: str, row: int, col: int, vertical: bool\n)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "puzzle: list[list[str]]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "puzzle",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "list[list[str]]",
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "list[list[str]]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "list",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[list[str]]",
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "list[str]",
                                                            "children": [
                                                                {
                                                                    "type": "generic_type",
                                                                    "label": "list[str]",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "list",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "type_parameter",
                                                                            "label": "[str]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "type",
                                                                                    "label": "str",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "str",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "word: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "word",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "row: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "row",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "col: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "col",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "vertical: bool",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "vertical",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "bool",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "bool",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "None",
                    "children": [
                        {
                            "type": "none",
                            "label": "None",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    Place a word at the given position.\n\n    >>> puzzle = [\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', '']\n    ... ]\n    >>> place_word(puzzle, 'word', 0, 0, True)\n    >>> puzzle\n    [['w', '', '', ''], ['o', '', '', ''], ['r', '', '', ''], ['d', '', '', '']]\n    \"\"\"\n    for i, char in enumerate(word):\n        if vertical:\n            puzzle[row + i][col] = char\n        else:\n            puzzle[row][col + i] = char",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    Place a word at the given position.\n\n    >>> puzzle = [\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', '']\n    ... ]\n    >>> place_word(puzzle, 'word', 0, 0, True)\n    >>> puzzle\n    [['w', '', '', ''], ['o', '', '', ''], ['r', '', '', ''], ['d', '', '', '']]\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    Place a word at the given position.\n\n    >>> puzzle = [\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', '']\n    ... ]\n    >>> place_word(puzzle, 'word', 0, 0, True)\n    >>> puzzle\n    [['w', '', '', ''], ['o', '', '', ''], ['r', '', '', ''], ['d', '', '', '']]\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    Place a word at the given position.\n\n    >>> puzzle = [\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', '']\n    ... ]\n    >>> place_word(puzzle, 'word', 0, 0, True)\n    >>> puzzle\n    [['w', '', '', ''], ['o', '', '', ''], ['r', '', '', ''], ['d', '', '', '']]\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "for_statement",
                            "label": "for i, char in enumerate(word):\n        if vertical:\n            puzzle[row + i][col] = char\n        else:\n            puzzle[row][col + i] = char",
                            "children": [
                                {
                                    "type": "pattern_list",
                                    "label": "i, char",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "i",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "char",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "call",
                                    "label": "enumerate(word)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "enumerate",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(word)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "word",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "if vertical:\n            puzzle[row + i][col] = char\n        else:\n            puzzle[row][col + i] = char",
                                    "children": [
                                        {
                                            "type": "if_statement",
                                            "label": "if vertical:\n            puzzle[row + i][col] = char\n        else:\n            puzzle[row][col + i] = char",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "vertical",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "puzzle[row + i][col] = char",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "puzzle[row + i][col] = char",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "puzzle[row + i][col] = char",
                                                                    "children": [
                                                                        {
                                                                            "type": "subscript",
                                                                            "label": "puzzle[row + i][col]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "subscript",
                                                                                    "label": "puzzle[row + i]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "puzzle",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "binary_operator",
                                                                                            "label": "row + i",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "row",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "i",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "col",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "char",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "else_clause",
                                                    "label": "else:\n            puzzle[row][col + i] = char",
                                                    "children": [
                                                        {
                                                            "type": "block",
                                                            "label": "puzzle[row][col + i] = char",
                                                            "children": [
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "puzzle[row][col + i] = char",
                                                                    "children": [
                                                                        {
                                                                            "type": "assignment",
                                                                            "label": "puzzle[row][col + i] = char",
                                                                            "children": [
                                                                                {
                                                                                    "type": "subscript",
                                                                                    "label": "puzzle[row][col + i]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "subscript",
                                                                                            "label": "puzzle[row]",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "puzzle",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "row",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "binary_operator",
                                                                                            "label": "col + i",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "col",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "i",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "char",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def remove_word(\n    puzzle: list[list[str]], word: str, row: int, col: int, vertical: bool\n) -> None:\n    \"\"\"\n    Remove a word from the given position.\n\n    >>> puzzle = [\n    ...     ['w', '', '', ''],\n    ...     ['o', '', '', ''],\n    ...     ['r', '', '', ''],\n    ...     ['d', '', '', '']\n    ... ]\n    >>> remove_word(puzzle, 'word', 0, 0, True)\n    >>> puzzle\n    [['', '', '', ''], ['', '', '', ''], ['', '', '', ''], ['', '', '', '']]\n    \"\"\"\n    for i in range(len(word)):\n        if vertical:\n            puzzle[row + i][col] = \"\"\n        else:\n            puzzle[row][col + i] = \"\"",
            "children": [
                {
                    "type": "identifier",
                    "label": "remove_word",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(\n    puzzle: list[list[str]], word: str, row: int, col: int, vertical: bool\n)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "puzzle: list[list[str]]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "puzzle",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "list[list[str]]",
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "list[list[str]]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "list",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[list[str]]",
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "list[str]",
                                                            "children": [
                                                                {
                                                                    "type": "generic_type",
                                                                    "label": "list[str]",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "list",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "type_parameter",
                                                                            "label": "[str]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "type",
                                                                                    "label": "str",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "str",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "word: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "word",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "row: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "row",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "col: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "col",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "vertical: bool",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "vertical",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "bool",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "bool",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "None",
                    "children": [
                        {
                            "type": "none",
                            "label": "None",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    Remove a word from the given position.\n\n    >>> puzzle = [\n    ...     ['w', '', '', ''],\n    ...     ['o', '', '', ''],\n    ...     ['r', '', '', ''],\n    ...     ['d', '', '', '']\n    ... ]\n    >>> remove_word(puzzle, 'word', 0, 0, True)\n    >>> puzzle\n    [['', '', '', ''], ['', '', '', ''], ['', '', '', ''], ['', '', '', '']]\n    \"\"\"\n    for i in range(len(word)):\n        if vertical:\n            puzzle[row + i][col] = \"\"\n        else:\n            puzzle[row][col + i] = \"\"",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    Remove a word from the given position.\n\n    >>> puzzle = [\n    ...     ['w', '', '', ''],\n    ...     ['o', '', '', ''],\n    ...     ['r', '', '', ''],\n    ...     ['d', '', '', '']\n    ... ]\n    >>> remove_word(puzzle, 'word', 0, 0, True)\n    >>> puzzle\n    [['', '', '', ''], ['', '', '', ''], ['', '', '', ''], ['', '', '', '']]\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    Remove a word from the given position.\n\n    >>> puzzle = [\n    ...     ['w', '', '', ''],\n    ...     ['o', '', '', ''],\n    ...     ['r', '', '', ''],\n    ...     ['d', '', '', '']\n    ... ]\n    >>> remove_word(puzzle, 'word', 0, 0, True)\n    >>> puzzle\n    [['', '', '', ''], ['', '', '', ''], ['', '', '', ''], ['', '', '', '']]\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    Remove a word from the given position.\n\n    >>> puzzle = [\n    ...     ['w', '', '', ''],\n    ...     ['o', '', '', ''],\n    ...     ['r', '', '', ''],\n    ...     ['d', '', '', '']\n    ... ]\n    >>> remove_word(puzzle, 'word', 0, 0, True)\n    >>> puzzle\n    [['', '', '', ''], ['', '', '', ''], ['', '', '', ''], ['', '', '', '']]\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "for_statement",
                            "label": "for i in range(len(word)):\n        if vertical:\n            puzzle[row + i][col] = \"\"\n        else:\n            puzzle[row][col + i] = \"\"",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "i",
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "label": "range(len(word))",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "range",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(len(word))",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "len(word)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "len",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(word)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "word",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "if vertical:\n            puzzle[row + i][col] = \"\"\n        else:\n            puzzle[row][col + i] = \"\"",
                                    "children": [
                                        {
                                            "type": "if_statement",
                                            "label": "if vertical:\n            puzzle[row + i][col] = \"\"\n        else:\n            puzzle[row][col + i] = \"\"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "vertical",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "puzzle[row + i][col] = \"\"",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "puzzle[row + i][col] = \"\"",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "puzzle[row + i][col] = \"\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "subscript",
                                                                            "label": "puzzle[row + i][col]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "subscript",
                                                                                    "label": "puzzle[row + i]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "puzzle",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "binary_operator",
                                                                                            "label": "row + i",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "row",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "i",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "col",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "else_clause",
                                                    "label": "else:\n            puzzle[row][col + i] = \"\"",
                                                    "children": [
                                                        {
                                                            "type": "block",
                                                            "label": "puzzle[row][col + i] = \"\"",
                                                            "children": [
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "puzzle[row][col + i] = \"\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "assignment",
                                                                            "label": "puzzle[row][col + i] = \"\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "subscript",
                                                                                    "label": "puzzle[row][col + i]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "subscript",
                                                                                            "label": "puzzle[row]",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "puzzle",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "row",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "binary_operator",
                                                                                            "label": "col + i",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "col",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "i",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def solve_crossword(puzzle: list[list[str]], words: list[str]) -> bool:\n    \"\"\"\n    Solve the crossword puzzle using backtracking.\n\n    >>> puzzle = [\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', '']\n    ... ]\n\n    >>> words = ['word', 'four', 'more', 'last']\n    >>> solve_crossword(puzzle, words)\n    True\n    >>> puzzle = [\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', '']\n    ... ]\n    >>> words = ['word', 'four', 'more', 'paragraphs']\n    >>> solve_crossword(puzzle, words)\n    False\n    \"\"\"\n    for row in range(len(puzzle)):\n        for col in range(len(puzzle[0])):\n            if puzzle[row][col] == \"\":\n                for word in words:\n                    for vertical in [True, False]:\n                        if is_valid(puzzle, word, row, col, vertical):\n                            place_word(puzzle, word, row, col, vertical)\n                            words.remove(word)\n                            if solve_crossword(puzzle, words):\n                                return True\n                            words.append(word)\n                            remove_word(puzzle, word, row, col, vertical)\n                return False\n    return True",
            "children": [
                {
                    "type": "identifier",
                    "label": "solve_crossword",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(puzzle: list[list[str]], words: list[str])",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "puzzle: list[list[str]]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "puzzle",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "list[list[str]]",
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "list[list[str]]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "list",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[list[str]]",
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "list[str]",
                                                            "children": [
                                                                {
                                                                    "type": "generic_type",
                                                                    "label": "list[str]",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "list",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "type_parameter",
                                                                            "label": "[str]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "type",
                                                                                    "label": "str",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "str",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "words: list[str]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "words",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "list[str]",
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "list[str]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "list",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[str]",
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "bool",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "bool",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    Solve the crossword puzzle using backtracking.\n\n    >>> puzzle = [\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', '']\n    ... ]\n\n    >>> words = ['word', 'four', 'more', 'last']\n    >>> solve_crossword(puzzle, words)\n    True\n    >>> puzzle = [\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', '']\n    ... ]\n    >>> words = ['word', 'four', 'more', 'paragraphs']\n    >>> solve_crossword(puzzle, words)\n    False\n    \"\"\"\n    for row in range(len(puzzle)):\n        for col in range(len(puzzle[0])):\n            if puzzle[row][col] == \"\":\n                for word in words:\n                    for vertical in [True, False]:\n                        if is_valid(puzzle, word, row, col, vertical):\n                            place_word(puzzle, word, row, col, vertical)\n                            words.remove(word)\n                            if solve_crossword(puzzle, words):\n                                return True\n                            words.append(word)\n                            remove_word(puzzle, word, row, col, vertical)\n                return False\n    return True",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    Solve the crossword puzzle using backtracking.\n\n    >>> puzzle = [\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', '']\n    ... ]\n\n    >>> words = ['word', 'four', 'more', 'last']\n    >>> solve_crossword(puzzle, words)\n    True\n    >>> puzzle = [\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', '']\n    ... ]\n    >>> words = ['word', 'four', 'more', 'paragraphs']\n    >>> solve_crossword(puzzle, words)\n    False\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    Solve the crossword puzzle using backtracking.\n\n    >>> puzzle = [\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', '']\n    ... ]\n\n    >>> words = ['word', 'four', 'more', 'last']\n    >>> solve_crossword(puzzle, words)\n    True\n    >>> puzzle = [\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', '']\n    ... ]\n    >>> words = ['word', 'four', 'more', 'paragraphs']\n    >>> solve_crossword(puzzle, words)\n    False\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    Solve the crossword puzzle using backtracking.\n\n    >>> puzzle = [\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', '']\n    ... ]\n\n    >>> words = ['word', 'four', 'more', 'last']\n    >>> solve_crossword(puzzle, words)\n    True\n    >>> puzzle = [\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', '']\n    ... ]\n    >>> words = ['word', 'four', 'more', 'paragraphs']\n    >>> solve_crossword(puzzle, words)\n    False\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "for_statement",
                            "label": "for row in range(len(puzzle)):\n        for col in range(len(puzzle[0])):\n            if puzzle[row][col] == \"\":\n                for word in words:\n                    for vertical in [True, False]:\n                        if is_valid(puzzle, word, row, col, vertical):\n                            place_word(puzzle, word, row, col, vertical)\n                            words.remove(word)\n                            if solve_crossword(puzzle, words):\n                                return True\n                            words.append(word)\n                            remove_word(puzzle, word, row, col, vertical)\n                return False",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "row",
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "label": "range(len(puzzle))",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "range",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(len(puzzle))",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "len(puzzle)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "len",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(puzzle)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "puzzle",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "for col in range(len(puzzle[0])):\n            if puzzle[row][col] == \"\":\n                for word in words:\n                    for vertical in [True, False]:\n                        if is_valid(puzzle, word, row, col, vertical):\n                            place_word(puzzle, word, row, col, vertical)\n                            words.remove(word)\n                            if solve_crossword(puzzle, words):\n                                return True\n                            words.append(word)\n                            remove_word(puzzle, word, row, col, vertical)\n                return False",
                                    "children": [
                                        {
                                            "type": "for_statement",
                                            "label": "for col in range(len(puzzle[0])):\n            if puzzle[row][col] == \"\":\n                for word in words:\n                    for vertical in [True, False]:\n                        if is_valid(puzzle, word, row, col, vertical):\n                            place_word(puzzle, word, row, col, vertical)\n                            words.remove(word)\n                            if solve_crossword(puzzle, words):\n                                return True\n                            words.append(word)\n                            remove_word(puzzle, word, row, col, vertical)\n                return False",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "col",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "range(len(puzzle[0]))",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "range",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(len(puzzle[0]))",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "len(puzzle[0])",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "len",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(puzzle[0])",
                                                                            "children": [
                                                                                {
                                                                                    "type": "subscript",
                                                                                    "label": "puzzle[0]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "puzzle",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "label": "0",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "if puzzle[row][col] == \"\":\n                for word in words:\n                    for vertical in [True, False]:\n                        if is_valid(puzzle, word, row, col, vertical):\n                            place_word(puzzle, word, row, col, vertical)\n                            words.remove(word)\n                            if solve_crossword(puzzle, words):\n                                return True\n                            words.append(word)\n                            remove_word(puzzle, word, row, col, vertical)\n                return False",
                                                    "children": [
                                                        {
                                                            "type": "if_statement",
                                                            "label": "if puzzle[row][col] == \"\":\n                for word in words:\n                    for vertical in [True, False]:\n                        if is_valid(puzzle, word, row, col, vertical):\n                            place_word(puzzle, word, row, col, vertical)\n                            words.remove(word)\n                            if solve_crossword(puzzle, words):\n                                return True\n                            words.append(word)\n                            remove_word(puzzle, word, row, col, vertical)\n                return False",
                                                            "children": [
                                                                {
                                                                    "type": "comparison_operator",
                                                                    "label": "puzzle[row][col] == \"\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "subscript",
                                                                            "label": "puzzle[row][col]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "subscript",
                                                                                    "label": "puzzle[row]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "puzzle",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "row",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "col",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": "for word in words:\n                    for vertical in [True, False]:\n                        if is_valid(puzzle, word, row, col, vertical):\n                            place_word(puzzle, word, row, col, vertical)\n                            words.remove(word)\n                            if solve_crossword(puzzle, words):\n                                return True\n                            words.append(word)\n                            remove_word(puzzle, word, row, col, vertical)\n                return False",
                                                                    "children": [
                                                                        {
                                                                            "type": "for_statement",
                                                                            "label": "for word in words:\n                    for vertical in [True, False]:\n                        if is_valid(puzzle, word, row, col, vertical):\n                            place_word(puzzle, word, row, col, vertical)\n                            words.remove(word)\n                            if solve_crossword(puzzle, words):\n                                return True\n                            words.append(word)\n                            remove_word(puzzle, word, row, col, vertical)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "word",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "words",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "block",
                                                                                    "label": "for vertical in [True, False]:\n                        if is_valid(puzzle, word, row, col, vertical):\n                            place_word(puzzle, word, row, col, vertical)\n                            words.remove(word)\n                            if solve_crossword(puzzle, words):\n                                return True\n                            words.append(word)\n                            remove_word(puzzle, word, row, col, vertical)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "for_statement",
                                                                                            "label": "for vertical in [True, False]:\n                        if is_valid(puzzle, word, row, col, vertical):\n                            place_word(puzzle, word, row, col, vertical)\n                            words.remove(word)\n                            if solve_crossword(puzzle, words):\n                                return True\n                            words.append(word)\n                            remove_word(puzzle, word, row, col, vertical)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "vertical",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "list",
                                                                                                    "label": "[True, False]",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "true",
                                                                                                            "label": "True",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "false",
                                                                                                            "label": "False",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "block",
                                                                                                    "label": "if is_valid(puzzle, word, row, col, vertical):\n                            place_word(puzzle, word, row, col, vertical)\n                            words.remove(word)\n                            if solve_crossword(puzzle, words):\n                                return True\n                            words.append(word)\n                            remove_word(puzzle, word, row, col, vertical)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "if_statement",
                                                                                                            "label": "if is_valid(puzzle, word, row, col, vertical):\n                            place_word(puzzle, word, row, col, vertical)\n                            words.remove(word)\n                            if solve_crossword(puzzle, words):\n                                return True\n                            words.append(word)\n                            remove_word(puzzle, word, row, col, vertical)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "call",
                                                                                                                    "label": "is_valid(puzzle, word, row, col, vertical)",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "is_valid",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "argument_list",
                                                                                                                            "label": "(puzzle, word, row, col, vertical)",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "puzzle",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "word",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "row",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "col",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "vertical",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "block",
                                                                                                                    "label": "place_word(puzzle, word, row, col, vertical)\n                            words.remove(word)\n                            if solve_crossword(puzzle, words):\n                                return True\n                            words.append(word)\n                            remove_word(puzzle, word, row, col, vertical)",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "expression_statement",
                                                                                                                            "label": "place_word(puzzle, word, row, col, vertical)",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "call",
                                                                                                                                    "label": "place_word(puzzle, word, row, col, vertical)",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "place_word",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "argument_list",
                                                                                                                                            "label": "(puzzle, word, row, col, vertical)",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "puzzle",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "word",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "row",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "col",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "vertical",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "expression_statement",
                                                                                                                            "label": "words.remove(word)",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "call",
                                                                                                                                    "label": "words.remove(word)",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "attribute",
                                                                                                                                            "label": "words.remove",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "words",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "remove",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "argument_list",
                                                                                                                                            "label": "(word)",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "word",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "if_statement",
                                                                                                                            "label": "if solve_crossword(puzzle, words):\n                                return True",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "call",
                                                                                                                                    "label": "solve_crossword(puzzle, words)",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "solve_crossword",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "argument_list",
                                                                                                                                            "label": "(puzzle, words)",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "puzzle",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "words",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "block",
                                                                                                                                    "label": "return True",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "return_statement",
                                                                                                                                            "label": "return True",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "true",
                                                                                                                                                    "label": "True",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "expression_statement",
                                                                                                                            "label": "words.append(word)",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "call",
                                                                                                                                    "label": "words.append(word)",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "attribute",
                                                                                                                                            "label": "words.append",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "words",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "append",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "argument_list",
                                                                                                                                            "label": "(word)",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "word",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "expression_statement",
                                                                                                                            "label": "remove_word(puzzle, word, row, col, vertical)",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "call",
                                                                                                                                    "label": "remove_word(puzzle, word, row, col, vertical)",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "remove_word",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "argument_list",
                                                                                                                                            "label": "(puzzle, word, row, col, vertical)",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "puzzle",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "word",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "row",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "col",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "vertical",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "return_statement",
                                                                            "label": "return False",
                                                                            "children": [
                                                                                {
                                                                                    "type": "false",
                                                                                    "label": "False",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return True",
                            "children": [
                                {
                                    "type": "true",
                                    "label": "True",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "if_statement",
            "label": "if __name__ == \"__main__\":\n    PUZZLE = [[\"\"] * 3 for _ in range(3)]\n    WORDS = [\"cat\", \"dog\", \"car\"]\n\n    if solve_crossword(PUZZLE, WORDS):\n        print(\"Solution found:\")\n        for row in PUZZLE:\n            print(\" \".join(row))\n    else:\n        print(\"No solution found:\")",
            "children": [
                {
                    "type": "comparison_operator",
                    "label": "__name__ == \"__main__\"",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "__name__",
                            "children": []
                        },
                        {
                            "type": "string",
                            "label": "\"__main__\"",
                            "children": [
                                {
                                    "type": "string_start",
                                    "label": "\"",
                                    "children": []
                                },
                                {
                                    "type": "string_content",
                                    "label": "__main__",
                                    "children": []
                                },
                                {
                                    "type": "string_end",
                                    "label": "\"",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "PUZZLE = [[\"\"] * 3 for _ in range(3)]\n    WORDS = [\"cat\", \"dog\", \"car\"]\n\n    if solve_crossword(PUZZLE, WORDS):\n        print(\"Solution found:\")\n        for row in PUZZLE:\n            print(\" \".join(row))\n    else:\n        print(\"No solution found:\")",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "PUZZLE = [[\"\"] * 3 for _ in range(3)]",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "PUZZLE = [[\"\"] * 3 for _ in range(3)]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "PUZZLE",
                                            "children": []
                                        },
                                        {
                                            "type": "list_comprehension",
                                            "label": "[[\"\"] * 3 for _ in range(3)]",
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "label": "[\"\"] * 3",
                                                    "children": [
                                                        {
                                                            "type": "list",
                                                            "label": "[\"\"]",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "label": "3",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "for_in_clause",
                                                    "label": "for _ in range(3)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "_",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "range(3)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "range",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(3)",
                                                                    "children": [
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "3",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "WORDS = [\"cat\", \"dog\", \"car\"]",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "WORDS = [\"cat\", \"dog\", \"car\"]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "WORDS",
                                            "children": []
                                        },
                                        {
                                            "type": "list",
                                            "label": "[\"cat\", \"dog\", \"car\"]",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "\"cat\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "cat",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"dog\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "dog",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"car\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "car",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if solve_crossword(PUZZLE, WORDS):\n        print(\"Solution found:\")\n        for row in PUZZLE:\n            print(\" \".join(row))\n    else:\n        print(\"No solution found:\")",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "solve_crossword(PUZZLE, WORDS)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "solve_crossword",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(PUZZLE, WORDS)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "PUZZLE",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "WORDS",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "print(\"Solution found:\")\n        for row in PUZZLE:\n            print(\" \".join(row))",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "print(\"Solution found:\")",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "print(\"Solution found:\")",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "print",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\"Solution found:\")",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"Solution found:\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "Solution found:",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "for_statement",
                                            "label": "for row in PUZZLE:\n            print(\" \".join(row))",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "row",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "PUZZLE",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "print(\" \".join(row))",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "print(\" \".join(row))",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "print(\" \".join(row))",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "print",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(\" \".join(row))",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "\" \".join(row)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "\" \".join",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\" \"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": " ",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "join",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(row)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "row",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "else_clause",
                                    "label": "else:\n        print(\"No solution found:\")",
                                    "children": [
                                        {
                                            "type": "block",
                                            "label": "print(\"No solution found:\")",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "print(\"No solution found:\")",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "print(\"No solution found:\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "print",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\"No solution found:\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"No solution found:\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "No solution found:",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}