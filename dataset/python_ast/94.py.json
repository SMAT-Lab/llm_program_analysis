{
    "type": "module",
    "label": "\"\"\"\nMinimax helps to achieve maximum score in a game by checking all possible moves\ndepth is current depth in game tree.\n\nnodeIndex is index of current node in scores[].\nif move is of maximizer return true else false\nleaves of game tree is stored in scores[]\nheight is maximum height of Game tree\n\"\"\"\n\nfrom __future__ import annotations\n\nimport math\n\n\ndef minimax(\n    depth: int, node_index: int, is_max: bool, scores: list[int], height: float\n) -> int:\n    \"\"\"\n    This function implements the minimax algorithm, which helps achieve the optimal\n    score for a player in a two-player game by checking all possible moves.\n    If the player is the maximizer, then the score is maximized.\n    If the player is the minimizer, then the score is minimized.\n\n    Parameters:\n    - depth: Current depth in the game tree.\n    - node_index: Index of the current node in the scores list.\n    - is_max: A boolean indicating whether the current move\n              is for the maximizer (True) or minimizer (False).\n    - scores: A list containing the scores of the leaves of the game tree.\n    - height: The maximum height of the game tree.\n\n    Returns:\n    - An integer representing the optimal score for the current player.\n\n    >>> import math\n    >>> scores = [90, 23, 6, 33, 21, 65, 123, 34423]\n    >>> height = math.log(len(scores), 2)\n    >>> minimax(0, 0, True, scores, height)\n    65\n    >>> minimax(-1, 0, True, scores, height)\n    Traceback (most recent call last):\n        ...\n    ValueError: Depth cannot be less than 0\n    >>> minimax(0, 0, True, [], 2)\n    Traceback (most recent call last):\n        ...\n    ValueError: Scores cannot be empty\n    >>> scores = [3, 5, 2, 9, 12, 5, 23, 23]\n    >>> height = math.log(len(scores), 2)\n    >>> minimax(0, 0, True, scores, height)\n    12\n    \"\"\"\n\n    if depth < 0:\n        raise ValueError(\"Depth cannot be less than 0\")\n    if len(scores) == 0:\n        raise ValueError(\"Scores cannot be empty\")\n\n    # Base case: If the current depth equals the height of the tree,\n    # return the score of the current node.\n    if depth == height:\n        return scores[node_index]\n\n    # If it's the maximizer's turn, choose the maximum score\n    # between the two possible moves.\n    if is_max:\n        return max(\n            minimax(depth + 1, node_index * 2, False, scores, height),\n            minimax(depth + 1, node_index * 2 + 1, False, scores, height),\n        )\n\n    # If it's the minimizer's turn, choose the minimum score\n    # between the two possible moves.\n    return min(\n        minimax(depth + 1, node_index * 2, True, scores, height),\n        minimax(depth + 1, node_index * 2 + 1, True, scores, height),\n    )\n\n\ndef main() -> None:\n    # Sample scores and height calculation\n    scores = [90, 23, 6, 33, 21, 65, 123, 34423]\n    height = math.log(len(scores), 2)\n\n    # Calculate and print the optimal value using the minimax algorithm\n    print(\"Optimal value : \", end=\"\")\n    print(minimax(0, 0, True, scores, height))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()\n    main()\n",
    "start_token": 0,
    "end_token": 368,
    "children": [
        {
            "type": "expression_statement",
            "label": "\"\"\"\nMinimax helps to achieve maximum score in a game by checking all possible moves\ndepth is current depth in game tree.\n\nnodeIndex is index of current node in scores[].\nif move is of maximizer return true else false\nleaves of game tree is stored in scores[]\nheight is maximum height of Game tree\n\"\"\"",
            "start_token": 0,
            "end_token": 2,
            "children": [
                {
                    "type": "string",
                    "label": "\"\"\"\nMinimax helps to achieve maximum score in a game by checking all possible moves\ndepth is current depth in game tree.\n\nnodeIndex is index of current node in scores[].\nif move is of maximizer return true else false\nleaves of game tree is stored in scores[]\nheight is maximum height of Game tree\n\"\"\"",
                    "start_token": 0,
                    "end_token": 2,
                    "children": [
                        {
                            "type": "string_start",
                            "label": "\"\"\"",
                            "start_token": 0,
                            "end_token": 1,
                            "children": []
                        },
                        {
                            "type": "string_content",
                            "label": "\nMinimax helps to achieve maximum score in a game by checking all possible moves\ndepth is current depth in game tree.\n\nnodeIndex is index of current node in scores[].\nif move is of maximizer return true else false\nleaves of game tree is stored in scores[]\nheight is maximum height of Game tree\n",
                            "start_token": 1,
                            "end_token": 1,
                            "children": []
                        },
                        {
                            "type": "string_end",
                            "label": "\"\"\"",
                            "start_token": 1,
                            "end_token": 2,
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "future_import_statement",
            "label": "from __future__ import annotations",
            "start_token": 5,
            "end_token": 8,
            "children": [
                {
                    "type": "dotted_name",
                    "label": "annotations",
                    "start_token": 8,
                    "end_token": 8,
                    "children": [
                        {
                            "type": "identifier",
                            "label": "annotations",
                            "start_token": 8,
                            "end_token": 8,
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import math",
            "start_token": 11,
            "end_token": 12,
            "children": [
                {
                    "type": "dotted_name",
                    "label": "math",
                    "start_token": 12,
                    "end_token": 12,
                    "children": [
                        {
                            "type": "identifier",
                            "label": "math",
                            "start_token": 12,
                            "end_token": 12,
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def minimax(\n    depth: int, node_index: int, is_max: bool, scores: list[int], height: float\n) -> int:\n    \"\"\"\n    This function implements the minimax algorithm, which helps achieve the optimal\n    score for a player in a two-player game by checking all possible moves.\n    If the player is the maximizer, then the score is maximized.\n    If the player is the minimizer, then the score is minimized.\n\n    Parameters:\n    - depth: Current depth in the game tree.\n    - node_index: Index of the current node in the scores list.\n    - is_max: A boolean indicating whether the current move\n              is for the maximizer (True) or minimizer (False).\n    - scores: A list containing the scores of the leaves of the game tree.\n    - height: The maximum height of the game tree.\n\n    Returns:\n    - An integer representing the optimal score for the current player.\n\n    >>> import math\n    >>> scores = [90, 23, 6, 33, 21, 65, 123, 34423]\n    >>> height = math.log(len(scores), 2)\n    >>> minimax(0, 0, True, scores, height)\n    65\n    >>> minimax(-1, 0, True, scores, height)\n    Traceback (most recent call last):\n        ...\n    ValueError: Depth cannot be less than 0\n    >>> minimax(0, 0, True, [], 2)\n    Traceback (most recent call last):\n        ...\n    ValueError: Scores cannot be empty\n    >>> scores = [3, 5, 2, 9, 12, 5, 23, 23]\n    >>> height = math.log(len(scores), 2)\n    >>> minimax(0, 0, True, scores, height)\n    12\n    \"\"\"\n\n    if depth < 0:\n        raise ValueError(\"Depth cannot be less than 0\")\n    if len(scores) == 0:\n        raise ValueError(\"Scores cannot be empty\")\n\n    # Base case: If the current depth equals the height of the tree,\n    # return the score of the current node.\n    if depth == height:\n        return scores[node_index]\n\n    # If it's the maximizer's turn, choose the maximum score\n    # between the two possible moves.\n    if is_max:\n        return max(\n            minimax(depth + 1, node_index * 2, False, scores, height),\n            minimax(depth + 1, node_index * 2 + 1, False, scores, height),\n        )\n\n    # If it's the minimizer's turn, choose the minimum score\n    # between the two possible moves.\n    return min(\n        minimax(depth + 1, node_index * 2, True, scores, height),\n        minimax(depth + 1, node_index * 2 + 1, True, scores, height),\n    )",
            "start_token": 16,
            "end_token": 254,
            "children": [
                {
                    "type": "identifier",
                    "label": "minimax",
                    "start_token": 17,
                    "end_token": 17,
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(\n    depth: int, node_index: int, is_max: bool, scores: list[int], height: float\n)",
                    "start_token": 18,
                    "end_token": 43,
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "depth: int",
                            "start_token": 20,
                            "end_token": 22,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "depth",
                                    "start_token": 20,
                                    "end_token": 20,
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "start_token": 22,
                                    "end_token": 22,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "start_token": 22,
                                            "end_token": 22,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "node_index: int",
                            "start_token": 24,
                            "end_token": 26,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "node_index",
                                    "start_token": 24,
                                    "end_token": 24,
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "start_token": 26,
                                    "end_token": 26,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "start_token": 26,
                                            "end_token": 26,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "is_max: bool",
                            "start_token": 28,
                            "end_token": 30,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "is_max",
                                    "start_token": 28,
                                    "end_token": 28,
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "bool",
                                    "start_token": 30,
                                    "end_token": 30,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "bool",
                                            "start_token": 30,
                                            "end_token": 30,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "scores: list[int]",
                            "start_token": 32,
                            "end_token": 37,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "scores",
                                    "start_token": 32,
                                    "end_token": 32,
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "list[int]",
                                    "start_token": 34,
                                    "end_token": 37,
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "list[int]",
                                            "start_token": 34,
                                            "end_token": 37,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "list",
                                                    "start_token": 34,
                                                    "end_token": 34,
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[int]",
                                                    "start_token": 35,
                                                    "end_token": 37,
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "int",
                                                            "start_token": 36,
                                                            "end_token": 36,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "int",
                                                                    "start_token": 36,
                                                                    "end_token": 36,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "height: float",
                            "start_token": 39,
                            "end_token": 41,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "height",
                                    "start_token": 39,
                                    "end_token": 39,
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "float",
                                    "start_token": 41,
                                    "end_token": 41,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "float",
                                            "start_token": 41,
                                            "end_token": 41,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "int",
                    "start_token": 46,
                    "end_token": 46,
                    "children": [
                        {
                            "type": "identifier",
                            "label": "int",
                            "start_token": 46,
                            "end_token": 46,
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    This function implements the minimax algorithm, which helps achieve the optimal\n    score for a player in a two-player game by checking all possible moves.\n    If the player is the maximizer, then the score is maximized.\n    If the player is the minimizer, then the score is minimized.\n\n    Parameters:\n    - depth: Current depth in the game tree.\n    - node_index: Index of the current node in the scores list.\n    - is_max: A boolean indicating whether the current move\n              is for the maximizer (True) or minimizer (False).\n    - scores: A list containing the scores of the leaves of the game tree.\n    - height: The maximum height of the game tree.\n\n    Returns:\n    - An integer representing the optimal score for the current player.\n\n    >>> import math\n    >>> scores = [90, 23, 6, 33, 21, 65, 123, 34423]\n    >>> height = math.log(len(scores), 2)\n    >>> minimax(0, 0, True, scores, height)\n    65\n    >>> minimax(-1, 0, True, scores, height)\n    Traceback (most recent call last):\n        ...\n    ValueError: Depth cannot be less than 0\n    >>> minimax(0, 0, True, [], 2)\n    Traceback (most recent call last):\n        ...\n    ValueError: Scores cannot be empty\n    >>> scores = [3, 5, 2, 9, 12, 5, 23, 23]\n    >>> height = math.log(len(scores), 2)\n    >>> minimax(0, 0, True, scores, height)\n    12\n    \"\"\"\n\n    if depth < 0:\n        raise ValueError(\"Depth cannot be less than 0\")\n    if len(scores) == 0:\n        raise ValueError(\"Scores cannot be empty\")\n\n    # Base case: If the current depth equals the height of the tree,\n    # return the score of the current node.\n    if depth == height:\n        return scores[node_index]\n\n    # If it's the maximizer's turn, choose the maximum score\n    # between the two possible moves.\n    if is_max:\n        return max(\n            minimax(depth + 1, node_index * 2, False, scores, height),\n            minimax(depth + 1, node_index * 2 + 1, False, scores, height),\n        )\n\n    # If it's the minimizer's turn, choose the minimum score\n    # between the two possible moves.\n    return min(\n        minimax(depth + 1, node_index * 2, True, scores, height),\n        minimax(depth + 1, node_index * 2 + 1, True, scores, height),\n    )",
                    "start_token": 49,
                    "end_token": 254,
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    This function implements the minimax algorithm, which helps achieve the optimal\n    score for a player in a two-player game by checking all possible moves.\n    If the player is the maximizer, then the score is maximized.\n    If the player is the minimizer, then the score is minimized.\n\n    Parameters:\n    - depth: Current depth in the game tree.\n    - node_index: Index of the current node in the scores list.\n    - is_max: A boolean indicating whether the current move\n              is for the maximizer (True) or minimizer (False).\n    - scores: A list containing the scores of the leaves of the game tree.\n    - height: The maximum height of the game tree.\n\n    Returns:\n    - An integer representing the optimal score for the current player.\n\n    >>> import math\n    >>> scores = [90, 23, 6, 33, 21, 65, 123, 34423]\n    >>> height = math.log(len(scores), 2)\n    >>> minimax(0, 0, True, scores, height)\n    65\n    >>> minimax(-1, 0, True, scores, height)\n    Traceback (most recent call last):\n        ...\n    ValueError: Depth cannot be less than 0\n    >>> minimax(0, 0, True, [], 2)\n    Traceback (most recent call last):\n        ...\n    ValueError: Scores cannot be empty\n    >>> scores = [3, 5, 2, 9, 12, 5, 23, 23]\n    >>> height = math.log(len(scores), 2)\n    >>> minimax(0, 0, True, scores, height)\n    12\n    \"\"\"",
                            "start_token": 49,
                            "end_token": 51,
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    This function implements the minimax algorithm, which helps achieve the optimal\n    score for a player in a two-player game by checking all possible moves.\n    If the player is the maximizer, then the score is maximized.\n    If the player is the minimizer, then the score is minimized.\n\n    Parameters:\n    - depth: Current depth in the game tree.\n    - node_index: Index of the current node in the scores list.\n    - is_max: A boolean indicating whether the current move\n              is for the maximizer (True) or minimizer (False).\n    - scores: A list containing the scores of the leaves of the game tree.\n    - height: The maximum height of the game tree.\n\n    Returns:\n    - An integer representing the optimal score for the current player.\n\n    >>> import math\n    >>> scores = [90, 23, 6, 33, 21, 65, 123, 34423]\n    >>> height = math.log(len(scores), 2)\n    >>> minimax(0, 0, True, scores, height)\n    65\n    >>> minimax(-1, 0, True, scores, height)\n    Traceback (most recent call last):\n        ...\n    ValueError: Depth cannot be less than 0\n    >>> minimax(0, 0, True, [], 2)\n    Traceback (most recent call last):\n        ...\n    ValueError: Scores cannot be empty\n    >>> scores = [3, 5, 2, 9, 12, 5, 23, 23]\n    >>> height = math.log(len(scores), 2)\n    >>> minimax(0, 0, True, scores, height)\n    12\n    \"\"\"",
                                    "start_token": 49,
                                    "end_token": 51,
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "start_token": 49,
                                            "end_token": 50,
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    This function implements the minimax algorithm, which helps achieve the optimal\n    score for a player in a two-player game by checking all possible moves.\n    If the player is the maximizer, then the score is maximized.\n    If the player is the minimizer, then the score is minimized.\n\n    Parameters:\n    - depth: Current depth in the game tree.\n    - node_index: Index of the current node in the scores list.\n    - is_max: A boolean indicating whether the current move\n              is for the maximizer (True) or minimizer (False).\n    - scores: A list containing the scores of the leaves of the game tree.\n    - height: The maximum height of the game tree.\n\n    Returns:\n    - An integer representing the optimal score for the current player.\n\n    >>> import math\n    >>> scores = [90, 23, 6, 33, 21, 65, 123, 34423]\n    >>> height = math.log(len(scores), 2)\n    >>> minimax(0, 0, True, scores, height)\n    65\n    >>> minimax(-1, 0, True, scores, height)\n    Traceback (most recent call last):\n        ...\n    ValueError: Depth cannot be less than 0\n    >>> minimax(0, 0, True, [], 2)\n    Traceback (most recent call last):\n        ...\n    ValueError: Scores cannot be empty\n    >>> scores = [3, 5, 2, 9, 12, 5, 23, 23]\n    >>> height = math.log(len(scores), 2)\n    >>> minimax(0, 0, True, scores, height)\n    12\n    ",
                                            "start_token": 50,
                                            "end_token": 50,
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "start_token": 50,
                                            "end_token": 51,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if depth < 0:\n        raise ValueError(\"Depth cannot be less than 0\")",
                            "start_token": 54,
                            "end_token": 64,
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "label": "depth < 0",
                                    "start_token": 55,
                                    "end_token": 57,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "depth",
                                            "start_token": 55,
                                            "end_token": 55,
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "start_token": 57,
                                            "end_token": 57,
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "raise ValueError(\"Depth cannot be less than 0\")",
                                    "start_token": 60,
                                    "end_token": 64,
                                    "children": [
                                        {
                                            "type": "raise_statement",
                                            "label": "raise ValueError(\"Depth cannot be less than 0\")",
                                            "start_token": 60,
                                            "end_token": 64,
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "ValueError(\"Depth cannot be less than 0\")",
                                                    "start_token": 61,
                                                    "end_token": 64,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "ValueError",
                                                            "start_token": 61,
                                                            "end_token": 61,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\"Depth cannot be less than 0\")",
                                                            "start_token": 62,
                                                            "end_token": 64,
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"Depth cannot be less than 0\"",
                                                                    "start_token": 63,
                                                                    "end_token": 63,
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "start_token": 63,
                                                                            "end_token": 63,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "Depth cannot be less than 0",
                                                                            "start_token": 63,
                                                                            "end_token": 63,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "start_token": 63,
                                                                            "end_token": 63,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if len(scores) == 0:\n        raise ValueError(\"Scores cannot be empty\")",
                            "start_token": 66,
                            "end_token": 80,
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "label": "len(scores) == 0",
                                    "start_token": 67,
                                    "end_token": 73,
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "len(scores)",
                                            "start_token": 67,
                                            "end_token": 70,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "len",
                                                    "start_token": 67,
                                                    "end_token": 67,
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(scores)",
                                                    "start_token": 68,
                                                    "end_token": 70,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "scores",
                                                            "start_token": 69,
                                                            "end_token": 69,
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "start_token": 73,
                                            "end_token": 73,
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "raise ValueError(\"Scores cannot be empty\")",
                                    "start_token": 76,
                                    "end_token": 80,
                                    "children": [
                                        {
                                            "type": "raise_statement",
                                            "label": "raise ValueError(\"Scores cannot be empty\")",
                                            "start_token": 76,
                                            "end_token": 80,
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "ValueError(\"Scores cannot be empty\")",
                                                    "start_token": 77,
                                                    "end_token": 80,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "ValueError",
                                                            "start_token": 77,
                                                            "end_token": 77,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\"Scores cannot be empty\")",
                                                            "start_token": 78,
                                                            "end_token": 80,
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"Scores cannot be empty\"",
                                                                    "start_token": 79,
                                                                    "end_token": 79,
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "start_token": 79,
                                                                            "end_token": 79,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "Scores cannot be empty",
                                                                            "start_token": 79,
                                                                            "end_token": 79,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "start_token": 79,
                                                                            "end_token": 79,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# Base case: If the current depth equals the height of the tree,",
                            "start_token": 83,
                            "end_token": 97,
                            "children": []
                        },
                        {
                            "type": "comment",
                            "label": "# return the score of the current node.",
                            "start_token": 99,
                            "end_token": 107,
                            "children": []
                        },
                        {
                            "type": "if_statement",
                            "label": "if depth == height:\n        return scores[node_index]",
                            "start_token": 109,
                            "end_token": 120,
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "label": "depth == height",
                                    "start_token": 110,
                                    "end_token": 113,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "depth",
                                            "start_token": 110,
                                            "end_token": 110,
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "height",
                                            "start_token": 113,
                                            "end_token": 113,
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "return scores[node_index]",
                                    "start_token": 116,
                                    "end_token": 120,
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "label": "return scores[node_index]",
                                            "start_token": 116,
                                            "end_token": 120,
                                            "children": [
                                                {
                                                    "type": "subscript",
                                                    "label": "scores[node_index]",
                                                    "start_token": 117,
                                                    "end_token": 120,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "scores",
                                                            "start_token": 117,
                                                            "end_token": 117,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "node_index",
                                                            "start_token": 119,
                                                            "end_token": 119,
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# If it's the maximizer's turn, choose the maximum score",
                            "start_token": 123,
                            "end_token": 133,
                            "children": []
                        },
                        {
                            "type": "comment",
                            "label": "# between the two possible moves.",
                            "start_token": 135,
                            "end_token": 141,
                            "children": []
                        },
                        {
                            "type": "if_statement",
                            "label": "if is_max:\n        return max(\n            minimax(depth + 1, node_index * 2, False, scores, height),\n            minimax(depth + 1, node_index * 2 + 1, False, scores, height),\n        )",
                            "start_token": 143,
                            "end_token": 189,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "is_max",
                                    "start_token": 144,
                                    "end_token": 144,
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "label": "return max(\n            minimax(depth + 1, node_index * 2, False, scores, height),\n            minimax(depth + 1, node_index * 2 + 1, False, scores, height),\n        )",
                                    "start_token": 147,
                                    "end_token": 189,
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "label": "return max(\n            minimax(depth + 1, node_index * 2, False, scores, height),\n            minimax(depth + 1, node_index * 2 + 1, False, scores, height),\n        )",
                                            "start_token": 147,
                                            "end_token": 189,
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "max(\n            minimax(depth + 1, node_index * 2, False, scores, height),\n            minimax(depth + 1, node_index * 2 + 1, False, scores, height),\n        )",
                                                    "start_token": 148,
                                                    "end_token": 189,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "max",
                                                            "start_token": 148,
                                                            "end_token": 148,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n            minimax(depth + 1, node_index * 2, False, scores, height),\n            minimax(depth + 1, node_index * 2 + 1, False, scores, height),\n        )",
                                                            "start_token": 149,
                                                            "end_token": 189,
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "minimax(depth + 1, node_index * 2, False, scores, height)",
                                                                    "start_token": 151,
                                                                    "end_token": 166,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "minimax",
                                                                            "start_token": 151,
                                                                            "end_token": 151,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(depth + 1, node_index * 2, False, scores, height)",
                                                                            "start_token": 152,
                                                                            "end_token": 166,
                                                                            "children": [
                                                                                {
                                                                                    "type": "binary_operator",
                                                                                    "label": "depth + 1",
                                                                                    "start_token": 153,
                                                                                    "end_token": 155,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "depth",
                                                                                            "start_token": 153,
                                                                                            "end_token": 153,
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "label": "1",
                                                                                            "start_token": 155,
                                                                                            "end_token": 155,
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "binary_operator",
                                                                                    "label": "node_index * 2",
                                                                                    "start_token": 157,
                                                                                    "end_token": 159,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "node_index",
                                                                                            "start_token": 157,
                                                                                            "end_token": 157,
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "label": "2",
                                                                                            "start_token": 159,
                                                                                            "end_token": 159,
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "false",
                                                                                    "label": "False",
                                                                                    "start_token": 161,
                                                                                    "end_token": 161,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "scores",
                                                                                    "start_token": 163,
                                                                                    "end_token": 163,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "height",
                                                                                    "start_token": 165,
                                                                                    "end_token": 165,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "minimax(depth + 1, node_index * 2 + 1, False, scores, height)",
                                                                    "start_token": 169,
                                                                    "end_token": 186,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "minimax",
                                                                            "start_token": 169,
                                                                            "end_token": 169,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(depth + 1, node_index * 2 + 1, False, scores, height)",
                                                                            "start_token": 170,
                                                                            "end_token": 186,
                                                                            "children": [
                                                                                {
                                                                                    "type": "binary_operator",
                                                                                    "label": "depth + 1",
                                                                                    "start_token": 171,
                                                                                    "end_token": 173,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "depth",
                                                                                            "start_token": 171,
                                                                                            "end_token": 171,
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "label": "1",
                                                                                            "start_token": 173,
                                                                                            "end_token": 173,
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "binary_operator",
                                                                                    "label": "node_index * 2 + 1",
                                                                                    "start_token": 175,
                                                                                    "end_token": 179,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "binary_operator",
                                                                                            "label": "node_index * 2",
                                                                                            "start_token": 175,
                                                                                            "end_token": 177,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "node_index",
                                                                                                    "start_token": 175,
                                                                                                    "end_token": 175,
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "integer",
                                                                                                    "label": "2",
                                                                                                    "start_token": 177,
                                                                                                    "end_token": 177,
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "label": "1",
                                                                                            "start_token": 179,
                                                                                            "end_token": 179,
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "false",
                                                                                    "label": "False",
                                                                                    "start_token": 181,
                                                                                    "end_token": 181,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "scores",
                                                                                    "start_token": 183,
                                                                                    "end_token": 183,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "height",
                                                                                    "start_token": 185,
                                                                                    "end_token": 185,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# If it's the minimizer's turn, choose the minimum score",
                            "start_token": 192,
                            "end_token": 202,
                            "children": []
                        },
                        {
                            "type": "comment",
                            "label": "# between the two possible moves.",
                            "start_token": 204,
                            "end_token": 210,
                            "children": []
                        },
                        {
                            "type": "return_statement",
                            "label": "return min(\n        minimax(depth + 1, node_index * 2, True, scores, height),\n        minimax(depth + 1, node_index * 2 + 1, True, scores, height),\n    )",
                            "start_token": 212,
                            "end_token": 254,
                            "children": [
                                {
                                    "type": "call",
                                    "label": "min(\n        minimax(depth + 1, node_index * 2, True, scores, height),\n        minimax(depth + 1, node_index * 2 + 1, True, scores, height),\n    )",
                                    "start_token": 213,
                                    "end_token": 254,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "min",
                                            "start_token": 213,
                                            "end_token": 213,
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(\n        minimax(depth + 1, node_index * 2, True, scores, height),\n        minimax(depth + 1, node_index * 2 + 1, True, scores, height),\n    )",
                                            "start_token": 214,
                                            "end_token": 254,
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "minimax(depth + 1, node_index * 2, True, scores, height)",
                                                    "start_token": 216,
                                                    "end_token": 231,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "minimax",
                                                            "start_token": 216,
                                                            "end_token": 216,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(depth + 1, node_index * 2, True, scores, height)",
                                                            "start_token": 217,
                                                            "end_token": 231,
                                                            "children": [
                                                                {
                                                                    "type": "binary_operator",
                                                                    "label": "depth + 1",
                                                                    "start_token": 218,
                                                                    "end_token": 220,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "depth",
                                                                            "start_token": 218,
                                                                            "end_token": 218,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "1",
                                                                            "start_token": 220,
                                                                            "end_token": 220,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "binary_operator",
                                                                    "label": "node_index * 2",
                                                                    "start_token": 222,
                                                                    "end_token": 224,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "node_index",
                                                                            "start_token": 222,
                                                                            "end_token": 222,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "2",
                                                                            "start_token": 224,
                                                                            "end_token": 224,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "true",
                                                                    "label": "True",
                                                                    "start_token": 226,
                                                                    "end_token": 226,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "scores",
                                                                    "start_token": 228,
                                                                    "end_token": 228,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "height",
                                                                    "start_token": 230,
                                                                    "end_token": 230,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "minimax(depth + 1, node_index * 2 + 1, True, scores, height)",
                                                    "start_token": 234,
                                                    "end_token": 251,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "minimax",
                                                            "start_token": 234,
                                                            "end_token": 234,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(depth + 1, node_index * 2 + 1, True, scores, height)",
                                                            "start_token": 235,
                                                            "end_token": 251,
                                                            "children": [
                                                                {
                                                                    "type": "binary_operator",
                                                                    "label": "depth + 1",
                                                                    "start_token": 236,
                                                                    "end_token": 238,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "depth",
                                                                            "start_token": 236,
                                                                            "end_token": 236,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "1",
                                                                            "start_token": 238,
                                                                            "end_token": 238,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "binary_operator",
                                                                    "label": "node_index * 2 + 1",
                                                                    "start_token": 240,
                                                                    "end_token": 244,
                                                                    "children": [
                                                                        {
                                                                            "type": "binary_operator",
                                                                            "label": "node_index * 2",
                                                                            "start_token": 240,
                                                                            "end_token": 242,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "node_index",
                                                                                    "start_token": 240,
                                                                                    "end_token": 240,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "2",
                                                                                    "start_token": 242,
                                                                                    "end_token": 242,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "1",
                                                                            "start_token": 244,
                                                                            "end_token": 244,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "true",
                                                                    "label": "True",
                                                                    "start_token": 246,
                                                                    "end_token": 246,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "scores",
                                                                    "start_token": 248,
                                                                    "end_token": 248,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "height",
                                                                    "start_token": 250,
                                                                    "end_token": 250,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def main() -> None:\n    # Sample scores and height calculation\n    scores = [90, 23, 6, 33, 21, 65, 123, 34423]\n    height = math.log(len(scores), 2)\n\n    # Calculate and print the optimal value using the minimax algorithm\n    print(\"Optimal value : \", end=\"\")\n    print(minimax(0, 0, True, scores, height))",
            "start_token": 258,
            "end_token": 344,
            "children": [
                {
                    "type": "identifier",
                    "label": "main",
                    "start_token": 259,
                    "end_token": 259,
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "()",
                    "start_token": 260,
                    "end_token": 261,
                    "children": []
                },
                {
                    "type": "type",
                    "label": "None",
                    "start_token": 264,
                    "end_token": 264,
                    "children": [
                        {
                            "type": "none",
                            "label": "None",
                            "start_token": 264,
                            "end_token": 264,
                            "children": []
                        }
                    ]
                },
                {
                    "type": "comment",
                    "label": "# Sample scores and height calculation",
                    "start_token": 267,
                    "end_token": 272,
                    "children": []
                },
                {
                    "type": "block",
                    "label": "scores = [90, 23, 6, 33, 21, 65, 123, 34423]\n    height = math.log(len(scores), 2)\n\n    # Calculate and print the optimal value using the minimax algorithm\n    print(\"Optimal value : \", end=\"\")\n    print(minimax(0, 0, True, scores, height))",
                    "start_token": 274,
                    "end_token": 344,
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "scores = [90, 23, 6, 33, 21, 65, 123, 34423]",
                            "start_token": 274,
                            "end_token": 292,
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "scores = [90, 23, 6, 33, 21, 65, 123, 34423]",
                                    "start_token": 274,
                                    "end_token": 292,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "scores",
                                            "start_token": 274,
                                            "end_token": 274,
                                            "children": []
                                        },
                                        {
                                            "type": "list",
                                            "label": "[90, 23, 6, 33, 21, 65, 123, 34423]",
                                            "start_token": 276,
                                            "end_token": 292,
                                            "children": [
                                                {
                                                    "type": "integer",
                                                    "label": "90",
                                                    "start_token": 277,
                                                    "end_token": 277,
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "label": "23",
                                                    "start_token": 279,
                                                    "end_token": 279,
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "label": "6",
                                                    "start_token": 281,
                                                    "end_token": 281,
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "label": "33",
                                                    "start_token": 283,
                                                    "end_token": 283,
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "label": "21",
                                                    "start_token": 285,
                                                    "end_token": 285,
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "label": "65",
                                                    "start_token": 287,
                                                    "end_token": 287,
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "label": "123",
                                                    "start_token": 289,
                                                    "end_token": 289,
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "label": "34423",
                                                    "start_token": 291,
                                                    "end_token": 291,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "height = math.log(len(scores), 2)",
                            "start_token": 294,
                            "end_token": 306,
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "height = math.log(len(scores), 2)",
                                    "start_token": 294,
                                    "end_token": 306,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "height",
                                            "start_token": 294,
                                            "end_token": 294,
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "math.log(len(scores), 2)",
                                            "start_token": 296,
                                            "end_token": 306,
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "math.log",
                                                    "start_token": 296,
                                                    "end_token": 298,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "math",
                                                            "start_token": 296,
                                                            "end_token": 296,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "log",
                                                            "start_token": 298,
                                                            "end_token": 298,
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(len(scores), 2)",
                                                    "start_token": 299,
                                                    "end_token": 306,
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "len(scores)",
                                                            "start_token": 300,
                                                            "end_token": 303,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "len",
                                                                    "start_token": 300,
                                                                    "end_token": 300,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(scores)",
                                                                    "start_token": 301,
                                                                    "end_token": 303,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "scores",
                                                                            "start_token": 302,
                                                                            "end_token": 302,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "label": "2",
                                                            "start_token": 305,
                                                            "end_token": 305,
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# Calculate and print the optimal value using the minimax algorithm",
                            "start_token": 309,
                            "end_token": 319,
                            "children": []
                        },
                        {
                            "type": "expression_statement",
                            "label": "print(\"Optimal value : \", end=\"\")",
                            "start_token": 321,
                            "end_token": 328,
                            "children": [
                                {
                                    "type": "call",
                                    "label": "print(\"Optimal value : \", end=\"\")",
                                    "start_token": 321,
                                    "end_token": 328,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "print",
                                            "start_token": 321,
                                            "end_token": 321,
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(\"Optimal value : \", end=\"\")",
                                            "start_token": 322,
                                            "end_token": 328,
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "\"Optimal value : \"",
                                                    "start_token": 323,
                                                    "end_token": 323,
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "start_token": 323,
                                                            "end_token": 323,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Optimal value : ",
                                                            "start_token": 323,
                                                            "end_token": 323,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "start_token": 323,
                                                            "end_token": 323,
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "keyword_argument",
                                                    "label": "end=\"\"",
                                                    "start_token": 325,
                                                    "end_token": 327,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "end",
                                                            "start_token": 325,
                                                            "end_token": 325,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "label": "\"\"",
                                                            "start_token": 327,
                                                            "end_token": 327,
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "start_token": 327,
                                                                    "end_token": 327,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "start_token": 327,
                                                                    "end_token": 327,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "print(minimax(0, 0, True, scores, height))",
                            "start_token": 330,
                            "end_token": 344,
                            "children": [
                                {
                                    "type": "call",
                                    "label": "print(minimax(0, 0, True, scores, height))",
                                    "start_token": 330,
                                    "end_token": 344,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "print",
                                            "start_token": 330,
                                            "end_token": 330,
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(minimax(0, 0, True, scores, height))",
                                            "start_token": 331,
                                            "end_token": 344,
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "minimax(0, 0, True, scores, height)",
                                                    "start_token": 332,
                                                    "end_token": 343,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "minimax",
                                                            "start_token": 332,
                                                            "end_token": 332,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(0, 0, True, scores, height)",
                                                            "start_token": 333,
                                                            "end_token": 343,
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "label": "0",
                                                                    "start_token": 334,
                                                                    "end_token": 334,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "label": "0",
                                                                    "start_token": 336,
                                                                    "end_token": 336,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "true",
                                                                    "label": "True",
                                                                    "start_token": 338,
                                                                    "end_token": 338,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "scores",
                                                                    "start_token": 340,
                                                                    "end_token": 340,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "height",
                                                                    "start_token": 342,
                                                                    "end_token": 342,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "if_statement",
            "label": "if __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()\n    main()",
            "start_token": 348,
            "end_token": 367,
            "children": [
                {
                    "type": "comparison_operator",
                    "label": "__name__ == \"__main__\"",
                    "start_token": 349,
                    "end_token": 352,
                    "children": [
                        {
                            "type": "identifier",
                            "label": "__name__",
                            "start_token": 349,
                            "end_token": 349,
                            "children": []
                        },
                        {
                            "type": "string",
                            "label": "\"__main__\"",
                            "start_token": 352,
                            "end_token": 352,
                            "children": [
                                {
                                    "type": "string_start",
                                    "label": "\"",
                                    "start_token": 352,
                                    "end_token": 352,
                                    "children": []
                                },
                                {
                                    "type": "string_content",
                                    "label": "__main__",
                                    "start_token": 352,
                                    "end_token": 352,
                                    "children": []
                                },
                                {
                                    "type": "string_end",
                                    "label": "\"",
                                    "start_token": 352,
                                    "end_token": 352,
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "import doctest\n\n    doctest.testmod()\n    main()",
                    "start_token": 355,
                    "end_token": 367,
                    "children": [
                        {
                            "type": "import_statement",
                            "label": "import doctest",
                            "start_token": 355,
                            "end_token": 356,
                            "children": [
                                {
                                    "type": "dotted_name",
                                    "label": "doctest",
                                    "start_token": 356,
                                    "end_token": 356,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "doctest",
                                            "start_token": 356,
                                            "end_token": 356,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "doctest.testmod()",
                            "start_token": 359,
                            "end_token": 363,
                            "children": [
                                {
                                    "type": "call",
                                    "label": "doctest.testmod()",
                                    "start_token": 359,
                                    "end_token": 363,
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "doctest.testmod",
                                            "start_token": 359,
                                            "end_token": 361,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "doctest",
                                                    "start_token": 359,
                                                    "end_token": 359,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "testmod",
                                                    "start_token": 361,
                                                    "end_token": 361,
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "()",
                                            "start_token": 362,
                                            "end_token": 363,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "main()",
                            "start_token": 365,
                            "end_token": 367,
                            "children": [
                                {
                                    "type": "call",
                                    "label": "main()",
                                    "start_token": 365,
                                    "end_token": 367,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "main",
                                            "start_token": 365,
                                            "end_token": 365,
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "()",
                                            "start_token": 366,
                                            "end_token": 367,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}