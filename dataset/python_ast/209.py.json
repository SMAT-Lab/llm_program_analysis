{
    "type": "module",
    "label": "from typing import Any, Dict\n\nimport jwt\n\nfrom .config import settings\n\n\ndef parse_jwt_token(token: str) -> Dict[str, Any]:\n    \"\"\"\n    Parse and validate a JWT token.\n\n    :param token: The token to parse\n    :return: The decoded payload\n    :raises ValueError: If the token is invalid or expired\n    \"\"\"\n    try:\n        payload = jwt.decode(\n            token,\n            settings.JWT_SECRET_KEY,\n            algorithms=[settings.JWT_ALGORITHM],\n            audience=\"authenticated\",\n        )\n        return payload\n    except jwt.ExpiredSignatureError:\n        raise ValueError(\"Token has expired\")\n    except jwt.InvalidTokenError as e:\n        raise ValueError(f\"Invalid token: {str(e)}\")\n",
    "children": [
        {
            "type": "import_from_statement",
            "label": "from typing import Any, Dict",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "typing",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "typing",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Any",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Any",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Dict",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Dict",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import jwt",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "jwt",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "jwt",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from .config import settings",
            "children": [
                {
                    "type": "relative_import",
                    "label": ".config",
                    "children": [
                        {
                            "type": "import_prefix",
                            "label": ".",
                            "children": []
                        },
                        {
                            "type": "dotted_name",
                            "label": "config",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "config",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "settings",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "settings",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def parse_jwt_token(token: str) -> Dict[str, Any]:\n    \"\"\"\n    Parse and validate a JWT token.\n\n    :param token: The token to parse\n    :return: The decoded payload\n    :raises ValueError: If the token is invalid or expired\n    \"\"\"\n    try:\n        payload = jwt.decode(\n            token,\n            settings.JWT_SECRET_KEY,\n            algorithms=[settings.JWT_ALGORITHM],\n            audience=\"authenticated\",\n        )\n        return payload\n    except jwt.ExpiredSignatureError:\n        raise ValueError(\"Token has expired\")\n    except jwt.InvalidTokenError as e:\n        raise ValueError(f\"Invalid token: {str(e)}\")",
            "children": [
                {
                    "type": "identifier",
                    "label": "parse_jwt_token",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(token: str)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "token: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "token",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "Dict[str, Any]",
                    "children": [
                        {
                            "type": "generic_type",
                            "label": "Dict[str, Any]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "Dict",
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "label": "[str, Any]",
                                    "children": [
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "Any",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "Any",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    Parse and validate a JWT token.\n\n    :param token: The token to parse\n    :return: The decoded payload\n    :raises ValueError: If the token is invalid or expired\n    \"\"\"\n    try:\n        payload = jwt.decode(\n            token,\n            settings.JWT_SECRET_KEY,\n            algorithms=[settings.JWT_ALGORITHM],\n            audience=\"authenticated\",\n        )\n        return payload\n    except jwt.ExpiredSignatureError:\n        raise ValueError(\"Token has expired\")\n    except jwt.InvalidTokenError as e:\n        raise ValueError(f\"Invalid token: {str(e)}\")",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    Parse and validate a JWT token.\n\n    :param token: The token to parse\n    :return: The decoded payload\n    :raises ValueError: If the token is invalid or expired\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    Parse and validate a JWT token.\n\n    :param token: The token to parse\n    :return: The decoded payload\n    :raises ValueError: If the token is invalid or expired\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    Parse and validate a JWT token.\n\n    :param token: The token to parse\n    :return: The decoded payload\n    :raises ValueError: If the token is invalid or expired\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "try_statement",
                            "label": "try:\n        payload = jwt.decode(\n            token,\n            settings.JWT_SECRET_KEY,\n            algorithms=[settings.JWT_ALGORITHM],\n            audience=\"authenticated\",\n        )\n        return payload\n    except jwt.ExpiredSignatureError:\n        raise ValueError(\"Token has expired\")\n    except jwt.InvalidTokenError as e:\n        raise ValueError(f\"Invalid token: {str(e)}\")",
                            "children": [
                                {
                                    "type": "block",
                                    "label": "payload = jwt.decode(\n            token,\n            settings.JWT_SECRET_KEY,\n            algorithms=[settings.JWT_ALGORITHM],\n            audience=\"authenticated\",\n        )\n        return payload",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "payload = jwt.decode(\n            token,\n            settings.JWT_SECRET_KEY,\n            algorithms=[settings.JWT_ALGORITHM],\n            audience=\"authenticated\",\n        )",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "payload = jwt.decode(\n            token,\n            settings.JWT_SECRET_KEY,\n            algorithms=[settings.JWT_ALGORITHM],\n            audience=\"authenticated\",\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "payload",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "jwt.decode(\n            token,\n            settings.JWT_SECRET_KEY,\n            algorithms=[settings.JWT_ALGORITHM],\n            audience=\"authenticated\",\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "jwt.decode",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "jwt",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "decode",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n            token,\n            settings.JWT_SECRET_KEY,\n            algorithms=[settings.JWT_ALGORITHM],\n            audience=\"authenticated\",\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "token",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "settings.JWT_SECRET_KEY",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "settings",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "JWT_SECRET_KEY",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "algorithms=[settings.JWT_ALGORITHM]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "algorithms",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "list",
                                                                                    "label": "[settings.JWT_ALGORITHM]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "settings.JWT_ALGORITHM",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "settings",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "JWT_ALGORITHM",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "audience=\"authenticated\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "audience",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"authenticated\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "authenticated",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "label": "return payload",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "payload",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "except_clause",
                                    "label": "except jwt.ExpiredSignatureError:\n        raise ValueError(\"Token has expired\")",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "jwt.ExpiredSignatureError",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "jwt",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "ExpiredSignatureError",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "raise ValueError(\"Token has expired\")",
                                            "children": [
                                                {
                                                    "type": "raise_statement",
                                                    "label": "raise ValueError(\"Token has expired\")",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "ValueError(\"Token has expired\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "ValueError",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\"Token has expired\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"Token has expired\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "Token has expired",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "except_clause",
                                    "label": "except jwt.InvalidTokenError as e:\n        raise ValueError(f\"Invalid token: {str(e)}\")",
                                    "children": [
                                        {
                                            "type": "as_pattern",
                                            "label": "jwt.InvalidTokenError as e",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "jwt.InvalidTokenError",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "jwt",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "InvalidTokenError",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "as_pattern_target",
                                                    "label": "e",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "e",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "raise ValueError(f\"Invalid token: {str(e)}\")",
                                            "children": [
                                                {
                                                    "type": "raise_statement",
                                                    "label": "raise ValueError(f\"Invalid token: {str(e)}\")",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "ValueError(f\"Invalid token: {str(e)}\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "ValueError",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(f\"Invalid token: {str(e)}\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "f\"Invalid token: {str(e)}\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "f\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "Invalid token: ",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{str(e)}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "str(e)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "str",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(e)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "e",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}