{
    "type": "module",
    "label": "import logging\n\nfrom colorama import Fore, Style\nfrom google.cloud.logging_v2.handlers import CloudLoggingFilter, StructuredLogHandler\n\nfrom .utils import remove_color_codes\n\n\nclass FancyConsoleFormatter(logging.Formatter):\n    \"\"\"\n    A custom logging formatter designed for console output.\n\n    This formatter enhances the standard logging output with color coding. The color\n    coding is based on the level of the log message, making it easier to distinguish\n    between different types of messages in the console output.\n\n    The color for each level is defined in the LEVEL_COLOR_MAP class attribute.\n    \"\"\"\n\n    # level -> (level & text color, title color)\n    LEVEL_COLOR_MAP = {\n        logging.DEBUG: Fore.LIGHTBLACK_EX,\n        logging.INFO: Fore.BLUE,\n        logging.WARNING: Fore.YELLOW,\n        logging.ERROR: Fore.RED,\n        logging.CRITICAL: Fore.RED + Style.BRIGHT,\n    }\n\n    def format(self, record: logging.LogRecord) -> str:\n        # Make sure `msg` is a string\n        if not hasattr(record, \"msg\"):\n            record.msg = \"\"\n        elif type(record.msg) is not str:\n            record.msg = str(record.msg)\n\n        # Determine default color based on error level\n        level_color = \"\"\n        if record.levelno in self.LEVEL_COLOR_MAP:\n            level_color = self.LEVEL_COLOR_MAP[record.levelno]\n            record.levelname = f\"{level_color}{record.levelname}{Style.RESET_ALL}\"\n\n        # Determine color for message\n        color = getattr(record, \"color\", level_color)\n        color_is_specified = hasattr(record, \"color\")\n\n        # Don't color INFO messages unless the color is explicitly specified.\n        if color and (record.levelno != logging.INFO or color_is_specified):\n            record.msg = f\"{color}{record.msg}{Style.RESET_ALL}\"\n\n        return super().format(record)\n\n\nclass AGPTFormatter(FancyConsoleFormatter):\n    def __init__(self, *args, no_color: bool = False, **kwargs):\n        super().__init__(*args, **kwargs)\n        self.no_color = no_color\n\n    def format(self, record: logging.LogRecord) -> str:\n        # Make sure `msg` is a string\n        if not hasattr(record, \"msg\"):\n            record.msg = \"\"\n        elif type(record.msg) is not str:\n            record.msg = str(record.msg)\n\n        # Strip color from the message to prevent color spoofing\n        if record.msg and not getattr(record, \"preserve_color\", False):\n            record.msg = remove_color_codes(record.msg)\n\n        # Determine color for title\n        title = getattr(record, \"title\", \"\")\n        title_color = getattr(record, \"title_color\", \"\") or self.LEVEL_COLOR_MAP.get(\n            record.levelno, \"\"\n        )\n        if title and title_color:\n            title = f\"{title_color + Style.BRIGHT}{title}{Style.RESET_ALL}\"\n        # Make sure record.title is set, and padded with a space if not empty\n        record.title = f\"{title} \" if title else \"\"\n\n        if self.no_color:\n            return remove_color_codes(super().format(record))\n        else:\n            return super().format(record)\n\n\nclass StructuredLoggingFormatter(StructuredLogHandler, logging.Formatter):\n    def __init__(self):\n        # Set up CloudLoggingFilter to add diagnostic info to the log records\n        self.cloud_logging_filter = CloudLoggingFilter()\n\n        # Init StructuredLogHandler\n        super().__init__()\n\n    def format(self, record: logging.LogRecord) -> str:\n        self.cloud_logging_filter.filter(record)\n        return super().format(record)\n",
    "children": [
        {
            "type": "import_statement",
            "label": "import logging",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "logging",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "logging",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from colorama import Fore, Style",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "colorama",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "colorama",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Fore",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Fore",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Style",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Style",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from google.cloud.logging_v2.handlers import CloudLoggingFilter, StructuredLogHandler",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "google.cloud.logging_v2.handlers",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "google",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "cloud",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "logging_v2",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "handlers",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "CloudLoggingFilter",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "CloudLoggingFilter",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "StructuredLogHandler",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "StructuredLogHandler",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from .utils import remove_color_codes",
            "children": [
                {
                    "type": "relative_import",
                    "label": ".utils",
                    "children": [
                        {
                            "type": "import_prefix",
                            "label": ".",
                            "children": []
                        },
                        {
                            "type": "dotted_name",
                            "label": "utils",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "utils",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "remove_color_codes",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "remove_color_codes",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "label": "class FancyConsoleFormatter(logging.Formatter):\n    \"\"\"\n    A custom logging formatter designed for console output.\n\n    This formatter enhances the standard logging output with color coding. The color\n    coding is based on the level of the log message, making it easier to distinguish\n    between different types of messages in the console output.\n\n    The color for each level is defined in the LEVEL_COLOR_MAP class attribute.\n    \"\"\"\n\n    # level -> (level & text color, title color)\n    LEVEL_COLOR_MAP = {\n        logging.DEBUG: Fore.LIGHTBLACK_EX,\n        logging.INFO: Fore.BLUE,\n        logging.WARNING: Fore.YELLOW,\n        logging.ERROR: Fore.RED,\n        logging.CRITICAL: Fore.RED + Style.BRIGHT,\n    }\n\n    def format(self, record: logging.LogRecord) -> str:\n        # Make sure `msg` is a string\n        if not hasattr(record, \"msg\"):\n            record.msg = \"\"\n        elif type(record.msg) is not str:\n            record.msg = str(record.msg)\n\n        # Determine default color based on error level\n        level_color = \"\"\n        if record.levelno in self.LEVEL_COLOR_MAP:\n            level_color = self.LEVEL_COLOR_MAP[record.levelno]\n            record.levelname = f\"{level_color}{record.levelname}{Style.RESET_ALL}\"\n\n        # Determine color for message\n        color = getattr(record, \"color\", level_color)\n        color_is_specified = hasattr(record, \"color\")\n\n        # Don't color INFO messages unless the color is explicitly specified.\n        if color and (record.levelno != logging.INFO or color_is_specified):\n            record.msg = f\"{color}{record.msg}{Style.RESET_ALL}\"\n\n        return super().format(record)",
            "children": [
                {
                    "type": "identifier",
                    "label": "FancyConsoleFormatter",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "(logging.Formatter)",
                    "children": [
                        {
                            "type": "attribute",
                            "label": "logging.Formatter",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "logging",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "Formatter",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    A custom logging formatter designed for console output.\n\n    This formatter enhances the standard logging output with color coding. The color\n    coding is based on the level of the log message, making it easier to distinguish\n    between different types of messages in the console output.\n\n    The color for each level is defined in the LEVEL_COLOR_MAP class attribute.\n    \"\"\"\n\n    # level -> (level & text color, title color)\n    LEVEL_COLOR_MAP = {\n        logging.DEBUG: Fore.LIGHTBLACK_EX,\n        logging.INFO: Fore.BLUE,\n        logging.WARNING: Fore.YELLOW,\n        logging.ERROR: Fore.RED,\n        logging.CRITICAL: Fore.RED + Style.BRIGHT,\n    }\n\n    def format(self, record: logging.LogRecord) -> str:\n        # Make sure `msg` is a string\n        if not hasattr(record, \"msg\"):\n            record.msg = \"\"\n        elif type(record.msg) is not str:\n            record.msg = str(record.msg)\n\n        # Determine default color based on error level\n        level_color = \"\"\n        if record.levelno in self.LEVEL_COLOR_MAP:\n            level_color = self.LEVEL_COLOR_MAP[record.levelno]\n            record.levelname = f\"{level_color}{record.levelname}{Style.RESET_ALL}\"\n\n        # Determine color for message\n        color = getattr(record, \"color\", level_color)\n        color_is_specified = hasattr(record, \"color\")\n\n        # Don't color INFO messages unless the color is explicitly specified.\n        if color and (record.levelno != logging.INFO or color_is_specified):\n            record.msg = f\"{color}{record.msg}{Style.RESET_ALL}\"\n\n        return super().format(record)",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    A custom logging formatter designed for console output.\n\n    This formatter enhances the standard logging output with color coding. The color\n    coding is based on the level of the log message, making it easier to distinguish\n    between different types of messages in the console output.\n\n    The color for each level is defined in the LEVEL_COLOR_MAP class attribute.\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    A custom logging formatter designed for console output.\n\n    This formatter enhances the standard logging output with color coding. The color\n    coding is based on the level of the log message, making it easier to distinguish\n    between different types of messages in the console output.\n\n    The color for each level is defined in the LEVEL_COLOR_MAP class attribute.\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    A custom logging formatter designed for console output.\n\n    This formatter enhances the standard logging output with color coding. The color\n    coding is based on the level of the log message, making it easier to distinguish\n    between different types of messages in the console output.\n\n    The color for each level is defined in the LEVEL_COLOR_MAP class attribute.\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# level -> (level & text color, title color)",
                            "children": []
                        },
                        {
                            "type": "expression_statement",
                            "label": "LEVEL_COLOR_MAP = {\n        logging.DEBUG: Fore.LIGHTBLACK_EX,\n        logging.INFO: Fore.BLUE,\n        logging.WARNING: Fore.YELLOW,\n        logging.ERROR: Fore.RED,\n        logging.CRITICAL: Fore.RED + Style.BRIGHT,\n    }",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "LEVEL_COLOR_MAP = {\n        logging.DEBUG: Fore.LIGHTBLACK_EX,\n        logging.INFO: Fore.BLUE,\n        logging.WARNING: Fore.YELLOW,\n        logging.ERROR: Fore.RED,\n        logging.CRITICAL: Fore.RED + Style.BRIGHT,\n    }",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "LEVEL_COLOR_MAP",
                                            "children": []
                                        },
                                        {
                                            "type": "dictionary",
                                            "label": "{\n        logging.DEBUG: Fore.LIGHTBLACK_EX,\n        logging.INFO: Fore.BLUE,\n        logging.WARNING: Fore.YELLOW,\n        logging.ERROR: Fore.RED,\n        logging.CRITICAL: Fore.RED + Style.BRIGHT,\n    }",
                                            "children": [
                                                {
                                                    "type": "pair",
                                                    "label": "logging.DEBUG: Fore.LIGHTBLACK_EX",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "logging.DEBUG",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "logging",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "DEBUG",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "attribute",
                                                            "label": "Fore.LIGHTBLACK_EX",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Fore",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "LIGHTBLACK_EX",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "pair",
                                                    "label": "logging.INFO: Fore.BLUE",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "logging.INFO",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "logging",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "INFO",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "attribute",
                                                            "label": "Fore.BLUE",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Fore",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "BLUE",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "pair",
                                                    "label": "logging.WARNING: Fore.YELLOW",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "logging.WARNING",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "logging",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "WARNING",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "attribute",
                                                            "label": "Fore.YELLOW",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Fore",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "YELLOW",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "pair",
                                                    "label": "logging.ERROR: Fore.RED",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "logging.ERROR",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "logging",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "ERROR",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "attribute",
                                                            "label": "Fore.RED",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Fore",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "RED",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "pair",
                                                    "label": "logging.CRITICAL: Fore.RED + Style.BRIGHT",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "logging.CRITICAL",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "logging",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "CRITICAL",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "binary_operator",
                                                            "label": "Fore.RED + Style.BRIGHT",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "Fore.RED",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "Fore",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "RED",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "Style.BRIGHT",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "Style",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "BRIGHT",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def format(self, record: logging.LogRecord) -> str:\n        # Make sure `msg` is a string\n        if not hasattr(record, \"msg\"):\n            record.msg = \"\"\n        elif type(record.msg) is not str:\n            record.msg = str(record.msg)\n\n        # Determine default color based on error level\n        level_color = \"\"\n        if record.levelno in self.LEVEL_COLOR_MAP:\n            level_color = self.LEVEL_COLOR_MAP[record.levelno]\n            record.levelname = f\"{level_color}{record.levelname}{Style.RESET_ALL}\"\n\n        # Determine color for message\n        color = getattr(record, \"color\", level_color)\n        color_is_specified = hasattr(record, \"color\")\n\n        # Don't color INFO messages unless the color is explicitly specified.\n        if color and (record.levelno != logging.INFO or color_is_specified):\n            record.msg = f\"{color}{record.msg}{Style.RESET_ALL}\"\n\n        return super().format(record)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "format",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, record: logging.LogRecord)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "record: logging.LogRecord",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "record",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "logging.LogRecord",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "logging.LogRecord",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "logging",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "LogRecord",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "comment",
                                    "label": "# Make sure `msg` is a string",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "label": "if not hasattr(record, \"msg\"):\n            record.msg = \"\"\n        elif type(record.msg) is not str:\n            record.msg = str(record.msg)\n\n        # Determine default color based on error level\n        level_color = \"\"\n        if record.levelno in self.LEVEL_COLOR_MAP:\n            level_color = self.LEVEL_COLOR_MAP[record.levelno]\n            record.levelname = f\"{level_color}{record.levelname}{Style.RESET_ALL}\"\n\n        # Determine color for message\n        color = getattr(record, \"color\", level_color)\n        color_is_specified = hasattr(record, \"color\")\n\n        # Don't color INFO messages unless the color is explicitly specified.\n        if color and (record.levelno != logging.INFO or color_is_specified):\n            record.msg = f\"{color}{record.msg}{Style.RESET_ALL}\"\n\n        return super().format(record)",
                                    "children": [
                                        {
                                            "type": "if_statement",
                                            "label": "if not hasattr(record, \"msg\"):\n            record.msg = \"\"\n        elif type(record.msg) is not str:\n            record.msg = str(record.msg)",
                                            "children": [
                                                {
                                                    "type": "not_operator",
                                                    "label": "not hasattr(record, \"msg\")",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "hasattr(record, \"msg\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "hasattr",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(record, \"msg\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "record",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"msg\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "msg",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "record.msg = \"\"",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "record.msg = \"\"",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "record.msg = \"\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "record.msg",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "record",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "msg",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "elif_clause",
                                                    "label": "elif type(record.msg) is not str:\n            record.msg = str(record.msg)",
                                                    "children": [
                                                        {
                                                            "type": "comparison_operator",
                                                            "label": "type(record.msg) is not str",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "type(record.msg)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "type",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(record.msg)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "record.msg",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "record",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "msg",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "record.msg = str(record.msg)",
                                                            "children": [
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "record.msg = str(record.msg)",
                                                                    "children": [
                                                                        {
                                                                            "type": "assignment",
                                                                            "label": "record.msg = str(record.msg)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "record.msg",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "record",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "msg",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "str(record.msg)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "str",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(record.msg)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "record.msg",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "record",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "msg",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "label": "# Determine default color based on error level",
                                            "children": []
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "level_color = \"\"",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "level_color = \"\"",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "level_color",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "label": "\"\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if record.levelno in self.LEVEL_COLOR_MAP:\n            level_color = self.LEVEL_COLOR_MAP[record.levelno]\n            record.levelname = f\"{level_color}{record.levelname}{Style.RESET_ALL}\"",
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "label": "record.levelno in self.LEVEL_COLOR_MAP",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "record.levelno",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "record",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "levelno",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.LEVEL_COLOR_MAP",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "LEVEL_COLOR_MAP",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "level_color = self.LEVEL_COLOR_MAP[record.levelno]\n            record.levelname = f\"{level_color}{record.levelname}{Style.RESET_ALL}\"",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "level_color = self.LEVEL_COLOR_MAP[record.levelno]",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "level_color = self.LEVEL_COLOR_MAP[record.levelno]",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "level_color",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "subscript",
                                                                            "label": "self.LEVEL_COLOR_MAP[record.levelno]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "self.LEVEL_COLOR_MAP",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "self",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "LEVEL_COLOR_MAP",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "record.levelno",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "record",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "levelno",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "record.levelname = f\"{level_color}{record.levelname}{Style.RESET_ALL}\"",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "record.levelname = f\"{level_color}{record.levelname}{Style.RESET_ALL}\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "record.levelname",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "record",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "levelname",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "f\"{level_color}{record.levelname}{Style.RESET_ALL}\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "f\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{level_color}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "level_color",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{record.levelname}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "record.levelname",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "record",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "levelname",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{Style.RESET_ALL}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "Style.RESET_ALL",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "Style",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "RESET_ALL",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "label": "# Determine color for message",
                                            "children": []
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "color = getattr(record, \"color\", level_color)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "color = getattr(record, \"color\", level_color)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "color",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "getattr(record, \"color\", level_color)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "getattr",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(record, \"color\", level_color)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "record",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"color\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "color",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "level_color",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "color_is_specified = hasattr(record, \"color\")",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "color_is_specified = hasattr(record, \"color\")",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "color_is_specified",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "hasattr(record, \"color\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "hasattr",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(record, \"color\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "record",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"color\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "color",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "label": "# Don't color INFO messages unless the color is explicitly specified.",
                                            "children": []
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if color and (record.levelno != logging.INFO or color_is_specified):\n            record.msg = f\"{color}{record.msg}{Style.RESET_ALL}\"",
                                            "children": [
                                                {
                                                    "type": "boolean_operator",
                                                    "label": "color and (record.levelno != logging.INFO or color_is_specified)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "color",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "parenthesized_expression",
                                                            "label": "(record.levelno != logging.INFO or color_is_specified)",
                                                            "children": [
                                                                {
                                                                    "type": "boolean_operator",
                                                                    "label": "record.levelno != logging.INFO or color_is_specified",
                                                                    "children": [
                                                                        {
                                                                            "type": "comparison_operator",
                                                                            "label": "record.levelno != logging.INFO",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "record.levelno",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "record",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "levelno",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "logging.INFO",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "logging",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "INFO",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "color_is_specified",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "record.msg = f\"{color}{record.msg}{Style.RESET_ALL}\"",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "record.msg = f\"{color}{record.msg}{Style.RESET_ALL}\"",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "record.msg = f\"{color}{record.msg}{Style.RESET_ALL}\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "record.msg",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "record",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "msg",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "f\"{color}{record.msg}{Style.RESET_ALL}\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "f\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{color}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "color",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{record.msg}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "record.msg",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "record",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "msg",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{Style.RESET_ALL}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "Style.RESET_ALL",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "Style",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "RESET_ALL",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "label": "return super().format(record)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "super().format(record)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "super().format",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "super()",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "super",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "format",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(record)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "record",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "label": "class AGPTFormatter(FancyConsoleFormatter):\n    def __init__(self, *args, no_color: bool = False, **kwargs):\n        super().__init__(*args, **kwargs)\n        self.no_color = no_color\n\n    def format(self, record: logging.LogRecord) -> str:\n        # Make sure `msg` is a string\n        if not hasattr(record, \"msg\"):\n            record.msg = \"\"\n        elif type(record.msg) is not str:\n            record.msg = str(record.msg)\n\n        # Strip color from the message to prevent color spoofing\n        if record.msg and not getattr(record, \"preserve_color\", False):\n            record.msg = remove_color_codes(record.msg)\n\n        # Determine color for title\n        title = getattr(record, \"title\", \"\")\n        title_color = getattr(record, \"title_color\", \"\") or self.LEVEL_COLOR_MAP.get(\n            record.levelno, \"\"\n        )\n        if title and title_color:\n            title = f\"{title_color + Style.BRIGHT}{title}{Style.RESET_ALL}\"\n        # Make sure record.title is set, and padded with a space if not empty\n        record.title = f\"{title} \" if title else \"\"\n\n        if self.no_color:\n            return remove_color_codes(super().format(record))\n        else:\n            return super().format(record)",
            "children": [
                {
                    "type": "identifier",
                    "label": "AGPTFormatter",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "(FancyConsoleFormatter)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "FancyConsoleFormatter",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "def __init__(self, *args, no_color: bool = False, **kwargs):\n        super().__init__(*args, **kwargs)\n        self.no_color = no_color\n\n    def format(self, record: logging.LogRecord) -> str:\n        # Make sure `msg` is a string\n        if not hasattr(record, \"msg\"):\n            record.msg = \"\"\n        elif type(record.msg) is not str:\n            record.msg = str(record.msg)\n\n        # Strip color from the message to prevent color spoofing\n        if record.msg and not getattr(record, \"preserve_color\", False):\n            record.msg = remove_color_codes(record.msg)\n\n        # Determine color for title\n        title = getattr(record, \"title\", \"\")\n        title_color = getattr(record, \"title_color\", \"\") or self.LEVEL_COLOR_MAP.get(\n            record.levelno, \"\"\n        )\n        if title and title_color:\n            title = f\"{title_color + Style.BRIGHT}{title}{Style.RESET_ALL}\"\n        # Make sure record.title is set, and padded with a space if not empty\n        record.title = f\"{title} \" if title else \"\"\n\n        if self.no_color:\n            return remove_color_codes(super().format(record))\n        else:\n            return super().format(record)",
                    "children": [
                        {
                            "type": "function_definition",
                            "label": "def __init__(self, *args, no_color: bool = False, **kwargs):\n        super().__init__(*args, **kwargs)\n        self.no_color = no_color",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "__init__",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, *args, no_color: bool = False, **kwargs)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "list_splat_pattern",
                                            "label": "*args",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "args",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "typed_default_parameter",
                                            "label": "no_color: bool = False",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "no_color",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "bool",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "bool",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "false",
                                                    "label": "False",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "dictionary_splat_pattern",
                                            "label": "**kwargs",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "kwargs",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "super().__init__(*args, **kwargs)\n        self.no_color = no_color",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "super().__init__(*args, **kwargs)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "super().__init__(*args, **kwargs)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "super().__init__",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "super()",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "super",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "__init__",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(*args, **kwargs)",
                                                            "children": [
                                                                {
                                                                    "type": "list_splat",
                                                                    "label": "*args",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "args",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "dictionary_splat",
                                                                    "label": "**kwargs",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "kwargs",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "self.no_color = no_color",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "self.no_color = no_color",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.no_color",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "no_color",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "no_color",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def format(self, record: logging.LogRecord) -> str:\n        # Make sure `msg` is a string\n        if not hasattr(record, \"msg\"):\n            record.msg = \"\"\n        elif type(record.msg) is not str:\n            record.msg = str(record.msg)\n\n        # Strip color from the message to prevent color spoofing\n        if record.msg and not getattr(record, \"preserve_color\", False):\n            record.msg = remove_color_codes(record.msg)\n\n        # Determine color for title\n        title = getattr(record, \"title\", \"\")\n        title_color = getattr(record, \"title_color\", \"\") or self.LEVEL_COLOR_MAP.get(\n            record.levelno, \"\"\n        )\n        if title and title_color:\n            title = f\"{title_color + Style.BRIGHT}{title}{Style.RESET_ALL}\"\n        # Make sure record.title is set, and padded with a space if not empty\n        record.title = f\"{title} \" if title else \"\"\n\n        if self.no_color:\n            return remove_color_codes(super().format(record))\n        else:\n            return super().format(record)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "format",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, record: logging.LogRecord)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "record: logging.LogRecord",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "record",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "logging.LogRecord",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "logging.LogRecord",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "logging",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "LogRecord",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "comment",
                                    "label": "# Make sure `msg` is a string",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "label": "if not hasattr(record, \"msg\"):\n            record.msg = \"\"\n        elif type(record.msg) is not str:\n            record.msg = str(record.msg)\n\n        # Strip color from the message to prevent color spoofing\n        if record.msg and not getattr(record, \"preserve_color\", False):\n            record.msg = remove_color_codes(record.msg)\n\n        # Determine color for title\n        title = getattr(record, \"title\", \"\")\n        title_color = getattr(record, \"title_color\", \"\") or self.LEVEL_COLOR_MAP.get(\n            record.levelno, \"\"\n        )\n        if title and title_color:\n            title = f\"{title_color + Style.BRIGHT}{title}{Style.RESET_ALL}\"\n        # Make sure record.title is set, and padded with a space if not empty\n        record.title = f\"{title} \" if title else \"\"\n\n        if self.no_color:\n            return remove_color_codes(super().format(record))\n        else:\n            return super().format(record)",
                                    "children": [
                                        {
                                            "type": "if_statement",
                                            "label": "if not hasattr(record, \"msg\"):\n            record.msg = \"\"\n        elif type(record.msg) is not str:\n            record.msg = str(record.msg)",
                                            "children": [
                                                {
                                                    "type": "not_operator",
                                                    "label": "not hasattr(record, \"msg\")",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "hasattr(record, \"msg\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "hasattr",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(record, \"msg\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "record",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"msg\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "msg",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "record.msg = \"\"",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "record.msg = \"\"",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "record.msg = \"\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "record.msg",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "record",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "msg",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "elif_clause",
                                                    "label": "elif type(record.msg) is not str:\n            record.msg = str(record.msg)",
                                                    "children": [
                                                        {
                                                            "type": "comparison_operator",
                                                            "label": "type(record.msg) is not str",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "type(record.msg)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "type",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(record.msg)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "record.msg",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "record",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "msg",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "record.msg = str(record.msg)",
                                                            "children": [
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "record.msg = str(record.msg)",
                                                                    "children": [
                                                                        {
                                                                            "type": "assignment",
                                                                            "label": "record.msg = str(record.msg)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "record.msg",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "record",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "msg",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "str(record.msg)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "str",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(record.msg)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "record.msg",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "record",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "msg",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "label": "# Strip color from the message to prevent color spoofing",
                                            "children": []
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if record.msg and not getattr(record, \"preserve_color\", False):\n            record.msg = remove_color_codes(record.msg)",
                                            "children": [
                                                {
                                                    "type": "boolean_operator",
                                                    "label": "record.msg and not getattr(record, \"preserve_color\", False)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "record.msg",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "record",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "msg",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "not_operator",
                                                            "label": "not getattr(record, \"preserve_color\", False)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "getattr(record, \"preserve_color\", False)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "getattr",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(record, \"preserve_color\", False)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "record",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"preserve_color\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "preserve_color",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "false",
                                                                                    "label": "False",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "record.msg = remove_color_codes(record.msg)",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "record.msg = remove_color_codes(record.msg)",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "record.msg = remove_color_codes(record.msg)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "record.msg",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "record",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "msg",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "label": "remove_color_codes(record.msg)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "remove_color_codes",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(record.msg)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "record.msg",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "record",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "msg",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "label": "# Determine color for title",
                                            "children": []
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "title = getattr(record, \"title\", \"\")",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "title = getattr(record, \"title\", \"\")",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "title",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "getattr(record, \"title\", \"\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "getattr",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(record, \"title\", \"\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "record",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"title\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "title",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "title_color = getattr(record, \"title_color\", \"\") or self.LEVEL_COLOR_MAP.get(\n            record.levelno, \"\"\n        )",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "title_color = getattr(record, \"title_color\", \"\") or self.LEVEL_COLOR_MAP.get(\n            record.levelno, \"\"\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "title_color",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "boolean_operator",
                                                            "label": "getattr(record, \"title_color\", \"\") or self.LEVEL_COLOR_MAP.get(\n            record.levelno, \"\"\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "getattr(record, \"title_color\", \"\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "getattr",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(record, \"title_color\", \"\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "record",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"title_color\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "title_color",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "self.LEVEL_COLOR_MAP.get(\n            record.levelno, \"\"\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "self.LEVEL_COLOR_MAP.get",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "self.LEVEL_COLOR_MAP",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "self",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "LEVEL_COLOR_MAP",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "get",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(\n            record.levelno, \"\"\n        )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "record.levelno",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "record",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "levelno",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if title and title_color:\n            title = f\"{title_color + Style.BRIGHT}{title}{Style.RESET_ALL}\"",
                                            "children": [
                                                {
                                                    "type": "boolean_operator",
                                                    "label": "title and title_color",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "title",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "title_color",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "title = f\"{title_color + Style.BRIGHT}{title}{Style.RESET_ALL}\"",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "title = f\"{title_color + Style.BRIGHT}{title}{Style.RESET_ALL}\"",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "title = f\"{title_color + Style.BRIGHT}{title}{Style.RESET_ALL}\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "title",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "f\"{title_color + Style.BRIGHT}{title}{Style.RESET_ALL}\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "f\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{title_color + Style.BRIGHT}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "binary_operator",
                                                                                            "label": "title_color + Style.BRIGHT",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "title_color",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "Style.BRIGHT",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "Style",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "BRIGHT",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{title}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "title",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{Style.RESET_ALL}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "Style.RESET_ALL",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "Style",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "RESET_ALL",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "label": "# Make sure record.title is set, and padded with a space if not empty",
                                            "children": []
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "record.title = f\"{title} \" if title else \"\"",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "record.title = f\"{title} \" if title else \"\"",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "record.title",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "record",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "title",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "conditional_expression",
                                                            "label": "f\"{title} \" if title else \"\"",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "f\"{title} \"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "f\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{title}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "title",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": " ",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "title",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if self.no_color:\n            return remove_color_codes(super().format(record))\n        else:\n            return super().format(record)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "self.no_color",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "self",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "no_color",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "return remove_color_codes(super().format(record))",
                                                    "children": [
                                                        {
                                                            "type": "return_statement",
                                                            "label": "return remove_color_codes(super().format(record))",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "remove_color_codes(super().format(record))",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "remove_color_codes",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(super().format(record))",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "super().format(record)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "super().format",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "super()",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "super",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "()",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "format",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(record)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "record",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "else_clause",
                                                    "label": "else:\n            return super().format(record)",
                                                    "children": [
                                                        {
                                                            "type": "block",
                                                            "label": "return super().format(record)",
                                                            "children": [
                                                                {
                                                                    "type": "return_statement",
                                                                    "label": "return super().format(record)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "super().format(record)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "super().format",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "super()",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "super",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "()",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "format",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(record)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "record",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "label": "class StructuredLoggingFormatter(StructuredLogHandler, logging.Formatter):\n    def __init__(self):\n        # Set up CloudLoggingFilter to add diagnostic info to the log records\n        self.cloud_logging_filter = CloudLoggingFilter()\n\n        # Init StructuredLogHandler\n        super().__init__()\n\n    def format(self, record: logging.LogRecord) -> str:\n        self.cloud_logging_filter.filter(record)\n        return super().format(record)",
            "children": [
                {
                    "type": "identifier",
                    "label": "StructuredLoggingFormatter",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "(StructuredLogHandler, logging.Formatter)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "StructuredLogHandler",
                            "children": []
                        },
                        {
                            "type": "attribute",
                            "label": "logging.Formatter",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "logging",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "Formatter",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "def __init__(self):\n        # Set up CloudLoggingFilter to add diagnostic info to the log records\n        self.cloud_logging_filter = CloudLoggingFilter()\n\n        # Init StructuredLogHandler\n        super().__init__()\n\n    def format(self, record: logging.LogRecord) -> str:\n        self.cloud_logging_filter.filter(record)\n        return super().format(record)",
                    "children": [
                        {
                            "type": "function_definition",
                            "label": "def __init__(self):\n        # Set up CloudLoggingFilter to add diagnostic info to the log records\n        self.cloud_logging_filter = CloudLoggingFilter()\n\n        # Init StructuredLogHandler\n        super().__init__()",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "__init__",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "comment",
                                    "label": "# Set up CloudLoggingFilter to add diagnostic info to the log records",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "label": "self.cloud_logging_filter = CloudLoggingFilter()\n\n        # Init StructuredLogHandler\n        super().__init__()",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "self.cloud_logging_filter = CloudLoggingFilter()",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "self.cloud_logging_filter = CloudLoggingFilter()",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.cloud_logging_filter",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "cloud_logging_filter",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "CloudLoggingFilter()",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "CloudLoggingFilter",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "label": "# Init StructuredLogHandler",
                                            "children": []
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "super().__init__()",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "super().__init__()",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "super().__init__",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "super()",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "super",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "__init__",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "()",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def format(self, record: logging.LogRecord) -> str:\n        self.cloud_logging_filter.filter(record)\n        return super().format(record)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "format",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, record: logging.LogRecord)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "record: logging.LogRecord",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "record",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "logging.LogRecord",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "logging.LogRecord",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "logging",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "LogRecord",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "self.cloud_logging_filter.filter(record)\n        return super().format(record)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "self.cloud_logging_filter.filter(record)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "self.cloud_logging_filter.filter(record)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.cloud_logging_filter.filter",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "self.cloud_logging_filter",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "self",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "cloud_logging_filter",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "filter",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(record)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "record",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "label": "return super().format(record)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "super().format(record)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "super().format",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "super()",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "super",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "format",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(record)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "record",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}