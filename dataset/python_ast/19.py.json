{
    "type": "module",
    "label": "import asyncio\nimport json\nimport logging\nfrom abc import ABC, abstractmethod\nfrom datetime import datetime\nfrom typing import Any, AsyncGenerator, Generator, Generic, Optional, TypeVar\n\nfrom pydantic import BaseModel\nfrom redis.asyncio.client import PubSub as AsyncPubSub\nfrom redis.client import PubSub\n\nfrom backend.data import redis\n\nlogger = logging.getLogger(__name__)\n\n\nclass DateTimeEncoder(json.JSONEncoder):\n    def default(self, o):\n        if isinstance(o, datetime):\n            return o.isoformat()\n        return super().default(o)\n\n\nM = TypeVar(\"M\", bound=BaseModel)\n\n\nclass BaseRedisEventBus(Generic[M], ABC):\n    Model: type[M]\n\n    @property\n    @abstractmethod\n    def event_bus_name(self) -> str:\n        pass\n\n    def _serialize_message(self, item: M, channel_key: str) -> tuple[str, str]:\n        message = json.dumps(item.model_dump(), cls=DateTimeEncoder)\n        channel_name = f\"{self.event_bus_name}/{channel_key}\"\n        logger.info(f\"[{channel_name}] Publishing an event to Redis {message}\")\n        return message, channel_name\n\n    def _deserialize_message(self, msg: Any, channel_key: str) -> M | None:\n        message_type = \"pmessage\" if \"*\" in channel_key else \"message\"\n        if msg[\"type\"] != message_type:\n            return None\n        try:\n            data = json.loads(msg[\"data\"])\n            logger.info(f\"Consuming an event from Redis {data}\")\n            return self.Model(**data)\n        except Exception as e:\n            logger.error(f\"Failed to parse event result from Redis {msg} {e}\")\n\n    def _get_pubsub_channel(\n        self, connection: redis.Redis | redis.AsyncRedis, channel_key: str\n    ) -> tuple[PubSub | AsyncPubSub, str]:\n        full_channel_name = f\"{self.event_bus_name}/{channel_key}\"\n        pubsub = connection.pubsub()\n        return pubsub, full_channel_name\n\n\nclass RedisEventBus(BaseRedisEventBus[M], ABC):\n    Model: type[M]\n\n    @property\n    def connection(self) -> redis.Redis:\n        return redis.get_redis()\n\n    def publish_event(self, event: M, channel_key: str):\n        message, full_channel_name = self._serialize_message(event, channel_key)\n        self.connection.publish(full_channel_name, message)\n\n    def listen_events(self, channel_key: str) -> Generator[M, None, None]:\n        pubsub, full_channel_name = self._get_pubsub_channel(\n            self.connection, channel_key\n        )\n        assert isinstance(pubsub, PubSub)\n\n        if \"*\" in channel_key:\n            pubsub.psubscribe(full_channel_name)\n        else:\n            pubsub.subscribe(full_channel_name)\n\n        for message in pubsub.listen():\n            if event := self._deserialize_message(message, channel_key):\n                yield event\n\n\nclass AsyncRedisEventBus(BaseRedisEventBus[M], ABC):\n    Model: type[M]\n\n    @property\n    async def connection(self) -> redis.AsyncRedis:\n        return await redis.get_redis_async()\n\n    async def publish_event(self, event: M, channel_key: str):\n        message, full_channel_name = self._serialize_message(event, channel_key)\n        connection = await self.connection\n        await connection.publish(full_channel_name, message)\n\n    async def listen_events(self, channel_key: str) -> AsyncGenerator[M, None]:\n        pubsub, full_channel_name = self._get_pubsub_channel(\n            await self.connection, channel_key\n        )\n        assert isinstance(pubsub, AsyncPubSub)\n\n        if \"*\" in channel_key:\n            await pubsub.psubscribe(full_channel_name)\n        else:\n            await pubsub.subscribe(full_channel_name)\n\n        async for message in pubsub.listen():\n            if event := self._deserialize_message(message, channel_key):\n                yield event\n\n    async def wait_for_event(\n        self, channel_key: str, timeout: Optional[float] = None\n    ) -> M | None:\n        try:\n            return await asyncio.wait_for(\n                anext(aiter(self.listen_events(channel_key))), timeout\n            )\n        except TimeoutError:\n            return None\n",
    "children": [
        {
            "type": "import_statement",
            "label": "import asyncio",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "asyncio",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "asyncio",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import json",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "json",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "json",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import logging",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "logging",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "logging",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from abc import ABC, abstractmethod",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "abc",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "abc",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "ABC",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "ABC",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "abstractmethod",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "abstractmethod",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from datetime import datetime",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "datetime",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "datetime",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "datetime",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "datetime",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from typing import Any, AsyncGenerator, Generator, Generic, Optional, TypeVar",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "typing",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "typing",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Any",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Any",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "AsyncGenerator",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "AsyncGenerator",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Generator",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Generator",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Generic",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Generic",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Optional",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Optional",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "TypeVar",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "TypeVar",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from pydantic import BaseModel",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "pydantic",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "pydantic",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "BaseModel",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "BaseModel",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from redis.asyncio.client import PubSub as AsyncPubSub",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "redis.asyncio.client",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "redis",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "asyncio",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "client",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "aliased_import",
                    "label": "PubSub as AsyncPubSub",
                    "children": [
                        {
                            "type": "dotted_name",
                            "label": "PubSub",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "PubSub",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "identifier",
                            "label": "AsyncPubSub",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from redis.client import PubSub",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "redis.client",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "redis",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "client",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "PubSub",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "PubSub",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.data import redis",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.data",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "data",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "redis",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "redis",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "logger = logging.getLogger(__name__)",
            "children": [
                {
                    "type": "assignment",
                    "label": "logger = logging.getLogger(__name__)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "logger",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "logging.getLogger(__name__)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "logging.getLogger",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "logging",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "getLogger",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(__name__)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "__name__",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "label": "class DateTimeEncoder(json.JSONEncoder):\n    def default(self, o):\n        if isinstance(o, datetime):\n            return o.isoformat()\n        return super().default(o)",
            "children": [
                {
                    "type": "identifier",
                    "label": "DateTimeEncoder",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "(json.JSONEncoder)",
                    "children": [
                        {
                            "type": "attribute",
                            "label": "json.JSONEncoder",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "json",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "JSONEncoder",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "def default(self, o):\n        if isinstance(o, datetime):\n            return o.isoformat()\n        return super().default(o)",
                    "children": [
                        {
                            "type": "function_definition",
                            "label": "def default(self, o):\n        if isinstance(o, datetime):\n            return o.isoformat()\n        return super().default(o)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "default",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, o)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "o",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "if isinstance(o, datetime):\n            return o.isoformat()\n        return super().default(o)",
                                    "children": [
                                        {
                                            "type": "if_statement",
                                            "label": "if isinstance(o, datetime):\n            return o.isoformat()",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "isinstance(o, datetime)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "isinstance",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(o, datetime)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "o",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "datetime",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "return o.isoformat()",
                                                    "children": [
                                                        {
                                                            "type": "return_statement",
                                                            "label": "return o.isoformat()",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "o.isoformat()",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "o.isoformat",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "o",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "isoformat",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "label": "return super().default(o)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "super().default(o)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "super().default",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "super()",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "super",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "default",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(o)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "o",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "M = TypeVar(\"M\", bound=BaseModel)",
            "children": [
                {
                    "type": "assignment",
                    "label": "M = TypeVar(\"M\", bound=BaseModel)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "M",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "TypeVar(\"M\", bound=BaseModel)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "TypeVar",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\"M\", bound=BaseModel)",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"M\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "M",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "bound=BaseModel",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "bound",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "BaseModel",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "label": "class BaseRedisEventBus(Generic[M], ABC):\n    Model: type[M]\n\n    @property\n    @abstractmethod\n    def event_bus_name(self) -> str:\n        pass\n\n    def _serialize_message(self, item: M, channel_key: str) -> tuple[str, str]:\n        message = json.dumps(item.model_dump(), cls=DateTimeEncoder)\n        channel_name = f\"{self.event_bus_name}/{channel_key}\"\n        logger.info(f\"[{channel_name}] Publishing an event to Redis {message}\")\n        return message, channel_name\n\n    def _deserialize_message(self, msg: Any, channel_key: str) -> M | None:\n        message_type = \"pmessage\" if \"*\" in channel_key else \"message\"\n        if msg[\"type\"] != message_type:\n            return None\n        try:\n            data = json.loads(msg[\"data\"])\n            logger.info(f\"Consuming an event from Redis {data}\")\n            return self.Model(**data)\n        except Exception as e:\n            logger.error(f\"Failed to parse event result from Redis {msg} {e}\")\n\n    def _get_pubsub_channel(\n        self, connection: redis.Redis | redis.AsyncRedis, channel_key: str\n    ) -> tuple[PubSub | AsyncPubSub, str]:\n        full_channel_name = f\"{self.event_bus_name}/{channel_key}\"\n        pubsub = connection.pubsub()\n        return pubsub, full_channel_name",
            "children": [
                {
                    "type": "identifier",
                    "label": "BaseRedisEventBus",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "(Generic[M], ABC)",
                    "children": [
                        {
                            "type": "subscript",
                            "label": "Generic[M]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "Generic",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "M",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "identifier",
                            "label": "ABC",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "Model: type[M]\n\n    @property\n    @abstractmethod\n    def event_bus_name(self) -> str:\n        pass\n\n    def _serialize_message(self, item: M, channel_key: str) -> tuple[str, str]:\n        message = json.dumps(item.model_dump(), cls=DateTimeEncoder)\n        channel_name = f\"{self.event_bus_name}/{channel_key}\"\n        logger.info(f\"[{channel_name}] Publishing an event to Redis {message}\")\n        return message, channel_name\n\n    def _deserialize_message(self, msg: Any, channel_key: str) -> M | None:\n        message_type = \"pmessage\" if \"*\" in channel_key else \"message\"\n        if msg[\"type\"] != message_type:\n            return None\n        try:\n            data = json.loads(msg[\"data\"])\n            logger.info(f\"Consuming an event from Redis {data}\")\n            return self.Model(**data)\n        except Exception as e:\n            logger.error(f\"Failed to parse event result from Redis {msg} {e}\")\n\n    def _get_pubsub_channel(\n        self, connection: redis.Redis | redis.AsyncRedis, channel_key: str\n    ) -> tuple[PubSub | AsyncPubSub, str]:\n        full_channel_name = f\"{self.event_bus_name}/{channel_key}\"\n        pubsub = connection.pubsub()\n        return pubsub, full_channel_name",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "Model: type[M]",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "Model: type[M]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "Model",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "type[M]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "type[M]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "type",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[M]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "M",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "M",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "decorated_definition",
                            "label": "@property\n    @abstractmethod\n    def event_bus_name(self) -> str:\n        pass",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@property",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "property",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "decorator",
                                    "label": "@abstractmethod",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "abstractmethod",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "function_definition",
                                    "label": "def event_bus_name(self) -> str:\n        pass",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "event_bus_name",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(self)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "self",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "pass",
                                            "children": [
                                                {
                                                    "type": "pass_statement",
                                                    "label": "pass",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def _serialize_message(self, item: M, channel_key: str) -> tuple[str, str]:\n        message = json.dumps(item.model_dump(), cls=DateTimeEncoder)\n        channel_name = f\"{self.event_bus_name}/{channel_key}\"\n        logger.info(f\"[{channel_name}] Publishing an event to Redis {message}\")\n        return message, channel_name",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "_serialize_message",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, item: M, channel_key: str)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "item: M",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "item",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "M",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "M",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "channel_key: str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "channel_key",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "str",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "label": "tuple[str, str]",
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "tuple[str, str]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "tuple",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[str, str]",
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "message = json.dumps(item.model_dump(), cls=DateTimeEncoder)\n        channel_name = f\"{self.event_bus_name}/{channel_key}\"\n        logger.info(f\"[{channel_name}] Publishing an event to Redis {message}\")\n        return message, channel_name",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "message = json.dumps(item.model_dump(), cls=DateTimeEncoder)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "message = json.dumps(item.model_dump(), cls=DateTimeEncoder)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "message",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "json.dumps(item.model_dump(), cls=DateTimeEncoder)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "json.dumps",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "json",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "dumps",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(item.model_dump(), cls=DateTimeEncoder)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "item.model_dump()",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "item.model_dump",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "item",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "model_dump",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "()",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "cls=DateTimeEncoder",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "cls",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "DateTimeEncoder",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "channel_name = f\"{self.event_bus_name}/{channel_key}\"",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "channel_name = f\"{self.event_bus_name}/{channel_key}\"",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "channel_name",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "label": "f\"{self.event_bus_name}/{channel_key}\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "f\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "interpolation",
                                                                    "label": "{self.event_bus_name}",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "self.event_bus_name",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "self",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "event_bus_name",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "/",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "interpolation",
                                                                    "label": "{channel_key}",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "channel_key",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "logger.info(f\"[{channel_name}] Publishing an event to Redis {message}\")",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "logger.info(f\"[{channel_name}] Publishing an event to Redis {message}\")",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "logger.info",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "logger",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "info",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(f\"[{channel_name}] Publishing an event to Redis {message}\")",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "f\"[{channel_name}] Publishing an event to Redis {message}\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "f\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "[",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{channel_name}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "channel_name",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "] Publishing an event to Redis ",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{message}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "message",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "label": "return message, channel_name",
                                            "children": [
                                                {
                                                    "type": "expression_list",
                                                    "label": "message, channel_name",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "message",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "channel_name",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def _deserialize_message(self, msg: Any, channel_key: str) -> M | None:\n        message_type = \"pmessage\" if \"*\" in channel_key else \"message\"\n        if msg[\"type\"] != message_type:\n            return None\n        try:\n            data = json.loads(msg[\"data\"])\n            logger.info(f\"Consuming an event from Redis {data}\")\n            return self.Model(**data)\n        except Exception as e:\n            logger.error(f\"Failed to parse event result from Redis {msg} {e}\")",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "_deserialize_message",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, msg: Any, channel_key: str)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "msg: Any",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "msg",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "Any",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Any",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "channel_key: str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "channel_key",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "str",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "label": "M | None",
                                    "children": [
                                        {
                                            "type": "binary_operator",
                                            "label": "M | None",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "M",
                                                    "children": []
                                                },
                                                {
                                                    "type": "none",
                                                    "label": "None",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "message_type = \"pmessage\" if \"*\" in channel_key else \"message\"\n        if msg[\"type\"] != message_type:\n            return None\n        try:\n            data = json.loads(msg[\"data\"])\n            logger.info(f\"Consuming an event from Redis {data}\")\n            return self.Model(**data)\n        except Exception as e:\n            logger.error(f\"Failed to parse event result from Redis {msg} {e}\")",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "message_type = \"pmessage\" if \"*\" in channel_key else \"message\"",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "message_type = \"pmessage\" if \"*\" in channel_key else \"message\"",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "message_type",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "conditional_expression",
                                                            "label": "\"pmessage\" if \"*\" in channel_key else \"message\"",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"pmessage\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "pmessage",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "comparison_operator",
                                                                    "label": "\"*\" in channel_key",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"*\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "*",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "channel_key",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"message\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "message",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if msg[\"type\"] != message_type:\n            return None",
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "label": "msg[\"type\"] != message_type",
                                                    "children": [
                                                        {
                                                            "type": "subscript",
                                                            "label": "msg[\"type\"]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "msg",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"type\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "type",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "message_type",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "return None",
                                                    "children": [
                                                        {
                                                            "type": "return_statement",
                                                            "label": "return None",
                                                            "children": [
                                                                {
                                                                    "type": "none",
                                                                    "label": "None",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "try_statement",
                                            "label": "try:\n            data = json.loads(msg[\"data\"])\n            logger.info(f\"Consuming an event from Redis {data}\")\n            return self.Model(**data)\n        except Exception as e:\n            logger.error(f\"Failed to parse event result from Redis {msg} {e}\")",
                                            "children": [
                                                {
                                                    "type": "block",
                                                    "label": "data = json.loads(msg[\"data\"])\n            logger.info(f\"Consuming an event from Redis {data}\")\n            return self.Model(**data)",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "data = json.loads(msg[\"data\"])",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "data = json.loads(msg[\"data\"])",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "data",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "label": "json.loads(msg[\"data\"])",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "json.loads",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "json",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "loads",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(msg[\"data\"])",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "subscript",
                                                                                            "label": "msg[\"data\"]",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "msg",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"data\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "data",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "logger.info(f\"Consuming an event from Redis {data}\")",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "logger.info(f\"Consuming an event from Redis {data}\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "logger.info",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "logger",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "info",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(f\"Consuming an event from Redis {data}\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "f\"Consuming an event from Redis {data}\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "f\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Consuming an event from Redis ",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "interpolation",
                                                                                            "label": "{data}",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "data",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "return_statement",
                                                            "label": "return self.Model(**data)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "self.Model(**data)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "self.Model",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "self",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Model",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(**data)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "dictionary_splat",
                                                                                    "label": "**data",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "data",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "except_clause",
                                                    "label": "except Exception as e:\n            logger.error(f\"Failed to parse event result from Redis {msg} {e}\")",
                                                    "children": [
                                                        {
                                                            "type": "as_pattern",
                                                            "label": "Exception as e",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Exception",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "as_pattern_target",
                                                                    "label": "e",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "e",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "logger.error(f\"Failed to parse event result from Redis {msg} {e}\")",
                                                            "children": [
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "logger.error(f\"Failed to parse event result from Redis {msg} {e}\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "logger.error(f\"Failed to parse event result from Redis {msg} {e}\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "logger.error",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "logger",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "error",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(f\"Failed to parse event result from Redis {msg} {e}\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "f\"Failed to parse event result from Redis {msg} {e}\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "f\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "Failed to parse event result from Redis ",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{msg}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "msg",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": " ",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{e}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "e",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def _get_pubsub_channel(\n        self, connection: redis.Redis | redis.AsyncRedis, channel_key: str\n    ) -> tuple[PubSub | AsyncPubSub, str]:\n        full_channel_name = f\"{self.event_bus_name}/{channel_key}\"\n        pubsub = connection.pubsub()\n        return pubsub, full_channel_name",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "_get_pubsub_channel",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(\n        self, connection: redis.Redis | redis.AsyncRedis, channel_key: str\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "connection: redis.Redis | redis.AsyncRedis",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "connection",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "redis.Redis | redis.AsyncRedis",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "label": "redis.Redis | redis.AsyncRedis",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "redis.Redis",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "redis",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "Redis",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "redis.AsyncRedis",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "redis",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "AsyncRedis",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "channel_key: str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "channel_key",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "str",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "label": "tuple[PubSub | AsyncPubSub, str]",
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "tuple[PubSub | AsyncPubSub, str]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "tuple",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[PubSub | AsyncPubSub, str]",
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "PubSub | AsyncPubSub",
                                                            "children": [
                                                                {
                                                                    "type": "binary_operator",
                                                                    "label": "PubSub | AsyncPubSub",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "PubSub",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "AsyncPubSub",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "full_channel_name = f\"{self.event_bus_name}/{channel_key}\"\n        pubsub = connection.pubsub()\n        return pubsub, full_channel_name",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "full_channel_name = f\"{self.event_bus_name}/{channel_key}\"",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "full_channel_name = f\"{self.event_bus_name}/{channel_key}\"",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "full_channel_name",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "label": "f\"{self.event_bus_name}/{channel_key}\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "f\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "interpolation",
                                                                    "label": "{self.event_bus_name}",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "self.event_bus_name",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "self",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "event_bus_name",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "/",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "interpolation",
                                                                    "label": "{channel_key}",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "channel_key",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "pubsub = connection.pubsub()",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "pubsub = connection.pubsub()",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "pubsub",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "connection.pubsub()",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "connection.pubsub",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "connection",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "pubsub",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "label": "return pubsub, full_channel_name",
                                            "children": [
                                                {
                                                    "type": "expression_list",
                                                    "label": "pubsub, full_channel_name",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "pubsub",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "full_channel_name",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "label": "class RedisEventBus(BaseRedisEventBus[M], ABC):\n    Model: type[M]\n\n    @property\n    def connection(self) -> redis.Redis:\n        return redis.get_redis()\n\n    def publish_event(self, event: M, channel_key: str):\n        message, full_channel_name = self._serialize_message(event, channel_key)\n        self.connection.publish(full_channel_name, message)\n\n    def listen_events(self, channel_key: str) -> Generator[M, None, None]:\n        pubsub, full_channel_name = self._get_pubsub_channel(\n            self.connection, channel_key\n        )\n        assert isinstance(pubsub, PubSub)\n\n        if \"*\" in channel_key:\n            pubsub.psubscribe(full_channel_name)\n        else:\n            pubsub.subscribe(full_channel_name)\n\n        for message in pubsub.listen():\n            if event := self._deserialize_message(message, channel_key):\n                yield event",
            "children": [
                {
                    "type": "identifier",
                    "label": "RedisEventBus",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "(BaseRedisEventBus[M], ABC)",
                    "children": [
                        {
                            "type": "subscript",
                            "label": "BaseRedisEventBus[M]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "BaseRedisEventBus",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "M",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "identifier",
                            "label": "ABC",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "Model: type[M]\n\n    @property\n    def connection(self) -> redis.Redis:\n        return redis.get_redis()\n\n    def publish_event(self, event: M, channel_key: str):\n        message, full_channel_name = self._serialize_message(event, channel_key)\n        self.connection.publish(full_channel_name, message)\n\n    def listen_events(self, channel_key: str) -> Generator[M, None, None]:\n        pubsub, full_channel_name = self._get_pubsub_channel(\n            self.connection, channel_key\n        )\n        assert isinstance(pubsub, PubSub)\n\n        if \"*\" in channel_key:\n            pubsub.psubscribe(full_channel_name)\n        else:\n            pubsub.subscribe(full_channel_name)\n\n        for message in pubsub.listen():\n            if event := self._deserialize_message(message, channel_key):\n                yield event",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "Model: type[M]",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "Model: type[M]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "Model",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "type[M]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "type[M]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "type",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[M]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "M",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "M",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "decorated_definition",
                            "label": "@property\n    def connection(self) -> redis.Redis:\n        return redis.get_redis()",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@property",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "property",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "function_definition",
                                    "label": "def connection(self) -> redis.Redis:\n        return redis.get_redis()",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "connection",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(self)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "self",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "redis.Redis",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "redis.Redis",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "redis",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "Redis",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "return redis.get_redis()",
                                            "children": [
                                                {
                                                    "type": "return_statement",
                                                    "label": "return redis.get_redis()",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "redis.get_redis()",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "redis.get_redis",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "redis",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "get_redis",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def publish_event(self, event: M, channel_key: str):\n        message, full_channel_name = self._serialize_message(event, channel_key)\n        self.connection.publish(full_channel_name, message)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "publish_event",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, event: M, channel_key: str)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "event: M",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "event",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "M",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "M",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "channel_key: str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "channel_key",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "str",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "message, full_channel_name = self._serialize_message(event, channel_key)\n        self.connection.publish(full_channel_name, message)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "message, full_channel_name = self._serialize_message(event, channel_key)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "message, full_channel_name = self._serialize_message(event, channel_key)",
                                                    "children": [
                                                        {
                                                            "type": "pattern_list",
                                                            "label": "message, full_channel_name",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "message",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "full_channel_name",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "self._serialize_message(event, channel_key)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "self._serialize_message",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "self",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "_serialize_message",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(event, channel_key)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "event",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "channel_key",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "self.connection.publish(full_channel_name, message)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "self.connection.publish(full_channel_name, message)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.connection.publish",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "self.connection",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "self",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "connection",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "publish",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(full_channel_name, message)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "full_channel_name",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "message",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def listen_events(self, channel_key: str) -> Generator[M, None, None]:\n        pubsub, full_channel_name = self._get_pubsub_channel(\n            self.connection, channel_key\n        )\n        assert isinstance(pubsub, PubSub)\n\n        if \"*\" in channel_key:\n            pubsub.psubscribe(full_channel_name)\n        else:\n            pubsub.subscribe(full_channel_name)\n\n        for message in pubsub.listen():\n            if event := self._deserialize_message(message, channel_key):\n                yield event",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "listen_events",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, channel_key: str)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "channel_key: str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "channel_key",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "str",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "label": "Generator[M, None, None]",
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "Generator[M, None, None]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "Generator",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[M, None, None]",
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "M",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "M",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "None",
                                                            "children": [
                                                                {
                                                                    "type": "none",
                                                                    "label": "None",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "None",
                                                            "children": [
                                                                {
                                                                    "type": "none",
                                                                    "label": "None",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "pubsub, full_channel_name = self._get_pubsub_channel(\n            self.connection, channel_key\n        )\n        assert isinstance(pubsub, PubSub)\n\n        if \"*\" in channel_key:\n            pubsub.psubscribe(full_channel_name)\n        else:\n            pubsub.subscribe(full_channel_name)\n\n        for message in pubsub.listen():\n            if event := self._deserialize_message(message, channel_key):\n                yield event",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "pubsub, full_channel_name = self._get_pubsub_channel(\n            self.connection, channel_key\n        )",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "pubsub, full_channel_name = self._get_pubsub_channel(\n            self.connection, channel_key\n        )",
                                                    "children": [
                                                        {
                                                            "type": "pattern_list",
                                                            "label": "pubsub, full_channel_name",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "pubsub",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "full_channel_name",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "self._get_pubsub_channel(\n            self.connection, channel_key\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "self._get_pubsub_channel",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "self",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "_get_pubsub_channel",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n            self.connection, channel_key\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "self.connection",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "self",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "connection",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "channel_key",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assert_statement",
                                            "label": "assert isinstance(pubsub, PubSub)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "isinstance(pubsub, PubSub)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "isinstance",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(pubsub, PubSub)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "pubsub",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "PubSub",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if \"*\" in channel_key:\n            pubsub.psubscribe(full_channel_name)\n        else:\n            pubsub.subscribe(full_channel_name)",
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "label": "\"*\" in channel_key",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"*\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "*",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "channel_key",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "pubsub.psubscribe(full_channel_name)",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "pubsub.psubscribe(full_channel_name)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "pubsub.psubscribe(full_channel_name)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "pubsub.psubscribe",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "pubsub",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "psubscribe",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(full_channel_name)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "full_channel_name",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "else_clause",
                                                    "label": "else:\n            pubsub.subscribe(full_channel_name)",
                                                    "children": [
                                                        {
                                                            "type": "block",
                                                            "label": "pubsub.subscribe(full_channel_name)",
                                                            "children": [
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "pubsub.subscribe(full_channel_name)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "pubsub.subscribe(full_channel_name)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "pubsub.subscribe",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "pubsub",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "subscribe",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(full_channel_name)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "full_channel_name",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "for_statement",
                                            "label": "for message in pubsub.listen():\n            if event := self._deserialize_message(message, channel_key):\n                yield event",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "message",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "pubsub.listen()",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "pubsub.listen",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "pubsub",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "listen",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "()",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "if event := self._deserialize_message(message, channel_key):\n                yield event",
                                                    "children": [
                                                        {
                                                            "type": "if_statement",
                                                            "label": "if event := self._deserialize_message(message, channel_key):\n                yield event",
                                                            "children": [
                                                                {
                                                                    "type": "named_expression",
                                                                    "label": "event := self._deserialize_message(message, channel_key)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "event",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "label": "self._deserialize_message(message, channel_key)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "self._deserialize_message",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "self",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "_deserialize_message",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(message, channel_key)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "message",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "channel_key",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": "yield event",
                                                                    "children": [
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "label": "yield event",
                                                                            "children": [
                                                                                {
                                                                                    "type": "yield",
                                                                                    "label": "yield event",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "event",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "label": "class AsyncRedisEventBus(BaseRedisEventBus[M], ABC):\n    Model: type[M]\n\n    @property\n    async def connection(self) -> redis.AsyncRedis:\n        return await redis.get_redis_async()\n\n    async def publish_event(self, event: M, channel_key: str):\n        message, full_channel_name = self._serialize_message(event, channel_key)\n        connection = await self.connection\n        await connection.publish(full_channel_name, message)\n\n    async def listen_events(self, channel_key: str) -> AsyncGenerator[M, None]:\n        pubsub, full_channel_name = self._get_pubsub_channel(\n            await self.connection, channel_key\n        )\n        assert isinstance(pubsub, AsyncPubSub)\n\n        if \"*\" in channel_key:\n            await pubsub.psubscribe(full_channel_name)\n        else:\n            await pubsub.subscribe(full_channel_name)\n\n        async for message in pubsub.listen():\n            if event := self._deserialize_message(message, channel_key):\n                yield event\n\n    async def wait_for_event(\n        self, channel_key: str, timeout: Optional[float] = None\n    ) -> M | None:\n        try:\n            return await asyncio.wait_for(\n                anext(aiter(self.listen_events(channel_key))), timeout\n            )\n        except TimeoutError:\n            return None",
            "children": [
                {
                    "type": "identifier",
                    "label": "AsyncRedisEventBus",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "(BaseRedisEventBus[M], ABC)",
                    "children": [
                        {
                            "type": "subscript",
                            "label": "BaseRedisEventBus[M]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "BaseRedisEventBus",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "M",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "identifier",
                            "label": "ABC",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "Model: type[M]\n\n    @property\n    async def connection(self) -> redis.AsyncRedis:\n        return await redis.get_redis_async()\n\n    async def publish_event(self, event: M, channel_key: str):\n        message, full_channel_name = self._serialize_message(event, channel_key)\n        connection = await self.connection\n        await connection.publish(full_channel_name, message)\n\n    async def listen_events(self, channel_key: str) -> AsyncGenerator[M, None]:\n        pubsub, full_channel_name = self._get_pubsub_channel(\n            await self.connection, channel_key\n        )\n        assert isinstance(pubsub, AsyncPubSub)\n\n        if \"*\" in channel_key:\n            await pubsub.psubscribe(full_channel_name)\n        else:\n            await pubsub.subscribe(full_channel_name)\n\n        async for message in pubsub.listen():\n            if event := self._deserialize_message(message, channel_key):\n                yield event\n\n    async def wait_for_event(\n        self, channel_key: str, timeout: Optional[float] = None\n    ) -> M | None:\n        try:\n            return await asyncio.wait_for(\n                anext(aiter(self.listen_events(channel_key))), timeout\n            )\n        except TimeoutError:\n            return None",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "Model: type[M]",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "Model: type[M]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "Model",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "type[M]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "type[M]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "type",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[M]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "M",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "M",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "decorated_definition",
                            "label": "@property\n    async def connection(self) -> redis.AsyncRedis:\n        return await redis.get_redis_async()",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@property",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "property",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "function_definition",
                                    "label": "async def connection(self) -> redis.AsyncRedis:\n        return await redis.get_redis_async()",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "connection",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(self)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "self",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "redis.AsyncRedis",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "redis.AsyncRedis",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "redis",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "AsyncRedis",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "return await redis.get_redis_async()",
                                            "children": [
                                                {
                                                    "type": "return_statement",
                                                    "label": "return await redis.get_redis_async()",
                                                    "children": [
                                                        {
                                                            "type": "await",
                                                            "label": "await redis.get_redis_async()",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "redis.get_redis_async()",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "redis.get_redis_async",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "redis",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "get_redis_async",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "async def publish_event(self, event: M, channel_key: str):\n        message, full_channel_name = self._serialize_message(event, channel_key)\n        connection = await self.connection\n        await connection.publish(full_channel_name, message)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "publish_event",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, event: M, channel_key: str)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "event: M",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "event",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "M",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "M",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "channel_key: str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "channel_key",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "str",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "message, full_channel_name = self._serialize_message(event, channel_key)\n        connection = await self.connection\n        await connection.publish(full_channel_name, message)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "message, full_channel_name = self._serialize_message(event, channel_key)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "message, full_channel_name = self._serialize_message(event, channel_key)",
                                                    "children": [
                                                        {
                                                            "type": "pattern_list",
                                                            "label": "message, full_channel_name",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "message",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "full_channel_name",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "self._serialize_message(event, channel_key)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "self._serialize_message",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "self",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "_serialize_message",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(event, channel_key)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "event",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "channel_key",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "connection = await self.connection",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "connection = await self.connection",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "connection",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "await",
                                                            "label": "await self.connection",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "self.connection",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "self",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "connection",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "await connection.publish(full_channel_name, message)",
                                            "children": [
                                                {
                                                    "type": "await",
                                                    "label": "await connection.publish(full_channel_name, message)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "connection.publish(full_channel_name, message)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "connection.publish",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "connection",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "publish",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(full_channel_name, message)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "full_channel_name",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "message",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "async def listen_events(self, channel_key: str) -> AsyncGenerator[M, None]:\n        pubsub, full_channel_name = self._get_pubsub_channel(\n            await self.connection, channel_key\n        )\n        assert isinstance(pubsub, AsyncPubSub)\n\n        if \"*\" in channel_key:\n            await pubsub.psubscribe(full_channel_name)\n        else:\n            await pubsub.subscribe(full_channel_name)\n\n        async for message in pubsub.listen():\n            if event := self._deserialize_message(message, channel_key):\n                yield event",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "listen_events",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, channel_key: str)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "channel_key: str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "channel_key",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "str",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "label": "AsyncGenerator[M, None]",
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "AsyncGenerator[M, None]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "AsyncGenerator",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[M, None]",
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "M",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "M",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "None",
                                                            "children": [
                                                                {
                                                                    "type": "none",
                                                                    "label": "None",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "pubsub, full_channel_name = self._get_pubsub_channel(\n            await self.connection, channel_key\n        )\n        assert isinstance(pubsub, AsyncPubSub)\n\n        if \"*\" in channel_key:\n            await pubsub.psubscribe(full_channel_name)\n        else:\n            await pubsub.subscribe(full_channel_name)\n\n        async for message in pubsub.listen():\n            if event := self._deserialize_message(message, channel_key):\n                yield event",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "pubsub, full_channel_name = self._get_pubsub_channel(\n            await self.connection, channel_key\n        )",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "pubsub, full_channel_name = self._get_pubsub_channel(\n            await self.connection, channel_key\n        )",
                                                    "children": [
                                                        {
                                                            "type": "pattern_list",
                                                            "label": "pubsub, full_channel_name",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "pubsub",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "full_channel_name",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "self._get_pubsub_channel(\n            await self.connection, channel_key\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "self._get_pubsub_channel",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "self",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "_get_pubsub_channel",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n            await self.connection, channel_key\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "await",
                                                                            "label": "await self.connection",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "self.connection",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "self",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "connection",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "channel_key",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assert_statement",
                                            "label": "assert isinstance(pubsub, AsyncPubSub)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "isinstance(pubsub, AsyncPubSub)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "isinstance",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(pubsub, AsyncPubSub)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "pubsub",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "AsyncPubSub",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if \"*\" in channel_key:\n            await pubsub.psubscribe(full_channel_name)\n        else:\n            await pubsub.subscribe(full_channel_name)",
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "label": "\"*\" in channel_key",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"*\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "*",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "channel_key",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "await pubsub.psubscribe(full_channel_name)",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "await pubsub.psubscribe(full_channel_name)",
                                                            "children": [
                                                                {
                                                                    "type": "await",
                                                                    "label": "await pubsub.psubscribe(full_channel_name)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "pubsub.psubscribe(full_channel_name)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "pubsub.psubscribe",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "pubsub",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "psubscribe",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(full_channel_name)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "full_channel_name",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "else_clause",
                                                    "label": "else:\n            await pubsub.subscribe(full_channel_name)",
                                                    "children": [
                                                        {
                                                            "type": "block",
                                                            "label": "await pubsub.subscribe(full_channel_name)",
                                                            "children": [
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "await pubsub.subscribe(full_channel_name)",
                                                                    "children": [
                                                                        {
                                                                            "type": "await",
                                                                            "label": "await pubsub.subscribe(full_channel_name)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "pubsub.subscribe(full_channel_name)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "pubsub.subscribe",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "pubsub",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "subscribe",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(full_channel_name)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "full_channel_name",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "for_statement",
                                            "label": "async for message in pubsub.listen():\n            if event := self._deserialize_message(message, channel_key):\n                yield event",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "message",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "pubsub.listen()",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "pubsub.listen",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "pubsub",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "listen",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "()",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "if event := self._deserialize_message(message, channel_key):\n                yield event",
                                                    "children": [
                                                        {
                                                            "type": "if_statement",
                                                            "label": "if event := self._deserialize_message(message, channel_key):\n                yield event",
                                                            "children": [
                                                                {
                                                                    "type": "named_expression",
                                                                    "label": "event := self._deserialize_message(message, channel_key)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "event",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "label": "self._deserialize_message(message, channel_key)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "self._deserialize_message",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "self",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "_deserialize_message",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(message, channel_key)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "message",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "channel_key",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": "yield event",
                                                                    "children": [
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "label": "yield event",
                                                                            "children": [
                                                                                {
                                                                                    "type": "yield",
                                                                                    "label": "yield event",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "event",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "async def wait_for_event(\n        self, channel_key: str, timeout: Optional[float] = None\n    ) -> M | None:\n        try:\n            return await asyncio.wait_for(\n                anext(aiter(self.listen_events(channel_key))), timeout\n            )\n        except TimeoutError:\n            return None",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "wait_for_event",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(\n        self, channel_key: str, timeout: Optional[float] = None\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "channel_key: str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "channel_key",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "str",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "typed_default_parameter",
                                            "label": "timeout: Optional[float] = None",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "timeout",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "Optional[float]",
                                                    "children": [
                                                        {
                                                            "type": "generic_type",
                                                            "label": "Optional[float]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Optional",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "type_parameter",
                                                                    "label": "[float]",
                                                                    "children": [
                                                                        {
                                                                            "type": "type",
                                                                            "label": "float",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "float",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "none",
                                                    "label": "None",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "label": "M | None",
                                    "children": [
                                        {
                                            "type": "binary_operator",
                                            "label": "M | None",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "M",
                                                    "children": []
                                                },
                                                {
                                                    "type": "none",
                                                    "label": "None",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "try:\n            return await asyncio.wait_for(\n                anext(aiter(self.listen_events(channel_key))), timeout\n            )\n        except TimeoutError:\n            return None",
                                    "children": [
                                        {
                                            "type": "try_statement",
                                            "label": "try:\n            return await asyncio.wait_for(\n                anext(aiter(self.listen_events(channel_key))), timeout\n            )\n        except TimeoutError:\n            return None",
                                            "children": [
                                                {
                                                    "type": "block",
                                                    "label": "return await asyncio.wait_for(\n                anext(aiter(self.listen_events(channel_key))), timeout\n            )",
                                                    "children": [
                                                        {
                                                            "type": "return_statement",
                                                            "label": "return await asyncio.wait_for(\n                anext(aiter(self.listen_events(channel_key))), timeout\n            )",
                                                            "children": [
                                                                {
                                                                    "type": "await",
                                                                    "label": "await asyncio.wait_for(\n                anext(aiter(self.listen_events(channel_key))), timeout\n            )",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "asyncio.wait_for(\n                anext(aiter(self.listen_events(channel_key))), timeout\n            )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "asyncio.wait_for",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "asyncio",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "wait_for",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(\n                anext(aiter(self.listen_events(channel_key))), timeout\n            )",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "anext(aiter(self.listen_events(channel_key)))",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "anext",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(aiter(self.listen_events(channel_key)))",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "call",
                                                                                                            "label": "aiter(self.listen_events(channel_key))",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "aiter",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "argument_list",
                                                                                                                    "label": "(self.listen_events(channel_key))",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "call",
                                                                                                                            "label": "self.listen_events(channel_key)",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "attribute",
                                                                                                                                    "label": "self.listen_events",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "self",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "listen_events",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "argument_list",
                                                                                                                                    "label": "(channel_key)",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "channel_key",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "timeout",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "except_clause",
                                                    "label": "except TimeoutError:\n            return None",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "TimeoutError",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "return None",
                                                            "children": [
                                                                {
                                                                    "type": "return_statement",
                                                                    "label": "return None",
                                                                    "children": [
                                                                        {
                                                                            "type": "none",
                                                                            "label": "None",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}