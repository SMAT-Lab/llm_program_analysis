{
    "type": "module",
    "label": "def get_highest_set_bit_position(number: int) -> int:\n    \"\"\"\n    Returns position of the highest set bit of a number.\n    Ref - https://graphics.stanford.edu/~seander/bithacks.html#IntegerLogObvious\n    >>> get_highest_set_bit_position(25)\n    5\n    >>> get_highest_set_bit_position(37)\n    6\n    >>> get_highest_set_bit_position(1)\n    1\n    >>> get_highest_set_bit_position(4)\n    3\n    >>> get_highest_set_bit_position(0)\n    0\n    >>> get_highest_set_bit_position(0.8)\n    Traceback (most recent call last):\n        ...\n    TypeError: Input value must be an 'int' type\n    \"\"\"\n    if not isinstance(number, int):\n        raise TypeError(\"Input value must be an 'int' type\")\n\n    position = 0\n    while number:\n        position += 1\n        number >>= 1\n\n    return position\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()\n",
    "start_token": 0,
    "end_token": 74,
    "children": [
        {
            "type": "function_definition",
            "label": "def get_highest_set_bit_position(number: int) -> int:\n    \"\"\"\n    Returns position of the highest set bit of a number.\n    Ref - https://graphics.stanford.edu/~seander/bithacks.html#IntegerLogObvious\n    >>> get_highest_set_bit_position(25)\n    5\n    >>> get_highest_set_bit_position(37)\n    6\n    >>> get_highest_set_bit_position(1)\n    1\n    >>> get_highest_set_bit_position(4)\n    3\n    >>> get_highest_set_bit_position(0)\n    0\n    >>> get_highest_set_bit_position(0.8)\n    Traceback (most recent call last):\n        ...\n    TypeError: Input value must be an 'int' type\n    \"\"\"\n    if not isinstance(number, int):\n        raise TypeError(\"Input value must be an 'int' type\")\n\n    position = 0\n    while number:\n        position += 1\n        number >>= 1\n\n    return position",
            "start_token": 0,
            "end_token": 54,
            "children": [
                {
                    "type": "identifier",
                    "label": "get_highest_set_bit_position",
                    "start_token": 1,
                    "end_token": 1,
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(number: int)",
                    "start_token": 2,
                    "end_token": 6,
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "number: int",
                            "start_token": 3,
                            "end_token": 5,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "number",
                                    "start_token": 3,
                                    "end_token": 3,
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "start_token": 5,
                                    "end_token": 5,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "start_token": 5,
                                            "end_token": 5,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "int",
                    "start_token": 9,
                    "end_token": 9,
                    "children": [
                        {
                            "type": "identifier",
                            "label": "int",
                            "start_token": 9,
                            "end_token": 9,
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    Returns position of the highest set bit of a number.\n    Ref - https://graphics.stanford.edu/~seander/bithacks.html#IntegerLogObvious\n    >>> get_highest_set_bit_position(25)\n    5\n    >>> get_highest_set_bit_position(37)\n    6\n    >>> get_highest_set_bit_position(1)\n    1\n    >>> get_highest_set_bit_position(4)\n    3\n    >>> get_highest_set_bit_position(0)\n    0\n    >>> get_highest_set_bit_position(0.8)\n    Traceback (most recent call last):\n        ...\n    TypeError: Input value must be an 'int' type\n    \"\"\"\n    if not isinstance(number, int):\n        raise TypeError(\"Input value must be an 'int' type\")\n\n    position = 0\n    while number:\n        position += 1\n        number >>= 1\n\n    return position",
                    "start_token": 12,
                    "end_token": 54,
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    Returns position of the highest set bit of a number.\n    Ref - https://graphics.stanford.edu/~seander/bithacks.html#IntegerLogObvious\n    >>> get_highest_set_bit_position(25)\n    5\n    >>> get_highest_set_bit_position(37)\n    6\n    >>> get_highest_set_bit_position(1)\n    1\n    >>> get_highest_set_bit_position(4)\n    3\n    >>> get_highest_set_bit_position(0)\n    0\n    >>> get_highest_set_bit_position(0.8)\n    Traceback (most recent call last):\n        ...\n    TypeError: Input value must be an 'int' type\n    \"\"\"",
                            "start_token": 12,
                            "end_token": 14,
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    Returns position of the highest set bit of a number.\n    Ref - https://graphics.stanford.edu/~seander/bithacks.html#IntegerLogObvious\n    >>> get_highest_set_bit_position(25)\n    5\n    >>> get_highest_set_bit_position(37)\n    6\n    >>> get_highest_set_bit_position(1)\n    1\n    >>> get_highest_set_bit_position(4)\n    3\n    >>> get_highest_set_bit_position(0)\n    0\n    >>> get_highest_set_bit_position(0.8)\n    Traceback (most recent call last):\n        ...\n    TypeError: Input value must be an 'int' type\n    \"\"\"",
                                    "start_token": 12,
                                    "end_token": 14,
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "start_token": 12,
                                            "end_token": 13,
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    Returns position of the highest set bit of a number.\n    Ref - https://graphics.stanford.edu/~seander/bithacks.html#IntegerLogObvious\n    >>> get_highest_set_bit_position(25)\n    5\n    >>> get_highest_set_bit_position(37)\n    6\n    >>> get_highest_set_bit_position(1)\n    1\n    >>> get_highest_set_bit_position(4)\n    3\n    >>> get_highest_set_bit_position(0)\n    0\n    >>> get_highest_set_bit_position(0.8)\n    Traceback (most recent call last):\n        ...\n    TypeError: Input value must be an 'int' type\n    ",
                                            "start_token": 13,
                                            "end_token": 13,
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "start_token": 13,
                                            "end_token": 14,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if not isinstance(number, int):\n        raise TypeError(\"Input value must be an 'int' type\")",
                            "start_token": 16,
                            "end_token": 30,
                            "children": [
                                {
                                    "type": "not_operator",
                                    "label": "not isinstance(number, int)",
                                    "start_token": 17,
                                    "end_token": 23,
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "isinstance(number, int)",
                                            "start_token": 18,
                                            "end_token": 23,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "isinstance",
                                                    "start_token": 18,
                                                    "end_token": 18,
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(number, int)",
                                                    "start_token": 19,
                                                    "end_token": 23,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "number",
                                                            "start_token": 20,
                                                            "end_token": 20,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "int",
                                                            "start_token": 22,
                                                            "end_token": 22,
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "raise TypeError(\"Input value must be an 'int' type\")",
                                    "start_token": 26,
                                    "end_token": 30,
                                    "children": [
                                        {
                                            "type": "raise_statement",
                                            "label": "raise TypeError(\"Input value must be an 'int' type\")",
                                            "start_token": 26,
                                            "end_token": 30,
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "TypeError(\"Input value must be an 'int' type\")",
                                                    "start_token": 27,
                                                    "end_token": 30,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "TypeError",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\"Input value must be an 'int' type\")",
                                                            "start_token": 28,
                                                            "end_token": 30,
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"Input value must be an 'int' type\"",
                                                                    "start_token": 29,
                                                                    "end_token": 29,
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "start_token": 29,
                                                                            "end_token": 29,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "Input value must be an 'int' type",
                                                                            "start_token": 29,
                                                                            "end_token": 29,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "start_token": 29,
                                                                            "end_token": 29,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "position = 0",
                            "start_token": 33,
                            "end_token": 35,
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "position = 0",
                                    "start_token": 33,
                                    "end_token": 35,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "position",
                                            "start_token": 33,
                                            "end_token": 33,
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "start_token": 35,
                                            "end_token": 35,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "while_statement",
                            "label": "while number:\n        position += 1\n        number >>= 1",
                            "start_token": 37,
                            "end_token": 50,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "number",
                                    "start_token": 38,
                                    "end_token": 38,
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "label": "position += 1\n        number >>= 1",
                                    "start_token": 41,
                                    "end_token": 50,
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "position += 1",
                                            "start_token": 41,
                                            "end_token": 44,
                                            "children": [
                                                {
                                                    "type": "augmented_assignment",
                                                    "label": "position += 1",
                                                    "start_token": 41,
                                                    "end_token": 44,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "position",
                                                            "start_token": 41,
                                                            "end_token": 41,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "label": "1",
                                                            "start_token": 44,
                                                            "end_token": 44,
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "number >>= 1",
                                            "start_token": 46,
                                            "end_token": 50,
                                            "children": [
                                                {
                                                    "type": "augmented_assignment",
                                                    "label": "number >>= 1",
                                                    "start_token": 46,
                                                    "end_token": 50,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "number",
                                                            "start_token": 46,
                                                            "end_token": 46,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "label": "1",
                                                            "start_token": 50,
                                                            "end_token": 50,
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return position",
                            "start_token": 53,
                            "end_token": 54,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "position",
                                    "start_token": 54,
                                    "end_token": 54,
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "if_statement",
            "label": "if __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
            "start_token": 58,
            "end_token": 73,
            "children": [
                {
                    "type": "comparison_operator",
                    "label": "__name__ == \"__main__\"",
                    "start_token": 59,
                    "end_token": 62,
                    "children": [
                        {
                            "type": "identifier",
                            "label": "__name__",
                            "start_token": 59,
                            "end_token": 59,
                            "children": []
                        },
                        {
                            "type": "string",
                            "label": "\"__main__\"",
                            "start_token": 62,
                            "end_token": 62,
                            "children": [
                                {
                                    "type": "string_start",
                                    "label": "\"",
                                    "start_token": 62,
                                    "end_token": 62,
                                    "children": []
                                },
                                {
                                    "type": "string_content",
                                    "label": "__main__",
                                    "start_token": 62,
                                    "end_token": 62,
                                    "children": []
                                },
                                {
                                    "type": "string_end",
                                    "label": "\"",
                                    "start_token": 62,
                                    "end_token": 62,
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "import doctest\n\n    doctest.testmod()",
                    "start_token": 65,
                    "end_token": 73,
                    "children": [
                        {
                            "type": "import_statement",
                            "label": "import doctest",
                            "start_token": 65,
                            "end_token": 66,
                            "children": [
                                {
                                    "type": "dotted_name",
                                    "label": "doctest",
                                    "start_token": 66,
                                    "end_token": 66,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "doctest",
                                            "start_token": 66,
                                            "end_token": 66,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "doctest.testmod()",
                            "start_token": 69,
                            "end_token": 73,
                            "children": [
                                {
                                    "type": "call",
                                    "label": "doctest.testmod()",
                                    "start_token": 69,
                                    "end_token": 73,
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "doctest.testmod",
                                            "start_token": 69,
                                            "end_token": 71,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "doctest",
                                                    "start_token": 69,
                                                    "end_token": 69,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "testmod",
                                                    "start_token": 71,
                                                    "end_token": 71,
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "()",
                                            "start_token": 72,
                                            "end_token": 73,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}