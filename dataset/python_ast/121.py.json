{
    "type": "module",
    "label": "import time\n\nfrom backend.util.decorator import error_logged, time_measured\n\n\n@time_measured\ndef example_function(a: int, b: int, c: int) -> int:\n    time.sleep(0.5)\n    return a + b + c\n\n\n@error_logged\ndef example_function_with_error(a: int, b: int, c: int) -> int:\n    raise ValueError(\"This is a test error\")\n\n\ndef test_timer_decorator():\n    info, res = example_function(1, 2, 3)\n    assert info.cpu_time >= 0\n    assert info.wall_time >= 0.4\n    assert res == 6\n\n\ndef test_error_decorator():\n    res = example_function_with_error(1, 2, 3)\n    assert res is None\n",
    "children": [
        {
            "type": "import_statement",
            "label": "import time",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "time",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "time",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.util.decorator import error_logged, time_measured",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.util.decorator",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "util",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "decorator",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "error_logged",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "error_logged",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "time_measured",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "time_measured",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@time_measured\ndef example_function(a: int, b: int, c: int) -> int:\n    time.sleep(0.5)\n    return a + b + c",
            "children": [
                {
                    "type": "decorator",
                    "label": "@time_measured",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "time_measured",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "def example_function(a: int, b: int, c: int) -> int:\n    time.sleep(0.5)\n    return a + b + c",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "example_function",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(a: int, b: int, c: int)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "a: int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "a",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "int",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "int",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "b: int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "b",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "int",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "int",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "c: int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "c",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "int",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "int",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "label": "int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "int",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "time.sleep(0.5)\n    return a + b + c",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "time.sleep(0.5)",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "time.sleep(0.5)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "time.sleep",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "time",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "sleep",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(0.5)",
                                                    "children": [
                                                        {
                                                            "type": "float",
                                                            "label": "0.5",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "return_statement",
                                    "label": "return a + b + c",
                                    "children": [
                                        {
                                            "type": "binary_operator",
                                            "label": "a + b + c",
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "label": "a + b",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "a",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "b",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "c",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@error_logged\ndef example_function_with_error(a: int, b: int, c: int) -> int:\n    raise ValueError(\"This is a test error\")",
            "children": [
                {
                    "type": "decorator",
                    "label": "@error_logged",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "error_logged",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "def example_function_with_error(a: int, b: int, c: int) -> int:\n    raise ValueError(\"This is a test error\")",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "example_function_with_error",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(a: int, b: int, c: int)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "a: int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "a",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "int",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "int",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "b: int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "b",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "int",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "int",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "c: int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "c",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "int",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "int",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "label": "int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "int",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "raise ValueError(\"This is a test error\")",
                            "children": [
                                {
                                    "type": "raise_statement",
                                    "label": "raise ValueError(\"This is a test error\")",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "ValueError(\"This is a test error\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "ValueError",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(\"This is a test error\")",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"This is a test error\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "This is a test error",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def test_timer_decorator():\n    info, res = example_function(1, 2, 3)\n    assert info.cpu_time >= 0\n    assert info.wall_time >= 0.4\n    assert res == 6",
            "children": [
                {
                    "type": "identifier",
                    "label": "test_timer_decorator",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "()",
                    "children": []
                },
                {
                    "type": "block",
                    "label": "info, res = example_function(1, 2, 3)\n    assert info.cpu_time >= 0\n    assert info.wall_time >= 0.4\n    assert res == 6",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "info, res = example_function(1, 2, 3)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "info, res = example_function(1, 2, 3)",
                                    "children": [
                                        {
                                            "type": "pattern_list",
                                            "label": "info, res",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "info",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "res",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "call",
                                            "label": "example_function(1, 2, 3)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "example_function",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(1, 2, 3)",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "label": "1",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "label": "2",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "label": "3",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assert_statement",
                            "label": "assert info.cpu_time >= 0",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "label": "info.cpu_time >= 0",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "info.cpu_time",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "info",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "cpu_time",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assert_statement",
                            "label": "assert info.wall_time >= 0.4",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "label": "info.wall_time >= 0.4",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "info.wall_time",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "info",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "wall_time",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "float",
                                            "label": "0.4",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assert_statement",
                            "label": "assert res == 6",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "label": "res == 6",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "res",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "6",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def test_error_decorator():\n    res = example_function_with_error(1, 2, 3)\n    assert res is None",
            "children": [
                {
                    "type": "identifier",
                    "label": "test_error_decorator",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "()",
                    "children": []
                },
                {
                    "type": "block",
                    "label": "res = example_function_with_error(1, 2, 3)\n    assert res is None",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "res = example_function_with_error(1, 2, 3)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "res = example_function_with_error(1, 2, 3)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "res",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "example_function_with_error(1, 2, 3)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "example_function_with_error",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(1, 2, 3)",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "label": "1",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "label": "2",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "label": "3",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assert_statement",
                            "label": "assert res is None",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "label": "res is None",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "res",
                                            "children": []
                                        },
                                        {
                                            "type": "none",
                                            "label": "None",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}