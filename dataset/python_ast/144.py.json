{
    "type": "module",
    "label": "from __future__ import annotations\n\nimport json\nimport logging\n\n\nclass JsonFileHandler(logging.FileHandler):\n    def format(self, record: logging.LogRecord) -> str:\n        record.json_data = json.loads(record.getMessage())\n        return json.dumps(getattr(record, \"json_data\"), ensure_ascii=False, indent=4)\n\n    def emit(self, record: logging.LogRecord) -> None:\n        with open(self.baseFilename, \"w\", encoding=\"utf-8\") as f:\n            f.write(self.format(record))\n",
    "children": [
        {
            "type": "future_import_statement",
            "label": "from __future__ import annotations",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "annotations",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "annotations",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import json",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "json",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "json",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import logging",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "logging",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "logging",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "label": "class JsonFileHandler(logging.FileHandler):\n    def format(self, record: logging.LogRecord) -> str:\n        record.json_data = json.loads(record.getMessage())\n        return json.dumps(getattr(record, \"json_data\"), ensure_ascii=False, indent=4)\n\n    def emit(self, record: logging.LogRecord) -> None:\n        with open(self.baseFilename, \"w\", encoding=\"utf-8\") as f:\n            f.write(self.format(record))",
            "children": [
                {
                    "type": "identifier",
                    "label": "JsonFileHandler",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "(logging.FileHandler)",
                    "children": [
                        {
                            "type": "attribute",
                            "label": "logging.FileHandler",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "logging",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "FileHandler",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "def format(self, record: logging.LogRecord) -> str:\n        record.json_data = json.loads(record.getMessage())\n        return json.dumps(getattr(record, \"json_data\"), ensure_ascii=False, indent=4)\n\n    def emit(self, record: logging.LogRecord) -> None:\n        with open(self.baseFilename, \"w\", encoding=\"utf-8\") as f:\n            f.write(self.format(record))",
                    "children": [
                        {
                            "type": "function_definition",
                            "label": "def format(self, record: logging.LogRecord) -> str:\n        record.json_data = json.loads(record.getMessage())\n        return json.dumps(getattr(record, \"json_data\"), ensure_ascii=False, indent=4)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "format",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, record: logging.LogRecord)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "record: logging.LogRecord",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "record",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "logging.LogRecord",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "logging.LogRecord",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "logging",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "LogRecord",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "record.json_data = json.loads(record.getMessage())\n        return json.dumps(getattr(record, \"json_data\"), ensure_ascii=False, indent=4)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "record.json_data = json.loads(record.getMessage())",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "record.json_data = json.loads(record.getMessage())",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "record.json_data",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "record",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "json_data",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "json.loads(record.getMessage())",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "json.loads",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "json",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "loads",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(record.getMessage())",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "record.getMessage()",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "record.getMessage",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "record",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "getMessage",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "()",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "label": "return json.dumps(getattr(record, \"json_data\"), ensure_ascii=False, indent=4)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "json.dumps(getattr(record, \"json_data\"), ensure_ascii=False, indent=4)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "json.dumps",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "json",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "dumps",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(getattr(record, \"json_data\"), ensure_ascii=False, indent=4)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "getattr(record, \"json_data\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "getattr",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(record, \"json_data\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "record",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"json_data\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "json_data",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "ensure_ascii=False",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "ensure_ascii",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "false",
                                                                            "label": "False",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "indent=4",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "indent",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "4",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def emit(self, record: logging.LogRecord) -> None:\n        with open(self.baseFilename, \"w\", encoding=\"utf-8\") as f:\n            f.write(self.format(record))",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "emit",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, record: logging.LogRecord)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "record: logging.LogRecord",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "record",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "logging.LogRecord",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "logging.LogRecord",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "logging",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "LogRecord",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "label": "None",
                                    "children": [
                                        {
                                            "type": "none",
                                            "label": "None",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "with open(self.baseFilename, \"w\", encoding=\"utf-8\") as f:\n            f.write(self.format(record))",
                                    "children": [
                                        {
                                            "type": "with_statement",
                                            "label": "with open(self.baseFilename, \"w\", encoding=\"utf-8\") as f:\n            f.write(self.format(record))",
                                            "children": [
                                                {
                                                    "type": "with_clause",
                                                    "label": "open(self.baseFilename, \"w\", encoding=\"utf-8\") as f",
                                                    "children": [
                                                        {
                                                            "type": "with_item",
                                                            "label": "open(self.baseFilename, \"w\", encoding=\"utf-8\") as f",
                                                            "children": [
                                                                {
                                                                    "type": "as_pattern",
                                                                    "label": "open(self.baseFilename, \"w\", encoding=\"utf-8\") as f",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "open(self.baseFilename, \"w\", encoding=\"utf-8\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "open",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(self.baseFilename, \"w\", encoding=\"utf-8\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "self.baseFilename",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "self",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "baseFilename",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"w\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "w",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "encoding=\"utf-8\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "encoding",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"utf-8\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "utf-8",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "as_pattern_target",
                                                                            "label": "f",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "f",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "f.write(self.format(record))",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "f.write(self.format(record))",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "f.write(self.format(record))",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "f.write",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "f",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "write",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(self.format(record))",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "self.format(record)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "self.format",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "self",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "format",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(record)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "record",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}