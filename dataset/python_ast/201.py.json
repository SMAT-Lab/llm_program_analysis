{
    "type": "module",
    "label": "from __future__ import annotations\n\nfrom abc import abstractmethod\nfrom math import pi\nfrom typing import Protocol\n\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\nclass FilterType(Protocol):\n    @abstractmethod\n    def process(self, sample: float) -> float:\n        \"\"\"\n        Calculate y[n]\n\n        >>> issubclass(FilterType, Protocol)\n        True\n        \"\"\"\n\n\ndef get_bounds(\n    fft_results: np.ndarray, samplerate: int\n) -> tuple[int | float, int | float]:\n    \"\"\"\n    Get bounds for printing fft results\n\n    >>> import numpy\n    >>> array = numpy.linspace(-20.0, 20.0, 1000)\n    >>> get_bounds(array, 1000)\n    (-20, 20)\n    \"\"\"\n    lowest = min([-20, np.min(fft_results[1 : samplerate // 2 - 1])])\n    highest = max([20, np.max(fft_results[1 : samplerate // 2 - 1])])\n    return lowest, highest\n\n\ndef show_frequency_response(filter_type: FilterType, samplerate: int) -> None:\n    \"\"\"\n    Show frequency response of a filter\n\n    >>> from audio_filters.iir_filter import IIRFilter\n    >>> filt = IIRFilter(4)\n    >>> show_frequency_response(filt, 48000)\n    \"\"\"\n\n    size = 512\n    inputs = [1] + [0] * (size - 1)\n    outputs = [filter_type.process(item) for item in inputs]\n\n    filler = [0] * (samplerate - size)  # zero-padding\n    outputs += filler\n    fft_out = np.abs(np.fft.fft(outputs))\n    fft_db = 20 * np.log10(fft_out)\n\n    # Frequencies on log scale from 24 to nyquist frequency\n    plt.xlim(24, samplerate / 2 - 1)\n    plt.xlabel(\"Frequency (Hz)\")\n    plt.xscale(\"log\")\n\n    # Display within reasonable bounds\n    bounds = get_bounds(fft_db, samplerate)\n    plt.ylim(max([-80, bounds[0]]), min([80, bounds[1]]))\n    plt.ylabel(\"Gain (dB)\")\n\n    plt.plot(fft_db)\n    plt.show()\n\n\ndef show_phase_response(filter_type: FilterType, samplerate: int) -> None:\n    \"\"\"\n    Show phase response of a filter\n\n    >>> from audio_filters.iir_filter import IIRFilter\n    >>> filt = IIRFilter(4)\n    >>> show_phase_response(filt, 48000)\n    \"\"\"\n\n    size = 512\n    inputs = [1] + [0] * (size - 1)\n    outputs = [filter_type.process(item) for item in inputs]\n\n    filler = [0] * (samplerate - size)  # zero-padding\n    outputs += filler\n    fft_out = np.angle(np.fft.fft(outputs))\n\n    # Frequencies on log scale from 24 to nyquist frequency\n    plt.xlim(24, samplerate / 2 - 1)\n    plt.xlabel(\"Frequency (Hz)\")\n    plt.xscale(\"log\")\n\n    plt.ylim(-2 * pi, 2 * pi)\n    plt.ylabel(\"Phase shift (Radians)\")\n    plt.plot(np.unwrap(fft_out, -2 * pi))\n    plt.show()\n",
    "children": [
        {
            "type": "future_import_statement",
            "label": "from __future__ import annotations",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "annotations",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "annotations",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from abc import abstractmethod",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "abc",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "abc",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "abstractmethod",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "abstractmethod",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from math import pi",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "math",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "math",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "pi",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "pi",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from typing import Protocol",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "typing",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "typing",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Protocol",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Protocol",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import matplotlib.pyplot as plt",
            "children": [
                {
                    "type": "aliased_import",
                    "label": "matplotlib.pyplot as plt",
                    "children": [
                        {
                            "type": "dotted_name",
                            "label": "matplotlib.pyplot",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "matplotlib",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "pyplot",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "identifier",
                            "label": "plt",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import numpy as np",
            "children": [
                {
                    "type": "aliased_import",
                    "label": "numpy as np",
                    "children": [
                        {
                            "type": "dotted_name",
                            "label": "numpy",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "numpy",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "identifier",
                            "label": "np",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "label": "class FilterType(Protocol):\n    @abstractmethod\n    def process(self, sample: float) -> float:\n        \"\"\"\n        Calculate y[n]\n\n        >>> issubclass(FilterType, Protocol)\n        True\n        \"\"\"",
            "children": [
                {
                    "type": "identifier",
                    "label": "FilterType",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "(Protocol)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Protocol",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "@abstractmethod\n    def process(self, sample: float) -> float:\n        \"\"\"\n        Calculate y[n]\n\n        >>> issubclass(FilterType, Protocol)\n        True\n        \"\"\"",
                    "children": [
                        {
                            "type": "decorated_definition",
                            "label": "@abstractmethod\n    def process(self, sample: float) -> float:\n        \"\"\"\n        Calculate y[n]\n\n        >>> issubclass(FilterType, Protocol)\n        True\n        \"\"\"",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@abstractmethod",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "abstractmethod",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "function_definition",
                                    "label": "def process(self, sample: float) -> float:\n        \"\"\"\n        Calculate y[n]\n\n        >>> issubclass(FilterType, Protocol)\n        True\n        \"\"\"",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "process",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(self, sample: float)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "self",
                                                    "children": []
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "sample: float",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "sample",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "float",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "float",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "float",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "float",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "\"\"\"\n        Calculate y[n]\n\n        >>> issubclass(FilterType, Protocol)\n        True\n        \"\"\"",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "\"\"\"\n        Calculate y[n]\n\n        >>> issubclass(FilterType, Protocol)\n        True\n        \"\"\"",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"\"\"\n        Calculate y[n]\n\n        >>> issubclass(FilterType, Protocol)\n        True\n        \"\"\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"\"\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "\n        Calculate y[n]\n\n        >>> issubclass(FilterType, Protocol)\n        True\n        ",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"\"\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def get_bounds(\n    fft_results: np.ndarray, samplerate: int\n) -> tuple[int | float, int | float]:\n    \"\"\"\n    Get bounds for printing fft results\n\n    >>> import numpy\n    >>> array = numpy.linspace(-20.0, 20.0, 1000)\n    >>> get_bounds(array, 1000)\n    (-20, 20)\n    \"\"\"\n    lowest = min([-20, np.min(fft_results[1 : samplerate // 2 - 1])])\n    highest = max([20, np.max(fft_results[1 : samplerate // 2 - 1])])\n    return lowest, highest",
            "children": [
                {
                    "type": "identifier",
                    "label": "get_bounds",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(\n    fft_results: np.ndarray, samplerate: int\n)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "fft_results: np.ndarray",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "fft_results",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "np.ndarray",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "np.ndarray",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "np",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "ndarray",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "samplerate: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "samplerate",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "tuple[int | float, int | float]",
                    "children": [
                        {
                            "type": "generic_type",
                            "label": "tuple[int | float, int | float]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "tuple",
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "label": "[int | float, int | float]",
                                    "children": [
                                        {
                                            "type": "type",
                                            "label": "int | float",
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "label": "int | float",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "int",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "float",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "int | float",
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "label": "int | float",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "int",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "float",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    Get bounds for printing fft results\n\n    >>> import numpy\n    >>> array = numpy.linspace(-20.0, 20.0, 1000)\n    >>> get_bounds(array, 1000)\n    (-20, 20)\n    \"\"\"\n    lowest = min([-20, np.min(fft_results[1 : samplerate // 2 - 1])])\n    highest = max([20, np.max(fft_results[1 : samplerate // 2 - 1])])\n    return lowest, highest",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    Get bounds for printing fft results\n\n    >>> import numpy\n    >>> array = numpy.linspace(-20.0, 20.0, 1000)\n    >>> get_bounds(array, 1000)\n    (-20, 20)\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    Get bounds for printing fft results\n\n    >>> import numpy\n    >>> array = numpy.linspace(-20.0, 20.0, 1000)\n    >>> get_bounds(array, 1000)\n    (-20, 20)\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    Get bounds for printing fft results\n\n    >>> import numpy\n    >>> array = numpy.linspace(-20.0, 20.0, 1000)\n    >>> get_bounds(array, 1000)\n    (-20, 20)\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "lowest = min([-20, np.min(fft_results[1 : samplerate // 2 - 1])])",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "lowest = min([-20, np.min(fft_results[1 : samplerate // 2 - 1])])",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "lowest",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "min([-20, np.min(fft_results[1 : samplerate // 2 - 1])])",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "min",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "([-20, np.min(fft_results[1 : samplerate // 2 - 1])])",
                                                    "children": [
                                                        {
                                                            "type": "list",
                                                            "label": "[-20, np.min(fft_results[1 : samplerate // 2 - 1])]",
                                                            "children": [
                                                                {
                                                                    "type": "unary_operator",
                                                                    "label": "-20",
                                                                    "children": [
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "20",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "np.min(fft_results[1 : samplerate // 2 - 1])",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "np.min",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "np",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "min",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(fft_results[1 : samplerate // 2 - 1])",
                                                                            "children": [
                                                                                {
                                                                                    "type": "subscript",
                                                                                    "label": "fft_results[1 : samplerate // 2 - 1]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "fft_results",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "slice",
                                                                                            "label": "1 : samplerate // 2 - 1",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "integer",
                                                                                                    "label": "1",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "binary_operator",
                                                                                                    "label": "samplerate // 2 - 1",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "binary_operator",
                                                                                                            "label": "samplerate // 2",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "samplerate",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "integer",
                                                                                                                    "label": "2",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "integer",
                                                                                                            "label": "1",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "highest = max([20, np.max(fft_results[1 : samplerate // 2 - 1])])",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "highest = max([20, np.max(fft_results[1 : samplerate // 2 - 1])])",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "highest",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "max([20, np.max(fft_results[1 : samplerate // 2 - 1])])",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "max",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "([20, np.max(fft_results[1 : samplerate // 2 - 1])])",
                                                    "children": [
                                                        {
                                                            "type": "list",
                                                            "label": "[20, np.max(fft_results[1 : samplerate // 2 - 1])]",
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "label": "20",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "np.max(fft_results[1 : samplerate // 2 - 1])",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "np.max",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "np",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "max",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(fft_results[1 : samplerate // 2 - 1])",
                                                                            "children": [
                                                                                {
                                                                                    "type": "subscript",
                                                                                    "label": "fft_results[1 : samplerate // 2 - 1]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "fft_results",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "slice",
                                                                                            "label": "1 : samplerate // 2 - 1",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "integer",
                                                                                                    "label": "1",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "binary_operator",
                                                                                                    "label": "samplerate // 2 - 1",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "binary_operator",
                                                                                                            "label": "samplerate // 2",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "samplerate",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "integer",
                                                                                                                    "label": "2",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "integer",
                                                                                                            "label": "1",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return lowest, highest",
                            "children": [
                                {
                                    "type": "expression_list",
                                    "label": "lowest, highest",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "lowest",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "highest",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def show_frequency_response(filter_type: FilterType, samplerate: int) -> None:\n    \"\"\"\n    Show frequency response of a filter\n\n    >>> from audio_filters.iir_filter import IIRFilter\n    >>> filt = IIRFilter(4)\n    >>> show_frequency_response(filt, 48000)\n    \"\"\"\n\n    size = 512\n    inputs = [1] + [0] * (size - 1)\n    outputs = [filter_type.process(item) for item in inputs]\n\n    filler = [0] * (samplerate - size)  # zero-padding\n    outputs += filler\n    fft_out = np.abs(np.fft.fft(outputs))\n    fft_db = 20 * np.log10(fft_out)\n\n    # Frequencies on log scale from 24 to nyquist frequency\n    plt.xlim(24, samplerate / 2 - 1)\n    plt.xlabel(\"Frequency (Hz)\")\n    plt.xscale(\"log\")\n\n    # Display within reasonable bounds\n    bounds = get_bounds(fft_db, samplerate)\n    plt.ylim(max([-80, bounds[0]]), min([80, bounds[1]]))\n    plt.ylabel(\"Gain (dB)\")\n\n    plt.plot(fft_db)\n    plt.show()",
            "children": [
                {
                    "type": "identifier",
                    "label": "show_frequency_response",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(filter_type: FilterType, samplerate: int)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "filter_type: FilterType",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "filter_type",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "FilterType",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "FilterType",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "samplerate: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "samplerate",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "None",
                    "children": [
                        {
                            "type": "none",
                            "label": "None",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    Show frequency response of a filter\n\n    >>> from audio_filters.iir_filter import IIRFilter\n    >>> filt = IIRFilter(4)\n    >>> show_frequency_response(filt, 48000)\n    \"\"\"\n\n    size = 512\n    inputs = [1] + [0] * (size - 1)\n    outputs = [filter_type.process(item) for item in inputs]\n\n    filler = [0] * (samplerate - size)  # zero-padding\n    outputs += filler\n    fft_out = np.abs(np.fft.fft(outputs))\n    fft_db = 20 * np.log10(fft_out)\n\n    # Frequencies on log scale from 24 to nyquist frequency\n    plt.xlim(24, samplerate / 2 - 1)\n    plt.xlabel(\"Frequency (Hz)\")\n    plt.xscale(\"log\")\n\n    # Display within reasonable bounds\n    bounds = get_bounds(fft_db, samplerate)\n    plt.ylim(max([-80, bounds[0]]), min([80, bounds[1]]))\n    plt.ylabel(\"Gain (dB)\")\n\n    plt.plot(fft_db)\n    plt.show()",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    Show frequency response of a filter\n\n    >>> from audio_filters.iir_filter import IIRFilter\n    >>> filt = IIRFilter(4)\n    >>> show_frequency_response(filt, 48000)\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    Show frequency response of a filter\n\n    >>> from audio_filters.iir_filter import IIRFilter\n    >>> filt = IIRFilter(4)\n    >>> show_frequency_response(filt, 48000)\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    Show frequency response of a filter\n\n    >>> from audio_filters.iir_filter import IIRFilter\n    >>> filt = IIRFilter(4)\n    >>> show_frequency_response(filt, 48000)\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "size = 512",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "size = 512",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "size",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "512",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "inputs = [1] + [0] * (size - 1)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "inputs = [1] + [0] * (size - 1)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "inputs",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "[1] + [0] * (size - 1)",
                                            "children": [
                                                {
                                                    "type": "list",
                                                    "label": "[1]",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "label": "1",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "label": "[0] * (size - 1)",
                                                    "children": [
                                                        {
                                                            "type": "list",
                                                            "label": "[0]",
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "label": "0",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "parenthesized_expression",
                                                            "label": "(size - 1)",
                                                            "children": [
                                                                {
                                                                    "type": "binary_operator",
                                                                    "label": "size - 1",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "size",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "1",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "outputs = [filter_type.process(item) for item in inputs]",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "outputs = [filter_type.process(item) for item in inputs]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "outputs",
                                            "children": []
                                        },
                                        {
                                            "type": "list_comprehension",
                                            "label": "[filter_type.process(item) for item in inputs]",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "filter_type.process(item)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "filter_type.process",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "filter_type",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "process",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(item)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "item",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "for_in_clause",
                                                    "label": "for item in inputs",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "item",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "inputs",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "filler = [0] * (samplerate - size)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "filler = [0] * (samplerate - size)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "filler",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "[0] * (samplerate - size)",
                                            "children": [
                                                {
                                                    "type": "list",
                                                    "label": "[0]",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "label": "0",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "parenthesized_expression",
                                                    "label": "(samplerate - size)",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "label": "samplerate - size",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "samplerate",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "size",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# zero-padding",
                            "children": []
                        },
                        {
                            "type": "expression_statement",
                            "label": "outputs += filler",
                            "children": [
                                {
                                    "type": "augmented_assignment",
                                    "label": "outputs += filler",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "outputs",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "filler",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "fft_out = np.abs(np.fft.fft(outputs))",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "fft_out = np.abs(np.fft.fft(outputs))",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "fft_out",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "np.abs(np.fft.fft(outputs))",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "np.abs",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "np",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "abs",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(np.fft.fft(outputs))",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "np.fft.fft(outputs)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "np.fft.fft",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "np.fft",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "np",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "fft",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "fft",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(outputs)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "outputs",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "fft_db = 20 * np.log10(fft_out)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "fft_db = 20 * np.log10(fft_out)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "fft_db",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "20 * np.log10(fft_out)",
                                            "children": [
                                                {
                                                    "type": "integer",
                                                    "label": "20",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "np.log10(fft_out)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "np.log10",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "np",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "log10",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(fft_out)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "fft_out",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# Frequencies on log scale from 24 to nyquist frequency",
                            "children": []
                        },
                        {
                            "type": "expression_statement",
                            "label": "plt.xlim(24, samplerate / 2 - 1)",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "plt.xlim(24, samplerate / 2 - 1)",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "plt.xlim",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "plt",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "xlim",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(24, samplerate / 2 - 1)",
                                            "children": [
                                                {
                                                    "type": "integer",
                                                    "label": "24",
                                                    "children": []
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "label": "samplerate / 2 - 1",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "label": "samplerate / 2",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "samplerate",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "label": "2",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "label": "1",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "plt.xlabel(\"Frequency (Hz)\")",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "plt.xlabel(\"Frequency (Hz)\")",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "plt.xlabel",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "plt",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "xlabel",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(\"Frequency (Hz)\")",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "\"Frequency (Hz)\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Frequency (Hz)",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "plt.xscale(\"log\")",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "plt.xscale(\"log\")",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "plt.xscale",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "plt",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "xscale",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(\"log\")",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "\"log\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "log",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# Display within reasonable bounds",
                            "children": []
                        },
                        {
                            "type": "expression_statement",
                            "label": "bounds = get_bounds(fft_db, samplerate)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "bounds = get_bounds(fft_db, samplerate)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "bounds",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "get_bounds(fft_db, samplerate)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "get_bounds",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(fft_db, samplerate)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "fft_db",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "samplerate",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "plt.ylim(max([-80, bounds[0]]), min([80, bounds[1]]))",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "plt.ylim(max([-80, bounds[0]]), min([80, bounds[1]]))",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "plt.ylim",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "plt",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "ylim",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(max([-80, bounds[0]]), min([80, bounds[1]]))",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "max([-80, bounds[0]])",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "max",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "([-80, bounds[0]])",
                                                            "children": [
                                                                {
                                                                    "type": "list",
                                                                    "label": "[-80, bounds[0]]",
                                                                    "children": [
                                                                        {
                                                                            "type": "unary_operator",
                                                                            "label": "-80",
                                                                            "children": [
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "80",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "subscript",
                                                                            "label": "bounds[0]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "bounds",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "0",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "min([80, bounds[1]])",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "min",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "([80, bounds[1]])",
                                                            "children": [
                                                                {
                                                                    "type": "list",
                                                                    "label": "[80, bounds[1]]",
                                                                    "children": [
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "80",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "subscript",
                                                                            "label": "bounds[1]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "bounds",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "1",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "plt.ylabel(\"Gain (dB)\")",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "plt.ylabel(\"Gain (dB)\")",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "plt.ylabel",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "plt",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "ylabel",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(\"Gain (dB)\")",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "\"Gain (dB)\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Gain (dB)",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "plt.plot(fft_db)",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "plt.plot(fft_db)",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "plt.plot",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "plt",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "plot",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(fft_db)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "fft_db",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "plt.show()",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "plt.show()",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "plt.show",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "plt",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "show",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "()",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def show_phase_response(filter_type: FilterType, samplerate: int) -> None:\n    \"\"\"\n    Show phase response of a filter\n\n    >>> from audio_filters.iir_filter import IIRFilter\n    >>> filt = IIRFilter(4)\n    >>> show_phase_response(filt, 48000)\n    \"\"\"\n\n    size = 512\n    inputs = [1] + [0] * (size - 1)\n    outputs = [filter_type.process(item) for item in inputs]\n\n    filler = [0] * (samplerate - size)  # zero-padding\n    outputs += filler\n    fft_out = np.angle(np.fft.fft(outputs))\n\n    # Frequencies on log scale from 24 to nyquist frequency\n    plt.xlim(24, samplerate / 2 - 1)\n    plt.xlabel(\"Frequency (Hz)\")\n    plt.xscale(\"log\")\n\n    plt.ylim(-2 * pi, 2 * pi)\n    plt.ylabel(\"Phase shift (Radians)\")\n    plt.plot(np.unwrap(fft_out, -2 * pi))\n    plt.show()",
            "children": [
                {
                    "type": "identifier",
                    "label": "show_phase_response",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(filter_type: FilterType, samplerate: int)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "filter_type: FilterType",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "filter_type",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "FilterType",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "FilterType",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "samplerate: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "samplerate",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "None",
                    "children": [
                        {
                            "type": "none",
                            "label": "None",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    Show phase response of a filter\n\n    >>> from audio_filters.iir_filter import IIRFilter\n    >>> filt = IIRFilter(4)\n    >>> show_phase_response(filt, 48000)\n    \"\"\"\n\n    size = 512\n    inputs = [1] + [0] * (size - 1)\n    outputs = [filter_type.process(item) for item in inputs]\n\n    filler = [0] * (samplerate - size)  # zero-padding\n    outputs += filler\n    fft_out = np.angle(np.fft.fft(outputs))\n\n    # Frequencies on log scale from 24 to nyquist frequency\n    plt.xlim(24, samplerate / 2 - 1)\n    plt.xlabel(\"Frequency (Hz)\")\n    plt.xscale(\"log\")\n\n    plt.ylim(-2 * pi, 2 * pi)\n    plt.ylabel(\"Phase shift (Radians)\")\n    plt.plot(np.unwrap(fft_out, -2 * pi))\n    plt.show()",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    Show phase response of a filter\n\n    >>> from audio_filters.iir_filter import IIRFilter\n    >>> filt = IIRFilter(4)\n    >>> show_phase_response(filt, 48000)\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    Show phase response of a filter\n\n    >>> from audio_filters.iir_filter import IIRFilter\n    >>> filt = IIRFilter(4)\n    >>> show_phase_response(filt, 48000)\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    Show phase response of a filter\n\n    >>> from audio_filters.iir_filter import IIRFilter\n    >>> filt = IIRFilter(4)\n    >>> show_phase_response(filt, 48000)\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "size = 512",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "size = 512",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "size",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "512",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "inputs = [1] + [0] * (size - 1)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "inputs = [1] + [0] * (size - 1)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "inputs",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "[1] + [0] * (size - 1)",
                                            "children": [
                                                {
                                                    "type": "list",
                                                    "label": "[1]",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "label": "1",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "label": "[0] * (size - 1)",
                                                    "children": [
                                                        {
                                                            "type": "list",
                                                            "label": "[0]",
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "label": "0",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "parenthesized_expression",
                                                            "label": "(size - 1)",
                                                            "children": [
                                                                {
                                                                    "type": "binary_operator",
                                                                    "label": "size - 1",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "size",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "1",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "outputs = [filter_type.process(item) for item in inputs]",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "outputs = [filter_type.process(item) for item in inputs]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "outputs",
                                            "children": []
                                        },
                                        {
                                            "type": "list_comprehension",
                                            "label": "[filter_type.process(item) for item in inputs]",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "filter_type.process(item)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "filter_type.process",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "filter_type",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "process",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(item)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "item",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "for_in_clause",
                                                    "label": "for item in inputs",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "item",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "inputs",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "filler = [0] * (samplerate - size)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "filler = [0] * (samplerate - size)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "filler",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "[0] * (samplerate - size)",
                                            "children": [
                                                {
                                                    "type": "list",
                                                    "label": "[0]",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "label": "0",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "parenthesized_expression",
                                                    "label": "(samplerate - size)",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "label": "samplerate - size",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "samplerate",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "size",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# zero-padding",
                            "children": []
                        },
                        {
                            "type": "expression_statement",
                            "label": "outputs += filler",
                            "children": [
                                {
                                    "type": "augmented_assignment",
                                    "label": "outputs += filler",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "outputs",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "filler",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "fft_out = np.angle(np.fft.fft(outputs))",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "fft_out = np.angle(np.fft.fft(outputs))",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "fft_out",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "np.angle(np.fft.fft(outputs))",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "np.angle",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "np",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "angle",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(np.fft.fft(outputs))",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "np.fft.fft(outputs)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "np.fft.fft",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "np.fft",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "np",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "fft",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "fft",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(outputs)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "outputs",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# Frequencies on log scale from 24 to nyquist frequency",
                            "children": []
                        },
                        {
                            "type": "expression_statement",
                            "label": "plt.xlim(24, samplerate / 2 - 1)",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "plt.xlim(24, samplerate / 2 - 1)",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "plt.xlim",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "plt",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "xlim",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(24, samplerate / 2 - 1)",
                                            "children": [
                                                {
                                                    "type": "integer",
                                                    "label": "24",
                                                    "children": []
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "label": "samplerate / 2 - 1",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "label": "samplerate / 2",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "samplerate",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "label": "2",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "label": "1",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "plt.xlabel(\"Frequency (Hz)\")",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "plt.xlabel(\"Frequency (Hz)\")",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "plt.xlabel",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "plt",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "xlabel",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(\"Frequency (Hz)\")",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "\"Frequency (Hz)\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Frequency (Hz)",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "plt.xscale(\"log\")",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "plt.xscale(\"log\")",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "plt.xscale",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "plt",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "xscale",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(\"log\")",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "\"log\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "log",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "plt.ylim(-2 * pi, 2 * pi)",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "plt.ylim(-2 * pi, 2 * pi)",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "plt.ylim",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "plt",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "ylim",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(-2 * pi, 2 * pi)",
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "label": "-2 * pi",
                                                    "children": [
                                                        {
                                                            "type": "unary_operator",
                                                            "label": "-2",
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "label": "2",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "pi",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "label": "2 * pi",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "label": "2",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "pi",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "plt.ylabel(\"Phase shift (Radians)\")",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "plt.ylabel(\"Phase shift (Radians)\")",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "plt.ylabel",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "plt",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "ylabel",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(\"Phase shift (Radians)\")",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "\"Phase shift (Radians)\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Phase shift (Radians)",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "plt.plot(np.unwrap(fft_out, -2 * pi))",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "plt.plot(np.unwrap(fft_out, -2 * pi))",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "plt.plot",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "plt",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "plot",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(np.unwrap(fft_out, -2 * pi))",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "np.unwrap(fft_out, -2 * pi)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "np.unwrap",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "np",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "unwrap",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(fft_out, -2 * pi)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "fft_out",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "binary_operator",
                                                                    "label": "-2 * pi",
                                                                    "children": [
                                                                        {
                                                                            "type": "unary_operator",
                                                                            "label": "-2",
                                                                            "children": [
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "2",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "pi",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "plt.show()",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "plt.show()",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "plt.show",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "plt",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "show",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "()",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}