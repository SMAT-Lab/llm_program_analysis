{
    "type": "module",
    "label": "import functools\nimport logging\nimport os\nimport time\nfrom typing import Callable, ParamSpec, Tuple, TypeVar\n\nfrom pydantic import BaseModel\n\n\nclass TimingInfo(BaseModel):\n    cpu_time: float\n    wall_time: float\n\n\ndef _start_measurement() -> Tuple[float, float]:\n    return time.time(), os.times()[0] + os.times()[1]\n\n\ndef _end_measurement(\n    start_wall_time: float, start_cpu_time: float\n) -> Tuple[float, float]:\n    end_wall_time = time.time()\n    end_cpu_time = os.times()[0] + os.times()[1]\n    return end_wall_time - start_wall_time, end_cpu_time - start_cpu_time\n\n\nP = ParamSpec(\"P\")\nT = TypeVar(\"T\")\n\nlogger = logging.getLogger(__name__)\n\n\ndef time_measured(func: Callable[P, T]) -> Callable[P, Tuple[TimingInfo, T]]:\n    \"\"\"\n    Decorator to measure the time taken by a function to execute.\n    \"\"\"\n\n    @functools.wraps(func)\n    def wrapper(*args: P.args, **kwargs: P.kwargs) -> Tuple[TimingInfo, T]:\n        start_wall_time, start_cpu_time = _start_measurement()\n        try:\n            result = func(*args, **kwargs)\n        finally:\n            wall_duration, cpu_duration = _end_measurement(\n                start_wall_time, start_cpu_time\n            )\n            timing_info = TimingInfo(cpu_time=cpu_duration, wall_time=wall_duration)\n        return timing_info, result\n\n    return wrapper\n\n\ndef error_logged(func: Callable[P, T]) -> Callable[P, T | None]:\n    \"\"\"\n    Decorator to suppress and log any exceptions raised by a function.\n    \"\"\"\n\n    @functools.wraps(func)\n    def wrapper(*args: P.args, **kwargs: P.kwargs) -> T | None:\n        try:\n            return func(*args, **kwargs)\n        except Exception as e:\n            logger.exception(\n                f\"Error when calling function {func.__name__} with arguments {args} {kwargs}: {e}\"\n            )\n\n    return wrapper\n",
    "children": [
        {
            "type": "import_statement",
            "label": "import functools",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "functools",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "functools",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import logging",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "logging",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "logging",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import os",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "os",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "os",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import time",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "time",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "time",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from typing import Callable, ParamSpec, Tuple, TypeVar",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "typing",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "typing",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Callable",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Callable",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "ParamSpec",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "ParamSpec",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Tuple",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Tuple",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "TypeVar",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "TypeVar",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from pydantic import BaseModel",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "pydantic",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "pydantic",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "BaseModel",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "BaseModel",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "label": "class TimingInfo(BaseModel):\n    cpu_time: float\n    wall_time: float",
            "children": [
                {
                    "type": "identifier",
                    "label": "TimingInfo",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "(BaseModel)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "BaseModel",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "cpu_time: float\n    wall_time: float",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "cpu_time: float",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "cpu_time: float",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "cpu_time",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "float",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "float",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "wall_time: float",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "wall_time: float",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "wall_time",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "float",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "float",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def _start_measurement() -> Tuple[float, float]:\n    return time.time(), os.times()[0] + os.times()[1]",
            "children": [
                {
                    "type": "identifier",
                    "label": "_start_measurement",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "()",
                    "children": []
                },
                {
                    "type": "type",
                    "label": "Tuple[float, float]",
                    "children": [
                        {
                            "type": "generic_type",
                            "label": "Tuple[float, float]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "Tuple",
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "label": "[float, float]",
                                    "children": [
                                        {
                                            "type": "type",
                                            "label": "float",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "float",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "float",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "float",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "return time.time(), os.times()[0] + os.times()[1]",
                    "children": [
                        {
                            "type": "return_statement",
                            "label": "return time.time(), os.times()[0] + os.times()[1]",
                            "children": [
                                {
                                    "type": "expression_list",
                                    "label": "time.time(), os.times()[0] + os.times()[1]",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "time.time()",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "time.time",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "time",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "time",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "()",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "os.times()[0] + os.times()[1]",
                                            "children": [
                                                {
                                                    "type": "subscript",
                                                    "label": "os.times()[0]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "os.times()",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "os.times",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "os",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "times",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "label": "0",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "subscript",
                                                    "label": "os.times()[1]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "os.times()",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "os.times",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "os",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "times",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "label": "1",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def _end_measurement(\n    start_wall_time: float, start_cpu_time: float\n) -> Tuple[float, float]:\n    end_wall_time = time.time()\n    end_cpu_time = os.times()[0] + os.times()[1]\n    return end_wall_time - start_wall_time, end_cpu_time - start_cpu_time",
            "children": [
                {
                    "type": "identifier",
                    "label": "_end_measurement",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(\n    start_wall_time: float, start_cpu_time: float\n)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "start_wall_time: float",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "start_wall_time",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "float",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "float",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "start_cpu_time: float",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "start_cpu_time",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "float",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "float",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "Tuple[float, float]",
                    "children": [
                        {
                            "type": "generic_type",
                            "label": "Tuple[float, float]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "Tuple",
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "label": "[float, float]",
                                    "children": [
                                        {
                                            "type": "type",
                                            "label": "float",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "float",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "float",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "float",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "end_wall_time = time.time()\n    end_cpu_time = os.times()[0] + os.times()[1]\n    return end_wall_time - start_wall_time, end_cpu_time - start_cpu_time",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "end_wall_time = time.time()",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "end_wall_time = time.time()",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "end_wall_time",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "time.time()",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "time.time",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "time",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "time",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "()",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "end_cpu_time = os.times()[0] + os.times()[1]",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "end_cpu_time = os.times()[0] + os.times()[1]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "end_cpu_time",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "os.times()[0] + os.times()[1]",
                                            "children": [
                                                {
                                                    "type": "subscript",
                                                    "label": "os.times()[0]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "os.times()",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "os.times",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "os",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "times",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "label": "0",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "subscript",
                                                    "label": "os.times()[1]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "os.times()",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "os.times",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "os",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "times",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "label": "1",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return end_wall_time - start_wall_time, end_cpu_time - start_cpu_time",
                            "children": [
                                {
                                    "type": "expression_list",
                                    "label": "end_wall_time - start_wall_time, end_cpu_time - start_cpu_time",
                                    "children": [
                                        {
                                            "type": "binary_operator",
                                            "label": "end_wall_time - start_wall_time",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "end_wall_time",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "start_wall_time",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "end_cpu_time - start_cpu_time",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "end_cpu_time",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "start_cpu_time",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "P = ParamSpec(\"P\")",
            "children": [
                {
                    "type": "assignment",
                    "label": "P = ParamSpec(\"P\")",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "P",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "ParamSpec(\"P\")",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "ParamSpec",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\"P\")",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"P\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "P",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "T = TypeVar(\"T\")",
            "children": [
                {
                    "type": "assignment",
                    "label": "T = TypeVar(\"T\")",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "T",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "TypeVar(\"T\")",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "TypeVar",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\"T\")",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"T\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "T",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "logger = logging.getLogger(__name__)",
            "children": [
                {
                    "type": "assignment",
                    "label": "logger = logging.getLogger(__name__)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "logger",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "logging.getLogger(__name__)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "logging.getLogger",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "logging",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "getLogger",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(__name__)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "__name__",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def time_measured(func: Callable[P, T]) -> Callable[P, Tuple[TimingInfo, T]]:\n    \"\"\"\n    Decorator to measure the time taken by a function to execute.\n    \"\"\"\n\n    @functools.wraps(func)\n    def wrapper(*args: P.args, **kwargs: P.kwargs) -> Tuple[TimingInfo, T]:\n        start_wall_time, start_cpu_time = _start_measurement()\n        try:\n            result = func(*args, **kwargs)\n        finally:\n            wall_duration, cpu_duration = _end_measurement(\n                start_wall_time, start_cpu_time\n            )\n            timing_info = TimingInfo(cpu_time=cpu_duration, wall_time=wall_duration)\n        return timing_info, result\n\n    return wrapper",
            "children": [
                {
                    "type": "identifier",
                    "label": "time_measured",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(func: Callable[P, T])",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "func: Callable[P, T]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "func",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "Callable[P, T]",
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "Callable[P, T]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "Callable",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[P, T]",
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "P",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "P",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "T",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "T",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "Callable[P, Tuple[TimingInfo, T]]",
                    "children": [
                        {
                            "type": "generic_type",
                            "label": "Callable[P, Tuple[TimingInfo, T]]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "Callable",
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "label": "[P, Tuple[TimingInfo, T]]",
                                    "children": [
                                        {
                                            "type": "type",
                                            "label": "P",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "P",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "Tuple[TimingInfo, T]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Tuple[TimingInfo, T]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Tuple",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[TimingInfo, T]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "TimingInfo",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "TimingInfo",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "T",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "T",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    Decorator to measure the time taken by a function to execute.\n    \"\"\"\n\n    @functools.wraps(func)\n    def wrapper(*args: P.args, **kwargs: P.kwargs) -> Tuple[TimingInfo, T]:\n        start_wall_time, start_cpu_time = _start_measurement()\n        try:\n            result = func(*args, **kwargs)\n        finally:\n            wall_duration, cpu_duration = _end_measurement(\n                start_wall_time, start_cpu_time\n            )\n            timing_info = TimingInfo(cpu_time=cpu_duration, wall_time=wall_duration)\n        return timing_info, result\n\n    return wrapper",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    Decorator to measure the time taken by a function to execute.\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    Decorator to measure the time taken by a function to execute.\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    Decorator to measure the time taken by a function to execute.\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "decorated_definition",
                            "label": "@functools.wraps(func)\n    def wrapper(*args: P.args, **kwargs: P.kwargs) -> Tuple[TimingInfo, T]:\n        start_wall_time, start_cpu_time = _start_measurement()\n        try:\n            result = func(*args, **kwargs)\n        finally:\n            wall_duration, cpu_duration = _end_measurement(\n                start_wall_time, start_cpu_time\n            )\n            timing_info = TimingInfo(cpu_time=cpu_duration, wall_time=wall_duration)\n        return timing_info, result",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@functools.wraps(func)",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "functools.wraps(func)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "functools.wraps",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "functools",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "wraps",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(func)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "func",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "function_definition",
                                    "label": "def wrapper(*args: P.args, **kwargs: P.kwargs) -> Tuple[TimingInfo, T]:\n        start_wall_time, start_cpu_time = _start_measurement()\n        try:\n            result = func(*args, **kwargs)\n        finally:\n            wall_duration, cpu_duration = _end_measurement(\n                start_wall_time, start_cpu_time\n            )\n            timing_info = TimingInfo(cpu_time=cpu_duration, wall_time=wall_duration)\n        return timing_info, result",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "wrapper",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(*args: P.args, **kwargs: P.kwargs)",
                                            "children": [
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "*args: P.args",
                                                    "children": [
                                                        {
                                                            "type": "list_splat_pattern",
                                                            "label": "*args",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "args",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "P.args",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "P.args",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "P",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "args",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "**kwargs: P.kwargs",
                                                    "children": [
                                                        {
                                                            "type": "dictionary_splat_pattern",
                                                            "label": "**kwargs",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "kwargs",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "P.kwargs",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "P.kwargs",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "P",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "kwargs",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "Tuple[TimingInfo, T]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Tuple[TimingInfo, T]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Tuple",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[TimingInfo, T]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "TimingInfo",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "TimingInfo",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "T",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "T",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "start_wall_time, start_cpu_time = _start_measurement()\n        try:\n            result = func(*args, **kwargs)\n        finally:\n            wall_duration, cpu_duration = _end_measurement(\n                start_wall_time, start_cpu_time\n            )\n            timing_info = TimingInfo(cpu_time=cpu_duration, wall_time=wall_duration)\n        return timing_info, result",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "start_wall_time, start_cpu_time = _start_measurement()",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "start_wall_time, start_cpu_time = _start_measurement()",
                                                            "children": [
                                                                {
                                                                    "type": "pattern_list",
                                                                    "label": "start_wall_time, start_cpu_time",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "start_wall_time",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "start_cpu_time",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "_start_measurement()",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "_start_measurement",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "try_statement",
                                                    "label": "try:\n            result = func(*args, **kwargs)\n        finally:\n            wall_duration, cpu_duration = _end_measurement(\n                start_wall_time, start_cpu_time\n            )\n            timing_info = TimingInfo(cpu_time=cpu_duration, wall_time=wall_duration)",
                                                    "children": [
                                                        {
                                                            "type": "block",
                                                            "label": "result = func(*args, **kwargs)",
                                                            "children": [
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "result = func(*args, **kwargs)",
                                                                    "children": [
                                                                        {
                                                                            "type": "assignment",
                                                                            "label": "result = func(*args, **kwargs)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "result",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "func(*args, **kwargs)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "func",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(*args, **kwargs)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "list_splat",
                                                                                                    "label": "*args",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "args",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "dictionary_splat",
                                                                                                    "label": "**kwargs",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "kwargs",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "finally_clause",
                                                            "label": "finally:\n            wall_duration, cpu_duration = _end_measurement(\n                start_wall_time, start_cpu_time\n            )\n            timing_info = TimingInfo(cpu_time=cpu_duration, wall_time=wall_duration)",
                                                            "children": [
                                                                {
                                                                    "type": "block",
                                                                    "label": "wall_duration, cpu_duration = _end_measurement(\n                start_wall_time, start_cpu_time\n            )\n            timing_info = TimingInfo(cpu_time=cpu_duration, wall_time=wall_duration)",
                                                                    "children": [
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "label": "wall_duration, cpu_duration = _end_measurement(\n                start_wall_time, start_cpu_time\n            )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "assignment",
                                                                                    "label": "wall_duration, cpu_duration = _end_measurement(\n                start_wall_time, start_cpu_time\n            )",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "pattern_list",
                                                                                            "label": "wall_duration, cpu_duration",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "wall_duration",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "cpu_duration",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "_end_measurement(\n                start_wall_time, start_cpu_time\n            )",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "_end_measurement",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(\n                start_wall_time, start_cpu_time\n            )",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "start_wall_time",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "start_cpu_time",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "label": "timing_info = TimingInfo(cpu_time=cpu_duration, wall_time=wall_duration)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "assignment",
                                                                                    "label": "timing_info = TimingInfo(cpu_time=cpu_duration, wall_time=wall_duration)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "timing_info",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "TimingInfo(cpu_time=cpu_duration, wall_time=wall_duration)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "TimingInfo",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(cpu_time=cpu_duration, wall_time=wall_duration)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "keyword_argument",
                                                                                                            "label": "cpu_time=cpu_duration",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "cpu_time",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "cpu_duration",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "keyword_argument",
                                                                                                            "label": "wall_time=wall_duration",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "wall_time",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "wall_duration",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "return_statement",
                                                    "label": "return timing_info, result",
                                                    "children": [
                                                        {
                                                            "type": "expression_list",
                                                            "label": "timing_info, result",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "timing_info",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "result",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return wrapper",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "wrapper",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def error_logged(func: Callable[P, T]) -> Callable[P, T | None]:\n    \"\"\"\n    Decorator to suppress and log any exceptions raised by a function.\n    \"\"\"\n\n    @functools.wraps(func)\n    def wrapper(*args: P.args, **kwargs: P.kwargs) -> T | None:\n        try:\n            return func(*args, **kwargs)\n        except Exception as e:\n            logger.exception(\n                f\"Error when calling function {func.__name__} with arguments {args} {kwargs}: {e}\"\n            )\n\n    return wrapper",
            "children": [
                {
                    "type": "identifier",
                    "label": "error_logged",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(func: Callable[P, T])",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "func: Callable[P, T]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "func",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "Callable[P, T]",
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "Callable[P, T]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "Callable",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[P, T]",
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "P",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "P",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "T",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "T",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "Callable[P, T | None]",
                    "children": [
                        {
                            "type": "generic_type",
                            "label": "Callable[P, T | None]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "Callable",
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "label": "[P, T | None]",
                                    "children": [
                                        {
                                            "type": "type",
                                            "label": "P",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "P",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "T | None",
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "label": "T | None",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "T",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "none",
                                                            "label": "None",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    Decorator to suppress and log any exceptions raised by a function.\n    \"\"\"\n\n    @functools.wraps(func)\n    def wrapper(*args: P.args, **kwargs: P.kwargs) -> T | None:\n        try:\n            return func(*args, **kwargs)\n        except Exception as e:\n            logger.exception(\n                f\"Error when calling function {func.__name__} with arguments {args} {kwargs}: {e}\"\n            )\n\n    return wrapper",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    Decorator to suppress and log any exceptions raised by a function.\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    Decorator to suppress and log any exceptions raised by a function.\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    Decorator to suppress and log any exceptions raised by a function.\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "decorated_definition",
                            "label": "@functools.wraps(func)\n    def wrapper(*args: P.args, **kwargs: P.kwargs) -> T | None:\n        try:\n            return func(*args, **kwargs)\n        except Exception as e:\n            logger.exception(\n                f\"Error when calling function {func.__name__} with arguments {args} {kwargs}: {e}\"\n            )",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@functools.wraps(func)",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "functools.wraps(func)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "functools.wraps",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "functools",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "wraps",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(func)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "func",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "function_definition",
                                    "label": "def wrapper(*args: P.args, **kwargs: P.kwargs) -> T | None:\n        try:\n            return func(*args, **kwargs)\n        except Exception as e:\n            logger.exception(\n                f\"Error when calling function {func.__name__} with arguments {args} {kwargs}: {e}\"\n            )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "wrapper",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(*args: P.args, **kwargs: P.kwargs)",
                                            "children": [
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "*args: P.args",
                                                    "children": [
                                                        {
                                                            "type": "list_splat_pattern",
                                                            "label": "*args",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "args",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "P.args",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "P.args",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "P",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "args",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "**kwargs: P.kwargs",
                                                    "children": [
                                                        {
                                                            "type": "dictionary_splat_pattern",
                                                            "label": "**kwargs",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "kwargs",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "P.kwargs",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "P.kwargs",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "P",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "kwargs",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "T | None",
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "label": "T | None",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "T",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "none",
                                                            "label": "None",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "try:\n            return func(*args, **kwargs)\n        except Exception as e:\n            logger.exception(\n                f\"Error when calling function {func.__name__} with arguments {args} {kwargs}: {e}\"\n            )",
                                            "children": [
                                                {
                                                    "type": "try_statement",
                                                    "label": "try:\n            return func(*args, **kwargs)\n        except Exception as e:\n            logger.exception(\n                f\"Error when calling function {func.__name__} with arguments {args} {kwargs}: {e}\"\n            )",
                                                    "children": [
                                                        {
                                                            "type": "block",
                                                            "label": "return func(*args, **kwargs)",
                                                            "children": [
                                                                {
                                                                    "type": "return_statement",
                                                                    "label": "return func(*args, **kwargs)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "func(*args, **kwargs)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "func",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(*args, **kwargs)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "list_splat",
                                                                                            "label": "*args",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "args",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "dictionary_splat",
                                                                                            "label": "**kwargs",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "kwargs",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "except_clause",
                                                            "label": "except Exception as e:\n            logger.exception(\n                f\"Error when calling function {func.__name__} with arguments {args} {kwargs}: {e}\"\n            )",
                                                            "children": [
                                                                {
                                                                    "type": "as_pattern",
                                                                    "label": "Exception as e",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "Exception",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "as_pattern_target",
                                                                            "label": "e",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "e",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": "logger.exception(\n                f\"Error when calling function {func.__name__} with arguments {args} {kwargs}: {e}\"\n            )",
                                                                    "children": [
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "label": "logger.exception(\n                f\"Error when calling function {func.__name__} with arguments {args} {kwargs}: {e}\"\n            )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "logger.exception(\n                f\"Error when calling function {func.__name__} with arguments {args} {kwargs}: {e}\"\n            )",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "logger.exception",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "logger",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "exception",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(\n                f\"Error when calling function {func.__name__} with arguments {args} {kwargs}: {e}\"\n            )",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "f\"Error when calling function {func.__name__} with arguments {args} {kwargs}: {e}\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "f\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "Error when calling function ",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "interpolation",
                                                                                                            "label": "{func.__name__}",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "attribute",
                                                                                                                    "label": "func.__name__",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "func",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "__name__",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": " with arguments ",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "interpolation",
                                                                                                            "label": "{args}",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "args",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": " ",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "interpolation",
                                                                                                            "label": "{kwargs}",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "kwargs",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": ": ",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "interpolation",
                                                                                                            "label": "{e}",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "e",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return wrapper",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "wrapper",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}