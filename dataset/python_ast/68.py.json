{
    "type": "module",
    "label": "import asyncio\nimport contextlib\nimport logging\nfrom functools import wraps\nfrom typing import Any, Awaitable, Callable, Dict, Optional, TypeVar, Union, cast\n\nimport ldclient\nfrom fastapi import HTTPException\nfrom ldclient import Context, LDClient\nfrom ldclient.config import Config\nfrom typing_extensions import ParamSpec\n\nfrom .config import SETTINGS\n\nlogger = logging.getLogger(__name__)\nlogging.basicConfig(level=logging.DEBUG)\n\nP = ParamSpec(\"P\")\nT = TypeVar(\"T\")\n\n\ndef get_client() -> LDClient:\n    \"\"\"Get the LaunchDarkly client singleton.\"\"\"\n    return ldclient.get()\n\n\ndef initialize_launchdarkly() -> None:\n    sdk_key = SETTINGS.launch_darkly_sdk_key\n    logger.debug(\n        f\"Initializing LaunchDarkly with SDK key: {'present' if sdk_key else 'missing'}\"\n    )\n\n    if not sdk_key:\n        logger.warning(\"LaunchDarkly SDK key not configured\")\n        return\n\n    config = Config(sdk_key)\n    ldclient.set_config(config)\n\n    if ldclient.get().is_initialized():\n        logger.info(\"LaunchDarkly client initialized successfully\")\n    else:\n        logger.error(\"LaunchDarkly client failed to initialize\")\n\n\ndef shutdown_launchdarkly() -> None:\n    \"\"\"Shutdown the LaunchDarkly client.\"\"\"\n    if ldclient.get().is_initialized():\n        ldclient.get().close()\n        logger.info(\"LaunchDarkly client closed successfully\")\n\n\ndef create_context(\n    user_id: str, additional_attributes: Optional[Dict[str, Any]] = None\n) -> Context:\n    \"\"\"Create LaunchDarkly context with optional additional attributes.\"\"\"\n    builder = Context.builder(str(user_id)).kind(\"user\")\n    if additional_attributes:\n        for key, value in additional_attributes.items():\n            builder.set(key, value)\n    return builder.build()\n\n\ndef feature_flag(\n    flag_key: str,\n    default: bool = False,\n) -> Callable[\n    [Callable[P, Union[T, Awaitable[T]]]], Callable[P, Union[T, Awaitable[T]]]\n]:\n    \"\"\"\n    Decorator for feature flag protected endpoints.\n    \"\"\"\n\n    def decorator(\n        func: Callable[P, Union[T, Awaitable[T]]],\n    ) -> Callable[P, Union[T, Awaitable[T]]]:\n        @wraps(func)\n        async def async_wrapper(*args: P.args, **kwargs: P.kwargs) -> T:\n            try:\n                user_id = kwargs.get(\"user_id\")\n                if not user_id:\n                    raise ValueError(\"user_id is required\")\n\n                if not get_client().is_initialized():\n                    logger.warning(\n                        f\"LaunchDarkly not initialized, using default={default}\"\n                    )\n                    is_enabled = default\n                else:\n                    context = create_context(str(user_id))\n                    is_enabled = get_client().variation(flag_key, context, default)\n\n                if not is_enabled:\n                    raise HTTPException(status_code=404, detail=\"Feature not available\")\n\n                result = func(*args, **kwargs)\n                if asyncio.iscoroutine(result):\n                    return await result\n                return cast(T, result)\n            except Exception as e:\n                logger.error(f\"Error evaluating feature flag {flag_key}: {e}\")\n                raise\n\n        @wraps(func)\n        def sync_wrapper(*args: P.args, **kwargs: P.kwargs) -> T:\n            try:\n                user_id = kwargs.get(\"user_id\")\n                if not user_id:\n                    raise ValueError(\"user_id is required\")\n\n                if not get_client().is_initialized():\n                    logger.warning(\n                        f\"LaunchDarkly not initialized, using default={default}\"\n                    )\n                    is_enabled = default\n                else:\n                    context = create_context(str(user_id))\n                    is_enabled = get_client().variation(flag_key, context, default)\n\n                if not is_enabled:\n                    raise HTTPException(status_code=404, detail=\"Feature not available\")\n\n                return cast(T, func(*args, **kwargs))\n            except Exception as e:\n                logger.error(f\"Error evaluating feature flag {flag_key}: {e}\")\n                raise\n\n        return cast(\n            Callable[P, Union[T, Awaitable[T]]],\n            async_wrapper if asyncio.iscoroutinefunction(func) else sync_wrapper,\n        )\n\n    return decorator\n\n\ndef percentage_rollout(\n    flag_key: str,\n    default: bool = False,\n) -> Callable[\n    [Callable[P, Union[T, Awaitable[T]]]], Callable[P, Union[T, Awaitable[T]]]\n]:\n    \"\"\"Decorator for percentage-based rollouts.\"\"\"\n    return feature_flag(flag_key, default)\n\n\ndef beta_feature(\n    flag_key: Optional[str] = None,\n    unauthorized_response: Any = {\"message\": \"Not available in beta\"},\n) -> Callable[\n    [Callable[P, Union[T, Awaitable[T]]]], Callable[P, Union[T, Awaitable[T]]]\n]:\n    \"\"\"Decorator for beta features.\"\"\"\n    actual_key = f\"beta-{flag_key}\" if flag_key else \"beta\"\n    return feature_flag(actual_key, False)\n\n\n@contextlib.contextmanager\ndef mock_flag_variation(flag_key: str, return_value: Any):\n    \"\"\"Context manager for testing feature flags.\"\"\"\n    original_variation = get_client().variation\n    get_client().variation = lambda key, context, default: (\n        return_value if key == flag_key else original_variation(key, context, default)\n    )\n    try:\n        yield\n    finally:\n        get_client().variation = original_variation\n",
    "children": [
        {
            "type": "import_statement",
            "label": "import asyncio",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "asyncio",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "asyncio",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import contextlib",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "contextlib",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "contextlib",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import logging",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "logging",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "logging",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from functools import wraps",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "functools",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "functools",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "wraps",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "wraps",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from typing import Any, Awaitable, Callable, Dict, Optional, TypeVar, Union, cast",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "typing",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "typing",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Any",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Any",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Awaitable",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Awaitable",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Callable",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Callable",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Dict",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Dict",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Optional",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Optional",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "TypeVar",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "TypeVar",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Union",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Union",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "cast",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "cast",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import ldclient",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "ldclient",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "ldclient",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from fastapi import HTTPException",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "fastapi",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "fastapi",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "HTTPException",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "HTTPException",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from ldclient import Context, LDClient",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "ldclient",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "ldclient",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Context",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Context",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "LDClient",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "LDClient",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from ldclient.config import Config",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "ldclient.config",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "ldclient",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "config",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Config",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Config",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from typing_extensions import ParamSpec",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "typing_extensions",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "typing_extensions",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "ParamSpec",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "ParamSpec",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from .config import SETTINGS",
            "children": [
                {
                    "type": "relative_import",
                    "label": ".config",
                    "children": [
                        {
                            "type": "import_prefix",
                            "label": ".",
                            "children": []
                        },
                        {
                            "type": "dotted_name",
                            "label": "config",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "config",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "SETTINGS",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "SETTINGS",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "logger = logging.getLogger(__name__)",
            "children": [
                {
                    "type": "assignment",
                    "label": "logger = logging.getLogger(__name__)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "logger",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "logging.getLogger(__name__)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "logging.getLogger",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "logging",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "getLogger",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(__name__)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "__name__",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "logging.basicConfig(level=logging.DEBUG)",
            "children": [
                {
                    "type": "call",
                    "label": "logging.basicConfig(level=logging.DEBUG)",
                    "children": [
                        {
                            "type": "attribute",
                            "label": "logging.basicConfig",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "logging",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "basicConfig",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "argument_list",
                            "label": "(level=logging.DEBUG)",
                            "children": [
                                {
                                    "type": "keyword_argument",
                                    "label": "level=logging.DEBUG",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "level",
                                            "children": []
                                        },
                                        {
                                            "type": "attribute",
                                            "label": "logging.DEBUG",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "logging",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "DEBUG",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "P = ParamSpec(\"P\")",
            "children": [
                {
                    "type": "assignment",
                    "label": "P = ParamSpec(\"P\")",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "P",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "ParamSpec(\"P\")",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "ParamSpec",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\"P\")",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"P\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "P",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "T = TypeVar(\"T\")",
            "children": [
                {
                    "type": "assignment",
                    "label": "T = TypeVar(\"T\")",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "T",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "TypeVar(\"T\")",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "TypeVar",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\"T\")",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"T\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "T",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def get_client() -> LDClient:\n    \"\"\"Get the LaunchDarkly client singleton.\"\"\"\n    return ldclient.get()",
            "children": [
                {
                    "type": "identifier",
                    "label": "get_client",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "()",
                    "children": []
                },
                {
                    "type": "type",
                    "label": "LDClient",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "LDClient",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"Get the LaunchDarkly client singleton.\"\"\"\n    return ldclient.get()",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"Get the LaunchDarkly client singleton.\"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"Get the LaunchDarkly client singleton.\"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "Get the LaunchDarkly client singleton.",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return ldclient.get()",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "ldclient.get()",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "ldclient.get",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "ldclient",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "get",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "()",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def initialize_launchdarkly() -> None:\n    sdk_key = SETTINGS.launch_darkly_sdk_key\n    logger.debug(\n        f\"Initializing LaunchDarkly with SDK key: {'present' if sdk_key else 'missing'}\"\n    )\n\n    if not sdk_key:\n        logger.warning(\"LaunchDarkly SDK key not configured\")\n        return\n\n    config = Config(sdk_key)\n    ldclient.set_config(config)\n\n    if ldclient.get().is_initialized():\n        logger.info(\"LaunchDarkly client initialized successfully\")\n    else:\n        logger.error(\"LaunchDarkly client failed to initialize\")",
            "children": [
                {
                    "type": "identifier",
                    "label": "initialize_launchdarkly",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "()",
                    "children": []
                },
                {
                    "type": "type",
                    "label": "None",
                    "children": [
                        {
                            "type": "none",
                            "label": "None",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "sdk_key = SETTINGS.launch_darkly_sdk_key\n    logger.debug(\n        f\"Initializing LaunchDarkly with SDK key: {'present' if sdk_key else 'missing'}\"\n    )\n\n    if not sdk_key:\n        logger.warning(\"LaunchDarkly SDK key not configured\")\n        return\n\n    config = Config(sdk_key)\n    ldclient.set_config(config)\n\n    if ldclient.get().is_initialized():\n        logger.info(\"LaunchDarkly client initialized successfully\")\n    else:\n        logger.error(\"LaunchDarkly client failed to initialize\")",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "sdk_key = SETTINGS.launch_darkly_sdk_key",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "sdk_key = SETTINGS.launch_darkly_sdk_key",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "sdk_key",
                                            "children": []
                                        },
                                        {
                                            "type": "attribute",
                                            "label": "SETTINGS.launch_darkly_sdk_key",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "SETTINGS",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "launch_darkly_sdk_key",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "logger.debug(\n        f\"Initializing LaunchDarkly with SDK key: {'present' if sdk_key else 'missing'}\"\n    )",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "logger.debug(\n        f\"Initializing LaunchDarkly with SDK key: {'present' if sdk_key else 'missing'}\"\n    )",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "logger.debug",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "logger",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "debug",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(\n        f\"Initializing LaunchDarkly with SDK key: {'present' if sdk_key else 'missing'}\"\n    )",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "f\"Initializing LaunchDarkly with SDK key: {'present' if sdk_key else 'missing'}\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "f\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Initializing LaunchDarkly with SDK key: ",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "interpolation",
                                                            "label": "{'present' if sdk_key else 'missing'}",
                                                            "children": [
                                                                {
                                                                    "type": "conditional_expression",
                                                                    "label": "'present' if sdk_key else 'missing'",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "'present'",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "present",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "sdk_key",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "'missing'",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "missing",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if not sdk_key:\n        logger.warning(\"LaunchDarkly SDK key not configured\")\n        return",
                            "children": [
                                {
                                    "type": "not_operator",
                                    "label": "not sdk_key",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "sdk_key",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "logger.warning(\"LaunchDarkly SDK key not configured\")\n        return",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "logger.warning(\"LaunchDarkly SDK key not configured\")",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "logger.warning(\"LaunchDarkly SDK key not configured\")",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "logger.warning",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "logger",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "warning",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\"LaunchDarkly SDK key not configured\")",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"LaunchDarkly SDK key not configured\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "LaunchDarkly SDK key not configured",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "label": "return",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "config = Config(sdk_key)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "config = Config(sdk_key)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "config",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "Config(sdk_key)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "Config",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(sdk_key)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "sdk_key",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "ldclient.set_config(config)",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "ldclient.set_config(config)",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "ldclient.set_config",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "ldclient",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "set_config",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(config)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "config",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if ldclient.get().is_initialized():\n        logger.info(\"LaunchDarkly client initialized successfully\")\n    else:\n        logger.error(\"LaunchDarkly client failed to initialize\")",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "ldclient.get().is_initialized()",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "ldclient.get().is_initialized",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "ldclient.get()",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "ldclient.get",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "ldclient",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "get",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "()",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "is_initialized",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "()",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "logger.info(\"LaunchDarkly client initialized successfully\")",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "logger.info(\"LaunchDarkly client initialized successfully\")",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "logger.info(\"LaunchDarkly client initialized successfully\")",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "logger.info",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "logger",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "info",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\"LaunchDarkly client initialized successfully\")",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"LaunchDarkly client initialized successfully\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "LaunchDarkly client initialized successfully",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "else_clause",
                                    "label": "else:\n        logger.error(\"LaunchDarkly client failed to initialize\")",
                                    "children": [
                                        {
                                            "type": "block",
                                            "label": "logger.error(\"LaunchDarkly client failed to initialize\")",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "logger.error(\"LaunchDarkly client failed to initialize\")",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "logger.error(\"LaunchDarkly client failed to initialize\")",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "logger.error",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "logger",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "error",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\"LaunchDarkly client failed to initialize\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"LaunchDarkly client failed to initialize\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "LaunchDarkly client failed to initialize",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def shutdown_launchdarkly() -> None:\n    \"\"\"Shutdown the LaunchDarkly client.\"\"\"\n    if ldclient.get().is_initialized():\n        ldclient.get().close()\n        logger.info(\"LaunchDarkly client closed successfully\")",
            "children": [
                {
                    "type": "identifier",
                    "label": "shutdown_launchdarkly",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "()",
                    "children": []
                },
                {
                    "type": "type",
                    "label": "None",
                    "children": [
                        {
                            "type": "none",
                            "label": "None",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"Shutdown the LaunchDarkly client.\"\"\"\n    if ldclient.get().is_initialized():\n        ldclient.get().close()\n        logger.info(\"LaunchDarkly client closed successfully\")",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"Shutdown the LaunchDarkly client.\"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"Shutdown the LaunchDarkly client.\"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "Shutdown the LaunchDarkly client.",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if ldclient.get().is_initialized():\n        ldclient.get().close()\n        logger.info(\"LaunchDarkly client closed successfully\")",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "ldclient.get().is_initialized()",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "ldclient.get().is_initialized",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "ldclient.get()",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "ldclient.get",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "ldclient",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "get",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "()",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "is_initialized",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "()",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "ldclient.get().close()\n        logger.info(\"LaunchDarkly client closed successfully\")",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "ldclient.get().close()",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "ldclient.get().close()",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "ldclient.get().close",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "ldclient.get()",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "ldclient.get",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "ldclient",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "get",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "close",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "()",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "logger.info(\"LaunchDarkly client closed successfully\")",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "logger.info(\"LaunchDarkly client closed successfully\")",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "logger.info",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "logger",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "info",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\"LaunchDarkly client closed successfully\")",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"LaunchDarkly client closed successfully\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "LaunchDarkly client closed successfully",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def create_context(\n    user_id: str, additional_attributes: Optional[Dict[str, Any]] = None\n) -> Context:\n    \"\"\"Create LaunchDarkly context with optional additional attributes.\"\"\"\n    builder = Context.builder(str(user_id)).kind(\"user\")\n    if additional_attributes:\n        for key, value in additional_attributes.items():\n            builder.set(key, value)\n    return builder.build()",
            "children": [
                {
                    "type": "identifier",
                    "label": "create_context",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(\n    user_id: str, additional_attributes: Optional[Dict[str, Any]] = None\n)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "user_id: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "user_id",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_default_parameter",
                            "label": "additional_attributes: Optional[Dict[str, Any]] = None",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "additional_attributes",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "Optional[Dict[str, Any]]",
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "Optional[Dict[str, Any]]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "Optional",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[Dict[str, Any]]",
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "Dict[str, Any]",
                                                            "children": [
                                                                {
                                                                    "type": "generic_type",
                                                                    "label": "Dict[str, Any]",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "Dict",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "type_parameter",
                                                                            "label": "[str, Any]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "type",
                                                                                    "label": "str",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "str",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "type",
                                                                                    "label": "Any",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "Any",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "none",
                                    "label": "None",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "Context",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Context",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"Create LaunchDarkly context with optional additional attributes.\"\"\"\n    builder = Context.builder(str(user_id)).kind(\"user\")\n    if additional_attributes:\n        for key, value in additional_attributes.items():\n            builder.set(key, value)\n    return builder.build()",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"Create LaunchDarkly context with optional additional attributes.\"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"Create LaunchDarkly context with optional additional attributes.\"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "Create LaunchDarkly context with optional additional attributes.",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "builder = Context.builder(str(user_id)).kind(\"user\")",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "builder = Context.builder(str(user_id)).kind(\"user\")",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "builder",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "Context.builder(str(user_id)).kind(\"user\")",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "Context.builder(str(user_id)).kind",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "Context.builder(str(user_id))",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "Context.builder",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "Context",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "builder",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(str(user_id))",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "str(user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "str",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "kind",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(\"user\")",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"user\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "user",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if additional_attributes:\n        for key, value in additional_attributes.items():\n            builder.set(key, value)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "additional_attributes",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "label": "for key, value in additional_attributes.items():\n            builder.set(key, value)",
                                    "children": [
                                        {
                                            "type": "for_statement",
                                            "label": "for key, value in additional_attributes.items():\n            builder.set(key, value)",
                                            "children": [
                                                {
                                                    "type": "pattern_list",
                                                    "label": "key, value",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "key",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "value",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "additional_attributes.items()",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "additional_attributes.items",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "additional_attributes",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "items",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "()",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "builder.set(key, value)",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "builder.set(key, value)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "builder.set(key, value)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "builder.set",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "builder",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "set",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(key, value)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "key",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "value",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return builder.build()",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "builder.build()",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "builder.build",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "builder",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "build",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "()",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def feature_flag(\n    flag_key: str,\n    default: bool = False,\n) -> Callable[\n    [Callable[P, Union[T, Awaitable[T]]]], Callable[P, Union[T, Awaitable[T]]]\n]:\n    \"\"\"\n    Decorator for feature flag protected endpoints.\n    \"\"\"\n\n    def decorator(\n        func: Callable[P, Union[T, Awaitable[T]]],\n    ) -> Callable[P, Union[T, Awaitable[T]]]:\n        @wraps(func)\n        async def async_wrapper(*args: P.args, **kwargs: P.kwargs) -> T:\n            try:\n                user_id = kwargs.get(\"user_id\")\n                if not user_id:\n                    raise ValueError(\"user_id is required\")\n\n                if not get_client().is_initialized():\n                    logger.warning(\n                        f\"LaunchDarkly not initialized, using default={default}\"\n                    )\n                    is_enabled = default\n                else:\n                    context = create_context(str(user_id))\n                    is_enabled = get_client().variation(flag_key, context, default)\n\n                if not is_enabled:\n                    raise HTTPException(status_code=404, detail=\"Feature not available\")\n\n                result = func(*args, **kwargs)\n                if asyncio.iscoroutine(result):\n                    return await result\n                return cast(T, result)\n            except Exception as e:\n                logger.error(f\"Error evaluating feature flag {flag_key}: {e}\")\n                raise\n\n        @wraps(func)\n        def sync_wrapper(*args: P.args, **kwargs: P.kwargs) -> T:\n            try:\n                user_id = kwargs.get(\"user_id\")\n                if not user_id:\n                    raise ValueError(\"user_id is required\")\n\n                if not get_client().is_initialized():\n                    logger.warning(\n                        f\"LaunchDarkly not initialized, using default={default}\"\n                    )\n                    is_enabled = default\n                else:\n                    context = create_context(str(user_id))\n                    is_enabled = get_client().variation(flag_key, context, default)\n\n                if not is_enabled:\n                    raise HTTPException(status_code=404, detail=\"Feature not available\")\n\n                return cast(T, func(*args, **kwargs))\n            except Exception as e:\n                logger.error(f\"Error evaluating feature flag {flag_key}: {e}\")\n                raise\n\n        return cast(\n            Callable[P, Union[T, Awaitable[T]]],\n            async_wrapper if asyncio.iscoroutinefunction(func) else sync_wrapper,\n        )\n\n    return decorator",
            "children": [
                {
                    "type": "identifier",
                    "label": "feature_flag",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(\n    flag_key: str,\n    default: bool = False,\n)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "flag_key: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "flag_key",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_default_parameter",
                            "label": "default: bool = False",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "default",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "bool",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "bool",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "false",
                                    "label": "False",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "Callable[\n    [Callable[P, Union[T, Awaitable[T]]]], Callable[P, Union[T, Awaitable[T]]]\n]",
                    "children": [
                        {
                            "type": "generic_type",
                            "label": "Callable[\n    [Callable[P, Union[T, Awaitable[T]]]], Callable[P, Union[T, Awaitable[T]]]\n]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "Callable",
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "label": "[\n    [Callable[P, Union[T, Awaitable[T]]]], Callable[P, Union[T, Awaitable[T]]]\n]",
                                    "children": [
                                        {
                                            "type": "type",
                                            "label": "[Callable[P, Union[T, Awaitable[T]]]]",
                                            "children": [
                                                {
                                                    "type": "list",
                                                    "label": "[Callable[P, Union[T, Awaitable[T]]]]",
                                                    "children": [
                                                        {
                                                            "type": "subscript",
                                                            "label": "Callable[P, Union[T, Awaitable[T]]]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Callable",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "P",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "subscript",
                                                                    "label": "Union[T, Awaitable[T]]",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "Union",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "T",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "subscript",
                                                                            "label": "Awaitable[T]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Awaitable",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "T",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "Callable[P, Union[T, Awaitable[T]]]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Callable[P, Union[T, Awaitable[T]]]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Callable",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[P, Union[T, Awaitable[T]]]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "P",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "P",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Union[T, Awaitable[T]]",
                                                                    "children": [
                                                                        {
                                                                            "type": "generic_type",
                                                                            "label": "Union[T, Awaitable[T]]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Union",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "type_parameter",
                                                                                    "label": "[T, Awaitable[T]]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "type",
                                                                                            "label": "T",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "T",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "type",
                                                                                            "label": "Awaitable[T]",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "generic_type",
                                                                                                    "label": "Awaitable[T]",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "Awaitable",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "type_parameter",
                                                                                                            "label": "[T]",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "type",
                                                                                                                    "label": "T",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "T",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    Decorator for feature flag protected endpoints.\n    \"\"\"\n\n    def decorator(\n        func: Callable[P, Union[T, Awaitable[T]]],\n    ) -> Callable[P, Union[T, Awaitable[T]]]:\n        @wraps(func)\n        async def async_wrapper(*args: P.args, **kwargs: P.kwargs) -> T:\n            try:\n                user_id = kwargs.get(\"user_id\")\n                if not user_id:\n                    raise ValueError(\"user_id is required\")\n\n                if not get_client().is_initialized():\n                    logger.warning(\n                        f\"LaunchDarkly not initialized, using default={default}\"\n                    )\n                    is_enabled = default\n                else:\n                    context = create_context(str(user_id))\n                    is_enabled = get_client().variation(flag_key, context, default)\n\n                if not is_enabled:\n                    raise HTTPException(status_code=404, detail=\"Feature not available\")\n\n                result = func(*args, **kwargs)\n                if asyncio.iscoroutine(result):\n                    return await result\n                return cast(T, result)\n            except Exception as e:\n                logger.error(f\"Error evaluating feature flag {flag_key}: {e}\")\n                raise\n\n        @wraps(func)\n        def sync_wrapper(*args: P.args, **kwargs: P.kwargs) -> T:\n            try:\n                user_id = kwargs.get(\"user_id\")\n                if not user_id:\n                    raise ValueError(\"user_id is required\")\n\n                if not get_client().is_initialized():\n                    logger.warning(\n                        f\"LaunchDarkly not initialized, using default={default}\"\n                    )\n                    is_enabled = default\n                else:\n                    context = create_context(str(user_id))\n                    is_enabled = get_client().variation(flag_key, context, default)\n\n                if not is_enabled:\n                    raise HTTPException(status_code=404, detail=\"Feature not available\")\n\n                return cast(T, func(*args, **kwargs))\n            except Exception as e:\n                logger.error(f\"Error evaluating feature flag {flag_key}: {e}\")\n                raise\n\n        return cast(\n            Callable[P, Union[T, Awaitable[T]]],\n            async_wrapper if asyncio.iscoroutinefunction(func) else sync_wrapper,\n        )\n\n    return decorator",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    Decorator for feature flag protected endpoints.\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    Decorator for feature flag protected endpoints.\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    Decorator for feature flag protected endpoints.\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def decorator(\n        func: Callable[P, Union[T, Awaitable[T]]],\n    ) -> Callable[P, Union[T, Awaitable[T]]]:\n        @wraps(func)\n        async def async_wrapper(*args: P.args, **kwargs: P.kwargs) -> T:\n            try:\n                user_id = kwargs.get(\"user_id\")\n                if not user_id:\n                    raise ValueError(\"user_id is required\")\n\n                if not get_client().is_initialized():\n                    logger.warning(\n                        f\"LaunchDarkly not initialized, using default={default}\"\n                    )\n                    is_enabled = default\n                else:\n                    context = create_context(str(user_id))\n                    is_enabled = get_client().variation(flag_key, context, default)\n\n                if not is_enabled:\n                    raise HTTPException(status_code=404, detail=\"Feature not available\")\n\n                result = func(*args, **kwargs)\n                if asyncio.iscoroutine(result):\n                    return await result\n                return cast(T, result)\n            except Exception as e:\n                logger.error(f\"Error evaluating feature flag {flag_key}: {e}\")\n                raise\n\n        @wraps(func)\n        def sync_wrapper(*args: P.args, **kwargs: P.kwargs) -> T:\n            try:\n                user_id = kwargs.get(\"user_id\")\n                if not user_id:\n                    raise ValueError(\"user_id is required\")\n\n                if not get_client().is_initialized():\n                    logger.warning(\n                        f\"LaunchDarkly not initialized, using default={default}\"\n                    )\n                    is_enabled = default\n                else:\n                    context = create_context(str(user_id))\n                    is_enabled = get_client().variation(flag_key, context, default)\n\n                if not is_enabled:\n                    raise HTTPException(status_code=404, detail=\"Feature not available\")\n\n                return cast(T, func(*args, **kwargs))\n            except Exception as e:\n                logger.error(f\"Error evaluating feature flag {flag_key}: {e}\")\n                raise\n\n        return cast(\n            Callable[P, Union[T, Awaitable[T]]],\n            async_wrapper if asyncio.iscoroutinefunction(func) else sync_wrapper,\n        )",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "decorator",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(\n        func: Callable[P, Union[T, Awaitable[T]]],\n    )",
                                    "children": [
                                        {
                                            "type": "typed_parameter",
                                            "label": "func: Callable[P, Union[T, Awaitable[T]]]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "func",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "Callable[P, Union[T, Awaitable[T]]]",
                                                    "children": [
                                                        {
                                                            "type": "generic_type",
                                                            "label": "Callable[P, Union[T, Awaitable[T]]]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Callable",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "type_parameter",
                                                                    "label": "[P, Union[T, Awaitable[T]]]",
                                                                    "children": [
                                                                        {
                                                                            "type": "type",
                                                                            "label": "P",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "P",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "type",
                                                                            "label": "Union[T, Awaitable[T]]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "generic_type",
                                                                                    "label": "Union[T, Awaitable[T]]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "Union",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "type_parameter",
                                                                                            "label": "[T, Awaitable[T]]",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "type",
                                                                                                    "label": "T",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "T",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "type",
                                                                                                    "label": "Awaitable[T]",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "generic_type",
                                                                                                            "label": "Awaitable[T]",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "Awaitable",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "type_parameter",
                                                                                                                    "label": "[T]",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "type",
                                                                                                                            "label": "T",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "T",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "label": "Callable[P, Union[T, Awaitable[T]]]",
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "Callable[P, Union[T, Awaitable[T]]]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "Callable",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[P, Union[T, Awaitable[T]]]",
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "P",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "P",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "Union[T, Awaitable[T]]",
                                                            "children": [
                                                                {
                                                                    "type": "generic_type",
                                                                    "label": "Union[T, Awaitable[T]]",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "Union",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "type_parameter",
                                                                            "label": "[T, Awaitable[T]]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "type",
                                                                                    "label": "T",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "T",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "type",
                                                                                    "label": "Awaitable[T]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "generic_type",
                                                                                            "label": "Awaitable[T]",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "Awaitable",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "type_parameter",
                                                                                                    "label": "[T]",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "type",
                                                                                                            "label": "T",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "T",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "@wraps(func)\n        async def async_wrapper(*args: P.args, **kwargs: P.kwargs) -> T:\n            try:\n                user_id = kwargs.get(\"user_id\")\n                if not user_id:\n                    raise ValueError(\"user_id is required\")\n\n                if not get_client().is_initialized():\n                    logger.warning(\n                        f\"LaunchDarkly not initialized, using default={default}\"\n                    )\n                    is_enabled = default\n                else:\n                    context = create_context(str(user_id))\n                    is_enabled = get_client().variation(flag_key, context, default)\n\n                if not is_enabled:\n                    raise HTTPException(status_code=404, detail=\"Feature not available\")\n\n                result = func(*args, **kwargs)\n                if asyncio.iscoroutine(result):\n                    return await result\n                return cast(T, result)\n            except Exception as e:\n                logger.error(f\"Error evaluating feature flag {flag_key}: {e}\")\n                raise\n\n        @wraps(func)\n        def sync_wrapper(*args: P.args, **kwargs: P.kwargs) -> T:\n            try:\n                user_id = kwargs.get(\"user_id\")\n                if not user_id:\n                    raise ValueError(\"user_id is required\")\n\n                if not get_client().is_initialized():\n                    logger.warning(\n                        f\"LaunchDarkly not initialized, using default={default}\"\n                    )\n                    is_enabled = default\n                else:\n                    context = create_context(str(user_id))\n                    is_enabled = get_client().variation(flag_key, context, default)\n\n                if not is_enabled:\n                    raise HTTPException(status_code=404, detail=\"Feature not available\")\n\n                return cast(T, func(*args, **kwargs))\n            except Exception as e:\n                logger.error(f\"Error evaluating feature flag {flag_key}: {e}\")\n                raise\n\n        return cast(\n            Callable[P, Union[T, Awaitable[T]]],\n            async_wrapper if asyncio.iscoroutinefunction(func) else sync_wrapper,\n        )",
                                    "children": [
                                        {
                                            "type": "decorated_definition",
                                            "label": "@wraps(func)\n        async def async_wrapper(*args: P.args, **kwargs: P.kwargs) -> T:\n            try:\n                user_id = kwargs.get(\"user_id\")\n                if not user_id:\n                    raise ValueError(\"user_id is required\")\n\n                if not get_client().is_initialized():\n                    logger.warning(\n                        f\"LaunchDarkly not initialized, using default={default}\"\n                    )\n                    is_enabled = default\n                else:\n                    context = create_context(str(user_id))\n                    is_enabled = get_client().variation(flag_key, context, default)\n\n                if not is_enabled:\n                    raise HTTPException(status_code=404, detail=\"Feature not available\")\n\n                result = func(*args, **kwargs)\n                if asyncio.iscoroutine(result):\n                    return await result\n                return cast(T, result)\n            except Exception as e:\n                logger.error(f\"Error evaluating feature flag {flag_key}: {e}\")\n                raise",
                                            "children": [
                                                {
                                                    "type": "decorator",
                                                    "label": "@wraps(func)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "wraps(func)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "wraps",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(func)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "func",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "function_definition",
                                                    "label": "async def async_wrapper(*args: P.args, **kwargs: P.kwargs) -> T:\n            try:\n                user_id = kwargs.get(\"user_id\")\n                if not user_id:\n                    raise ValueError(\"user_id is required\")\n\n                if not get_client().is_initialized():\n                    logger.warning(\n                        f\"LaunchDarkly not initialized, using default={default}\"\n                    )\n                    is_enabled = default\n                else:\n                    context = create_context(str(user_id))\n                    is_enabled = get_client().variation(flag_key, context, default)\n\n                if not is_enabled:\n                    raise HTTPException(status_code=404, detail=\"Feature not available\")\n\n                result = func(*args, **kwargs)\n                if asyncio.iscoroutine(result):\n                    return await result\n                return cast(T, result)\n            except Exception as e:\n                logger.error(f\"Error evaluating feature flag {flag_key}: {e}\")\n                raise",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "async_wrapper",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "parameters",
                                                            "label": "(*args: P.args, **kwargs: P.kwargs)",
                                                            "children": [
                                                                {
                                                                    "type": "typed_parameter",
                                                                    "label": "*args: P.args",
                                                                    "children": [
                                                                        {
                                                                            "type": "list_splat_pattern",
                                                                            "label": "*args",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "args",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "type",
                                                                            "label": "P.args",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "P.args",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "P",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "args",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "typed_parameter",
                                                                    "label": "**kwargs: P.kwargs",
                                                                    "children": [
                                                                        {
                                                                            "type": "dictionary_splat_pattern",
                                                                            "label": "**kwargs",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "kwargs",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "type",
                                                                            "label": "P.kwargs",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "P.kwargs",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "P",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "kwargs",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "T",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "T",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "try:\n                user_id = kwargs.get(\"user_id\")\n                if not user_id:\n                    raise ValueError(\"user_id is required\")\n\n                if not get_client().is_initialized():\n                    logger.warning(\n                        f\"LaunchDarkly not initialized, using default={default}\"\n                    )\n                    is_enabled = default\n                else:\n                    context = create_context(str(user_id))\n                    is_enabled = get_client().variation(flag_key, context, default)\n\n                if not is_enabled:\n                    raise HTTPException(status_code=404, detail=\"Feature not available\")\n\n                result = func(*args, **kwargs)\n                if asyncio.iscoroutine(result):\n                    return await result\n                return cast(T, result)\n            except Exception as e:\n                logger.error(f\"Error evaluating feature flag {flag_key}: {e}\")\n                raise",
                                                            "children": [
                                                                {
                                                                    "type": "try_statement",
                                                                    "label": "try:\n                user_id = kwargs.get(\"user_id\")\n                if not user_id:\n                    raise ValueError(\"user_id is required\")\n\n                if not get_client().is_initialized():\n                    logger.warning(\n                        f\"LaunchDarkly not initialized, using default={default}\"\n                    )\n                    is_enabled = default\n                else:\n                    context = create_context(str(user_id))\n                    is_enabled = get_client().variation(flag_key, context, default)\n\n                if not is_enabled:\n                    raise HTTPException(status_code=404, detail=\"Feature not available\")\n\n                result = func(*args, **kwargs)\n                if asyncio.iscoroutine(result):\n                    return await result\n                return cast(T, result)\n            except Exception as e:\n                logger.error(f\"Error evaluating feature flag {flag_key}: {e}\")\n                raise",
                                                                    "children": [
                                                                        {
                                                                            "type": "block",
                                                                            "label": "user_id = kwargs.get(\"user_id\")\n                if not user_id:\n                    raise ValueError(\"user_id is required\")\n\n                if not get_client().is_initialized():\n                    logger.warning(\n                        f\"LaunchDarkly not initialized, using default={default}\"\n                    )\n                    is_enabled = default\n                else:\n                    context = create_context(str(user_id))\n                    is_enabled = get_client().variation(flag_key, context, default)\n\n                if not is_enabled:\n                    raise HTTPException(status_code=404, detail=\"Feature not available\")\n\n                result = func(*args, **kwargs)\n                if asyncio.iscoroutine(result):\n                    return await result\n                return cast(T, result)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "expression_statement",
                                                                                    "label": "user_id = kwargs.get(\"user_id\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "assignment",
                                                                                            "label": "user_id = kwargs.get(\"user_id\")",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "user_id",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "kwargs.get(\"user_id\")",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "kwargs.get",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "kwargs",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "get",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(\"user_id\")",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string",
                                                                                                                    "label": "\"user_id\"",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "string_start",
                                                                                                                            "label": "\"",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": "user_id",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_end",
                                                                                                                            "label": "\"",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "if_statement",
                                                                                    "label": "if not user_id:\n                    raise ValueError(\"user_id is required\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "not_operator",
                                                                                            "label": "not user_id",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "user_id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "block",
                                                                                            "label": "raise ValueError(\"user_id is required\")",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "raise_statement",
                                                                                                    "label": "raise ValueError(\"user_id is required\")",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "call",
                                                                                                            "label": "ValueError(\"user_id is required\")",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "ValueError",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "argument_list",
                                                                                                                    "label": "(\"user_id is required\")",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "string",
                                                                                                                            "label": "\"user_id is required\"",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "string_start",
                                                                                                                                    "label": "\"",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "string_content",
                                                                                                                                    "label": "user_id is required",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "string_end",
                                                                                                                                    "label": "\"",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "if_statement",
                                                                                    "label": "if not get_client().is_initialized():\n                    logger.warning(\n                        f\"LaunchDarkly not initialized, using default={default}\"\n                    )\n                    is_enabled = default\n                else:\n                    context = create_context(str(user_id))\n                    is_enabled = get_client().variation(flag_key, context, default)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "not_operator",
                                                                                            "label": "not get_client().is_initialized()",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "get_client().is_initialized()",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "get_client().is_initialized",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "call",
                                                                                                                    "label": "get_client()",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "get_client",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "argument_list",
                                                                                                                            "label": "()",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "is_initialized",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "()",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "block",
                                                                                            "label": "logger.warning(\n                        f\"LaunchDarkly not initialized, using default={default}\"\n                    )\n                    is_enabled = default",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "expression_statement",
                                                                                                    "label": "logger.warning(\n                        f\"LaunchDarkly not initialized, using default={default}\"\n                    )",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "call",
                                                                                                            "label": "logger.warning(\n                        f\"LaunchDarkly not initialized, using default={default}\"\n                    )",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "attribute",
                                                                                                                    "label": "logger.warning",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "logger",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "warning",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "argument_list",
                                                                                                                    "label": "(\n                        f\"LaunchDarkly not initialized, using default={default}\"\n                    )",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "string",
                                                                                                                            "label": "f\"LaunchDarkly not initialized, using default={default}\"",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "string_start",
                                                                                                                                    "label": "f\"",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "string_content",
                                                                                                                                    "label": "LaunchDarkly not initialized, using default=",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "interpolation",
                                                                                                                                    "label": "{default}",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "default",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "string_end",
                                                                                                                                    "label": "\"",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "expression_statement",
                                                                                                    "label": "is_enabled = default",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "assignment",
                                                                                                            "label": "is_enabled = default",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "is_enabled",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "default",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "else_clause",
                                                                                            "label": "else:\n                    context = create_context(str(user_id))\n                    is_enabled = get_client().variation(flag_key, context, default)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "block",
                                                                                                    "label": "context = create_context(str(user_id))\n                    is_enabled = get_client().variation(flag_key, context, default)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "expression_statement",
                                                                                                            "label": "context = create_context(str(user_id))",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "assignment",
                                                                                                                    "label": "context = create_context(str(user_id))",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "context",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "call",
                                                                                                                            "label": "create_context(str(user_id))",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "create_context",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "argument_list",
                                                                                                                                    "label": "(str(user_id))",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "call",
                                                                                                                                            "label": "str(user_id)",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "str",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "argument_list",
                                                                                                                                                    "label": "(user_id)",
                                                                                                                                                    "children": [
                                                                                                                                                        {
                                                                                                                                                            "type": "identifier",
                                                                                                                                                            "label": "user_id",
                                                                                                                                                            "children": []
                                                                                                                                                        }
                                                                                                                                                    ]
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "expression_statement",
                                                                                                            "label": "is_enabled = get_client().variation(flag_key, context, default)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "assignment",
                                                                                                                    "label": "is_enabled = get_client().variation(flag_key, context, default)",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "is_enabled",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "call",
                                                                                                                            "label": "get_client().variation(flag_key, context, default)",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "attribute",
                                                                                                                                    "label": "get_client().variation",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "call",
                                                                                                                                            "label": "get_client()",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "get_client",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "argument_list",
                                                                                                                                                    "label": "()",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "variation",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "argument_list",
                                                                                                                                    "label": "(flag_key, context, default)",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "flag_key",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "context",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "default",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "if_statement",
                                                                                    "label": "if not is_enabled:\n                    raise HTTPException(status_code=404, detail=\"Feature not available\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "not_operator",
                                                                                            "label": "not is_enabled",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "is_enabled",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "block",
                                                                                            "label": "raise HTTPException(status_code=404, detail=\"Feature not available\")",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "raise_statement",
                                                                                                    "label": "raise HTTPException(status_code=404, detail=\"Feature not available\")",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "call",
                                                                                                            "label": "HTTPException(status_code=404, detail=\"Feature not available\")",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "HTTPException",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "argument_list",
                                                                                                                    "label": "(status_code=404, detail=\"Feature not available\")",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "keyword_argument",
                                                                                                                            "label": "status_code=404",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "status_code",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "integer",
                                                                                                                                    "label": "404",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "keyword_argument",
                                                                                                                            "label": "detail=\"Feature not available\"",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "detail",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "string",
                                                                                                                                    "label": "\"Feature not available\"",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "string_start",
                                                                                                                                            "label": "\"",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "string_content",
                                                                                                                                            "label": "Feature not available",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "string_end",
                                                                                                                                            "label": "\"",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "expression_statement",
                                                                                    "label": "result = func(*args, **kwargs)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "assignment",
                                                                                            "label": "result = func(*args, **kwargs)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "result",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "func(*args, **kwargs)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "func",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(*args, **kwargs)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "list_splat",
                                                                                                                    "label": "*args",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "args",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "dictionary_splat",
                                                                                                                    "label": "**kwargs",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "kwargs",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "if_statement",
                                                                                    "label": "if asyncio.iscoroutine(result):\n                    return await result",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "asyncio.iscoroutine(result)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "asyncio.iscoroutine",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "asyncio",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "iscoroutine",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(result)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "result",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "block",
                                                                                            "label": "return await result",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "return_statement",
                                                                                                    "label": "return await result",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "await",
                                                                                                            "label": "await result",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "result",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "return_statement",
                                                                                    "label": "return cast(T, result)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "cast(T, result)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "cast",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(T, result)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "T",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "result",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "except_clause",
                                                                            "label": "except Exception as e:\n                logger.error(f\"Error evaluating feature flag {flag_key}: {e}\")\n                raise",
                                                                            "children": [
                                                                                {
                                                                                    "type": "as_pattern",
                                                                                    "label": "Exception as e",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "Exception",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "as_pattern_target",
                                                                                            "label": "e",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "e",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "block",
                                                                                    "label": "logger.error(f\"Error evaluating feature flag {flag_key}: {e}\")\n                raise",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "expression_statement",
                                                                                            "label": "logger.error(f\"Error evaluating feature flag {flag_key}: {e}\")",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "logger.error(f\"Error evaluating feature flag {flag_key}: {e}\")",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "logger.error",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "logger",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "error",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(f\"Error evaluating feature flag {flag_key}: {e}\")",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string",
                                                                                                                    "label": "f\"Error evaluating feature flag {flag_key}: {e}\"",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "string_start",
                                                                                                                            "label": "f\"",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": "Error evaluating feature flag ",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "interpolation",
                                                                                                                            "label": "{flag_key}",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "flag_key",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": ": ",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "interpolation",
                                                                                                                            "label": "{e}",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "e",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_end",
                                                                                                                            "label": "\"",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "raise_statement",
                                                                                            "label": "raise",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "decorated_definition",
                                            "label": "@wraps(func)\n        def sync_wrapper(*args: P.args, **kwargs: P.kwargs) -> T:\n            try:\n                user_id = kwargs.get(\"user_id\")\n                if not user_id:\n                    raise ValueError(\"user_id is required\")\n\n                if not get_client().is_initialized():\n                    logger.warning(\n                        f\"LaunchDarkly not initialized, using default={default}\"\n                    )\n                    is_enabled = default\n                else:\n                    context = create_context(str(user_id))\n                    is_enabled = get_client().variation(flag_key, context, default)\n\n                if not is_enabled:\n                    raise HTTPException(status_code=404, detail=\"Feature not available\")\n\n                return cast(T, func(*args, **kwargs))\n            except Exception as e:\n                logger.error(f\"Error evaluating feature flag {flag_key}: {e}\")\n                raise",
                                            "children": [
                                                {
                                                    "type": "decorator",
                                                    "label": "@wraps(func)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "wraps(func)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "wraps",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(func)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "func",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "function_definition",
                                                    "label": "def sync_wrapper(*args: P.args, **kwargs: P.kwargs) -> T:\n            try:\n                user_id = kwargs.get(\"user_id\")\n                if not user_id:\n                    raise ValueError(\"user_id is required\")\n\n                if not get_client().is_initialized():\n                    logger.warning(\n                        f\"LaunchDarkly not initialized, using default={default}\"\n                    )\n                    is_enabled = default\n                else:\n                    context = create_context(str(user_id))\n                    is_enabled = get_client().variation(flag_key, context, default)\n\n                if not is_enabled:\n                    raise HTTPException(status_code=404, detail=\"Feature not available\")\n\n                return cast(T, func(*args, **kwargs))\n            except Exception as e:\n                logger.error(f\"Error evaluating feature flag {flag_key}: {e}\")\n                raise",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "sync_wrapper",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "parameters",
                                                            "label": "(*args: P.args, **kwargs: P.kwargs)",
                                                            "children": [
                                                                {
                                                                    "type": "typed_parameter",
                                                                    "label": "*args: P.args",
                                                                    "children": [
                                                                        {
                                                                            "type": "list_splat_pattern",
                                                                            "label": "*args",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "args",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "type",
                                                                            "label": "P.args",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "P.args",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "P",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "args",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "typed_parameter",
                                                                    "label": "**kwargs: P.kwargs",
                                                                    "children": [
                                                                        {
                                                                            "type": "dictionary_splat_pattern",
                                                                            "label": "**kwargs",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "kwargs",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "type",
                                                                            "label": "P.kwargs",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "P.kwargs",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "P",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "kwargs",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "T",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "T",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "try:\n                user_id = kwargs.get(\"user_id\")\n                if not user_id:\n                    raise ValueError(\"user_id is required\")\n\n                if not get_client().is_initialized():\n                    logger.warning(\n                        f\"LaunchDarkly not initialized, using default={default}\"\n                    )\n                    is_enabled = default\n                else:\n                    context = create_context(str(user_id))\n                    is_enabled = get_client().variation(flag_key, context, default)\n\n                if not is_enabled:\n                    raise HTTPException(status_code=404, detail=\"Feature not available\")\n\n                return cast(T, func(*args, **kwargs))\n            except Exception as e:\n                logger.error(f\"Error evaluating feature flag {flag_key}: {e}\")\n                raise",
                                                            "children": [
                                                                {
                                                                    "type": "try_statement",
                                                                    "label": "try:\n                user_id = kwargs.get(\"user_id\")\n                if not user_id:\n                    raise ValueError(\"user_id is required\")\n\n                if not get_client().is_initialized():\n                    logger.warning(\n                        f\"LaunchDarkly not initialized, using default={default}\"\n                    )\n                    is_enabled = default\n                else:\n                    context = create_context(str(user_id))\n                    is_enabled = get_client().variation(flag_key, context, default)\n\n                if not is_enabled:\n                    raise HTTPException(status_code=404, detail=\"Feature not available\")\n\n                return cast(T, func(*args, **kwargs))\n            except Exception as e:\n                logger.error(f\"Error evaluating feature flag {flag_key}: {e}\")\n                raise",
                                                                    "children": [
                                                                        {
                                                                            "type": "block",
                                                                            "label": "user_id = kwargs.get(\"user_id\")\n                if not user_id:\n                    raise ValueError(\"user_id is required\")\n\n                if not get_client().is_initialized():\n                    logger.warning(\n                        f\"LaunchDarkly not initialized, using default={default}\"\n                    )\n                    is_enabled = default\n                else:\n                    context = create_context(str(user_id))\n                    is_enabled = get_client().variation(flag_key, context, default)\n\n                if not is_enabled:\n                    raise HTTPException(status_code=404, detail=\"Feature not available\")\n\n                return cast(T, func(*args, **kwargs))",
                                                                            "children": [
                                                                                {
                                                                                    "type": "expression_statement",
                                                                                    "label": "user_id = kwargs.get(\"user_id\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "assignment",
                                                                                            "label": "user_id = kwargs.get(\"user_id\")",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "user_id",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "kwargs.get(\"user_id\")",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "kwargs.get",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "kwargs",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "get",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(\"user_id\")",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string",
                                                                                                                    "label": "\"user_id\"",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "string_start",
                                                                                                                            "label": "\"",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": "user_id",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_end",
                                                                                                                            "label": "\"",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "if_statement",
                                                                                    "label": "if not user_id:\n                    raise ValueError(\"user_id is required\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "not_operator",
                                                                                            "label": "not user_id",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "user_id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "block",
                                                                                            "label": "raise ValueError(\"user_id is required\")",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "raise_statement",
                                                                                                    "label": "raise ValueError(\"user_id is required\")",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "call",
                                                                                                            "label": "ValueError(\"user_id is required\")",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "ValueError",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "argument_list",
                                                                                                                    "label": "(\"user_id is required\")",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "string",
                                                                                                                            "label": "\"user_id is required\"",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "string_start",
                                                                                                                                    "label": "\"",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "string_content",
                                                                                                                                    "label": "user_id is required",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "string_end",
                                                                                                                                    "label": "\"",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "if_statement",
                                                                                    "label": "if not get_client().is_initialized():\n                    logger.warning(\n                        f\"LaunchDarkly not initialized, using default={default}\"\n                    )\n                    is_enabled = default\n                else:\n                    context = create_context(str(user_id))\n                    is_enabled = get_client().variation(flag_key, context, default)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "not_operator",
                                                                                            "label": "not get_client().is_initialized()",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "get_client().is_initialized()",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "get_client().is_initialized",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "call",
                                                                                                                    "label": "get_client()",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "get_client",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "argument_list",
                                                                                                                            "label": "()",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "is_initialized",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "()",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "block",
                                                                                            "label": "logger.warning(\n                        f\"LaunchDarkly not initialized, using default={default}\"\n                    )\n                    is_enabled = default",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "expression_statement",
                                                                                                    "label": "logger.warning(\n                        f\"LaunchDarkly not initialized, using default={default}\"\n                    )",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "call",
                                                                                                            "label": "logger.warning(\n                        f\"LaunchDarkly not initialized, using default={default}\"\n                    )",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "attribute",
                                                                                                                    "label": "logger.warning",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "logger",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "warning",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "argument_list",
                                                                                                                    "label": "(\n                        f\"LaunchDarkly not initialized, using default={default}\"\n                    )",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "string",
                                                                                                                            "label": "f\"LaunchDarkly not initialized, using default={default}\"",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "string_start",
                                                                                                                                    "label": "f\"",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "string_content",
                                                                                                                                    "label": "LaunchDarkly not initialized, using default=",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "interpolation",
                                                                                                                                    "label": "{default}",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "default",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "string_end",
                                                                                                                                    "label": "\"",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "expression_statement",
                                                                                                    "label": "is_enabled = default",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "assignment",
                                                                                                            "label": "is_enabled = default",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "is_enabled",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "default",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "else_clause",
                                                                                            "label": "else:\n                    context = create_context(str(user_id))\n                    is_enabled = get_client().variation(flag_key, context, default)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "block",
                                                                                                    "label": "context = create_context(str(user_id))\n                    is_enabled = get_client().variation(flag_key, context, default)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "expression_statement",
                                                                                                            "label": "context = create_context(str(user_id))",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "assignment",
                                                                                                                    "label": "context = create_context(str(user_id))",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "context",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "call",
                                                                                                                            "label": "create_context(str(user_id))",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "create_context",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "argument_list",
                                                                                                                                    "label": "(str(user_id))",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "call",
                                                                                                                                            "label": "str(user_id)",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "str",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "argument_list",
                                                                                                                                                    "label": "(user_id)",
                                                                                                                                                    "children": [
                                                                                                                                                        {
                                                                                                                                                            "type": "identifier",
                                                                                                                                                            "label": "user_id",
                                                                                                                                                            "children": []
                                                                                                                                                        }
                                                                                                                                                    ]
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "expression_statement",
                                                                                                            "label": "is_enabled = get_client().variation(flag_key, context, default)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "assignment",
                                                                                                                    "label": "is_enabled = get_client().variation(flag_key, context, default)",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "is_enabled",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "call",
                                                                                                                            "label": "get_client().variation(flag_key, context, default)",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "attribute",
                                                                                                                                    "label": "get_client().variation",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "call",
                                                                                                                                            "label": "get_client()",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "get_client",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "argument_list",
                                                                                                                                                    "label": "()",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "variation",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "argument_list",
                                                                                                                                    "label": "(flag_key, context, default)",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "flag_key",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "context",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "default",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "if_statement",
                                                                                    "label": "if not is_enabled:\n                    raise HTTPException(status_code=404, detail=\"Feature not available\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "not_operator",
                                                                                            "label": "not is_enabled",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "is_enabled",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "block",
                                                                                            "label": "raise HTTPException(status_code=404, detail=\"Feature not available\")",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "raise_statement",
                                                                                                    "label": "raise HTTPException(status_code=404, detail=\"Feature not available\")",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "call",
                                                                                                            "label": "HTTPException(status_code=404, detail=\"Feature not available\")",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "HTTPException",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "argument_list",
                                                                                                                    "label": "(status_code=404, detail=\"Feature not available\")",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "keyword_argument",
                                                                                                                            "label": "status_code=404",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "status_code",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "integer",
                                                                                                                                    "label": "404",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "keyword_argument",
                                                                                                                            "label": "detail=\"Feature not available\"",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "detail",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "string",
                                                                                                                                    "label": "\"Feature not available\"",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "string_start",
                                                                                                                                            "label": "\"",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "string_content",
                                                                                                                                            "label": "Feature not available",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "string_end",
                                                                                                                                            "label": "\"",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "return_statement",
                                                                                    "label": "return cast(T, func(*args, **kwargs))",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "cast(T, func(*args, **kwargs))",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "cast",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(T, func(*args, **kwargs))",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "T",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "call",
                                                                                                            "label": "func(*args, **kwargs)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "func",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "argument_list",
                                                                                                                    "label": "(*args, **kwargs)",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "list_splat",
                                                                                                                            "label": "*args",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "args",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "dictionary_splat",
                                                                                                                            "label": "**kwargs",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "kwargs",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "except_clause",
                                                                            "label": "except Exception as e:\n                logger.error(f\"Error evaluating feature flag {flag_key}: {e}\")\n                raise",
                                                                            "children": [
                                                                                {
                                                                                    "type": "as_pattern",
                                                                                    "label": "Exception as e",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "Exception",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "as_pattern_target",
                                                                                            "label": "e",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "e",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "block",
                                                                                    "label": "logger.error(f\"Error evaluating feature flag {flag_key}: {e}\")\n                raise",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "expression_statement",
                                                                                            "label": "logger.error(f\"Error evaluating feature flag {flag_key}: {e}\")",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "logger.error(f\"Error evaluating feature flag {flag_key}: {e}\")",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "logger.error",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "logger",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "error",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(f\"Error evaluating feature flag {flag_key}: {e}\")",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string",
                                                                                                                    "label": "f\"Error evaluating feature flag {flag_key}: {e}\"",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "string_start",
                                                                                                                            "label": "f\"",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": "Error evaluating feature flag ",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "interpolation",
                                                                                                                            "label": "{flag_key}",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "flag_key",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": ": ",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "interpolation",
                                                                                                                            "label": "{e}",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "e",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_end",
                                                                                                                            "label": "\"",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "raise_statement",
                                                                                            "label": "raise",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "label": "return cast(\n            Callable[P, Union[T, Awaitable[T]]],\n            async_wrapper if asyncio.iscoroutinefunction(func) else sync_wrapper,\n        )",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "cast(\n            Callable[P, Union[T, Awaitable[T]]],\n            async_wrapper if asyncio.iscoroutinefunction(func) else sync_wrapper,\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "cast",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n            Callable[P, Union[T, Awaitable[T]]],\n            async_wrapper if asyncio.iscoroutinefunction(func) else sync_wrapper,\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "subscript",
                                                                    "label": "Callable[P, Union[T, Awaitable[T]]]",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "Callable",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "P",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "subscript",
                                                                            "label": "Union[T, Awaitable[T]]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Union",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "T",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "subscript",
                                                                                    "label": "Awaitable[T]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "Awaitable",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "T",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "conditional_expression",
                                                                    "label": "async_wrapper if asyncio.iscoroutinefunction(func) else sync_wrapper",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "async_wrapper",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "label": "asyncio.iscoroutinefunction(func)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "asyncio.iscoroutinefunction",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "asyncio",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "iscoroutinefunction",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(func)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "func",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "sync_wrapper",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return decorator",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "decorator",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def percentage_rollout(\n    flag_key: str,\n    default: bool = False,\n) -> Callable[\n    [Callable[P, Union[T, Awaitable[T]]]], Callable[P, Union[T, Awaitable[T]]]\n]:\n    \"\"\"Decorator for percentage-based rollouts.\"\"\"\n    return feature_flag(flag_key, default)",
            "children": [
                {
                    "type": "identifier",
                    "label": "percentage_rollout",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(\n    flag_key: str,\n    default: bool = False,\n)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "flag_key: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "flag_key",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_default_parameter",
                            "label": "default: bool = False",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "default",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "bool",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "bool",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "false",
                                    "label": "False",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "Callable[\n    [Callable[P, Union[T, Awaitable[T]]]], Callable[P, Union[T, Awaitable[T]]]\n]",
                    "children": [
                        {
                            "type": "generic_type",
                            "label": "Callable[\n    [Callable[P, Union[T, Awaitable[T]]]], Callable[P, Union[T, Awaitable[T]]]\n]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "Callable",
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "label": "[\n    [Callable[P, Union[T, Awaitable[T]]]], Callable[P, Union[T, Awaitable[T]]]\n]",
                                    "children": [
                                        {
                                            "type": "type",
                                            "label": "[Callable[P, Union[T, Awaitable[T]]]]",
                                            "children": [
                                                {
                                                    "type": "list",
                                                    "label": "[Callable[P, Union[T, Awaitable[T]]]]",
                                                    "children": [
                                                        {
                                                            "type": "subscript",
                                                            "label": "Callable[P, Union[T, Awaitable[T]]]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Callable",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "P",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "subscript",
                                                                    "label": "Union[T, Awaitable[T]]",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "Union",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "T",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "subscript",
                                                                            "label": "Awaitable[T]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Awaitable",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "T",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "Callable[P, Union[T, Awaitable[T]]]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Callable[P, Union[T, Awaitable[T]]]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Callable",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[P, Union[T, Awaitable[T]]]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "P",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "P",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Union[T, Awaitable[T]]",
                                                                    "children": [
                                                                        {
                                                                            "type": "generic_type",
                                                                            "label": "Union[T, Awaitable[T]]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Union",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "type_parameter",
                                                                                    "label": "[T, Awaitable[T]]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "type",
                                                                                            "label": "T",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "T",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "type",
                                                                                            "label": "Awaitable[T]",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "generic_type",
                                                                                                    "label": "Awaitable[T]",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "Awaitable",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "type_parameter",
                                                                                                            "label": "[T]",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "type",
                                                                                                                    "label": "T",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "T",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"Decorator for percentage-based rollouts.\"\"\"\n    return feature_flag(flag_key, default)",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"Decorator for percentage-based rollouts.\"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"Decorator for percentage-based rollouts.\"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "Decorator for percentage-based rollouts.",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return feature_flag(flag_key, default)",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "feature_flag(flag_key, default)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "feature_flag",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(flag_key, default)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "flag_key",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "default",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def beta_feature(\n    flag_key: Optional[str] = None,\n    unauthorized_response: Any = {\"message\": \"Not available in beta\"},\n) -> Callable[\n    [Callable[P, Union[T, Awaitable[T]]]], Callable[P, Union[T, Awaitable[T]]]\n]:\n    \"\"\"Decorator for beta features.\"\"\"\n    actual_key = f\"beta-{flag_key}\" if flag_key else \"beta\"\n    return feature_flag(actual_key, False)",
            "children": [
                {
                    "type": "identifier",
                    "label": "beta_feature",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(\n    flag_key: Optional[str] = None,\n    unauthorized_response: Any = {\"message\": \"Not available in beta\"},\n)",
                    "children": [
                        {
                            "type": "typed_default_parameter",
                            "label": "flag_key: Optional[str] = None",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "flag_key",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "Optional[str]",
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "Optional[str]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "Optional",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[str]",
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "none",
                                    "label": "None",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "typed_default_parameter",
                            "label": "unauthorized_response: Any = {\"message\": \"Not available in beta\"}",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "unauthorized_response",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "Any",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "Any",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "dictionary",
                                    "label": "{\"message\": \"Not available in beta\"}",
                                    "children": [
                                        {
                                            "type": "pair",
                                            "label": "\"message\": \"Not available in beta\"",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "\"message\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "message",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"Not available in beta\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Not available in beta",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "Callable[\n    [Callable[P, Union[T, Awaitable[T]]]], Callable[P, Union[T, Awaitable[T]]]\n]",
                    "children": [
                        {
                            "type": "generic_type",
                            "label": "Callable[\n    [Callable[P, Union[T, Awaitable[T]]]], Callable[P, Union[T, Awaitable[T]]]\n]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "Callable",
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "label": "[\n    [Callable[P, Union[T, Awaitable[T]]]], Callable[P, Union[T, Awaitable[T]]]\n]",
                                    "children": [
                                        {
                                            "type": "type",
                                            "label": "[Callable[P, Union[T, Awaitable[T]]]]",
                                            "children": [
                                                {
                                                    "type": "list",
                                                    "label": "[Callable[P, Union[T, Awaitable[T]]]]",
                                                    "children": [
                                                        {
                                                            "type": "subscript",
                                                            "label": "Callable[P, Union[T, Awaitable[T]]]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Callable",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "P",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "subscript",
                                                                    "label": "Union[T, Awaitable[T]]",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "Union",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "T",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "subscript",
                                                                            "label": "Awaitable[T]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Awaitable",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "T",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "Callable[P, Union[T, Awaitable[T]]]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Callable[P, Union[T, Awaitable[T]]]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Callable",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[P, Union[T, Awaitable[T]]]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "P",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "P",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Union[T, Awaitable[T]]",
                                                                    "children": [
                                                                        {
                                                                            "type": "generic_type",
                                                                            "label": "Union[T, Awaitable[T]]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Union",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "type_parameter",
                                                                                    "label": "[T, Awaitable[T]]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "type",
                                                                                            "label": "T",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "T",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "type",
                                                                                            "label": "Awaitable[T]",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "generic_type",
                                                                                                    "label": "Awaitable[T]",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "Awaitable",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "type_parameter",
                                                                                                            "label": "[T]",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "type",
                                                                                                                    "label": "T",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "T",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"Decorator for beta features.\"\"\"\n    actual_key = f\"beta-{flag_key}\" if flag_key else \"beta\"\n    return feature_flag(actual_key, False)",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"Decorator for beta features.\"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"Decorator for beta features.\"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "Decorator for beta features.",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "actual_key = f\"beta-{flag_key}\" if flag_key else \"beta\"",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "actual_key = f\"beta-{flag_key}\" if flag_key else \"beta\"",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "actual_key",
                                            "children": []
                                        },
                                        {
                                            "type": "conditional_expression",
                                            "label": "f\"beta-{flag_key}\" if flag_key else \"beta\"",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "f\"beta-{flag_key}\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "f\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "beta-",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "interpolation",
                                                            "label": "{flag_key}",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "flag_key",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "flag_key",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"beta\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "beta",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return feature_flag(actual_key, False)",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "feature_flag(actual_key, False)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "feature_flag",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(actual_key, False)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "actual_key",
                                                    "children": []
                                                },
                                                {
                                                    "type": "false",
                                                    "label": "False",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@contextlib.contextmanager\ndef mock_flag_variation(flag_key: str, return_value: Any):\n    \"\"\"Context manager for testing feature flags.\"\"\"\n    original_variation = get_client().variation\n    get_client().variation = lambda key, context, default: (\n        return_value if key == flag_key else original_variation(key, context, default)\n    )\n    try:\n        yield\n    finally:\n        get_client().variation = original_variation",
            "children": [
                {
                    "type": "decorator",
                    "label": "@contextlib.contextmanager",
                    "children": [
                        {
                            "type": "attribute",
                            "label": "contextlib.contextmanager",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "contextlib",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "contextmanager",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "def mock_flag_variation(flag_key: str, return_value: Any):\n    \"\"\"Context manager for testing feature flags.\"\"\"\n    original_variation = get_client().variation\n    get_client().variation = lambda key, context, default: (\n        return_value if key == flag_key else original_variation(key, context, default)\n    )\n    try:\n        yield\n    finally:\n        get_client().variation = original_variation",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "mock_flag_variation",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(flag_key: str, return_value: Any)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "flag_key: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "flag_key",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "return_value: Any",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "return_value",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Any",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "Any",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "\"\"\"Context manager for testing feature flags.\"\"\"\n    original_variation = get_client().variation\n    get_client().variation = lambda key, context, default: (\n        return_value if key == flag_key else original_variation(key, context, default)\n    )\n    try:\n        yield\n    finally:\n        get_client().variation = original_variation",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "\"\"\"Context manager for testing feature flags.\"\"\"",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"\"\"Context manager for testing feature flags.\"\"\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"\"\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "Context manager for testing feature flags.",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"\"\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "original_variation = get_client().variation",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "original_variation = get_client().variation",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "original_variation",
                                                    "children": []
                                                },
                                                {
                                                    "type": "attribute",
                                                    "label": "get_client().variation",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "get_client()",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "get_client",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "variation",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "get_client().variation = lambda key, context, default: (\n        return_value if key == flag_key else original_variation(key, context, default)\n    )",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "get_client().variation = lambda key, context, default: (\n        return_value if key == flag_key else original_variation(key, context, default)\n    )",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "get_client().variation",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "get_client()",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "get_client",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "variation",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "lambda",
                                                    "label": "lambda key, context, default: (\n        return_value if key == flag_key else original_variation(key, context, default)\n    )",
                                                    "children": [
                                                        {
                                                            "type": "lambda_parameters",
                                                            "label": "key, context, default",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "key",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "context",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "default",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "parenthesized_expression",
                                                            "label": "(\n        return_value if key == flag_key else original_variation(key, context, default)\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "conditional_expression",
                                                                    "label": "return_value if key == flag_key else original_variation(key, context, default)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "return_value",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "comparison_operator",
                                                                            "label": "key == flag_key",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "key",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "flag_key",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "label": "original_variation(key, context, default)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "original_variation",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(key, context, default)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "key",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "context",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "default",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "try_statement",
                                    "label": "try:\n        yield\n    finally:\n        get_client().variation = original_variation",
                                    "children": [
                                        {
                                            "type": "block",
                                            "label": "yield",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "yield",
                                                    "children": [
                                                        {
                                                            "type": "yield",
                                                            "label": "yield",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "finally_clause",
                                            "label": "finally:\n        get_client().variation = original_variation",
                                            "children": [
                                                {
                                                    "type": "block",
                                                    "label": "get_client().variation = original_variation",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "get_client().variation = original_variation",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "get_client().variation = original_variation",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "get_client().variation",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "get_client()",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_client",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "()",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "variation",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "original_variation",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}