{
    "type": "module",
    "label": "\"\"\"\nGiven a partially filled 9x9 2D array, the objective is to fill a 9x9\nsquare grid with digits numbered 1 to 9, so that every row, column, and\nand each of the nine 3x3 sub-grids contains all of the digits.\n\nThis can be solved using Backtracking and is similar to n-queens.\nWe check to see if a cell is safe or not and recursively call the\nfunction on the next column to see if it returns True. if yes, we\nhave solved the puzzle. else, we backtrack and place another number\nin that cell and repeat this process.\n\"\"\"\n\nfrom __future__ import annotations\n\nMatrix = list[list[int]]\n\n# assigning initial values to the grid\ninitial_grid: Matrix = [\n    [3, 0, 6, 5, 0, 8, 4, 0, 0],\n    [5, 2, 0, 0, 0, 0, 0, 0, 0],\n    [0, 8, 7, 0, 0, 0, 0, 3, 1],\n    [0, 0, 3, 0, 1, 0, 0, 8, 0],\n    [9, 0, 0, 8, 6, 3, 0, 0, 5],\n    [0, 5, 0, 0, 9, 0, 6, 0, 0],\n    [1, 3, 0, 0, 0, 0, 2, 5, 0],\n    [0, 0, 0, 0, 0, 0, 0, 7, 4],\n    [0, 0, 5, 2, 0, 6, 3, 0, 0],\n]\n\n# a grid with no solution\nno_solution: Matrix = [\n    [5, 0, 6, 5, 0, 8, 4, 0, 3],\n    [5, 2, 0, 0, 0, 0, 0, 0, 2],\n    [1, 8, 7, 0, 0, 0, 0, 3, 1],\n    [0, 0, 3, 0, 1, 0, 0, 8, 0],\n    [9, 0, 0, 8, 6, 3, 0, 0, 5],\n    [0, 5, 0, 0, 9, 0, 6, 0, 0],\n    [1, 3, 0, 0, 0, 0, 2, 5, 0],\n    [0, 0, 0, 0, 0, 0, 0, 7, 4],\n    [0, 0, 5, 2, 0, 6, 3, 0, 0],\n]\n\n\ndef is_safe(grid: Matrix, row: int, column: int, n: int) -> bool:\n    \"\"\"\n    This function checks the grid to see if each row,\n    column, and the 3x3 subgrids contain the digit 'n'.\n    It returns False if it is not 'safe' (a duplicate digit\n    is found) else returns True if it is 'safe'\n    \"\"\"\n    for i in range(9):\n        if n in {grid[row][i], grid[i][column]}:\n            return False\n\n    for i in range(3):\n        for j in range(3):\n            if grid[(row - row % 3) + i][(column - column % 3) + j] == n:\n                return False\n\n    return True\n\n\ndef find_empty_location(grid: Matrix) -> tuple[int, int] | None:\n    \"\"\"\n    This function finds an empty location so that we can assign a number\n    for that particular row and column.\n    \"\"\"\n    for i in range(9):\n        for j in range(9):\n            if grid[i][j] == 0:\n                return i, j\n    return None\n\n\ndef sudoku(grid: Matrix) -> Matrix | None:\n    \"\"\"\n    Takes a partially filled-in grid and attempts to assign values to\n    all unassigned locations in such a way to meet the requirements\n    for Sudoku solution (non-duplication across rows, columns, and boxes)\n\n    >>> sudoku(initial_grid)  # doctest: +NORMALIZE_WHITESPACE\n    [[3, 1, 6, 5, 7, 8, 4, 9, 2],\n     [5, 2, 9, 1, 3, 4, 7, 6, 8],\n     [4, 8, 7, 6, 2, 9, 5, 3, 1],\n     [2, 6, 3, 4, 1, 5, 9, 8, 7],\n     [9, 7, 4, 8, 6, 3, 1, 2, 5],\n     [8, 5, 1, 7, 9, 2, 6, 4, 3],\n     [1, 3, 8, 9, 4, 7, 2, 5, 6],\n     [6, 9, 2, 3, 5, 1, 8, 7, 4],\n     [7, 4, 5, 2, 8, 6, 3, 1, 9]]\n     >>> sudoku(no_solution) is None\n     True\n    \"\"\"\n    if location := find_empty_location(grid):\n        row, column = location\n    else:\n        # If the location is ``None``, then the grid is solved.\n        return grid\n\n    for digit in range(1, 10):\n        if is_safe(grid, row, column, digit):\n            grid[row][column] = digit\n\n            if sudoku(grid) is not None:\n                return grid\n\n            grid[row][column] = 0\n\n    return None\n\n\ndef print_solution(grid: Matrix) -> None:\n    \"\"\"\n    A function to print the solution in the form\n    of a 9x9 grid\n    \"\"\"\n    for row in grid:\n        for cell in row:\n            print(cell, end=\" \")\n        print()\n\n\nif __name__ == \"__main__\":\n    # make a copy of grid so that you can compare with the unmodified grid\n    for example_grid in (initial_grid, no_solution):\n        print(\"\\nExample grid:\\n\" + \"=\" * 20)\n        print_solution(example_grid)\n        print(\"\\nExample grid solution:\")\n        solution = sudoku(example_grid)\n        if solution is not None:\n            print_solution(solution)\n        else:\n            print(\"Cannot find a solution.\")\n",
    "children": [
        {
            "type": "expression_statement",
            "label": "\"\"\"\nGiven a partially filled 9x9 2D array, the objective is to fill a 9x9\nsquare grid with digits numbered 1 to 9, so that every row, column, and\nand each of the nine 3x3 sub-grids contains all of the digits.\n\nThis can be solved using Backtracking and is similar to n-queens.\nWe check to see if a cell is safe or not and recursively call the\nfunction on the next column to see if it returns True. if yes, we\nhave solved the puzzle. else, we backtrack and place another number\nin that cell and repeat this process.\n\"\"\"",
            "children": [
                {
                    "type": "string",
                    "label": "\"\"\"\nGiven a partially filled 9x9 2D array, the objective is to fill a 9x9\nsquare grid with digits numbered 1 to 9, so that every row, column, and\nand each of the nine 3x3 sub-grids contains all of the digits.\n\nThis can be solved using Backtracking and is similar to n-queens.\nWe check to see if a cell is safe or not and recursively call the\nfunction on the next column to see if it returns True. if yes, we\nhave solved the puzzle. else, we backtrack and place another number\nin that cell and repeat this process.\n\"\"\"",
                    "children": [
                        {
                            "type": "string_start",
                            "label": "\"\"\"",
                            "children": []
                        },
                        {
                            "type": "string_content",
                            "label": "\nGiven a partially filled 9x9 2D array, the objective is to fill a 9x9\nsquare grid with digits numbered 1 to 9, so that every row, column, and\nand each of the nine 3x3 sub-grids contains all of the digits.\n\nThis can be solved using Backtracking and is similar to n-queens.\nWe check to see if a cell is safe or not and recursively call the\nfunction on the next column to see if it returns True. if yes, we\nhave solved the puzzle. else, we backtrack and place another number\nin that cell and repeat this process.\n",
                            "children": []
                        },
                        {
                            "type": "string_end",
                            "label": "\"\"\"",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "future_import_statement",
            "label": "from __future__ import annotations",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "annotations",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "annotations",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "Matrix = list[list[int]]",
            "children": [
                {
                    "type": "assignment",
                    "label": "Matrix = list[list[int]]",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Matrix",
                            "children": []
                        },
                        {
                            "type": "subscript",
                            "label": "list[list[int]]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "list",
                                    "children": []
                                },
                                {
                                    "type": "subscript",
                                    "label": "list[int]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "list",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "comment",
            "label": "# assigning initial values to the grid",
            "children": []
        },
        {
            "type": "expression_statement",
            "label": "initial_grid: Matrix = [\n    [3, 0, 6, 5, 0, 8, 4, 0, 0],\n    [5, 2, 0, 0, 0, 0, 0, 0, 0],\n    [0, 8, 7, 0, 0, 0, 0, 3, 1],\n    [0, 0, 3, 0, 1, 0, 0, 8, 0],\n    [9, 0, 0, 8, 6, 3, 0, 0, 5],\n    [0, 5, 0, 0, 9, 0, 6, 0, 0],\n    [1, 3, 0, 0, 0, 0, 2, 5, 0],\n    [0, 0, 0, 0, 0, 0, 0, 7, 4],\n    [0, 0, 5, 2, 0, 6, 3, 0, 0],\n]",
            "children": [
                {
                    "type": "assignment",
                    "label": "initial_grid: Matrix = [\n    [3, 0, 6, 5, 0, 8, 4, 0, 0],\n    [5, 2, 0, 0, 0, 0, 0, 0, 0],\n    [0, 8, 7, 0, 0, 0, 0, 3, 1],\n    [0, 0, 3, 0, 1, 0, 0, 8, 0],\n    [9, 0, 0, 8, 6, 3, 0, 0, 5],\n    [0, 5, 0, 0, 9, 0, 6, 0, 0],\n    [1, 3, 0, 0, 0, 0, 2, 5, 0],\n    [0, 0, 0, 0, 0, 0, 0, 7, 4],\n    [0, 0, 5, 2, 0, 6, 3, 0, 0],\n]",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "initial_grid",
                            "children": []
                        },
                        {
                            "type": "type",
                            "label": "Matrix",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "Matrix",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "list",
                            "label": "[\n    [3, 0, 6, 5, 0, 8, 4, 0, 0],\n    [5, 2, 0, 0, 0, 0, 0, 0, 0],\n    [0, 8, 7, 0, 0, 0, 0, 3, 1],\n    [0, 0, 3, 0, 1, 0, 0, 8, 0],\n    [9, 0, 0, 8, 6, 3, 0, 0, 5],\n    [0, 5, 0, 0, 9, 0, 6, 0, 0],\n    [1, 3, 0, 0, 0, 0, 2, 5, 0],\n    [0, 0, 0, 0, 0, 0, 0, 7, 4],\n    [0, 0, 5, 2, 0, 6, 3, 0, 0],\n]",
                            "children": [
                                {
                                    "type": "list",
                                    "label": "[3, 0, 6, 5, 0, 8, 4, 0, 0]",
                                    "children": [
                                        {
                                            "type": "integer",
                                            "label": "3",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "6",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "5",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "8",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "4",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "list",
                                    "label": "[5, 2, 0, 0, 0, 0, 0, 0, 0]",
                                    "children": [
                                        {
                                            "type": "integer",
                                            "label": "5",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "2",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "list",
                                    "label": "[0, 8, 7, 0, 0, 0, 0, 3, 1]",
                                    "children": [
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "8",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "7",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "3",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "1",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "list",
                                    "label": "[0, 0, 3, 0, 1, 0, 0, 8, 0]",
                                    "children": [
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "3",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "1",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "8",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "list",
                                    "label": "[9, 0, 0, 8, 6, 3, 0, 0, 5]",
                                    "children": [
                                        {
                                            "type": "integer",
                                            "label": "9",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "8",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "6",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "3",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "5",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "list",
                                    "label": "[0, 5, 0, 0, 9, 0, 6, 0, 0]",
                                    "children": [
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "5",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "9",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "6",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "list",
                                    "label": "[1, 3, 0, 0, 0, 0, 2, 5, 0]",
                                    "children": [
                                        {
                                            "type": "integer",
                                            "label": "1",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "3",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "2",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "5",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "list",
                                    "label": "[0, 0, 0, 0, 0, 0, 0, 7, 4]",
                                    "children": [
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "7",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "4",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "list",
                                    "label": "[0, 0, 5, 2, 0, 6, 3, 0, 0]",
                                    "children": [
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "5",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "2",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "6",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "3",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "comment",
            "label": "# a grid with no solution",
            "children": []
        },
        {
            "type": "expression_statement",
            "label": "no_solution: Matrix = [\n    [5, 0, 6, 5, 0, 8, 4, 0, 3],\n    [5, 2, 0, 0, 0, 0, 0, 0, 2],\n    [1, 8, 7, 0, 0, 0, 0, 3, 1],\n    [0, 0, 3, 0, 1, 0, 0, 8, 0],\n    [9, 0, 0, 8, 6, 3, 0, 0, 5],\n    [0, 5, 0, 0, 9, 0, 6, 0, 0],\n    [1, 3, 0, 0, 0, 0, 2, 5, 0],\n    [0, 0, 0, 0, 0, 0, 0, 7, 4],\n    [0, 0, 5, 2, 0, 6, 3, 0, 0],\n]",
            "children": [
                {
                    "type": "assignment",
                    "label": "no_solution: Matrix = [\n    [5, 0, 6, 5, 0, 8, 4, 0, 3],\n    [5, 2, 0, 0, 0, 0, 0, 0, 2],\n    [1, 8, 7, 0, 0, 0, 0, 3, 1],\n    [0, 0, 3, 0, 1, 0, 0, 8, 0],\n    [9, 0, 0, 8, 6, 3, 0, 0, 5],\n    [0, 5, 0, 0, 9, 0, 6, 0, 0],\n    [1, 3, 0, 0, 0, 0, 2, 5, 0],\n    [0, 0, 0, 0, 0, 0, 0, 7, 4],\n    [0, 0, 5, 2, 0, 6, 3, 0, 0],\n]",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "no_solution",
                            "children": []
                        },
                        {
                            "type": "type",
                            "label": "Matrix",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "Matrix",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "list",
                            "label": "[\n    [5, 0, 6, 5, 0, 8, 4, 0, 3],\n    [5, 2, 0, 0, 0, 0, 0, 0, 2],\n    [1, 8, 7, 0, 0, 0, 0, 3, 1],\n    [0, 0, 3, 0, 1, 0, 0, 8, 0],\n    [9, 0, 0, 8, 6, 3, 0, 0, 5],\n    [0, 5, 0, 0, 9, 0, 6, 0, 0],\n    [1, 3, 0, 0, 0, 0, 2, 5, 0],\n    [0, 0, 0, 0, 0, 0, 0, 7, 4],\n    [0, 0, 5, 2, 0, 6, 3, 0, 0],\n]",
                            "children": [
                                {
                                    "type": "list",
                                    "label": "[5, 0, 6, 5, 0, 8, 4, 0, 3]",
                                    "children": [
                                        {
                                            "type": "integer",
                                            "label": "5",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "6",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "5",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "8",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "4",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "3",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "list",
                                    "label": "[5, 2, 0, 0, 0, 0, 0, 0, 2]",
                                    "children": [
                                        {
                                            "type": "integer",
                                            "label": "5",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "2",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "2",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "list",
                                    "label": "[1, 8, 7, 0, 0, 0, 0, 3, 1]",
                                    "children": [
                                        {
                                            "type": "integer",
                                            "label": "1",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "8",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "7",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "3",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "1",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "list",
                                    "label": "[0, 0, 3, 0, 1, 0, 0, 8, 0]",
                                    "children": [
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "3",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "1",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "8",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "list",
                                    "label": "[9, 0, 0, 8, 6, 3, 0, 0, 5]",
                                    "children": [
                                        {
                                            "type": "integer",
                                            "label": "9",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "8",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "6",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "3",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "5",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "list",
                                    "label": "[0, 5, 0, 0, 9, 0, 6, 0, 0]",
                                    "children": [
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "5",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "9",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "6",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "list",
                                    "label": "[1, 3, 0, 0, 0, 0, 2, 5, 0]",
                                    "children": [
                                        {
                                            "type": "integer",
                                            "label": "1",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "3",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "2",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "5",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "list",
                                    "label": "[0, 0, 0, 0, 0, 0, 0, 7, 4]",
                                    "children": [
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "7",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "4",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "list",
                                    "label": "[0, 0, 5, 2, 0, 6, 3, 0, 0]",
                                    "children": [
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "5",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "2",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "6",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "3",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def is_safe(grid: Matrix, row: int, column: int, n: int) -> bool:\n    \"\"\"\n    This function checks the grid to see if each row,\n    column, and the 3x3 subgrids contain the digit 'n'.\n    It returns False if it is not 'safe' (a duplicate digit\n    is found) else returns True if it is 'safe'\n    \"\"\"\n    for i in range(9):\n        if n in {grid[row][i], grid[i][column]}:\n            return False\n\n    for i in range(3):\n        for j in range(3):\n            if grid[(row - row % 3) + i][(column - column % 3) + j] == n:\n                return False\n\n    return True",
            "children": [
                {
                    "type": "identifier",
                    "label": "is_safe",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(grid: Matrix, row: int, column: int, n: int)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "grid: Matrix",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "grid",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "Matrix",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "Matrix",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "row: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "row",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "column: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "column",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "n: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "n",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "bool",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "bool",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    This function checks the grid to see if each row,\n    column, and the 3x3 subgrids contain the digit 'n'.\n    It returns False if it is not 'safe' (a duplicate digit\n    is found) else returns True if it is 'safe'\n    \"\"\"\n    for i in range(9):\n        if n in {grid[row][i], grid[i][column]}:\n            return False\n\n    for i in range(3):\n        for j in range(3):\n            if grid[(row - row % 3) + i][(column - column % 3) + j] == n:\n                return False\n\n    return True",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    This function checks the grid to see if each row,\n    column, and the 3x3 subgrids contain the digit 'n'.\n    It returns False if it is not 'safe' (a duplicate digit\n    is found) else returns True if it is 'safe'\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    This function checks the grid to see if each row,\n    column, and the 3x3 subgrids contain the digit 'n'.\n    It returns False if it is not 'safe' (a duplicate digit\n    is found) else returns True if it is 'safe'\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    This function checks the grid to see if each row,\n    column, and the 3x3 subgrids contain the digit 'n'.\n    It returns False if it is not 'safe' (a duplicate digit\n    is found) else returns True if it is 'safe'\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "for_statement",
                            "label": "for i in range(9):\n        if n in {grid[row][i], grid[i][column]}:\n            return False",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "i",
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "label": "range(9)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "range",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(9)",
                                            "children": [
                                                {
                                                    "type": "integer",
                                                    "label": "9",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "if n in {grid[row][i], grid[i][column]}:\n            return False",
                                    "children": [
                                        {
                                            "type": "if_statement",
                                            "label": "if n in {grid[row][i], grid[i][column]}:\n            return False",
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "label": "n in {grid[row][i], grid[i][column]}",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "n",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "set",
                                                            "label": "{grid[row][i], grid[i][column]}",
                                                            "children": [
                                                                {
                                                                    "type": "subscript",
                                                                    "label": "grid[row][i]",
                                                                    "children": [
                                                                        {
                                                                            "type": "subscript",
                                                                            "label": "grid[row]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "grid",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "row",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "i",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "subscript",
                                                                    "label": "grid[i][column]",
                                                                    "children": [
                                                                        {
                                                                            "type": "subscript",
                                                                            "label": "grid[i]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "grid",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "i",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "column",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "return False",
                                                    "children": [
                                                        {
                                                            "type": "return_statement",
                                                            "label": "return False",
                                                            "children": [
                                                                {
                                                                    "type": "false",
                                                                    "label": "False",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "for_statement",
                            "label": "for i in range(3):\n        for j in range(3):\n            if grid[(row - row % 3) + i][(column - column % 3) + j] == n:\n                return False",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "i",
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "label": "range(3)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "range",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(3)",
                                            "children": [
                                                {
                                                    "type": "integer",
                                                    "label": "3",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "for j in range(3):\n            if grid[(row - row % 3) + i][(column - column % 3) + j] == n:\n                return False",
                                    "children": [
                                        {
                                            "type": "for_statement",
                                            "label": "for j in range(3):\n            if grid[(row - row % 3) + i][(column - column % 3) + j] == n:\n                return False",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "j",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "range(3)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "range",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(3)",
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "label": "3",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "if grid[(row - row % 3) + i][(column - column % 3) + j] == n:\n                return False",
                                                    "children": [
                                                        {
                                                            "type": "if_statement",
                                                            "label": "if grid[(row - row % 3) + i][(column - column % 3) + j] == n:\n                return False",
                                                            "children": [
                                                                {
                                                                    "type": "comparison_operator",
                                                                    "label": "grid[(row - row % 3) + i][(column - column % 3) + j] == n",
                                                                    "children": [
                                                                        {
                                                                            "type": "subscript",
                                                                            "label": "grid[(row - row % 3) + i][(column - column % 3) + j]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "subscript",
                                                                                    "label": "grid[(row - row % 3) + i]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "grid",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "binary_operator",
                                                                                            "label": "(row - row % 3) + i",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "parenthesized_expression",
                                                                                                    "label": "(row - row % 3)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "binary_operator",
                                                                                                            "label": "row - row % 3",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "row",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "binary_operator",
                                                                                                                    "label": "row % 3",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "row",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "integer",
                                                                                                                            "label": "3",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "i",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "binary_operator",
                                                                                    "label": "(column - column % 3) + j",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "parenthesized_expression",
                                                                                            "label": "(column - column % 3)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "binary_operator",
                                                                                                    "label": "column - column % 3",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "column",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "binary_operator",
                                                                                                            "label": "column % 3",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "column",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "integer",
                                                                                                                    "label": "3",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "j",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "n",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": "return False",
                                                                    "children": [
                                                                        {
                                                                            "type": "return_statement",
                                                                            "label": "return False",
                                                                            "children": [
                                                                                {
                                                                                    "type": "false",
                                                                                    "label": "False",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return True",
                            "children": [
                                {
                                    "type": "true",
                                    "label": "True",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def find_empty_location(grid: Matrix) -> tuple[int, int] | None:\n    \"\"\"\n    This function finds an empty location so that we can assign a number\n    for that particular row and column.\n    \"\"\"\n    for i in range(9):\n        for j in range(9):\n            if grid[i][j] == 0:\n                return i, j\n    return None",
            "children": [
                {
                    "type": "identifier",
                    "label": "find_empty_location",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(grid: Matrix)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "grid: Matrix",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "grid",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "Matrix",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "Matrix",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "tuple[int, int] | None",
                    "children": [
                        {
                            "type": "union_type",
                            "label": "tuple[int, int] | None",
                            "children": [
                                {
                                    "type": "type",
                                    "label": "tuple[int, int]",
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "tuple[int, int]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "tuple",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[int, int]",
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "int",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "int",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "int",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "int",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "label": "None",
                                    "children": [
                                        {
                                            "type": "none",
                                            "label": "None",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    This function finds an empty location so that we can assign a number\n    for that particular row and column.\n    \"\"\"\n    for i in range(9):\n        for j in range(9):\n            if grid[i][j] == 0:\n                return i, j\n    return None",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    This function finds an empty location so that we can assign a number\n    for that particular row and column.\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    This function finds an empty location so that we can assign a number\n    for that particular row and column.\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    This function finds an empty location so that we can assign a number\n    for that particular row and column.\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "for_statement",
                            "label": "for i in range(9):\n        for j in range(9):\n            if grid[i][j] == 0:\n                return i, j",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "i",
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "label": "range(9)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "range",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(9)",
                                            "children": [
                                                {
                                                    "type": "integer",
                                                    "label": "9",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "for j in range(9):\n            if grid[i][j] == 0:\n                return i, j",
                                    "children": [
                                        {
                                            "type": "for_statement",
                                            "label": "for j in range(9):\n            if grid[i][j] == 0:\n                return i, j",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "j",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "range(9)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "range",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(9)",
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "label": "9",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "if grid[i][j] == 0:\n                return i, j",
                                                    "children": [
                                                        {
                                                            "type": "if_statement",
                                                            "label": "if grid[i][j] == 0:\n                return i, j",
                                                            "children": [
                                                                {
                                                                    "type": "comparison_operator",
                                                                    "label": "grid[i][j] == 0",
                                                                    "children": [
                                                                        {
                                                                            "type": "subscript",
                                                                            "label": "grid[i][j]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "subscript",
                                                                                    "label": "grid[i]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "grid",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "i",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "j",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "0",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": "return i, j",
                                                                    "children": [
                                                                        {
                                                                            "type": "return_statement",
                                                                            "label": "return i, j",
                                                                            "children": [
                                                                                {
                                                                                    "type": "expression_list",
                                                                                    "label": "i, j",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "i",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "j",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return None",
                            "children": [
                                {
                                    "type": "none",
                                    "label": "None",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def sudoku(grid: Matrix) -> Matrix | None:\n    \"\"\"\n    Takes a partially filled-in grid and attempts to assign values to\n    all unassigned locations in such a way to meet the requirements\n    for Sudoku solution (non-duplication across rows, columns, and boxes)\n\n    >>> sudoku(initial_grid)  # doctest: +NORMALIZE_WHITESPACE\n    [[3, 1, 6, 5, 7, 8, 4, 9, 2],\n     [5, 2, 9, 1, 3, 4, 7, 6, 8],\n     [4, 8, 7, 6, 2, 9, 5, 3, 1],\n     [2, 6, 3, 4, 1, 5, 9, 8, 7],\n     [9, 7, 4, 8, 6, 3, 1, 2, 5],\n     [8, 5, 1, 7, 9, 2, 6, 4, 3],\n     [1, 3, 8, 9, 4, 7, 2, 5, 6],\n     [6, 9, 2, 3, 5, 1, 8, 7, 4],\n     [7, 4, 5, 2, 8, 6, 3, 1, 9]]\n     >>> sudoku(no_solution) is None\n     True\n    \"\"\"\n    if location := find_empty_location(grid):\n        row, column = location\n    else:\n        # If the location is ``None``, then the grid is solved.\n        return grid\n\n    for digit in range(1, 10):\n        if is_safe(grid, row, column, digit):\n            grid[row][column] = digit\n\n            if sudoku(grid) is not None:\n                return grid\n\n            grid[row][column] = 0\n\n    return None",
            "children": [
                {
                    "type": "identifier",
                    "label": "sudoku",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(grid: Matrix)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "grid: Matrix",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "grid",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "Matrix",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "Matrix",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "Matrix | None",
                    "children": [
                        {
                            "type": "binary_operator",
                            "label": "Matrix | None",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "Matrix",
                                    "children": []
                                },
                                {
                                    "type": "none",
                                    "label": "None",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    Takes a partially filled-in grid and attempts to assign values to\n    all unassigned locations in such a way to meet the requirements\n    for Sudoku solution (non-duplication across rows, columns, and boxes)\n\n    >>> sudoku(initial_grid)  # doctest: +NORMALIZE_WHITESPACE\n    [[3, 1, 6, 5, 7, 8, 4, 9, 2],\n     [5, 2, 9, 1, 3, 4, 7, 6, 8],\n     [4, 8, 7, 6, 2, 9, 5, 3, 1],\n     [2, 6, 3, 4, 1, 5, 9, 8, 7],\n     [9, 7, 4, 8, 6, 3, 1, 2, 5],\n     [8, 5, 1, 7, 9, 2, 6, 4, 3],\n     [1, 3, 8, 9, 4, 7, 2, 5, 6],\n     [6, 9, 2, 3, 5, 1, 8, 7, 4],\n     [7, 4, 5, 2, 8, 6, 3, 1, 9]]\n     >>> sudoku(no_solution) is None\n     True\n    \"\"\"\n    if location := find_empty_location(grid):\n        row, column = location\n    else:\n        # If the location is ``None``, then the grid is solved.\n        return grid\n\n    for digit in range(1, 10):\n        if is_safe(grid, row, column, digit):\n            grid[row][column] = digit\n\n            if sudoku(grid) is not None:\n                return grid\n\n            grid[row][column] = 0\n\n    return None",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    Takes a partially filled-in grid and attempts to assign values to\n    all unassigned locations in such a way to meet the requirements\n    for Sudoku solution (non-duplication across rows, columns, and boxes)\n\n    >>> sudoku(initial_grid)  # doctest: +NORMALIZE_WHITESPACE\n    [[3, 1, 6, 5, 7, 8, 4, 9, 2],\n     [5, 2, 9, 1, 3, 4, 7, 6, 8],\n     [4, 8, 7, 6, 2, 9, 5, 3, 1],\n     [2, 6, 3, 4, 1, 5, 9, 8, 7],\n     [9, 7, 4, 8, 6, 3, 1, 2, 5],\n     [8, 5, 1, 7, 9, 2, 6, 4, 3],\n     [1, 3, 8, 9, 4, 7, 2, 5, 6],\n     [6, 9, 2, 3, 5, 1, 8, 7, 4],\n     [7, 4, 5, 2, 8, 6, 3, 1, 9]]\n     >>> sudoku(no_solution) is None\n     True\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    Takes a partially filled-in grid and attempts to assign values to\n    all unassigned locations in such a way to meet the requirements\n    for Sudoku solution (non-duplication across rows, columns, and boxes)\n\n    >>> sudoku(initial_grid)  # doctest: +NORMALIZE_WHITESPACE\n    [[3, 1, 6, 5, 7, 8, 4, 9, 2],\n     [5, 2, 9, 1, 3, 4, 7, 6, 8],\n     [4, 8, 7, 6, 2, 9, 5, 3, 1],\n     [2, 6, 3, 4, 1, 5, 9, 8, 7],\n     [9, 7, 4, 8, 6, 3, 1, 2, 5],\n     [8, 5, 1, 7, 9, 2, 6, 4, 3],\n     [1, 3, 8, 9, 4, 7, 2, 5, 6],\n     [6, 9, 2, 3, 5, 1, 8, 7, 4],\n     [7, 4, 5, 2, 8, 6, 3, 1, 9]]\n     >>> sudoku(no_solution) is None\n     True\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    Takes a partially filled-in grid and attempts to assign values to\n    all unassigned locations in such a way to meet the requirements\n    for Sudoku solution (non-duplication across rows, columns, and boxes)\n\n    >>> sudoku(initial_grid)  # doctest: +NORMALIZE_WHITESPACE\n    [[3, 1, 6, 5, 7, 8, 4, 9, 2],\n     [5, 2, 9, 1, 3, 4, 7, 6, 8],\n     [4, 8, 7, 6, 2, 9, 5, 3, 1],\n     [2, 6, 3, 4, 1, 5, 9, 8, 7],\n     [9, 7, 4, 8, 6, 3, 1, 2, 5],\n     [8, 5, 1, 7, 9, 2, 6, 4, 3],\n     [1, 3, 8, 9, 4, 7, 2, 5, 6],\n     [6, 9, 2, 3, 5, 1, 8, 7, 4],\n     [7, 4, 5, 2, 8, 6, 3, 1, 9]]\n     >>> sudoku(no_solution) is None\n     True\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if location := find_empty_location(grid):\n        row, column = location\n    else:\n        # If the location is ``None``, then the grid is solved.\n        return grid",
                            "children": [
                                {
                                    "type": "named_expression",
                                    "label": "location := find_empty_location(grid)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "location",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "find_empty_location(grid)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "find_empty_location",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(grid)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "grid",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "row, column = location",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "row, column = location",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "row, column = location",
                                                    "children": [
                                                        {
                                                            "type": "pattern_list",
                                                            "label": "row, column",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "row",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "column",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "location",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "else_clause",
                                    "label": "else:\n        # If the location is ``None``, then the grid is solved.\n        return grid",
                                    "children": [
                                        {
                                            "type": "comment",
                                            "label": "# If the location is ``None``, then the grid is solved.",
                                            "children": []
                                        },
                                        {
                                            "type": "block",
                                            "label": "return grid",
                                            "children": [
                                                {
                                                    "type": "return_statement",
                                                    "label": "return grid",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "grid",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "for_statement",
                            "label": "for digit in range(1, 10):\n        if is_safe(grid, row, column, digit):\n            grid[row][column] = digit\n\n            if sudoku(grid) is not None:\n                return grid\n\n            grid[row][column] = 0",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "digit",
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "label": "range(1, 10)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "range",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(1, 10)",
                                            "children": [
                                                {
                                                    "type": "integer",
                                                    "label": "1",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "label": "10",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "if is_safe(grid, row, column, digit):\n            grid[row][column] = digit\n\n            if sudoku(grid) is not None:\n                return grid\n\n            grid[row][column] = 0",
                                    "children": [
                                        {
                                            "type": "if_statement",
                                            "label": "if is_safe(grid, row, column, digit):\n            grid[row][column] = digit\n\n            if sudoku(grid) is not None:\n                return grid\n\n            grid[row][column] = 0",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "is_safe(grid, row, column, digit)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "is_safe",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(grid, row, column, digit)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "grid",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "row",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "column",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "digit",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "grid[row][column] = digit\n\n            if sudoku(grid) is not None:\n                return grid\n\n            grid[row][column] = 0",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "grid[row][column] = digit",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "grid[row][column] = digit",
                                                                    "children": [
                                                                        {
                                                                            "type": "subscript",
                                                                            "label": "grid[row][column]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "subscript",
                                                                                    "label": "grid[row]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "grid",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "row",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "column",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "digit",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "if_statement",
                                                            "label": "if sudoku(grid) is not None:\n                return grid",
                                                            "children": [
                                                                {
                                                                    "type": "comparison_operator",
                                                                    "label": "sudoku(grid) is not None",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "sudoku(grid)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "sudoku",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(grid)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "grid",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "none",
                                                                            "label": "None",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": "return grid",
                                                                    "children": [
                                                                        {
                                                                            "type": "return_statement",
                                                                            "label": "return grid",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "grid",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "grid[row][column] = 0",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "grid[row][column] = 0",
                                                                    "children": [
                                                                        {
                                                                            "type": "subscript",
                                                                            "label": "grid[row][column]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "subscript",
                                                                                    "label": "grid[row]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "grid",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "row",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "column",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "0",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return None",
                            "children": [
                                {
                                    "type": "none",
                                    "label": "None",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def print_solution(grid: Matrix) -> None:\n    \"\"\"\n    A function to print the solution in the form\n    of a 9x9 grid\n    \"\"\"\n    for row in grid:\n        for cell in row:\n            print(cell, end=\" \")\n        print()",
            "children": [
                {
                    "type": "identifier",
                    "label": "print_solution",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(grid: Matrix)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "grid: Matrix",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "grid",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "Matrix",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "Matrix",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "None",
                    "children": [
                        {
                            "type": "none",
                            "label": "None",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    A function to print the solution in the form\n    of a 9x9 grid\n    \"\"\"\n    for row in grid:\n        for cell in row:\n            print(cell, end=\" \")\n        print()",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    A function to print the solution in the form\n    of a 9x9 grid\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    A function to print the solution in the form\n    of a 9x9 grid\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    A function to print the solution in the form\n    of a 9x9 grid\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "for_statement",
                            "label": "for row in grid:\n        for cell in row:\n            print(cell, end=\" \")\n        print()",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "row",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "grid",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "label": "for cell in row:\n            print(cell, end=\" \")\n        print()",
                                    "children": [
                                        {
                                            "type": "for_statement",
                                            "label": "for cell in row:\n            print(cell, end=\" \")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "cell",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "row",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "print(cell, end=\" \")",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "print(cell, end=\" \")",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "print(cell, end=\" \")",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "print",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(cell, end=\" \")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "cell",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "end=\" \"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "end",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\" \"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": " ",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "print()",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "print()",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "print",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "()",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "if_statement",
            "label": "if __name__ == \"__main__\":\n    # make a copy of grid so that you can compare with the unmodified grid\n    for example_grid in (initial_grid, no_solution):\n        print(\"\\nExample grid:\\n\" + \"=\" * 20)\n        print_solution(example_grid)\n        print(\"\\nExample grid solution:\")\n        solution = sudoku(example_grid)\n        if solution is not None:\n            print_solution(solution)\n        else:\n            print(\"Cannot find a solution.\")",
            "children": [
                {
                    "type": "comparison_operator",
                    "label": "__name__ == \"__main__\"",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "__name__",
                            "children": []
                        },
                        {
                            "type": "string",
                            "label": "\"__main__\"",
                            "children": [
                                {
                                    "type": "string_start",
                                    "label": "\"",
                                    "children": []
                                },
                                {
                                    "type": "string_content",
                                    "label": "__main__",
                                    "children": []
                                },
                                {
                                    "type": "string_end",
                                    "label": "\"",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "comment",
                    "label": "# make a copy of grid so that you can compare with the unmodified grid",
                    "children": []
                },
                {
                    "type": "block",
                    "label": "for example_grid in (initial_grid, no_solution):\n        print(\"\\nExample grid:\\n\" + \"=\" * 20)\n        print_solution(example_grid)\n        print(\"\\nExample grid solution:\")\n        solution = sudoku(example_grid)\n        if solution is not None:\n            print_solution(solution)\n        else:\n            print(\"Cannot find a solution.\")",
                    "children": [
                        {
                            "type": "for_statement",
                            "label": "for example_grid in (initial_grid, no_solution):\n        print(\"\\nExample grid:\\n\" + \"=\" * 20)\n        print_solution(example_grid)\n        print(\"\\nExample grid solution:\")\n        solution = sudoku(example_grid)\n        if solution is not None:\n            print_solution(solution)\n        else:\n            print(\"Cannot find a solution.\")",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "example_grid",
                                    "children": []
                                },
                                {
                                    "type": "tuple",
                                    "label": "(initial_grid, no_solution)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "initial_grid",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "no_solution",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "print(\"\\nExample grid:\\n\" + \"=\" * 20)\n        print_solution(example_grid)\n        print(\"\\nExample grid solution:\")\n        solution = sudoku(example_grid)\n        if solution is not None:\n            print_solution(solution)\n        else:\n            print(\"Cannot find a solution.\")",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "print(\"\\nExample grid:\\n\" + \"=\" * 20)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "print(\"\\nExample grid:\\n\" + \"=\" * 20)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "print",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\"\\nExample grid:\\n\" + \"=\" * 20)",
                                                            "children": [
                                                                {
                                                                    "type": "binary_operator",
                                                                    "label": "\"\\nExample grid:\\n\" + \"=\" * 20",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"\\nExample grid:\\n\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "\\nExample grid:\\n",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "escape_sequence",
                                                                                            "label": "\\n",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "escape_sequence",
                                                                                            "label": "\\n",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "binary_operator",
                                                                            "label": "\"=\" * 20",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"=\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "=",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "20",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "print_solution(example_grid)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "print_solution(example_grid)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "print_solution",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(example_grid)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "example_grid",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "print(\"\\nExample grid solution:\")",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "print(\"\\nExample grid solution:\")",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "print",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\"\\nExample grid solution:\")",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"\\nExample grid solution:\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "\\nExample grid solution:",
                                                                            "children": [
                                                                                {
                                                                                    "type": "escape_sequence",
                                                                                    "label": "\\n",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "solution = sudoku(example_grid)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "solution = sudoku(example_grid)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "solution",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "sudoku(example_grid)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "sudoku",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(example_grid)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "example_grid",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if solution is not None:\n            print_solution(solution)\n        else:\n            print(\"Cannot find a solution.\")",
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "label": "solution is not None",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "solution",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "none",
                                                            "label": "None",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "print_solution(solution)",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "print_solution(solution)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "print_solution(solution)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "print_solution",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(solution)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "solution",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "else_clause",
                                                    "label": "else:\n            print(\"Cannot find a solution.\")",
                                                    "children": [
                                                        {
                                                            "type": "block",
                                                            "label": "print(\"Cannot find a solution.\")",
                                                            "children": [
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "print(\"Cannot find a solution.\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "print(\"Cannot find a solution.\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "print",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(\"Cannot find a solution.\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"Cannot find a solution.\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "Cannot find a solution.",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}