{
    "type": "module",
    "label": "import io\nimport unittest.mock\n\nimport fastapi\nimport pytest\nimport starlette.datastructures\n\nimport backend.server.v2.store.exceptions\nimport backend.server.v2.store.media\nfrom backend.util.settings import Settings\n\n\n@pytest.fixture\ndef mock_settings(monkeypatch):\n    settings = Settings()\n    settings.config.media_gcs_bucket_name = \"test-bucket\"\n    settings.config.google_application_credentials = \"test-credentials\"\n    monkeypatch.setattr(\"backend.server.v2.store.media.Settings\", lambda: settings)\n    return settings\n\n\n@pytest.fixture\ndef mock_storage_client(mocker):\n    mock_client = unittest.mock.MagicMock()\n    mock_bucket = unittest.mock.MagicMock()\n    mock_blob = unittest.mock.MagicMock()\n\n    mock_client.bucket.return_value = mock_bucket\n    mock_bucket.blob.return_value = mock_blob\n    mock_blob.public_url = \"http://test-url/media/laptop.jpeg\"\n\n    mocker.patch(\"google.cloud.storage.Client\", return_value=mock_client)\n\n    return mock_client\n\n\nasync def test_upload_media_success(mock_settings, mock_storage_client):\n    # Create test JPEG data with valid signature\n    test_data = b\"\\xFF\\xD8\\xFF\" + b\"test data\"\n\n    test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(test_data),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n\n    assert result == \"http://test-url/media/laptop.jpeg\"\n    mock_bucket = mock_storage_client.bucket.return_value\n    mock_blob = mock_bucket.blob.return_value\n    mock_blob.upload_from_string.assert_called_once()\n\n\nasync def test_upload_media_invalid_type(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"test.txt\",\n        file=io.BytesIO(b\"test data\"),\n        headers=starlette.datastructures.Headers({\"content-type\": \"text/plain\"}),\n    )\n\n    with pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n\n    mock_bucket = mock_storage_client.bucket.return_value\n    mock_blob = mock_bucket.blob.return_value\n    mock_blob.upload_from_string.assert_not_called()\n\n\nasync def test_upload_media_missing_credentials(monkeypatch):\n    settings = Settings()\n    settings.config.media_gcs_bucket_name = \"\"\n    settings.config.google_application_credentials = \"\"\n    monkeypatch.setattr(\"backend.server.v2.store.media.Settings\", lambda: settings)\n\n    test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(b\"\\xFF\\xD8\\xFF\" + b\"test data\"),  # Valid JPEG signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n\n    with pytest.raises(backend.server.v2.store.exceptions.StorageConfigError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n\n\nasync def test_upload_media_video_type(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"test.mp4\",\n        file=io.BytesIO(b\"\\x00\\x00\\x00\\x18ftypmp42\"),  # Valid MP4 signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"video/mp4\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n\n    assert result == \"http://test-url/media/laptop.jpeg\"\n    mock_bucket = mock_storage_client.bucket.return_value\n    mock_blob = mock_bucket.blob.return_value\n    mock_blob.upload_from_string.assert_called_once()\n\n\nasync def test_upload_media_file_too_large(mock_settings, mock_storage_client):\n    large_data = b\"\\xFF\\xD8\\xFF\" + b\"x\" * (\n        50 * 1024 * 1024 + 1\n    )  # 50MB + 1 byte with valid JPEG signature\n    test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(large_data),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n\n    with pytest.raises(backend.server.v2.store.exceptions.FileSizeTooLargeError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n\n\nasync def test_upload_media_file_read_error(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(b\"\"),  # Empty file that will raise error on read\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n    test_file.read = unittest.mock.AsyncMock(side_effect=Exception(\"Read error\"))\n\n    with pytest.raises(backend.server.v2.store.exceptions.FileReadError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n\n\nasync def test_upload_media_png_success(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"test.png\",\n        file=io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\"),  # Valid PNG signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/png\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n    assert result == \"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_gif_success(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"test.gif\",\n        file=io.BytesIO(b\"GIF89a\"),  # Valid GIF signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/gif\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n    assert result == \"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_webp_success(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"test.webp\",\n        file=io.BytesIO(b\"RIFF\\x00\\x00\\x00\\x00WEBP\"),  # Valid WebP signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/webp\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n    assert result == \"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_webm_success(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"test.webm\",\n        file=io.BytesIO(b\"\\x1a\\x45\\xdf\\xa3\"),  # Valid WebM signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"video/webm\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n    assert result == \"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_mismatched_signature(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"test.jpeg\",\n        file=io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\"),  # PNG signature with JPEG content type\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n\n    with pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n\n\nasync def test_upload_media_invalid_signature(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"test.jpeg\",\n        file=io.BytesIO(b\"invalid signature\"),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n\n    with pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n",
    "children": [
        {
            "type": "import_statement",
            "label": "import io",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "io",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "io",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import unittest.mock",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "unittest.mock",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "unittest",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "mock",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import fastapi",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "fastapi",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "fastapi",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import pytest",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "pytest",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "pytest",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import starlette.datastructures",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "starlette.datastructures",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "starlette",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "datastructures",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import backend.server.v2.store.exceptions",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.server.v2.store.exceptions",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "server",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "v2",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "store",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "exceptions",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import backend.server.v2.store.media",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.server.v2.store.media",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "server",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "v2",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "store",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "media",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.util.settings import Settings",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.util.settings",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "util",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "settings",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Settings",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Settings",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@pytest.fixture\ndef mock_settings(monkeypatch):\n    settings = Settings()\n    settings.config.media_gcs_bucket_name = \"test-bucket\"\n    settings.config.google_application_credentials = \"test-credentials\"\n    monkeypatch.setattr(\"backend.server.v2.store.media.Settings\", lambda: settings)\n    return settings",
            "children": [
                {
                    "type": "decorator",
                    "label": "@pytest.fixture",
                    "children": [
                        {
                            "type": "attribute",
                            "label": "pytest.fixture",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "pytest",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "fixture",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "def mock_settings(monkeypatch):\n    settings = Settings()\n    settings.config.media_gcs_bucket_name = \"test-bucket\"\n    settings.config.google_application_credentials = \"test-credentials\"\n    monkeypatch.setattr(\"backend.server.v2.store.media.Settings\", lambda: settings)\n    return settings",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "mock_settings",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(monkeypatch)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "monkeypatch",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "settings = Settings()\n    settings.config.media_gcs_bucket_name = \"test-bucket\"\n    settings.config.google_application_credentials = \"test-credentials\"\n    monkeypatch.setattr(\"backend.server.v2.store.media.Settings\", lambda: settings)\n    return settings",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "settings = Settings()",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "settings = Settings()",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "settings",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "Settings()",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Settings",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "()",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "settings.config.media_gcs_bucket_name = \"test-bucket\"",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "settings.config.media_gcs_bucket_name = \"test-bucket\"",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "settings.config.media_gcs_bucket_name",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "settings.config",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "settings",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "config",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "media_gcs_bucket_name",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"test-bucket\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "test-bucket",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "settings.config.google_application_credentials = \"test-credentials\"",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "settings.config.google_application_credentials = \"test-credentials\"",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "settings.config.google_application_credentials",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "settings.config",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "settings",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "config",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "google_application_credentials",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"test-credentials\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "test-credentials",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "monkeypatch.setattr(\"backend.server.v2.store.media.Settings\", lambda: settings)",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "monkeypatch.setattr(\"backend.server.v2.store.media.Settings\", lambda: settings)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "monkeypatch.setattr",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "monkeypatch",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "setattr",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(\"backend.server.v2.store.media.Settings\", lambda: settings)",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"backend.server.v2.store.media.Settings\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "backend.server.v2.store.media.Settings",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "lambda",
                                                            "label": "lambda: settings",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "settings",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "return_statement",
                                    "label": "return settings",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "settings",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@pytest.fixture\ndef mock_storage_client(mocker):\n    mock_client = unittest.mock.MagicMock()\n    mock_bucket = unittest.mock.MagicMock()\n    mock_blob = unittest.mock.MagicMock()\n\n    mock_client.bucket.return_value = mock_bucket\n    mock_bucket.blob.return_value = mock_blob\n    mock_blob.public_url = \"http://test-url/media/laptop.jpeg\"\n\n    mocker.patch(\"google.cloud.storage.Client\", return_value=mock_client)\n\n    return mock_client",
            "children": [
                {
                    "type": "decorator",
                    "label": "@pytest.fixture",
                    "children": [
                        {
                            "type": "attribute",
                            "label": "pytest.fixture",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "pytest",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "fixture",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "def mock_storage_client(mocker):\n    mock_client = unittest.mock.MagicMock()\n    mock_bucket = unittest.mock.MagicMock()\n    mock_blob = unittest.mock.MagicMock()\n\n    mock_client.bucket.return_value = mock_bucket\n    mock_bucket.blob.return_value = mock_blob\n    mock_blob.public_url = \"http://test-url/media/laptop.jpeg\"\n\n    mocker.patch(\"google.cloud.storage.Client\", return_value=mock_client)\n\n    return mock_client",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "mock_storage_client",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(mocker)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "mocker",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "mock_client = unittest.mock.MagicMock()\n    mock_bucket = unittest.mock.MagicMock()\n    mock_blob = unittest.mock.MagicMock()\n\n    mock_client.bucket.return_value = mock_bucket\n    mock_bucket.blob.return_value = mock_blob\n    mock_blob.public_url = \"http://test-url/media/laptop.jpeg\"\n\n    mocker.patch(\"google.cloud.storage.Client\", return_value=mock_client)\n\n    return mock_client",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "mock_client = unittest.mock.MagicMock()",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "mock_client = unittest.mock.MagicMock()",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "mock_client",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "unittest.mock.MagicMock()",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "unittest.mock.MagicMock",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "unittest.mock",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "unittest",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "mock",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "MagicMock",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "()",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "mock_bucket = unittest.mock.MagicMock()",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "mock_bucket = unittest.mock.MagicMock()",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "mock_bucket",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "unittest.mock.MagicMock()",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "unittest.mock.MagicMock",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "unittest.mock",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "unittest",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "mock",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "MagicMock",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "()",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "mock_blob = unittest.mock.MagicMock()",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "mock_blob = unittest.mock.MagicMock()",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "mock_blob",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "unittest.mock.MagicMock()",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "unittest.mock.MagicMock",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "unittest.mock",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "unittest",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "mock",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "MagicMock",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "()",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "mock_client.bucket.return_value = mock_bucket",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "mock_client.bucket.return_value = mock_bucket",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "mock_client.bucket.return_value",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "mock_client.bucket",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "mock_client",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "bucket",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "return_value",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "mock_bucket",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "mock_bucket.blob.return_value = mock_blob",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "mock_bucket.blob.return_value = mock_blob",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "mock_bucket.blob.return_value",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "mock_bucket.blob",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "mock_bucket",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "blob",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "return_value",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "mock_blob",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "mock_blob.public_url = \"http://test-url/media/laptop.jpeg\"",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "mock_blob.public_url = \"http://test-url/media/laptop.jpeg\"",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "mock_blob.public_url",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "mock_blob",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "public_url",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"http://test-url/media/laptop.jpeg\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "http://test-url/media/laptop.jpeg",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "mocker.patch(\"google.cloud.storage.Client\", return_value=mock_client)",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "mocker.patch(\"google.cloud.storage.Client\", return_value=mock_client)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "mocker.patch",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "mocker",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "patch",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(\"google.cloud.storage.Client\", return_value=mock_client)",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"google.cloud.storage.Client\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "google.cloud.storage.Client",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "return_value=mock_client",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "return_value",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "mock_client",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "return_statement",
                                    "label": "return mock_client",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "mock_client",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def test_upload_media_success(mock_settings, mock_storage_client):\n    # Create test JPEG data with valid signature\n    test_data = b\"\\xFF\\xD8\\xFF\" + b\"test data\"\n\n    test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(test_data),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n\n    assert result == \"http://test-url/media/laptop.jpeg\"\n    mock_bucket = mock_storage_client.bucket.return_value\n    mock_blob = mock_bucket.blob.return_value\n    mock_blob.upload_from_string.assert_called_once()",
            "children": [
                {
                    "type": "identifier",
                    "label": "test_upload_media_success",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(mock_settings, mock_storage_client)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "mock_settings",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "mock_storage_client",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "comment",
                    "label": "# Create test JPEG data with valid signature",
                    "children": []
                },
                {
                    "type": "block",
                    "label": "test_data = b\"\\xFF\\xD8\\xFF\" + b\"test data\"\n\n    test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(test_data),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n\n    assert result == \"http://test-url/media/laptop.jpeg\"\n    mock_bucket = mock_storage_client.bucket.return_value\n    mock_blob = mock_bucket.blob.return_value\n    mock_blob.upload_from_string.assert_called_once()",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "test_data = b\"\\xFF\\xD8\\xFF\" + b\"test data\"",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "test_data = b\"\\xFF\\xD8\\xFF\" + b\"test data\"",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "test_data",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "b\"\\xFF\\xD8\\xFF\" + b\"test data\"",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "b\"\\xFF\\xD8\\xFF\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "b\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "\\xFF\\xD8\\xFF",
                                                            "children": [
                                                                {
                                                                    "type": "escape_sequence",
                                                                    "label": "\\xFF",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "escape_sequence",
                                                                    "label": "\\xD8",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "escape_sequence",
                                                                    "label": "\\xFF",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "b\"test data\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "b\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "test data",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(test_data),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(test_data),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "test_file",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(test_data),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "fastapi.UploadFile",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "fastapi",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "UploadFile",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(test_data),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                                                    "children": [
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "filename=\"laptop.jpeg\"",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "filename",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"laptop.jpeg\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "laptop.jpeg",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "file=io.BytesIO(test_data)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "file",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "io.BytesIO(test_data)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "io.BytesIO",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "io",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "BytesIO",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(test_data)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "test_data",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"})",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "headers",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"})",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "starlette.datastructures.Headers",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "starlette.datastructures",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "starlette",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "datastructures",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Headers",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "({\"content-type\": \"image/jpeg\"})",
                                                                            "children": [
                                                                                {
                                                                                    "type": "dictionary",
                                                                                    "label": "{\"content-type\": \"image/jpeg\"}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "pair",
                                                                                            "label": "\"content-type\": \"image/jpeg\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"content-type\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "content-type",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"image/jpeg\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "image/jpeg",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "result",
                                            "children": []
                                        },
                                        {
                                            "type": "await",
                                            "label": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "backend.server.v2.store.media.upload_media",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "backend.server.v2.store.media",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "backend.server.v2.store",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "backend.server.v2",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "backend.server",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "backend",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "server",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "v2",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "store",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "media",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "upload_media",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\"test-user\", test_file)",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"test-user\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "test-user",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "test_file",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assert_statement",
                            "label": "assert result == \"http://test-url/media/laptop.jpeg\"",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "label": "result == \"http://test-url/media/laptop.jpeg\"",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "result",
                                            "children": []
                                        },
                                        {
                                            "type": "string",
                                            "label": "\"http://test-url/media/laptop.jpeg\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "http://test-url/media/laptop.jpeg",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "mock_bucket = mock_storage_client.bucket.return_value",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "mock_bucket = mock_storage_client.bucket.return_value",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "mock_bucket",
                                            "children": []
                                        },
                                        {
                                            "type": "attribute",
                                            "label": "mock_storage_client.bucket.return_value",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "mock_storage_client.bucket",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "mock_storage_client",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "bucket",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "return_value",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "mock_blob = mock_bucket.blob.return_value",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "mock_blob = mock_bucket.blob.return_value",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "mock_blob",
                                            "children": []
                                        },
                                        {
                                            "type": "attribute",
                                            "label": "mock_bucket.blob.return_value",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "mock_bucket.blob",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "mock_bucket",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "blob",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "return_value",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "mock_blob.upload_from_string.assert_called_once()",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "mock_blob.upload_from_string.assert_called_once()",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "mock_blob.upload_from_string.assert_called_once",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "mock_blob.upload_from_string",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "mock_blob",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "upload_from_string",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "assert_called_once",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "()",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def test_upload_media_invalid_type(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"test.txt\",\n        file=io.BytesIO(b\"test data\"),\n        headers=starlette.datastructures.Headers({\"content-type\": \"text/plain\"}),\n    )\n\n    with pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n\n    mock_bucket = mock_storage_client.bucket.return_value\n    mock_blob = mock_bucket.blob.return_value\n    mock_blob.upload_from_string.assert_not_called()",
            "children": [
                {
                    "type": "identifier",
                    "label": "test_upload_media_invalid_type",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(mock_settings, mock_storage_client)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "mock_settings",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "mock_storage_client",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "test_file = fastapi.UploadFile(\n        filename=\"test.txt\",\n        file=io.BytesIO(b\"test data\"),\n        headers=starlette.datastructures.Headers({\"content-type\": \"text/plain\"}),\n    )\n\n    with pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n\n    mock_bucket = mock_storage_client.bucket.return_value\n    mock_blob = mock_bucket.blob.return_value\n    mock_blob.upload_from_string.assert_not_called()",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "test_file = fastapi.UploadFile(\n        filename=\"test.txt\",\n        file=io.BytesIO(b\"test data\"),\n        headers=starlette.datastructures.Headers({\"content-type\": \"text/plain\"}),\n    )",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "test_file = fastapi.UploadFile(\n        filename=\"test.txt\",\n        file=io.BytesIO(b\"test data\"),\n        headers=starlette.datastructures.Headers({\"content-type\": \"text/plain\"}),\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "test_file",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "fastapi.UploadFile(\n        filename=\"test.txt\",\n        file=io.BytesIO(b\"test data\"),\n        headers=starlette.datastructures.Headers({\"content-type\": \"text/plain\"}),\n    )",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "fastapi.UploadFile",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "fastapi",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "UploadFile",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(\n        filename=\"test.txt\",\n        file=io.BytesIO(b\"test data\"),\n        headers=starlette.datastructures.Headers({\"content-type\": \"text/plain\"}),\n    )",
                                                    "children": [
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "filename=\"test.txt\"",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "filename",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"test.txt\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "test.txt",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "file=io.BytesIO(b\"test data\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "file",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "io.BytesIO(b\"test data\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "io.BytesIO",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "io",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "BytesIO",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(b\"test data\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "b\"test data\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "b\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "test data",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "headers=starlette.datastructures.Headers({\"content-type\": \"text/plain\"})",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "headers",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "starlette.datastructures.Headers({\"content-type\": \"text/plain\"})",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "starlette.datastructures.Headers",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "starlette.datastructures",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "starlette",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "datastructures",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Headers",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "({\"content-type\": \"text/plain\"})",
                                                                            "children": [
                                                                                {
                                                                                    "type": "dictionary",
                                                                                    "label": "{\"content-type\": \"text/plain\"}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "pair",
                                                                                            "label": "\"content-type\": \"text/plain\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"content-type\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "content-type",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"text/plain\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "text/plain",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "with_statement",
                            "label": "with pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                            "children": [
                                {
                                    "type": "with_clause",
                                    "label": "pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError)",
                                    "children": [
                                        {
                                            "type": "with_item",
                                            "label": "pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "pytest.raises",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "pytest",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "raises",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(backend.server.v2.store.exceptions.InvalidFileTypeError)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "backend.server.v2.store.exceptions.InvalidFileTypeError",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "backend.server.v2.store.exceptions",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "backend.server.v2.store",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "backend.server.v2",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "backend.server",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "backend",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "server",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "v2",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "store",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "exceptions",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "InvalidFileTypeError",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                            "children": [
                                                {
                                                    "type": "await",
                                                    "label": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "backend.server.v2.store.media.upload_media",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "backend.server.v2.store.media",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "backend.server.v2.store",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "backend.server.v2",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "backend.server",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "backend",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "server",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "v2",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "store",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "media",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "upload_media",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\"test-user\", test_file)",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"test-user\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "test-user",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "test_file",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "mock_bucket = mock_storage_client.bucket.return_value",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "mock_bucket = mock_storage_client.bucket.return_value",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "mock_bucket",
                                            "children": []
                                        },
                                        {
                                            "type": "attribute",
                                            "label": "mock_storage_client.bucket.return_value",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "mock_storage_client.bucket",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "mock_storage_client",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "bucket",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "return_value",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "mock_blob = mock_bucket.blob.return_value",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "mock_blob = mock_bucket.blob.return_value",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "mock_blob",
                                            "children": []
                                        },
                                        {
                                            "type": "attribute",
                                            "label": "mock_bucket.blob.return_value",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "mock_bucket.blob",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "mock_bucket",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "blob",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "return_value",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "mock_blob.upload_from_string.assert_not_called()",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "mock_blob.upload_from_string.assert_not_called()",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "mock_blob.upload_from_string.assert_not_called",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "mock_blob.upload_from_string",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "mock_blob",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "upload_from_string",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "assert_not_called",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "()",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def test_upload_media_missing_credentials(monkeypatch):\n    settings = Settings()\n    settings.config.media_gcs_bucket_name = \"\"\n    settings.config.google_application_credentials = \"\"\n    monkeypatch.setattr(\"backend.server.v2.store.media.Settings\", lambda: settings)\n\n    test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(b\"\\xFF\\xD8\\xFF\" + b\"test data\"),  # Valid JPEG signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n\n    with pytest.raises(backend.server.v2.store.exceptions.StorageConfigError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
            "children": [
                {
                    "type": "identifier",
                    "label": "test_upload_media_missing_credentials",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(monkeypatch)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "monkeypatch",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "settings = Settings()\n    settings.config.media_gcs_bucket_name = \"\"\n    settings.config.google_application_credentials = \"\"\n    monkeypatch.setattr(\"backend.server.v2.store.media.Settings\", lambda: settings)\n\n    test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(b\"\\xFF\\xD8\\xFF\" + b\"test data\"),  # Valid JPEG signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n\n    with pytest.raises(backend.server.v2.store.exceptions.StorageConfigError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "settings = Settings()",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "settings = Settings()",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "settings",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "Settings()",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "Settings",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "()",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "settings.config.media_gcs_bucket_name = \"\"",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "settings.config.media_gcs_bucket_name = \"\"",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "settings.config.media_gcs_bucket_name",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "settings.config",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "settings",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "config",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "media_gcs_bucket_name",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "string",
                                            "label": "\"\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "settings.config.google_application_credentials = \"\"",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "settings.config.google_application_credentials = \"\"",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "settings.config.google_application_credentials",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "settings.config",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "settings",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "config",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "google_application_credentials",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "string",
                                            "label": "\"\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "monkeypatch.setattr(\"backend.server.v2.store.media.Settings\", lambda: settings)",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "monkeypatch.setattr(\"backend.server.v2.store.media.Settings\", lambda: settings)",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "monkeypatch.setattr",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "monkeypatch",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "setattr",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(\"backend.server.v2.store.media.Settings\", lambda: settings)",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "\"backend.server.v2.store.media.Settings\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "backend.server.v2.store.media.Settings",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "lambda",
                                                    "label": "lambda: settings",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "settings",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(b\"\\xFF\\xD8\\xFF\" + b\"test data\"),  # Valid JPEG signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(b\"\\xFF\\xD8\\xFF\" + b\"test data\"),  # Valid JPEG signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "test_file",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(b\"\\xFF\\xD8\\xFF\" + b\"test data\"),  # Valid JPEG signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "fastapi.UploadFile",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "fastapi",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "UploadFile",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(b\"\\xFF\\xD8\\xFF\" + b\"test data\"),  # Valid JPEG signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                                                    "children": [
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "filename=\"laptop.jpeg\"",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "filename",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"laptop.jpeg\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "laptop.jpeg",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "file=io.BytesIO(b\"\\xFF\\xD8\\xFF\" + b\"test data\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "file",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "io.BytesIO(b\"\\xFF\\xD8\\xFF\" + b\"test data\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "io.BytesIO",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "io",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "BytesIO",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(b\"\\xFF\\xD8\\xFF\" + b\"test data\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "binary_operator",
                                                                                    "label": "b\"\\xFF\\xD8\\xFF\" + b\"test data\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "b\"\\xFF\\xD8\\xFF\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "b\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "\\xFF\\xD8\\xFF",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "escape_sequence",
                                                                                                            "label": "\\xFF",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "escape_sequence",
                                                                                                            "label": "\\xD8",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "escape_sequence",
                                                                                                            "label": "\\xFF",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "b\"test data\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "b\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "test data",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "comment",
                                                            "label": "# Valid JPEG signature",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"})",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "headers",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"})",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "starlette.datastructures.Headers",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "starlette.datastructures",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "starlette",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "datastructures",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Headers",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "({\"content-type\": \"image/jpeg\"})",
                                                                            "children": [
                                                                                {
                                                                                    "type": "dictionary",
                                                                                    "label": "{\"content-type\": \"image/jpeg\"}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "pair",
                                                                                            "label": "\"content-type\": \"image/jpeg\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"content-type\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "content-type",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"image/jpeg\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "image/jpeg",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "with_statement",
                            "label": "with pytest.raises(backend.server.v2.store.exceptions.StorageConfigError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                            "children": [
                                {
                                    "type": "with_clause",
                                    "label": "pytest.raises(backend.server.v2.store.exceptions.StorageConfigError)",
                                    "children": [
                                        {
                                            "type": "with_item",
                                            "label": "pytest.raises(backend.server.v2.store.exceptions.StorageConfigError)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "pytest.raises(backend.server.v2.store.exceptions.StorageConfigError)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "pytest.raises",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "pytest",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "raises",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(backend.server.v2.store.exceptions.StorageConfigError)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "backend.server.v2.store.exceptions.StorageConfigError",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "backend.server.v2.store.exceptions",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "backend.server.v2.store",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "backend.server.v2",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "backend.server",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "backend",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "server",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "v2",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "store",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "exceptions",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "StorageConfigError",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                            "children": [
                                                {
                                                    "type": "await",
                                                    "label": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "backend.server.v2.store.media.upload_media",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "backend.server.v2.store.media",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "backend.server.v2.store",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "backend.server.v2",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "backend.server",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "backend",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "server",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "v2",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "store",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "media",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "upload_media",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\"test-user\", test_file)",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"test-user\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "test-user",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "test_file",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def test_upload_media_video_type(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"test.mp4\",\n        file=io.BytesIO(b\"\\x00\\x00\\x00\\x18ftypmp42\"),  # Valid MP4 signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"video/mp4\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n\n    assert result == \"http://test-url/media/laptop.jpeg\"\n    mock_bucket = mock_storage_client.bucket.return_value\n    mock_blob = mock_bucket.blob.return_value\n    mock_blob.upload_from_string.assert_called_once()",
            "children": [
                {
                    "type": "identifier",
                    "label": "test_upload_media_video_type",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(mock_settings, mock_storage_client)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "mock_settings",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "mock_storage_client",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "test_file = fastapi.UploadFile(\n        filename=\"test.mp4\",\n        file=io.BytesIO(b\"\\x00\\x00\\x00\\x18ftypmp42\"),  # Valid MP4 signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"video/mp4\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n\n    assert result == \"http://test-url/media/laptop.jpeg\"\n    mock_bucket = mock_storage_client.bucket.return_value\n    mock_blob = mock_bucket.blob.return_value\n    mock_blob.upload_from_string.assert_called_once()",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "test_file = fastapi.UploadFile(\n        filename=\"test.mp4\",\n        file=io.BytesIO(b\"\\x00\\x00\\x00\\x18ftypmp42\"),  # Valid MP4 signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"video/mp4\"}),\n    )",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "test_file = fastapi.UploadFile(\n        filename=\"test.mp4\",\n        file=io.BytesIO(b\"\\x00\\x00\\x00\\x18ftypmp42\"),  # Valid MP4 signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"video/mp4\"}),\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "test_file",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "fastapi.UploadFile(\n        filename=\"test.mp4\",\n        file=io.BytesIO(b\"\\x00\\x00\\x00\\x18ftypmp42\"),  # Valid MP4 signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"video/mp4\"}),\n    )",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "fastapi.UploadFile",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "fastapi",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "UploadFile",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(\n        filename=\"test.mp4\",\n        file=io.BytesIO(b\"\\x00\\x00\\x00\\x18ftypmp42\"),  # Valid MP4 signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"video/mp4\"}),\n    )",
                                                    "children": [
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "filename=\"test.mp4\"",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "filename",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"test.mp4\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "test.mp4",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "file=io.BytesIO(b\"\\x00\\x00\\x00\\x18ftypmp42\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "file",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "io.BytesIO(b\"\\x00\\x00\\x00\\x18ftypmp42\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "io.BytesIO",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "io",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "BytesIO",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(b\"\\x00\\x00\\x00\\x18ftypmp42\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "b\"\\x00\\x00\\x00\\x18ftypmp42\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "b\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "\\x00\\x00\\x00\\x18ftypmp42",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "escape_sequence",
                                                                                                    "label": "\\x00",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "escape_sequence",
                                                                                                    "label": "\\x00",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "escape_sequence",
                                                                                                    "label": "\\x00",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "escape_sequence",
                                                                                                    "label": "\\x18",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "comment",
                                                            "label": "# Valid MP4 signature",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "headers=starlette.datastructures.Headers({\"content-type\": \"video/mp4\"})",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "headers",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "starlette.datastructures.Headers({\"content-type\": \"video/mp4\"})",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "starlette.datastructures.Headers",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "starlette.datastructures",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "starlette",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "datastructures",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Headers",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "({\"content-type\": \"video/mp4\"})",
                                                                            "children": [
                                                                                {
                                                                                    "type": "dictionary",
                                                                                    "label": "{\"content-type\": \"video/mp4\"}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "pair",
                                                                                            "label": "\"content-type\": \"video/mp4\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"content-type\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "content-type",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"video/mp4\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "video/mp4",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "result",
                                            "children": []
                                        },
                                        {
                                            "type": "await",
                                            "label": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "backend.server.v2.store.media.upload_media",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "backend.server.v2.store.media",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "backend.server.v2.store",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "backend.server.v2",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "backend.server",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "backend",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "server",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "v2",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "store",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "media",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "upload_media",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\"test-user\", test_file)",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"test-user\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "test-user",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "test_file",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assert_statement",
                            "label": "assert result == \"http://test-url/media/laptop.jpeg\"",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "label": "result == \"http://test-url/media/laptop.jpeg\"",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "result",
                                            "children": []
                                        },
                                        {
                                            "type": "string",
                                            "label": "\"http://test-url/media/laptop.jpeg\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "http://test-url/media/laptop.jpeg",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "mock_bucket = mock_storage_client.bucket.return_value",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "mock_bucket = mock_storage_client.bucket.return_value",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "mock_bucket",
                                            "children": []
                                        },
                                        {
                                            "type": "attribute",
                                            "label": "mock_storage_client.bucket.return_value",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "mock_storage_client.bucket",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "mock_storage_client",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "bucket",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "return_value",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "mock_blob = mock_bucket.blob.return_value",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "mock_blob = mock_bucket.blob.return_value",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "mock_blob",
                                            "children": []
                                        },
                                        {
                                            "type": "attribute",
                                            "label": "mock_bucket.blob.return_value",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "mock_bucket.blob",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "mock_bucket",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "blob",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "return_value",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "mock_blob.upload_from_string.assert_called_once()",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "mock_blob.upload_from_string.assert_called_once()",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "mock_blob.upload_from_string.assert_called_once",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "mock_blob.upload_from_string",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "mock_blob",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "upload_from_string",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "assert_called_once",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "()",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def test_upload_media_file_too_large(mock_settings, mock_storage_client):\n    large_data = b\"\\xFF\\xD8\\xFF\" + b\"x\" * (\n        50 * 1024 * 1024 + 1\n    )  # 50MB + 1 byte with valid JPEG signature\n    test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(large_data),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n\n    with pytest.raises(backend.server.v2.store.exceptions.FileSizeTooLargeError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
            "children": [
                {
                    "type": "identifier",
                    "label": "test_upload_media_file_too_large",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(mock_settings, mock_storage_client)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "mock_settings",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "mock_storage_client",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "large_data = b\"\\xFF\\xD8\\xFF\" + b\"x\" * (\n        50 * 1024 * 1024 + 1\n    )  # 50MB + 1 byte with valid JPEG signature\n    test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(large_data),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n\n    with pytest.raises(backend.server.v2.store.exceptions.FileSizeTooLargeError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "large_data = b\"\\xFF\\xD8\\xFF\" + b\"x\" * (\n        50 * 1024 * 1024 + 1\n    )",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "large_data = b\"\\xFF\\xD8\\xFF\" + b\"x\" * (\n        50 * 1024 * 1024 + 1\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "large_data",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "b\"\\xFF\\xD8\\xFF\" + b\"x\" * (\n        50 * 1024 * 1024 + 1\n    )",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "b\"\\xFF\\xD8\\xFF\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "b\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "\\xFF\\xD8\\xFF",
                                                            "children": [
                                                                {
                                                                    "type": "escape_sequence",
                                                                    "label": "\\xFF",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "escape_sequence",
                                                                    "label": "\\xD8",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "escape_sequence",
                                                                    "label": "\\xFF",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "label": "b\"x\" * (\n        50 * 1024 * 1024 + 1\n    )",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "b\"x\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "b\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "x",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "parenthesized_expression",
                                                            "label": "(\n        50 * 1024 * 1024 + 1\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "binary_operator",
                                                                    "label": "50 * 1024 * 1024 + 1",
                                                                    "children": [
                                                                        {
                                                                            "type": "binary_operator",
                                                                            "label": "50 * 1024 * 1024",
                                                                            "children": [
                                                                                {
                                                                                    "type": "binary_operator",
                                                                                    "label": "50 * 1024",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "label": "50",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "label": "1024",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "1024",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "1",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# 50MB + 1 byte with valid JPEG signature",
                            "children": []
                        },
                        {
                            "type": "expression_statement",
                            "label": "test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(large_data),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(large_data),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "test_file",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(large_data),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "fastapi.UploadFile",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "fastapi",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "UploadFile",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(large_data),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                                                    "children": [
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "filename=\"laptop.jpeg\"",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "filename",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"laptop.jpeg\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "laptop.jpeg",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "file=io.BytesIO(large_data)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "file",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "io.BytesIO(large_data)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "io.BytesIO",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "io",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "BytesIO",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(large_data)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "large_data",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"})",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "headers",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"})",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "starlette.datastructures.Headers",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "starlette.datastructures",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "starlette",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "datastructures",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Headers",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "({\"content-type\": \"image/jpeg\"})",
                                                                            "children": [
                                                                                {
                                                                                    "type": "dictionary",
                                                                                    "label": "{\"content-type\": \"image/jpeg\"}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "pair",
                                                                                            "label": "\"content-type\": \"image/jpeg\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"content-type\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "content-type",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"image/jpeg\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "image/jpeg",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "with_statement",
                            "label": "with pytest.raises(backend.server.v2.store.exceptions.FileSizeTooLargeError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                            "children": [
                                {
                                    "type": "with_clause",
                                    "label": "pytest.raises(backend.server.v2.store.exceptions.FileSizeTooLargeError)",
                                    "children": [
                                        {
                                            "type": "with_item",
                                            "label": "pytest.raises(backend.server.v2.store.exceptions.FileSizeTooLargeError)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "pytest.raises(backend.server.v2.store.exceptions.FileSizeTooLargeError)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "pytest.raises",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "pytest",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "raises",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(backend.server.v2.store.exceptions.FileSizeTooLargeError)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "backend.server.v2.store.exceptions.FileSizeTooLargeError",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "backend.server.v2.store.exceptions",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "backend.server.v2.store",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "backend.server.v2",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "backend.server",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "backend",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "server",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "v2",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "store",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "exceptions",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "FileSizeTooLargeError",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                            "children": [
                                                {
                                                    "type": "await",
                                                    "label": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "backend.server.v2.store.media.upload_media",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "backend.server.v2.store.media",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "backend.server.v2.store",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "backend.server.v2",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "backend.server",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "backend",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "server",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "v2",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "store",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "media",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "upload_media",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\"test-user\", test_file)",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"test-user\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "test-user",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "test_file",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def test_upload_media_file_read_error(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(b\"\"),  # Empty file that will raise error on read\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n    test_file.read = unittest.mock.AsyncMock(side_effect=Exception(\"Read error\"))\n\n    with pytest.raises(backend.server.v2.store.exceptions.FileReadError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
            "children": [
                {
                    "type": "identifier",
                    "label": "test_upload_media_file_read_error",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(mock_settings, mock_storage_client)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "mock_settings",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "mock_storage_client",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(b\"\"),  # Empty file that will raise error on read\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n    test_file.read = unittest.mock.AsyncMock(side_effect=Exception(\"Read error\"))\n\n    with pytest.raises(backend.server.v2.store.exceptions.FileReadError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(b\"\"),  # Empty file that will raise error on read\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(b\"\"),  # Empty file that will raise error on read\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "test_file",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(b\"\"),  # Empty file that will raise error on read\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "fastapi.UploadFile",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "fastapi",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "UploadFile",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(b\"\"),  # Empty file that will raise error on read\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                                                    "children": [
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "filename=\"laptop.jpeg\"",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "filename",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"laptop.jpeg\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "laptop.jpeg",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "file=io.BytesIO(b\"\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "file",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "io.BytesIO(b\"\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "io.BytesIO",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "io",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "BytesIO",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(b\"\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "b\"\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "b\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "comment",
                                                            "label": "# Empty file that will raise error on read",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"})",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "headers",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"})",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "starlette.datastructures.Headers",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "starlette.datastructures",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "starlette",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "datastructures",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Headers",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "({\"content-type\": \"image/jpeg\"})",
                                                                            "children": [
                                                                                {
                                                                                    "type": "dictionary",
                                                                                    "label": "{\"content-type\": \"image/jpeg\"}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "pair",
                                                                                            "label": "\"content-type\": \"image/jpeg\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"content-type\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "content-type",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"image/jpeg\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "image/jpeg",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "test_file.read = unittest.mock.AsyncMock(side_effect=Exception(\"Read error\"))",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "test_file.read = unittest.mock.AsyncMock(side_effect=Exception(\"Read error\"))",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "test_file.read",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "test_file",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "read",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "call",
                                            "label": "unittest.mock.AsyncMock(side_effect=Exception(\"Read error\"))",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "unittest.mock.AsyncMock",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "unittest.mock",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "unittest",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "mock",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "AsyncMock",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(side_effect=Exception(\"Read error\"))",
                                                    "children": [
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "side_effect=Exception(\"Read error\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "side_effect",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "Exception(\"Read error\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "Exception",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(\"Read error\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"Read error\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Read error",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "with_statement",
                            "label": "with pytest.raises(backend.server.v2.store.exceptions.FileReadError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                            "children": [
                                {
                                    "type": "with_clause",
                                    "label": "pytest.raises(backend.server.v2.store.exceptions.FileReadError)",
                                    "children": [
                                        {
                                            "type": "with_item",
                                            "label": "pytest.raises(backend.server.v2.store.exceptions.FileReadError)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "pytest.raises(backend.server.v2.store.exceptions.FileReadError)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "pytest.raises",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "pytest",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "raises",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(backend.server.v2.store.exceptions.FileReadError)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "backend.server.v2.store.exceptions.FileReadError",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "backend.server.v2.store.exceptions",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "backend.server.v2.store",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "backend.server.v2",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "backend.server",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "backend",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "server",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "v2",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "store",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "exceptions",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "FileReadError",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                            "children": [
                                                {
                                                    "type": "await",
                                                    "label": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "backend.server.v2.store.media.upload_media",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "backend.server.v2.store.media",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "backend.server.v2.store",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "backend.server.v2",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "backend.server",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "backend",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "server",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "v2",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "store",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "media",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "upload_media",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\"test-user\", test_file)",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"test-user\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "test-user",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "test_file",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def test_upload_media_png_success(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"test.png\",\n        file=io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\"),  # Valid PNG signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/png\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n    assert result == \"http://test-url/media/laptop.jpeg\"",
            "children": [
                {
                    "type": "identifier",
                    "label": "test_upload_media_png_success",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(mock_settings, mock_storage_client)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "mock_settings",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "mock_storage_client",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "test_file = fastapi.UploadFile(\n        filename=\"test.png\",\n        file=io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\"),  # Valid PNG signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/png\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n    assert result == \"http://test-url/media/laptop.jpeg\"",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "test_file = fastapi.UploadFile(\n        filename=\"test.png\",\n        file=io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\"),  # Valid PNG signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/png\"}),\n    )",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "test_file = fastapi.UploadFile(\n        filename=\"test.png\",\n        file=io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\"),  # Valid PNG signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/png\"}),\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "test_file",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "fastapi.UploadFile(\n        filename=\"test.png\",\n        file=io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\"),  # Valid PNG signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/png\"}),\n    )",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "fastapi.UploadFile",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "fastapi",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "UploadFile",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(\n        filename=\"test.png\",\n        file=io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\"),  # Valid PNG signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/png\"}),\n    )",
                                                    "children": [
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "filename=\"test.png\"",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "filename",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"test.png\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "test.png",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "file=io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "file",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "io.BytesIO",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "io",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "BytesIO",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(b\"\\x89PNG\\r\\n\\x1a\\n\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "b\"\\x89PNG\\r\\n\\x1a\\n\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "b\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "\\x89PNG\\r\\n\\x1a\\n",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "escape_sequence",
                                                                                                    "label": "\\x89",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "escape_sequence",
                                                                                                    "label": "\\r",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "escape_sequence",
                                                                                                    "label": "\\n",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "escape_sequence",
                                                                                                    "label": "\\x1a",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "escape_sequence",
                                                                                                    "label": "\\n",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "comment",
                                                            "label": "# Valid PNG signature",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "headers=starlette.datastructures.Headers({\"content-type\": \"image/png\"})",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "headers",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "starlette.datastructures.Headers({\"content-type\": \"image/png\"})",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "starlette.datastructures.Headers",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "starlette.datastructures",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "starlette",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "datastructures",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Headers",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "({\"content-type\": \"image/png\"})",
                                                                            "children": [
                                                                                {
                                                                                    "type": "dictionary",
                                                                                    "label": "{\"content-type\": \"image/png\"}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "pair",
                                                                                            "label": "\"content-type\": \"image/png\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"content-type\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "content-type",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"image/png\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "image/png",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "result",
                                            "children": []
                                        },
                                        {
                                            "type": "await",
                                            "label": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "backend.server.v2.store.media.upload_media",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "backend.server.v2.store.media",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "backend.server.v2.store",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "backend.server.v2",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "backend.server",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "backend",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "server",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "v2",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "store",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "media",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "upload_media",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\"test-user\", test_file)",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"test-user\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "test-user",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "test_file",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assert_statement",
                            "label": "assert result == \"http://test-url/media/laptop.jpeg\"",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "label": "result == \"http://test-url/media/laptop.jpeg\"",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "result",
                                            "children": []
                                        },
                                        {
                                            "type": "string",
                                            "label": "\"http://test-url/media/laptop.jpeg\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "http://test-url/media/laptop.jpeg",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def test_upload_media_gif_success(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"test.gif\",\n        file=io.BytesIO(b\"GIF89a\"),  # Valid GIF signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/gif\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n    assert result == \"http://test-url/media/laptop.jpeg\"",
            "children": [
                {
                    "type": "identifier",
                    "label": "test_upload_media_gif_success",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(mock_settings, mock_storage_client)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "mock_settings",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "mock_storage_client",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "test_file = fastapi.UploadFile(\n        filename=\"test.gif\",\n        file=io.BytesIO(b\"GIF89a\"),  # Valid GIF signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/gif\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n    assert result == \"http://test-url/media/laptop.jpeg\"",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "test_file = fastapi.UploadFile(\n        filename=\"test.gif\",\n        file=io.BytesIO(b\"GIF89a\"),  # Valid GIF signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/gif\"}),\n    )",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "test_file = fastapi.UploadFile(\n        filename=\"test.gif\",\n        file=io.BytesIO(b\"GIF89a\"),  # Valid GIF signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/gif\"}),\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "test_file",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "fastapi.UploadFile(\n        filename=\"test.gif\",\n        file=io.BytesIO(b\"GIF89a\"),  # Valid GIF signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/gif\"}),\n    )",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "fastapi.UploadFile",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "fastapi",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "UploadFile",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(\n        filename=\"test.gif\",\n        file=io.BytesIO(b\"GIF89a\"),  # Valid GIF signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/gif\"}),\n    )",
                                                    "children": [
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "filename=\"test.gif\"",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "filename",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"test.gif\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "test.gif",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "file=io.BytesIO(b\"GIF89a\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "file",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "io.BytesIO(b\"GIF89a\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "io.BytesIO",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "io",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "BytesIO",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(b\"GIF89a\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "b\"GIF89a\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "b\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "GIF89a",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "comment",
                                                            "label": "# Valid GIF signature",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "headers=starlette.datastructures.Headers({\"content-type\": \"image/gif\"})",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "headers",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "starlette.datastructures.Headers({\"content-type\": \"image/gif\"})",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "starlette.datastructures.Headers",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "starlette.datastructures",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "starlette",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "datastructures",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Headers",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "({\"content-type\": \"image/gif\"})",
                                                                            "children": [
                                                                                {
                                                                                    "type": "dictionary",
                                                                                    "label": "{\"content-type\": \"image/gif\"}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "pair",
                                                                                            "label": "\"content-type\": \"image/gif\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"content-type\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "content-type",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"image/gif\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "image/gif",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "result",
                                            "children": []
                                        },
                                        {
                                            "type": "await",
                                            "label": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "backend.server.v2.store.media.upload_media",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "backend.server.v2.store.media",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "backend.server.v2.store",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "backend.server.v2",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "backend.server",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "backend",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "server",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "v2",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "store",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "media",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "upload_media",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\"test-user\", test_file)",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"test-user\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "test-user",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "test_file",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assert_statement",
                            "label": "assert result == \"http://test-url/media/laptop.jpeg\"",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "label": "result == \"http://test-url/media/laptop.jpeg\"",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "result",
                                            "children": []
                                        },
                                        {
                                            "type": "string",
                                            "label": "\"http://test-url/media/laptop.jpeg\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "http://test-url/media/laptop.jpeg",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def test_upload_media_webp_success(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"test.webp\",\n        file=io.BytesIO(b\"RIFF\\x00\\x00\\x00\\x00WEBP\"),  # Valid WebP signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/webp\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n    assert result == \"http://test-url/media/laptop.jpeg\"",
            "children": [
                {
                    "type": "identifier",
                    "label": "test_upload_media_webp_success",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(mock_settings, mock_storage_client)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "mock_settings",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "mock_storage_client",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "test_file = fastapi.UploadFile(\n        filename=\"test.webp\",\n        file=io.BytesIO(b\"RIFF\\x00\\x00\\x00\\x00WEBP\"),  # Valid WebP signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/webp\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n    assert result == \"http://test-url/media/laptop.jpeg\"",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "test_file = fastapi.UploadFile(\n        filename=\"test.webp\",\n        file=io.BytesIO(b\"RIFF\\x00\\x00\\x00\\x00WEBP\"),  # Valid WebP signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/webp\"}),\n    )",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "test_file = fastapi.UploadFile(\n        filename=\"test.webp\",\n        file=io.BytesIO(b\"RIFF\\x00\\x00\\x00\\x00WEBP\"),  # Valid WebP signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/webp\"}),\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "test_file",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "fastapi.UploadFile(\n        filename=\"test.webp\",\n        file=io.BytesIO(b\"RIFF\\x00\\x00\\x00\\x00WEBP\"),  # Valid WebP signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/webp\"}),\n    )",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "fastapi.UploadFile",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "fastapi",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "UploadFile",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(\n        filename=\"test.webp\",\n        file=io.BytesIO(b\"RIFF\\x00\\x00\\x00\\x00WEBP\"),  # Valid WebP signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/webp\"}),\n    )",
                                                    "children": [
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "filename=\"test.webp\"",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "filename",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"test.webp\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "test.webp",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "file=io.BytesIO(b\"RIFF\\x00\\x00\\x00\\x00WEBP\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "file",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "io.BytesIO(b\"RIFF\\x00\\x00\\x00\\x00WEBP\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "io.BytesIO",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "io",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "BytesIO",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(b\"RIFF\\x00\\x00\\x00\\x00WEBP\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "b\"RIFF\\x00\\x00\\x00\\x00WEBP\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "b\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "RIFF\\x00\\x00\\x00\\x00WEBP",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "escape_sequence",
                                                                                                    "label": "\\x00",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "escape_sequence",
                                                                                                    "label": "\\x00",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "escape_sequence",
                                                                                                    "label": "\\x00",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "escape_sequence",
                                                                                                    "label": "\\x00",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "comment",
                                                            "label": "# Valid WebP signature",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "headers=starlette.datastructures.Headers({\"content-type\": \"image/webp\"})",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "headers",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "starlette.datastructures.Headers({\"content-type\": \"image/webp\"})",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "starlette.datastructures.Headers",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "starlette.datastructures",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "starlette",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "datastructures",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Headers",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "({\"content-type\": \"image/webp\"})",
                                                                            "children": [
                                                                                {
                                                                                    "type": "dictionary",
                                                                                    "label": "{\"content-type\": \"image/webp\"}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "pair",
                                                                                            "label": "\"content-type\": \"image/webp\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"content-type\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "content-type",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"image/webp\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "image/webp",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "result",
                                            "children": []
                                        },
                                        {
                                            "type": "await",
                                            "label": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "backend.server.v2.store.media.upload_media",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "backend.server.v2.store.media",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "backend.server.v2.store",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "backend.server.v2",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "backend.server",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "backend",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "server",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "v2",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "store",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "media",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "upload_media",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\"test-user\", test_file)",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"test-user\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "test-user",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "test_file",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assert_statement",
                            "label": "assert result == \"http://test-url/media/laptop.jpeg\"",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "label": "result == \"http://test-url/media/laptop.jpeg\"",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "result",
                                            "children": []
                                        },
                                        {
                                            "type": "string",
                                            "label": "\"http://test-url/media/laptop.jpeg\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "http://test-url/media/laptop.jpeg",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def test_upload_media_webm_success(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"test.webm\",\n        file=io.BytesIO(b\"\\x1a\\x45\\xdf\\xa3\"),  # Valid WebM signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"video/webm\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n    assert result == \"http://test-url/media/laptop.jpeg\"",
            "children": [
                {
                    "type": "identifier",
                    "label": "test_upload_media_webm_success",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(mock_settings, mock_storage_client)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "mock_settings",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "mock_storage_client",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "test_file = fastapi.UploadFile(\n        filename=\"test.webm\",\n        file=io.BytesIO(b\"\\x1a\\x45\\xdf\\xa3\"),  # Valid WebM signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"video/webm\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n    assert result == \"http://test-url/media/laptop.jpeg\"",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "test_file = fastapi.UploadFile(\n        filename=\"test.webm\",\n        file=io.BytesIO(b\"\\x1a\\x45\\xdf\\xa3\"),  # Valid WebM signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"video/webm\"}),\n    )",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "test_file = fastapi.UploadFile(\n        filename=\"test.webm\",\n        file=io.BytesIO(b\"\\x1a\\x45\\xdf\\xa3\"),  # Valid WebM signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"video/webm\"}),\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "test_file",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "fastapi.UploadFile(\n        filename=\"test.webm\",\n        file=io.BytesIO(b\"\\x1a\\x45\\xdf\\xa3\"),  # Valid WebM signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"video/webm\"}),\n    )",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "fastapi.UploadFile",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "fastapi",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "UploadFile",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(\n        filename=\"test.webm\",\n        file=io.BytesIO(b\"\\x1a\\x45\\xdf\\xa3\"),  # Valid WebM signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"video/webm\"}),\n    )",
                                                    "children": [
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "filename=\"test.webm\"",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "filename",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"test.webm\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "test.webm",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "file=io.BytesIO(b\"\\x1a\\x45\\xdf\\xa3\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "file",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "io.BytesIO(b\"\\x1a\\x45\\xdf\\xa3\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "io.BytesIO",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "io",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "BytesIO",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(b\"\\x1a\\x45\\xdf\\xa3\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "b\"\\x1a\\x45\\xdf\\xa3\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "b\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "\\x1a\\x45\\xdf\\xa3",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "escape_sequence",
                                                                                                    "label": "\\x1a",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "escape_sequence",
                                                                                                    "label": "\\x45",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "escape_sequence",
                                                                                                    "label": "\\xdf",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "escape_sequence",
                                                                                                    "label": "\\xa3",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "comment",
                                                            "label": "# Valid WebM signature",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "headers=starlette.datastructures.Headers({\"content-type\": \"video/webm\"})",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "headers",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "starlette.datastructures.Headers({\"content-type\": \"video/webm\"})",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "starlette.datastructures.Headers",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "starlette.datastructures",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "starlette",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "datastructures",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Headers",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "({\"content-type\": \"video/webm\"})",
                                                                            "children": [
                                                                                {
                                                                                    "type": "dictionary",
                                                                                    "label": "{\"content-type\": \"video/webm\"}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "pair",
                                                                                            "label": "\"content-type\": \"video/webm\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"content-type\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "content-type",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"video/webm\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "video/webm",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "result",
                                            "children": []
                                        },
                                        {
                                            "type": "await",
                                            "label": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "backend.server.v2.store.media.upload_media",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "backend.server.v2.store.media",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "backend.server.v2.store",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "backend.server.v2",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "backend.server",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "backend",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "server",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "v2",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "store",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "media",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "upload_media",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\"test-user\", test_file)",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"test-user\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "test-user",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "test_file",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assert_statement",
                            "label": "assert result == \"http://test-url/media/laptop.jpeg\"",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "label": "result == \"http://test-url/media/laptop.jpeg\"",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "result",
                                            "children": []
                                        },
                                        {
                                            "type": "string",
                                            "label": "\"http://test-url/media/laptop.jpeg\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "http://test-url/media/laptop.jpeg",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def test_upload_media_mismatched_signature(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"test.jpeg\",\n        file=io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\"),  # PNG signature with JPEG content type\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n\n    with pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
            "children": [
                {
                    "type": "identifier",
                    "label": "test_upload_media_mismatched_signature",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(mock_settings, mock_storage_client)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "mock_settings",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "mock_storage_client",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "test_file = fastapi.UploadFile(\n        filename=\"test.jpeg\",\n        file=io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\"),  # PNG signature with JPEG content type\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n\n    with pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "test_file = fastapi.UploadFile(\n        filename=\"test.jpeg\",\n        file=io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\"),  # PNG signature with JPEG content type\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "test_file = fastapi.UploadFile(\n        filename=\"test.jpeg\",\n        file=io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\"),  # PNG signature with JPEG content type\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "test_file",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "fastapi.UploadFile(\n        filename=\"test.jpeg\",\n        file=io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\"),  # PNG signature with JPEG content type\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "fastapi.UploadFile",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "fastapi",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "UploadFile",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(\n        filename=\"test.jpeg\",\n        file=io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\"),  # PNG signature with JPEG content type\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                                                    "children": [
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "filename=\"test.jpeg\"",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "filename",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"test.jpeg\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "test.jpeg",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "file=io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "file",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "io.BytesIO",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "io",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "BytesIO",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(b\"\\x89PNG\\r\\n\\x1a\\n\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "b\"\\x89PNG\\r\\n\\x1a\\n\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "b\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "\\x89PNG\\r\\n\\x1a\\n",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "escape_sequence",
                                                                                                    "label": "\\x89",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "escape_sequence",
                                                                                                    "label": "\\r",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "escape_sequence",
                                                                                                    "label": "\\n",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "escape_sequence",
                                                                                                    "label": "\\x1a",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "escape_sequence",
                                                                                                    "label": "\\n",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "comment",
                                                            "label": "# PNG signature with JPEG content type",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"})",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "headers",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"})",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "starlette.datastructures.Headers",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "starlette.datastructures",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "starlette",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "datastructures",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Headers",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "({\"content-type\": \"image/jpeg\"})",
                                                                            "children": [
                                                                                {
                                                                                    "type": "dictionary",
                                                                                    "label": "{\"content-type\": \"image/jpeg\"}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "pair",
                                                                                            "label": "\"content-type\": \"image/jpeg\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"content-type\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "content-type",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"image/jpeg\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "image/jpeg",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "with_statement",
                            "label": "with pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                            "children": [
                                {
                                    "type": "with_clause",
                                    "label": "pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError)",
                                    "children": [
                                        {
                                            "type": "with_item",
                                            "label": "pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "pytest.raises",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "pytest",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "raises",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(backend.server.v2.store.exceptions.InvalidFileTypeError)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "backend.server.v2.store.exceptions.InvalidFileTypeError",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "backend.server.v2.store.exceptions",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "backend.server.v2.store",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "backend.server.v2",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "backend.server",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "backend",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "server",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "v2",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "store",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "exceptions",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "InvalidFileTypeError",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                            "children": [
                                                {
                                                    "type": "await",
                                                    "label": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "backend.server.v2.store.media.upload_media",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "backend.server.v2.store.media",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "backend.server.v2.store",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "backend.server.v2",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "backend.server",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "backend",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "server",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "v2",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "store",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "media",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "upload_media",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\"test-user\", test_file)",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"test-user\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "test-user",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "test_file",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def test_upload_media_invalid_signature(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"test.jpeg\",\n        file=io.BytesIO(b\"invalid signature\"),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n\n    with pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
            "children": [
                {
                    "type": "identifier",
                    "label": "test_upload_media_invalid_signature",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(mock_settings, mock_storage_client)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "mock_settings",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "mock_storage_client",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "test_file = fastapi.UploadFile(\n        filename=\"test.jpeg\",\n        file=io.BytesIO(b\"invalid signature\"),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n\n    with pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "test_file = fastapi.UploadFile(\n        filename=\"test.jpeg\",\n        file=io.BytesIO(b\"invalid signature\"),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "test_file = fastapi.UploadFile(\n        filename=\"test.jpeg\",\n        file=io.BytesIO(b\"invalid signature\"),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "test_file",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "fastapi.UploadFile(\n        filename=\"test.jpeg\",\n        file=io.BytesIO(b\"invalid signature\"),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "fastapi.UploadFile",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "fastapi",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "UploadFile",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(\n        filename=\"test.jpeg\",\n        file=io.BytesIO(b\"invalid signature\"),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                                                    "children": [
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "filename=\"test.jpeg\"",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "filename",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"test.jpeg\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "test.jpeg",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "file=io.BytesIO(b\"invalid signature\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "file",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "io.BytesIO(b\"invalid signature\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "io.BytesIO",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "io",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "BytesIO",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(b\"invalid signature\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "b\"invalid signature\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "b\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "invalid signature",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"})",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "headers",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"})",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "starlette.datastructures.Headers",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "starlette.datastructures",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "starlette",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "datastructures",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Headers",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "({\"content-type\": \"image/jpeg\"})",
                                                                            "children": [
                                                                                {
                                                                                    "type": "dictionary",
                                                                                    "label": "{\"content-type\": \"image/jpeg\"}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "pair",
                                                                                            "label": "\"content-type\": \"image/jpeg\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"content-type\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "content-type",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"image/jpeg\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "image/jpeg",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "with_statement",
                            "label": "with pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                            "children": [
                                {
                                    "type": "with_clause",
                                    "label": "pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError)",
                                    "children": [
                                        {
                                            "type": "with_item",
                                            "label": "pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "pytest.raises",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "pytest",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "raises",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(backend.server.v2.store.exceptions.InvalidFileTypeError)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "backend.server.v2.store.exceptions.InvalidFileTypeError",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "backend.server.v2.store.exceptions",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "backend.server.v2.store",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "backend.server.v2",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "backend.server",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "backend",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "server",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "v2",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "store",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "exceptions",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "InvalidFileTypeError",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                            "children": [
                                                {
                                                    "type": "await",
                                                    "label": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "backend.server.v2.store.media.upload_media",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "backend.server.v2.store.media",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "backend.server.v2.store",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "backend.server.v2",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "backend.server",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "backend",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "server",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "v2",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "store",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "media",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "upload_media",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\"test-user\", test_file)",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"test-user\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "test-user",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "test_file",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}