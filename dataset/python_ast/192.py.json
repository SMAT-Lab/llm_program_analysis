{
    "type": "module",
    "label": "import operator\nfrom enum import Enum\nfrom typing import Any\n\nfrom backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import SchemaField\n\n\nclass Operation(Enum):\n    ADD = \"Add\"\n    SUBTRACT = \"Subtract\"\n    MULTIPLY = \"Multiply\"\n    DIVIDE = \"Divide\"\n    POWER = \"Power\"\n\n\nclass CalculatorBlock(Block):\n    class Input(BlockSchema):\n        operation: Operation = SchemaField(\n            description=\"Choose the math operation you want to perform\",\n            placeholder=\"Select an operation\",\n        )\n        a: float = SchemaField(\n            description=\"Enter the first number (A)\", placeholder=\"For example: 10\"\n        )\n        b: float = SchemaField(\n            description=\"Enter the second number (B)\", placeholder=\"For example: 5\"\n        )\n        round_result: bool = SchemaField(\n            description=\"Do you want to round the result to a whole number?\",\n            default=False,\n        )\n\n    class Output(BlockSchema):\n        result: float = SchemaField(description=\"The result of your calculation\")\n\n    def __init__(self):\n        super().__init__(\n            id=\"b1ab9b19-67a6-406d-abf5-2dba76d00c79\",\n            input_schema=CalculatorBlock.Input,\n            output_schema=CalculatorBlock.Output,\n            description=\"Performs a mathematical operation on two numbers.\",\n            categories={BlockCategory.LOGIC},\n            test_input={\n                \"operation\": Operation.ADD.value,\n                \"a\": 10.0,\n                \"b\": 5.0,\n                \"round_result\": False,\n            },\n            test_output=[\n                (\"result\", 15.0),\n            ],\n        )\n\n    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        operation = input_data.operation\n        a = input_data.a\n        b = input_data.b\n\n        operations = {\n            Operation.ADD: operator.add,\n            Operation.SUBTRACT: operator.sub,\n            Operation.MULTIPLY: operator.mul,\n            Operation.DIVIDE: operator.truediv,\n            Operation.POWER: operator.pow,\n        }\n\n        op_func = operations[operation]\n\n        try:\n            if operation == Operation.DIVIDE and b == 0:\n                raise ZeroDivisionError(\"Cannot divide by zero\")\n\n            result = op_func(a, b)\n\n            if input_data.round_result:\n                result = round(result)\n\n            yield \"result\", result\n\n        except ZeroDivisionError:\n            yield \"result\", float(\"inf\")  # Return infinity for division by zero\n        except Exception:\n            yield \"result\", float(\"nan\")  # Return NaN for other errors\n\n\nclass CountItemsBlock(Block):\n    class Input(BlockSchema):\n        collection: Any = SchemaField(\n            description=\"Enter the collection you want to count. This can be a list, dictionary, string, or any other iterable.\",\n            placeholder=\"For example: [1, 2, 3] or {'a': 1, 'b': 2} or 'hello'\",\n        )\n\n    class Output(BlockSchema):\n        count: int = SchemaField(description=\"The number of items in the collection\")\n\n    def __init__(self):\n        super().__init__(\n            id=\"3c9c2f42-b0c3-435f-ba35-05f7a25c772a\",\n            input_schema=CountItemsBlock.Input,\n            output_schema=CountItemsBlock.Output,\n            description=\"Counts the number of items in a collection.\",\n            categories={BlockCategory.LOGIC},\n            test_input={\"collection\": [1, 2, 3, 4, 5]},\n            test_output=[\n                (\"count\", 5),\n            ],\n        )\n\n    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        collection = input_data.collection\n\n        try:\n            if isinstance(collection, (str, list, tuple, set, dict)):\n                count = len(collection)\n            elif hasattr(collection, \"__iter__\"):\n                count = sum(1 for _ in collection)\n            else:\n                raise ValueError(\"Input is not a countable collection\")\n\n            yield \"count\", count\n\n        except Exception:\n            yield \"count\", -1  # Return -1 to indicate an error\n",
    "children": [
        {
            "type": "import_statement",
            "label": "import operator",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "operator",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "operator",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from enum import Enum",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "enum",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "enum",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Enum",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Enum",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from typing import Any",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "typing",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "typing",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Any",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Any",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.data.block",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "data",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "block",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Block",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Block",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "BlockCategory",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "BlockCategory",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "BlockOutput",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "BlockOutput",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "BlockSchema",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "BlockSchema",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.data.model import SchemaField",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.data.model",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "data",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "model",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "SchemaField",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "SchemaField",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "label": "class Operation(Enum):\n    ADD = \"Add\"\n    SUBTRACT = \"Subtract\"\n    MULTIPLY = \"Multiply\"\n    DIVIDE = \"Divide\"\n    POWER = \"Power\"",
            "children": [
                {
                    "type": "identifier",
                    "label": "Operation",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "(Enum)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Enum",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "ADD = \"Add\"\n    SUBTRACT = \"Subtract\"\n    MULTIPLY = \"Multiply\"\n    DIVIDE = \"Divide\"\n    POWER = \"Power\"",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "ADD = \"Add\"",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "ADD = \"Add\"",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "ADD",
                                            "children": []
                                        },
                                        {
                                            "type": "string",
                                            "label": "\"Add\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "Add",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "SUBTRACT = \"Subtract\"",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "SUBTRACT = \"Subtract\"",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "SUBTRACT",
                                            "children": []
                                        },
                                        {
                                            "type": "string",
                                            "label": "\"Subtract\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "Subtract",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "MULTIPLY = \"Multiply\"",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "MULTIPLY = \"Multiply\"",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "MULTIPLY",
                                            "children": []
                                        },
                                        {
                                            "type": "string",
                                            "label": "\"Multiply\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "Multiply",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "DIVIDE = \"Divide\"",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "DIVIDE = \"Divide\"",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "DIVIDE",
                                            "children": []
                                        },
                                        {
                                            "type": "string",
                                            "label": "\"Divide\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "Divide",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "POWER = \"Power\"",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "POWER = \"Power\"",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "POWER",
                                            "children": []
                                        },
                                        {
                                            "type": "string",
                                            "label": "\"Power\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "Power",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "label": "class CalculatorBlock(Block):\n    class Input(BlockSchema):\n        operation: Operation = SchemaField(\n            description=\"Choose the math operation you want to perform\",\n            placeholder=\"Select an operation\",\n        )\n        a: float = SchemaField(\n            description=\"Enter the first number (A)\", placeholder=\"For example: 10\"\n        )\n        b: float = SchemaField(\n            description=\"Enter the second number (B)\", placeholder=\"For example: 5\"\n        )\n        round_result: bool = SchemaField(\n            description=\"Do you want to round the result to a whole number?\",\n            default=False,\n        )\n\n    class Output(BlockSchema):\n        result: float = SchemaField(description=\"The result of your calculation\")\n\n    def __init__(self):\n        super().__init__(\n            id=\"b1ab9b19-67a6-406d-abf5-2dba76d00c79\",\n            input_schema=CalculatorBlock.Input,\n            output_schema=CalculatorBlock.Output,\n            description=\"Performs a mathematical operation on two numbers.\",\n            categories={BlockCategory.LOGIC},\n            test_input={\n                \"operation\": Operation.ADD.value,\n                \"a\": 10.0,\n                \"b\": 5.0,\n                \"round_result\": False,\n            },\n            test_output=[\n                (\"result\", 15.0),\n            ],\n        )\n\n    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        operation = input_data.operation\n        a = input_data.a\n        b = input_data.b\n\n        operations = {\n            Operation.ADD: operator.add,\n            Operation.SUBTRACT: operator.sub,\n            Operation.MULTIPLY: operator.mul,\n            Operation.DIVIDE: operator.truediv,\n            Operation.POWER: operator.pow,\n        }\n\n        op_func = operations[operation]\n\n        try:\n            if operation == Operation.DIVIDE and b == 0:\n                raise ZeroDivisionError(\"Cannot divide by zero\")\n\n            result = op_func(a, b)\n\n            if input_data.round_result:\n                result = round(result)\n\n            yield \"result\", result\n\n        except ZeroDivisionError:\n            yield \"result\", float(\"inf\")  # Return infinity for division by zero\n        except Exception:\n            yield \"result\", float(\"nan\")  # Return NaN for other errors",
            "children": [
                {
                    "type": "identifier",
                    "label": "CalculatorBlock",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "(Block)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Block",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "class Input(BlockSchema):\n        operation: Operation = SchemaField(\n            description=\"Choose the math operation you want to perform\",\n            placeholder=\"Select an operation\",\n        )\n        a: float = SchemaField(\n            description=\"Enter the first number (A)\", placeholder=\"For example: 10\"\n        )\n        b: float = SchemaField(\n            description=\"Enter the second number (B)\", placeholder=\"For example: 5\"\n        )\n        round_result: bool = SchemaField(\n            description=\"Do you want to round the result to a whole number?\",\n            default=False,\n        )\n\n    class Output(BlockSchema):\n        result: float = SchemaField(description=\"The result of your calculation\")\n\n    def __init__(self):\n        super().__init__(\n            id=\"b1ab9b19-67a6-406d-abf5-2dba76d00c79\",\n            input_schema=CalculatorBlock.Input,\n            output_schema=CalculatorBlock.Output,\n            description=\"Performs a mathematical operation on two numbers.\",\n            categories={BlockCategory.LOGIC},\n            test_input={\n                \"operation\": Operation.ADD.value,\n                \"a\": 10.0,\n                \"b\": 5.0,\n                \"round_result\": False,\n            },\n            test_output=[\n                (\"result\", 15.0),\n            ],\n        )\n\n    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        operation = input_data.operation\n        a = input_data.a\n        b = input_data.b\n\n        operations = {\n            Operation.ADD: operator.add,\n            Operation.SUBTRACT: operator.sub,\n            Operation.MULTIPLY: operator.mul,\n            Operation.DIVIDE: operator.truediv,\n            Operation.POWER: operator.pow,\n        }\n\n        op_func = operations[operation]\n\n        try:\n            if operation == Operation.DIVIDE and b == 0:\n                raise ZeroDivisionError(\"Cannot divide by zero\")\n\n            result = op_func(a, b)\n\n            if input_data.round_result:\n                result = round(result)\n\n            yield \"result\", result\n\n        except ZeroDivisionError:\n            yield \"result\", float(\"inf\")  # Return infinity for division by zero\n        except Exception:\n            yield \"result\", float(\"nan\")  # Return NaN for other errors",
                    "children": [
                        {
                            "type": "class_definition",
                            "label": "class Input(BlockSchema):\n        operation: Operation = SchemaField(\n            description=\"Choose the math operation you want to perform\",\n            placeholder=\"Select an operation\",\n        )\n        a: float = SchemaField(\n            description=\"Enter the first number (A)\", placeholder=\"For example: 10\"\n        )\n        b: float = SchemaField(\n            description=\"Enter the second number (B)\", placeholder=\"For example: 5\"\n        )\n        round_result: bool = SchemaField(\n            description=\"Do you want to round the result to a whole number?\",\n            default=False,\n        )",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "Input",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(BlockSchema)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "BlockSchema",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "operation: Operation = SchemaField(\n            description=\"Choose the math operation you want to perform\",\n            placeholder=\"Select an operation\",\n        )\n        a: float = SchemaField(\n            description=\"Enter the first number (A)\", placeholder=\"For example: 10\"\n        )\n        b: float = SchemaField(\n            description=\"Enter the second number (B)\", placeholder=\"For example: 5\"\n        )\n        round_result: bool = SchemaField(\n            description=\"Do you want to round the result to a whole number?\",\n            default=False,\n        )",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "operation: Operation = SchemaField(\n            description=\"Choose the math operation you want to perform\",\n            placeholder=\"Select an operation\",\n        )",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "operation: Operation = SchemaField(\n            description=\"Choose the math operation you want to perform\",\n            placeholder=\"Select an operation\",\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "operation",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "Operation",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Operation",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "SchemaField(\n            description=\"Choose the math operation you want to perform\",\n            placeholder=\"Select an operation\",\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "SchemaField",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n            description=\"Choose the math operation you want to perform\",\n            placeholder=\"Select an operation\",\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "description=\"Choose the math operation you want to perform\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "description",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"Choose the math operation you want to perform\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Choose the math operation you want to perform",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "placeholder=\"Select an operation\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "placeholder",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"Select an operation\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Select an operation",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "a: float = SchemaField(\n            description=\"Enter the first number (A)\", placeholder=\"For example: 10\"\n        )",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "a: float = SchemaField(\n            description=\"Enter the first number (A)\", placeholder=\"For example: 10\"\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "a",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "float",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "float",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "SchemaField(\n            description=\"Enter the first number (A)\", placeholder=\"For example: 10\"\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "SchemaField",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n            description=\"Enter the first number (A)\", placeholder=\"For example: 10\"\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "description=\"Enter the first number (A)\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "description",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"Enter the first number (A)\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Enter the first number (A)",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "placeholder=\"For example: 10\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "placeholder",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"For example: 10\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "For example: 10",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "b: float = SchemaField(\n            description=\"Enter the second number (B)\", placeholder=\"For example: 5\"\n        )",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "b: float = SchemaField(\n            description=\"Enter the second number (B)\", placeholder=\"For example: 5\"\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "b",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "float",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "float",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "SchemaField(\n            description=\"Enter the second number (B)\", placeholder=\"For example: 5\"\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "SchemaField",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n            description=\"Enter the second number (B)\", placeholder=\"For example: 5\"\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "description=\"Enter the second number (B)\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "description",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"Enter the second number (B)\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Enter the second number (B)",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "placeholder=\"For example: 5\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "placeholder",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"For example: 5\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "For example: 5",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "round_result: bool = SchemaField(\n            description=\"Do you want to round the result to a whole number?\",\n            default=False,\n        )",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "round_result: bool = SchemaField(\n            description=\"Do you want to round the result to a whole number?\",\n            default=False,\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "round_result",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "bool",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "bool",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "SchemaField(\n            description=\"Do you want to round the result to a whole number?\",\n            default=False,\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "SchemaField",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n            description=\"Do you want to round the result to a whole number?\",\n            default=False,\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "description=\"Do you want to round the result to a whole number?\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "description",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"Do you want to round the result to a whole number?\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Do you want to round the result to a whole number?",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "default=False",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "default",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "false",
                                                                                    "label": "False",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "class_definition",
                            "label": "class Output(BlockSchema):\n        result: float = SchemaField(description=\"The result of your calculation\")",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "Output",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(BlockSchema)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "BlockSchema",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "result: float = SchemaField(description=\"The result of your calculation\")",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "result: float = SchemaField(description=\"The result of your calculation\")",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "result: float = SchemaField(description=\"The result of your calculation\")",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "result",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "float",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "float",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "SchemaField(description=\"The result of your calculation\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "SchemaField",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(description=\"The result of your calculation\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "description=\"The result of your calculation\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "description",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"The result of your calculation\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "The result of your calculation",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def __init__(self):\n        super().__init__(\n            id=\"b1ab9b19-67a6-406d-abf5-2dba76d00c79\",\n            input_schema=CalculatorBlock.Input,\n            output_schema=CalculatorBlock.Output,\n            description=\"Performs a mathematical operation on two numbers.\",\n            categories={BlockCategory.LOGIC},\n            test_input={\n                \"operation\": Operation.ADD.value,\n                \"a\": 10.0,\n                \"b\": 5.0,\n                \"round_result\": False,\n            },\n            test_output=[\n                (\"result\", 15.0),\n            ],\n        )",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "__init__",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "super().__init__(\n            id=\"b1ab9b19-67a6-406d-abf5-2dba76d00c79\",\n            input_schema=CalculatorBlock.Input,\n            output_schema=CalculatorBlock.Output,\n            description=\"Performs a mathematical operation on two numbers.\",\n            categories={BlockCategory.LOGIC},\n            test_input={\n                \"operation\": Operation.ADD.value,\n                \"a\": 10.0,\n                \"b\": 5.0,\n                \"round_result\": False,\n            },\n            test_output=[\n                (\"result\", 15.0),\n            ],\n        )",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "super().__init__(\n            id=\"b1ab9b19-67a6-406d-abf5-2dba76d00c79\",\n            input_schema=CalculatorBlock.Input,\n            output_schema=CalculatorBlock.Output,\n            description=\"Performs a mathematical operation on two numbers.\",\n            categories={BlockCategory.LOGIC},\n            test_input={\n                \"operation\": Operation.ADD.value,\n                \"a\": 10.0,\n                \"b\": 5.0,\n                \"round_result\": False,\n            },\n            test_output=[\n                (\"result\", 15.0),\n            ],\n        )",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "super().__init__(\n            id=\"b1ab9b19-67a6-406d-abf5-2dba76d00c79\",\n            input_schema=CalculatorBlock.Input,\n            output_schema=CalculatorBlock.Output,\n            description=\"Performs a mathematical operation on two numbers.\",\n            categories={BlockCategory.LOGIC},\n            test_input={\n                \"operation\": Operation.ADD.value,\n                \"a\": 10.0,\n                \"b\": 5.0,\n                \"round_result\": False,\n            },\n            test_output=[\n                (\"result\", 15.0),\n            ],\n        )",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "super().__init__",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "super()",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "super",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "__init__",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n            id=\"b1ab9b19-67a6-406d-abf5-2dba76d00c79\",\n            input_schema=CalculatorBlock.Input,\n            output_schema=CalculatorBlock.Output,\n            description=\"Performs a mathematical operation on two numbers.\",\n            categories={BlockCategory.LOGIC},\n            test_input={\n                \"operation\": Operation.ADD.value,\n                \"a\": 10.0,\n                \"b\": 5.0,\n                \"round_result\": False,\n            },\n            test_output=[\n                (\"result\", 15.0),\n            ],\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "id=\"b1ab9b19-67a6-406d-abf5-2dba76d00c79\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"b1ab9b19-67a6-406d-abf5-2dba76d00c79\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "b1ab9b19-67a6-406d-abf5-2dba76d00c79",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "input_schema=CalculatorBlock.Input",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "input_schema",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "CalculatorBlock.Input",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "CalculatorBlock",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Input",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "output_schema=CalculatorBlock.Output",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "output_schema",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "CalculatorBlock.Output",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "CalculatorBlock",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Output",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "description=\"Performs a mathematical operation on two numbers.\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "description",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"Performs a mathematical operation on two numbers.\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "Performs a mathematical operation on two numbers.",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "categories={BlockCategory.LOGIC}",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "categories",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "set",
                                                                            "label": "{BlockCategory.LOGIC}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "BlockCategory.LOGIC",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "BlockCategory",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "LOGIC",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "test_input={\n                \"operation\": Operation.ADD.value,\n                \"a\": 10.0,\n                \"b\": 5.0,\n                \"round_result\": False,\n            }",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "test_input",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "dictionary",
                                                                            "label": "{\n                \"operation\": Operation.ADD.value,\n                \"a\": 10.0,\n                \"b\": 5.0,\n                \"round_result\": False,\n            }",
                                                                            "children": [
                                                                                {
                                                                                    "type": "pair",
                                                                                    "label": "\"operation\": Operation.ADD.value",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"operation\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "operation",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "Operation.ADD.value",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "Operation.ADD",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "Operation",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "ADD",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "value",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "pair",
                                                                                    "label": "\"a\": 10.0",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"a\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "a",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "float",
                                                                                            "label": "10.0",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "pair",
                                                                                    "label": "\"b\": 5.0",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"b\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "b",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "float",
                                                                                            "label": "5.0",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "pair",
                                                                                    "label": "\"round_result\": False",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"round_result\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "round_result",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "false",
                                                                                            "label": "False",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "test_output=[\n                (\"result\", 15.0),\n            ]",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "test_output",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "list",
                                                                            "label": "[\n                (\"result\", 15.0),\n            ]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "tuple",
                                                                                    "label": "(\"result\", 15.0)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"result\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "result",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "float",
                                                                                            "label": "15.0",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        operation = input_data.operation\n        a = input_data.a\n        b = input_data.b\n\n        operations = {\n            Operation.ADD: operator.add,\n            Operation.SUBTRACT: operator.sub,\n            Operation.MULTIPLY: operator.mul,\n            Operation.DIVIDE: operator.truediv,\n            Operation.POWER: operator.pow,\n        }\n\n        op_func = operations[operation]\n\n        try:\n            if operation == Operation.DIVIDE and b == 0:\n                raise ZeroDivisionError(\"Cannot divide by zero\")\n\n            result = op_func(a, b)\n\n            if input_data.round_result:\n                result = round(result)\n\n            yield \"result\", result\n\n        except ZeroDivisionError:\n            yield \"result\", float(\"inf\")  # Return infinity for division by zero\n        except Exception:\n            yield \"result\", float(\"nan\")  # Return NaN for other errors",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "run",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, input_data: Input, **kwargs)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "input_data: Input",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "input_data",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "Input",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Input",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "dictionary_splat_pattern",
                                            "label": "**kwargs",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "kwargs",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "label": "BlockOutput",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "BlockOutput",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "operation = input_data.operation\n        a = input_data.a\n        b = input_data.b\n\n        operations = {\n            Operation.ADD: operator.add,\n            Operation.SUBTRACT: operator.sub,\n            Operation.MULTIPLY: operator.mul,\n            Operation.DIVIDE: operator.truediv,\n            Operation.POWER: operator.pow,\n        }\n\n        op_func = operations[operation]\n\n        try:\n            if operation == Operation.DIVIDE and b == 0:\n                raise ZeroDivisionError(\"Cannot divide by zero\")\n\n            result = op_func(a, b)\n\n            if input_data.round_result:\n                result = round(result)\n\n            yield \"result\", result\n\n        except ZeroDivisionError:\n            yield \"result\", float(\"inf\")  # Return infinity for division by zero\n        except Exception:\n            yield \"result\", float(\"nan\")  # Return NaN for other errors",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "operation = input_data.operation",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "operation = input_data.operation",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "operation",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "attribute",
                                                            "label": "input_data.operation",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "input_data",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "operation",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "a = input_data.a",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "a = input_data.a",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "a",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "attribute",
                                                            "label": "input_data.a",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "input_data",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "a",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "b = input_data.b",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "b = input_data.b",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "b",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "attribute",
                                                            "label": "input_data.b",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "input_data",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "b",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "operations = {\n            Operation.ADD: operator.add,\n            Operation.SUBTRACT: operator.sub,\n            Operation.MULTIPLY: operator.mul,\n            Operation.DIVIDE: operator.truediv,\n            Operation.POWER: operator.pow,\n        }",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "operations = {\n            Operation.ADD: operator.add,\n            Operation.SUBTRACT: operator.sub,\n            Operation.MULTIPLY: operator.mul,\n            Operation.DIVIDE: operator.truediv,\n            Operation.POWER: operator.pow,\n        }",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "operations",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "dictionary",
                                                            "label": "{\n            Operation.ADD: operator.add,\n            Operation.SUBTRACT: operator.sub,\n            Operation.MULTIPLY: operator.mul,\n            Operation.DIVIDE: operator.truediv,\n            Operation.POWER: operator.pow,\n        }",
                                                            "children": [
                                                                {
                                                                    "type": "pair",
                                                                    "label": "Operation.ADD: operator.add",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "Operation.ADD",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Operation",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "ADD",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "operator.add",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "operator",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "add",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "pair",
                                                                    "label": "Operation.SUBTRACT: operator.sub",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "Operation.SUBTRACT",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Operation",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "SUBTRACT",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "operator.sub",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "operator",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "sub",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "pair",
                                                                    "label": "Operation.MULTIPLY: operator.mul",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "Operation.MULTIPLY",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Operation",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "MULTIPLY",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "operator.mul",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "operator",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "mul",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "pair",
                                                                    "label": "Operation.DIVIDE: operator.truediv",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "Operation.DIVIDE",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Operation",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "DIVIDE",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "operator.truediv",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "operator",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "truediv",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "pair",
                                                                    "label": "Operation.POWER: operator.pow",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "Operation.POWER",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Operation",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "POWER",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "operator.pow",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "operator",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "pow",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "op_func = operations[operation]",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "op_func = operations[operation]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "op_func",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "subscript",
                                                            "label": "operations[operation]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "operations",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "operation",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "try_statement",
                                            "label": "try:\n            if operation == Operation.DIVIDE and b == 0:\n                raise ZeroDivisionError(\"Cannot divide by zero\")\n\n            result = op_func(a, b)\n\n            if input_data.round_result:\n                result = round(result)\n\n            yield \"result\", result\n\n        except ZeroDivisionError:\n            yield \"result\", float(\"inf\")  # Return infinity for division by zero\n        except Exception:\n            yield \"result\", float(\"nan\")  # Return NaN for other errors",
                                            "children": [
                                                {
                                                    "type": "block",
                                                    "label": "if operation == Operation.DIVIDE and b == 0:\n                raise ZeroDivisionError(\"Cannot divide by zero\")\n\n            result = op_func(a, b)\n\n            if input_data.round_result:\n                result = round(result)\n\n            yield \"result\", result",
                                                    "children": [
                                                        {
                                                            "type": "if_statement",
                                                            "label": "if operation == Operation.DIVIDE and b == 0:\n                raise ZeroDivisionError(\"Cannot divide by zero\")",
                                                            "children": [
                                                                {
                                                                    "type": "boolean_operator",
                                                                    "label": "operation == Operation.DIVIDE and b == 0",
                                                                    "children": [
                                                                        {
                                                                            "type": "comparison_operator",
                                                                            "label": "operation == Operation.DIVIDE",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "operation",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "Operation.DIVIDE",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "Operation",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "DIVIDE",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "comparison_operator",
                                                                            "label": "b == 0",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "b",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "0",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": "raise ZeroDivisionError(\"Cannot divide by zero\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "raise_statement",
                                                                            "label": "raise ZeroDivisionError(\"Cannot divide by zero\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "ZeroDivisionError(\"Cannot divide by zero\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "ZeroDivisionError",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(\"Cannot divide by zero\")",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"Cannot divide by zero\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "Cannot divide by zero",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "result = op_func(a, b)",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "result = op_func(a, b)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "result",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "label": "op_func(a, b)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "op_func",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(a, b)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "a",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "b",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "if_statement",
                                                            "label": "if input_data.round_result:\n                result = round(result)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "input_data.round_result",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "input_data",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "round_result",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": "result = round(result)",
                                                                    "children": [
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "label": "result = round(result)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "assignment",
                                                                                    "label": "result = round(result)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "result",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "round(result)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "round",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(result)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "result",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "yield \"result\", result",
                                                            "children": [
                                                                {
                                                                    "type": "yield",
                                                                    "label": "yield \"result\", result",
                                                                    "children": [
                                                                        {
                                                                            "type": "expression_list",
                                                                            "label": "\"result\", result",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"result\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "result",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "result",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "except_clause",
                                                    "label": "except ZeroDivisionError:\n            yield \"result\", float(\"inf\")  # Return infinity for division by zero",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "ZeroDivisionError",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "yield \"result\", float(\"inf\")  # Return infinity for division by zero",
                                                            "children": [
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "yield \"result\", float(\"inf\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "yield",
                                                                            "label": "yield \"result\", float(\"inf\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "expression_list",
                                                                                    "label": "\"result\", float(\"inf\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"result\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "result",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "float(\"inf\")",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "float",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(\"inf\")",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"inf\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "inf",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "comment",
                                                                    "label": "# Return infinity for division by zero",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "except_clause",
                                                    "label": "except Exception:\n            yield \"result\", float(\"nan\")  # Return NaN for other errors",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Exception",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "yield \"result\", float(\"nan\")  # Return NaN for other errors",
                                                            "children": [
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "yield \"result\", float(\"nan\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "yield",
                                                                            "label": "yield \"result\", float(\"nan\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "expression_list",
                                                                                    "label": "\"result\", float(\"nan\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"result\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "result",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "float(\"nan\")",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "float",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(\"nan\")",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"nan\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "nan",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "comment",
                                                                    "label": "# Return NaN for other errors",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "label": "class CountItemsBlock(Block):\n    class Input(BlockSchema):\n        collection: Any = SchemaField(\n            description=\"Enter the collection you want to count. This can be a list, dictionary, string, or any other iterable.\",\n            placeholder=\"For example: [1, 2, 3] or {'a': 1, 'b': 2} or 'hello'\",\n        )\n\n    class Output(BlockSchema):\n        count: int = SchemaField(description=\"The number of items in the collection\")\n\n    def __init__(self):\n        super().__init__(\n            id=\"3c9c2f42-b0c3-435f-ba35-05f7a25c772a\",\n            input_schema=CountItemsBlock.Input,\n            output_schema=CountItemsBlock.Output,\n            description=\"Counts the number of items in a collection.\",\n            categories={BlockCategory.LOGIC},\n            test_input={\"collection\": [1, 2, 3, 4, 5]},\n            test_output=[\n                (\"count\", 5),\n            ],\n        )\n\n    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        collection = input_data.collection\n\n        try:\n            if isinstance(collection, (str, list, tuple, set, dict)):\n                count = len(collection)\n            elif hasattr(collection, \"__iter__\"):\n                count = sum(1 for _ in collection)\n            else:\n                raise ValueError(\"Input is not a countable collection\")\n\n            yield \"count\", count\n\n        except Exception:\n            yield \"count\", -1  # Return -1 to indicate an error",
            "children": [
                {
                    "type": "identifier",
                    "label": "CountItemsBlock",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "(Block)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Block",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "class Input(BlockSchema):\n        collection: Any = SchemaField(\n            description=\"Enter the collection you want to count. This can be a list, dictionary, string, or any other iterable.\",\n            placeholder=\"For example: [1, 2, 3] or {'a': 1, 'b': 2} or 'hello'\",\n        )\n\n    class Output(BlockSchema):\n        count: int = SchemaField(description=\"The number of items in the collection\")\n\n    def __init__(self):\n        super().__init__(\n            id=\"3c9c2f42-b0c3-435f-ba35-05f7a25c772a\",\n            input_schema=CountItemsBlock.Input,\n            output_schema=CountItemsBlock.Output,\n            description=\"Counts the number of items in a collection.\",\n            categories={BlockCategory.LOGIC},\n            test_input={\"collection\": [1, 2, 3, 4, 5]},\n            test_output=[\n                (\"count\", 5),\n            ],\n        )\n\n    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        collection = input_data.collection\n\n        try:\n            if isinstance(collection, (str, list, tuple, set, dict)):\n                count = len(collection)\n            elif hasattr(collection, \"__iter__\"):\n                count = sum(1 for _ in collection)\n            else:\n                raise ValueError(\"Input is not a countable collection\")\n\n            yield \"count\", count\n\n        except Exception:\n            yield \"count\", -1  # Return -1 to indicate an error",
                    "children": [
                        {
                            "type": "class_definition",
                            "label": "class Input(BlockSchema):\n        collection: Any = SchemaField(\n            description=\"Enter the collection you want to count. This can be a list, dictionary, string, or any other iterable.\",\n            placeholder=\"For example: [1, 2, 3] or {'a': 1, 'b': 2} or 'hello'\",\n        )",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "Input",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(BlockSchema)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "BlockSchema",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "collection: Any = SchemaField(\n            description=\"Enter the collection you want to count. This can be a list, dictionary, string, or any other iterable.\",\n            placeholder=\"For example: [1, 2, 3] or {'a': 1, 'b': 2} or 'hello'\",\n        )",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "collection: Any = SchemaField(\n            description=\"Enter the collection you want to count. This can be a list, dictionary, string, or any other iterable.\",\n            placeholder=\"For example: [1, 2, 3] or {'a': 1, 'b': 2} or 'hello'\",\n        )",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "collection: Any = SchemaField(\n            description=\"Enter the collection you want to count. This can be a list, dictionary, string, or any other iterable.\",\n            placeholder=\"For example: [1, 2, 3] or {'a': 1, 'b': 2} or 'hello'\",\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "collection",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "Any",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Any",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "SchemaField(\n            description=\"Enter the collection you want to count. This can be a list, dictionary, string, or any other iterable.\",\n            placeholder=\"For example: [1, 2, 3] or {'a': 1, 'b': 2} or 'hello'\",\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "SchemaField",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n            description=\"Enter the collection you want to count. This can be a list, dictionary, string, or any other iterable.\",\n            placeholder=\"For example: [1, 2, 3] or {'a': 1, 'b': 2} or 'hello'\",\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "description=\"Enter the collection you want to count. This can be a list, dictionary, string, or any other iterable.\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "description",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"Enter the collection you want to count. This can be a list, dictionary, string, or any other iterable.\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Enter the collection you want to count. This can be a list, dictionary, string, or any other iterable.",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "placeholder=\"For example: [1, 2, 3] or {'a': 1, 'b': 2} or 'hello'\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "placeholder",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"For example: [1, 2, 3] or {'a': 1, 'b': 2} or 'hello'\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "For example: [1, 2, 3] or {'a': 1, 'b': 2} or 'hello'",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "class_definition",
                            "label": "class Output(BlockSchema):\n        count: int = SchemaField(description=\"The number of items in the collection\")",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "Output",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(BlockSchema)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "BlockSchema",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "count: int = SchemaField(description=\"The number of items in the collection\")",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "count: int = SchemaField(description=\"The number of items in the collection\")",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "count: int = SchemaField(description=\"The number of items in the collection\")",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "count",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "int",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "int",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "SchemaField(description=\"The number of items in the collection\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "SchemaField",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(description=\"The number of items in the collection\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "description=\"The number of items in the collection\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "description",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"The number of items in the collection\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "The number of items in the collection",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def __init__(self):\n        super().__init__(\n            id=\"3c9c2f42-b0c3-435f-ba35-05f7a25c772a\",\n            input_schema=CountItemsBlock.Input,\n            output_schema=CountItemsBlock.Output,\n            description=\"Counts the number of items in a collection.\",\n            categories={BlockCategory.LOGIC},\n            test_input={\"collection\": [1, 2, 3, 4, 5]},\n            test_output=[\n                (\"count\", 5),\n            ],\n        )",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "__init__",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "super().__init__(\n            id=\"3c9c2f42-b0c3-435f-ba35-05f7a25c772a\",\n            input_schema=CountItemsBlock.Input,\n            output_schema=CountItemsBlock.Output,\n            description=\"Counts the number of items in a collection.\",\n            categories={BlockCategory.LOGIC},\n            test_input={\"collection\": [1, 2, 3, 4, 5]},\n            test_output=[\n                (\"count\", 5),\n            ],\n        )",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "super().__init__(\n            id=\"3c9c2f42-b0c3-435f-ba35-05f7a25c772a\",\n            input_schema=CountItemsBlock.Input,\n            output_schema=CountItemsBlock.Output,\n            description=\"Counts the number of items in a collection.\",\n            categories={BlockCategory.LOGIC},\n            test_input={\"collection\": [1, 2, 3, 4, 5]},\n            test_output=[\n                (\"count\", 5),\n            ],\n        )",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "super().__init__(\n            id=\"3c9c2f42-b0c3-435f-ba35-05f7a25c772a\",\n            input_schema=CountItemsBlock.Input,\n            output_schema=CountItemsBlock.Output,\n            description=\"Counts the number of items in a collection.\",\n            categories={BlockCategory.LOGIC},\n            test_input={\"collection\": [1, 2, 3, 4, 5]},\n            test_output=[\n                (\"count\", 5),\n            ],\n        )",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "super().__init__",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "super()",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "super",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "__init__",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n            id=\"3c9c2f42-b0c3-435f-ba35-05f7a25c772a\",\n            input_schema=CountItemsBlock.Input,\n            output_schema=CountItemsBlock.Output,\n            description=\"Counts the number of items in a collection.\",\n            categories={BlockCategory.LOGIC},\n            test_input={\"collection\": [1, 2, 3, 4, 5]},\n            test_output=[\n                (\"count\", 5),\n            ],\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "id=\"3c9c2f42-b0c3-435f-ba35-05f7a25c772a\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"3c9c2f42-b0c3-435f-ba35-05f7a25c772a\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "3c9c2f42-b0c3-435f-ba35-05f7a25c772a",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "input_schema=CountItemsBlock.Input",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "input_schema",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "CountItemsBlock.Input",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "CountItemsBlock",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Input",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "output_schema=CountItemsBlock.Output",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "output_schema",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "CountItemsBlock.Output",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "CountItemsBlock",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Output",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "description=\"Counts the number of items in a collection.\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "description",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"Counts the number of items in a collection.\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "Counts the number of items in a collection.",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "categories={BlockCategory.LOGIC}",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "categories",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "set",
                                                                            "label": "{BlockCategory.LOGIC}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "BlockCategory.LOGIC",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "BlockCategory",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "LOGIC",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "test_input={\"collection\": [1, 2, 3, 4, 5]}",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "test_input",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "dictionary",
                                                                            "label": "{\"collection\": [1, 2, 3, 4, 5]}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "pair",
                                                                                    "label": "\"collection\": [1, 2, 3, 4, 5]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"collection\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "collection",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "list",
                                                                                            "label": "[1, 2, 3, 4, 5]",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "integer",
                                                                                                    "label": "1",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "integer",
                                                                                                    "label": "2",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "integer",
                                                                                                    "label": "3",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "integer",
                                                                                                    "label": "4",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "integer",
                                                                                                    "label": "5",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "test_output=[\n                (\"count\", 5),\n            ]",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "test_output",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "list",
                                                                            "label": "[\n                (\"count\", 5),\n            ]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "tuple",
                                                                                    "label": "(\"count\", 5)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"count\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "count",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "label": "5",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        collection = input_data.collection\n\n        try:\n            if isinstance(collection, (str, list, tuple, set, dict)):\n                count = len(collection)\n            elif hasattr(collection, \"__iter__\"):\n                count = sum(1 for _ in collection)\n            else:\n                raise ValueError(\"Input is not a countable collection\")\n\n            yield \"count\", count\n\n        except Exception:\n            yield \"count\", -1  # Return -1 to indicate an error",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "run",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, input_data: Input, **kwargs)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "input_data: Input",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "input_data",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "Input",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Input",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "dictionary_splat_pattern",
                                            "label": "**kwargs",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "kwargs",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "label": "BlockOutput",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "BlockOutput",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "collection = input_data.collection\n\n        try:\n            if isinstance(collection, (str, list, tuple, set, dict)):\n                count = len(collection)\n            elif hasattr(collection, \"__iter__\"):\n                count = sum(1 for _ in collection)\n            else:\n                raise ValueError(\"Input is not a countable collection\")\n\n            yield \"count\", count\n\n        except Exception:\n            yield \"count\", -1  # Return -1 to indicate an error",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "collection = input_data.collection",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "collection = input_data.collection",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "collection",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "attribute",
                                                            "label": "input_data.collection",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "input_data",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "collection",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "try_statement",
                                            "label": "try:\n            if isinstance(collection, (str, list, tuple, set, dict)):\n                count = len(collection)\n            elif hasattr(collection, \"__iter__\"):\n                count = sum(1 for _ in collection)\n            else:\n                raise ValueError(\"Input is not a countable collection\")\n\n            yield \"count\", count\n\n        except Exception:\n            yield \"count\", -1  # Return -1 to indicate an error",
                                            "children": [
                                                {
                                                    "type": "block",
                                                    "label": "if isinstance(collection, (str, list, tuple, set, dict)):\n                count = len(collection)\n            elif hasattr(collection, \"__iter__\"):\n                count = sum(1 for _ in collection)\n            else:\n                raise ValueError(\"Input is not a countable collection\")\n\n            yield \"count\", count",
                                                    "children": [
                                                        {
                                                            "type": "if_statement",
                                                            "label": "if isinstance(collection, (str, list, tuple, set, dict)):\n                count = len(collection)\n            elif hasattr(collection, \"__iter__\"):\n                count = sum(1 for _ in collection)\n            else:\n                raise ValueError(\"Input is not a countable collection\")",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "isinstance(collection, (str, list, tuple, set, dict))",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "isinstance",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(collection, (str, list, tuple, set, dict))",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "collection",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "tuple",
                                                                                    "label": "(str, list, tuple, set, dict)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "str",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "list",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "tuple",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "set",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "dict",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": "count = len(collection)",
                                                                    "children": [
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "label": "count = len(collection)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "assignment",
                                                                                    "label": "count = len(collection)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "count",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "len(collection)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "len",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(collection)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "collection",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "elif_clause",
                                                                    "label": "elif hasattr(collection, \"__iter__\"):\n                count = sum(1 for _ in collection)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "hasattr(collection, \"__iter__\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "hasattr",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(collection, \"__iter__\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "collection",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"__iter__\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "__iter__",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "block",
                                                                            "label": "count = sum(1 for _ in collection)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "expression_statement",
                                                                                    "label": "count = sum(1 for _ in collection)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "assignment",
                                                                                            "label": "count = sum(1 for _ in collection)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "count",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "sum(1 for _ in collection)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "sum",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "generator_expression",
                                                                                                            "label": "(1 for _ in collection)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "integer",
                                                                                                                    "label": "1",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "for_in_clause",
                                                                                                                    "label": "for _ in collection",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "_",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "collection",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "else_clause",
                                                                    "label": "else:\n                raise ValueError(\"Input is not a countable collection\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "block",
                                                                            "label": "raise ValueError(\"Input is not a countable collection\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "raise_statement",
                                                                                    "label": "raise ValueError(\"Input is not a countable collection\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "ValueError(\"Input is not a countable collection\")",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "ValueError",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(\"Input is not a countable collection\")",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"Input is not a countable collection\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "Input is not a countable collection",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "yield \"count\", count",
                                                            "children": [
                                                                {
                                                                    "type": "yield",
                                                                    "label": "yield \"count\", count",
                                                                    "children": [
                                                                        {
                                                                            "type": "expression_list",
                                                                            "label": "\"count\", count",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"count\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "count",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "count",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "except_clause",
                                                    "label": "except Exception:\n            yield \"count\", -1  # Return -1 to indicate an error",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Exception",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "yield \"count\", -1  # Return -1 to indicate an error",
                                                            "children": [
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "yield \"count\", -1",
                                                                    "children": [
                                                                        {
                                                                            "type": "yield",
                                                                            "label": "yield \"count\", -1",
                                                                            "children": [
                                                                                {
                                                                                    "type": "expression_list",
                                                                                    "label": "\"count\", -1",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"count\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "count",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "unary_operator",
                                                                                            "label": "-1",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "integer",
                                                                                                    "label": "1",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "comment",
                                                                    "label": "# Return -1 to indicate an error",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}