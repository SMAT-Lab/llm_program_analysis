{
    "type": "module",
    "label": "def excess_3_code(number: int) -> str:\n    \"\"\"\n    Find excess-3 code of integer base 10.\n    Add 3 to all digits in a decimal number then convert to a binary-coded decimal.\n    https://en.wikipedia.org/wiki/Excess-3\n\n    >>> excess_3_code(0)\n    '0b0011'\n    >>> excess_3_code(3)\n    '0b0110'\n    >>> excess_3_code(2)\n    '0b0101'\n    >>> excess_3_code(20)\n    '0b01010011'\n    >>> excess_3_code(120)\n    '0b010001010011'\n    \"\"\"\n    num = \"\"\n    for digit in str(max(0, number)):\n        num += str(bin(int(digit) + 3))[2:].zfill(4)\n    return \"0b\" + num\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()\n",
    "children": [
        {
            "type": "function_definition",
            "label": "def excess_3_code(number: int) -> str:\n    \"\"\"\n    Find excess-3 code of integer base 10.\n    Add 3 to all digits in a decimal number then convert to a binary-coded decimal.\n    https://en.wikipedia.org/wiki/Excess-3\n\n    >>> excess_3_code(0)\n    '0b0011'\n    >>> excess_3_code(3)\n    '0b0110'\n    >>> excess_3_code(2)\n    '0b0101'\n    >>> excess_3_code(20)\n    '0b01010011'\n    >>> excess_3_code(120)\n    '0b010001010011'\n    \"\"\"\n    num = \"\"\n    for digit in str(max(0, number)):\n        num += str(bin(int(digit) + 3))[2:].zfill(4)\n    return \"0b\" + num",
            "children": [
                {
                    "type": "identifier",
                    "label": "excess_3_code",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(number: int)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "number: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "number",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "str",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "str",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    Find excess-3 code of integer base 10.\n    Add 3 to all digits in a decimal number then convert to a binary-coded decimal.\n    https://en.wikipedia.org/wiki/Excess-3\n\n    >>> excess_3_code(0)\n    '0b0011'\n    >>> excess_3_code(3)\n    '0b0110'\n    >>> excess_3_code(2)\n    '0b0101'\n    >>> excess_3_code(20)\n    '0b01010011'\n    >>> excess_3_code(120)\n    '0b010001010011'\n    \"\"\"\n    num = \"\"\n    for digit in str(max(0, number)):\n        num += str(bin(int(digit) + 3))[2:].zfill(4)\n    return \"0b\" + num",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    Find excess-3 code of integer base 10.\n    Add 3 to all digits in a decimal number then convert to a binary-coded decimal.\n    https://en.wikipedia.org/wiki/Excess-3\n\n    >>> excess_3_code(0)\n    '0b0011'\n    >>> excess_3_code(3)\n    '0b0110'\n    >>> excess_3_code(2)\n    '0b0101'\n    >>> excess_3_code(20)\n    '0b01010011'\n    >>> excess_3_code(120)\n    '0b010001010011'\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    Find excess-3 code of integer base 10.\n    Add 3 to all digits in a decimal number then convert to a binary-coded decimal.\n    https://en.wikipedia.org/wiki/Excess-3\n\n    >>> excess_3_code(0)\n    '0b0011'\n    >>> excess_3_code(3)\n    '0b0110'\n    >>> excess_3_code(2)\n    '0b0101'\n    >>> excess_3_code(20)\n    '0b01010011'\n    >>> excess_3_code(120)\n    '0b010001010011'\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    Find excess-3 code of integer base 10.\n    Add 3 to all digits in a decimal number then convert to a binary-coded decimal.\n    https://en.wikipedia.org/wiki/Excess-3\n\n    >>> excess_3_code(0)\n    '0b0011'\n    >>> excess_3_code(3)\n    '0b0110'\n    >>> excess_3_code(2)\n    '0b0101'\n    >>> excess_3_code(20)\n    '0b01010011'\n    >>> excess_3_code(120)\n    '0b010001010011'\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "num = \"\"",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "num = \"\"",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "num",
                                            "children": []
                                        },
                                        {
                                            "type": "string",
                                            "label": "\"\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "for_statement",
                            "label": "for digit in str(max(0, number)):\n        num += str(bin(int(digit) + 3))[2:].zfill(4)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "digit",
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "label": "str(max(0, number))",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(max(0, number))",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "max(0, number)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "max",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(0, number)",
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "label": "0",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "number",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "num += str(bin(int(digit) + 3))[2:].zfill(4)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "num += str(bin(int(digit) + 3))[2:].zfill(4)",
                                            "children": [
                                                {
                                                    "type": "augmented_assignment",
                                                    "label": "num += str(bin(int(digit) + 3))[2:].zfill(4)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "num",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "str(bin(int(digit) + 3))[2:].zfill(4)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "str(bin(int(digit) + 3))[2:].zfill",
                                                                    "children": [
                                                                        {
                                                                            "type": "subscript",
                                                                            "label": "str(bin(int(digit) + 3))[2:]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "str(bin(int(digit) + 3))",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "str",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(bin(int(digit) + 3))",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "bin(int(digit) + 3)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "bin",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(int(digit) + 3)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "binary_operator",
                                                                                                                    "label": "int(digit) + 3",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "call",
                                                                                                                            "label": "int(digit)",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "int",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "argument_list",
                                                                                                                                    "label": "(digit)",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "digit",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "integer",
                                                                                                                            "label": "3",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "slice",
                                                                                    "label": "2:",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "label": "2",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "zfill",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(4)",
                                                                    "children": [
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "4",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return \"0b\" + num",
                            "children": [
                                {
                                    "type": "binary_operator",
                                    "label": "\"0b\" + num",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"0b\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "0b",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "num",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "if_statement",
            "label": "if __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
            "children": [
                {
                    "type": "comparison_operator",
                    "label": "__name__ == \"__main__\"",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "__name__",
                            "children": []
                        },
                        {
                            "type": "string",
                            "label": "\"__main__\"",
                            "children": [
                                {
                                    "type": "string_start",
                                    "label": "\"",
                                    "children": []
                                },
                                {
                                    "type": "string_content",
                                    "label": "__main__",
                                    "children": []
                                },
                                {
                                    "type": "string_end",
                                    "label": "\"",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "import doctest\n\n    doctest.testmod()",
                    "children": [
                        {
                            "type": "import_statement",
                            "label": "import doctest",
                            "children": [
                                {
                                    "type": "dotted_name",
                                    "label": "doctest",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "doctest",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "doctest.testmod()",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "doctest.testmod()",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "doctest.testmod",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "doctest",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "testmod",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "()",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}