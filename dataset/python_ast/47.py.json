{
    "type": "module",
    "label": "import asyncio\nimport logging\nimport os\nimport threading\nfrom functools import wraps\nfrom uuid import uuid4\n\nfrom tenacity import retry, stop_after_attempt, wait_exponential\n\nfrom backend.util.process import get_service_name\n\nlogger = logging.getLogger(__name__)\n\n\ndef _log_prefix(resource_name: str, conn_id: str):\n    \"\"\"\n    Returns a prefix string for logging purposes.\n    This needs to be called on the fly to get the current process ID & service name,\n    not the parent process ID & service name.\n    \"\"\"\n    return f\"[PID-{os.getpid()}|THREAD-{threading.get_native_id()}|{get_service_name()}|{resource_name}-{conn_id}]\"\n\n\ndef conn_retry(\n    resource_name: str,\n    action_name: str,\n    max_retry: int = 5,\n    multiplier: int = 1,\n    min_wait: float = 1,\n    max_wait: float = 30,\n):\n    conn_id = str(uuid4())\n\n    def on_retry(retry_state):\n        prefix = _log_prefix(resource_name, conn_id)\n        exception = retry_state.outcome.exception()\n        logger.error(f\"{prefix} {action_name} failed: {exception}. Retrying now...\")\n\n    def decorator(func):\n        is_coroutine = asyncio.iscoroutinefunction(func)\n        retry_decorator = retry(\n            stop=stop_after_attempt(max_retry + 1),\n            wait=wait_exponential(multiplier=multiplier, min=min_wait, max=max_wait),\n            before_sleep=on_retry,\n            reraise=True,\n        )\n        wrapped_func = retry_decorator(func)\n\n        @wraps(func)\n        def sync_wrapper(*args, **kwargs):\n            prefix = _log_prefix(resource_name, conn_id)\n            logger.info(f\"{prefix} {action_name} started...\")\n            try:\n                result = wrapped_func(*args, **kwargs)\n                logger.info(f\"{prefix} {action_name} completed successfully.\")\n                return result\n            except Exception as e:\n                logger.error(f\"{prefix} {action_name} failed after retries: {e}\")\n                raise\n\n        @wraps(func)\n        async def async_wrapper(*args, **kwargs):\n            prefix = _log_prefix(resource_name, conn_id)\n            logger.info(f\"{prefix} {action_name} started...\")\n            try:\n                result = await wrapped_func(*args, **kwargs)\n                logger.info(f\"{prefix} {action_name} completed successfully.\")\n                return result\n            except Exception as e:\n                logger.error(f\"{prefix} {action_name} failed after retries: {e}\")\n                raise\n\n        return async_wrapper if is_coroutine else sync_wrapper\n\n    return decorator\n",
    "children": [
        {
            "type": "import_statement",
            "label": "import asyncio",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "asyncio",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "asyncio",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import logging",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "logging",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "logging",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import os",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "os",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "os",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import threading",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "threading",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "threading",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from functools import wraps",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "functools",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "functools",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "wraps",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "wraps",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from uuid import uuid4",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "uuid",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "uuid",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "uuid4",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "uuid4",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from tenacity import retry, stop_after_attempt, wait_exponential",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "tenacity",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "tenacity",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "retry",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "retry",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "stop_after_attempt",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "stop_after_attempt",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "wait_exponential",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "wait_exponential",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.util.process import get_service_name",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.util.process",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "util",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "process",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "get_service_name",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "get_service_name",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "logger = logging.getLogger(__name__)",
            "children": [
                {
                    "type": "assignment",
                    "label": "logger = logging.getLogger(__name__)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "logger",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "logging.getLogger(__name__)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "logging.getLogger",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "logging",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "getLogger",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(__name__)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "__name__",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def _log_prefix(resource_name: str, conn_id: str):\n    \"\"\"\n    Returns a prefix string for logging purposes.\n    This needs to be called on the fly to get the current process ID & service name,\n    not the parent process ID & service name.\n    \"\"\"\n    return f\"[PID-{os.getpid()}|THREAD-{threading.get_native_id()}|{get_service_name()}|{resource_name}-{conn_id}]\"",
            "children": [
                {
                    "type": "identifier",
                    "label": "_log_prefix",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(resource_name: str, conn_id: str)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "resource_name: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "resource_name",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "conn_id: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "conn_id",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    Returns a prefix string for logging purposes.\n    This needs to be called on the fly to get the current process ID & service name,\n    not the parent process ID & service name.\n    \"\"\"\n    return f\"[PID-{os.getpid()}|THREAD-{threading.get_native_id()}|{get_service_name()}|{resource_name}-{conn_id}]\"",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    Returns a prefix string for logging purposes.\n    This needs to be called on the fly to get the current process ID & service name,\n    not the parent process ID & service name.\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    Returns a prefix string for logging purposes.\n    This needs to be called on the fly to get the current process ID & service name,\n    not the parent process ID & service name.\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    Returns a prefix string for logging purposes.\n    This needs to be called on the fly to get the current process ID & service name,\n    not the parent process ID & service name.\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return f\"[PID-{os.getpid()}|THREAD-{threading.get_native_id()}|{get_service_name()}|{resource_name}-{conn_id}]\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "f\"[PID-{os.getpid()}|THREAD-{threading.get_native_id()}|{get_service_name()}|{resource_name}-{conn_id}]\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "f\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "[PID-",
                                            "children": []
                                        },
                                        {
                                            "type": "interpolation",
                                            "label": "{os.getpid()}",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "os.getpid()",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "os.getpid",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "os",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "getpid",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "()",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "|THREAD-",
                                            "children": []
                                        },
                                        {
                                            "type": "interpolation",
                                            "label": "{threading.get_native_id()}",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "threading.get_native_id()",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "threading.get_native_id",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "threading",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "get_native_id",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "()",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "|",
                                            "children": []
                                        },
                                        {
                                            "type": "interpolation",
                                            "label": "{get_service_name()}",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "get_service_name()",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "get_service_name",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "()",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "|",
                                            "children": []
                                        },
                                        {
                                            "type": "interpolation",
                                            "label": "{resource_name}",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "resource_name",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "-",
                                            "children": []
                                        },
                                        {
                                            "type": "interpolation",
                                            "label": "{conn_id}",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "conn_id",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "]",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def conn_retry(\n    resource_name: str,\n    action_name: str,\n    max_retry: int = 5,\n    multiplier: int = 1,\n    min_wait: float = 1,\n    max_wait: float = 30,\n):\n    conn_id = str(uuid4())\n\n    def on_retry(retry_state):\n        prefix = _log_prefix(resource_name, conn_id)\n        exception = retry_state.outcome.exception()\n        logger.error(f\"{prefix} {action_name} failed: {exception}. Retrying now...\")\n\n    def decorator(func):\n        is_coroutine = asyncio.iscoroutinefunction(func)\n        retry_decorator = retry(\n            stop=stop_after_attempt(max_retry + 1),\n            wait=wait_exponential(multiplier=multiplier, min=min_wait, max=max_wait),\n            before_sleep=on_retry,\n            reraise=True,\n        )\n        wrapped_func = retry_decorator(func)\n\n        @wraps(func)\n        def sync_wrapper(*args, **kwargs):\n            prefix = _log_prefix(resource_name, conn_id)\n            logger.info(f\"{prefix} {action_name} started...\")\n            try:\n                result = wrapped_func(*args, **kwargs)\n                logger.info(f\"{prefix} {action_name} completed successfully.\")\n                return result\n            except Exception as e:\n                logger.error(f\"{prefix} {action_name} failed after retries: {e}\")\n                raise\n\n        @wraps(func)\n        async def async_wrapper(*args, **kwargs):\n            prefix = _log_prefix(resource_name, conn_id)\n            logger.info(f\"{prefix} {action_name} started...\")\n            try:\n                result = await wrapped_func(*args, **kwargs)\n                logger.info(f\"{prefix} {action_name} completed successfully.\")\n                return result\n            except Exception as e:\n                logger.error(f\"{prefix} {action_name} failed after retries: {e}\")\n                raise\n\n        return async_wrapper if is_coroutine else sync_wrapper\n\n    return decorator",
            "children": [
                {
                    "type": "identifier",
                    "label": "conn_retry",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(\n    resource_name: str,\n    action_name: str,\n    max_retry: int = 5,\n    multiplier: int = 1,\n    min_wait: float = 1,\n    max_wait: float = 30,\n)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "resource_name: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "resource_name",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "action_name: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "action_name",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_default_parameter",
                            "label": "max_retry: int = 5",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "max_retry",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "integer",
                                    "label": "5",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "typed_default_parameter",
                            "label": "multiplier: int = 1",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "multiplier",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "integer",
                                    "label": "1",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "typed_default_parameter",
                            "label": "min_wait: float = 1",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "min_wait",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "float",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "float",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "integer",
                                    "label": "1",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "typed_default_parameter",
                            "label": "max_wait: float = 30",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "max_wait",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "float",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "float",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "integer",
                                    "label": "30",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "conn_id = str(uuid4())\n\n    def on_retry(retry_state):\n        prefix = _log_prefix(resource_name, conn_id)\n        exception = retry_state.outcome.exception()\n        logger.error(f\"{prefix} {action_name} failed: {exception}. Retrying now...\")\n\n    def decorator(func):\n        is_coroutine = asyncio.iscoroutinefunction(func)\n        retry_decorator = retry(\n            stop=stop_after_attempt(max_retry + 1),\n            wait=wait_exponential(multiplier=multiplier, min=min_wait, max=max_wait),\n            before_sleep=on_retry,\n            reraise=True,\n        )\n        wrapped_func = retry_decorator(func)\n\n        @wraps(func)\n        def sync_wrapper(*args, **kwargs):\n            prefix = _log_prefix(resource_name, conn_id)\n            logger.info(f\"{prefix} {action_name} started...\")\n            try:\n                result = wrapped_func(*args, **kwargs)\n                logger.info(f\"{prefix} {action_name} completed successfully.\")\n                return result\n            except Exception as e:\n                logger.error(f\"{prefix} {action_name} failed after retries: {e}\")\n                raise\n\n        @wraps(func)\n        async def async_wrapper(*args, **kwargs):\n            prefix = _log_prefix(resource_name, conn_id)\n            logger.info(f\"{prefix} {action_name} started...\")\n            try:\n                result = await wrapped_func(*args, **kwargs)\n                logger.info(f\"{prefix} {action_name} completed successfully.\")\n                return result\n            except Exception as e:\n                logger.error(f\"{prefix} {action_name} failed after retries: {e}\")\n                raise\n\n        return async_wrapper if is_coroutine else sync_wrapper\n\n    return decorator",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "conn_id = str(uuid4())",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "conn_id = str(uuid4())",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "conn_id",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "str(uuid4())",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(uuid4())",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "uuid4()",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "uuid4",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def on_retry(retry_state):\n        prefix = _log_prefix(resource_name, conn_id)\n        exception = retry_state.outcome.exception()\n        logger.error(f\"{prefix} {action_name} failed: {exception}. Retrying now...\")",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "on_retry",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(retry_state)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "retry_state",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "prefix = _log_prefix(resource_name, conn_id)\n        exception = retry_state.outcome.exception()\n        logger.error(f\"{prefix} {action_name} failed: {exception}. Retrying now...\")",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "prefix = _log_prefix(resource_name, conn_id)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "prefix = _log_prefix(resource_name, conn_id)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "prefix",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "_log_prefix(resource_name, conn_id)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "_log_prefix",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(resource_name, conn_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "resource_name",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "conn_id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "exception = retry_state.outcome.exception()",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "exception = retry_state.outcome.exception()",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "exception",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "retry_state.outcome.exception()",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "retry_state.outcome.exception",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "retry_state.outcome",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "retry_state",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "outcome",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "exception",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "logger.error(f\"{prefix} {action_name} failed: {exception}. Retrying now...\")",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "logger.error(f\"{prefix} {action_name} failed: {exception}. Retrying now...\")",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "logger.error",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "logger",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "error",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(f\"{prefix} {action_name} failed: {exception}. Retrying now...\")",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "f\"{prefix} {action_name} failed: {exception}. Retrying now...\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "f\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{prefix}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "prefix",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": " ",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{action_name}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "action_name",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": " failed: ",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{exception}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "exception",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": ". Retrying now...",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def decorator(func):\n        is_coroutine = asyncio.iscoroutinefunction(func)\n        retry_decorator = retry(\n            stop=stop_after_attempt(max_retry + 1),\n            wait=wait_exponential(multiplier=multiplier, min=min_wait, max=max_wait),\n            before_sleep=on_retry,\n            reraise=True,\n        )\n        wrapped_func = retry_decorator(func)\n\n        @wraps(func)\n        def sync_wrapper(*args, **kwargs):\n            prefix = _log_prefix(resource_name, conn_id)\n            logger.info(f\"{prefix} {action_name} started...\")\n            try:\n                result = wrapped_func(*args, **kwargs)\n                logger.info(f\"{prefix} {action_name} completed successfully.\")\n                return result\n            except Exception as e:\n                logger.error(f\"{prefix} {action_name} failed after retries: {e}\")\n                raise\n\n        @wraps(func)\n        async def async_wrapper(*args, **kwargs):\n            prefix = _log_prefix(resource_name, conn_id)\n            logger.info(f\"{prefix} {action_name} started...\")\n            try:\n                result = await wrapped_func(*args, **kwargs)\n                logger.info(f\"{prefix} {action_name} completed successfully.\")\n                return result\n            except Exception as e:\n                logger.error(f\"{prefix} {action_name} failed after retries: {e}\")\n                raise\n\n        return async_wrapper if is_coroutine else sync_wrapper",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "decorator",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(func)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "func",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "is_coroutine = asyncio.iscoroutinefunction(func)\n        retry_decorator = retry(\n            stop=stop_after_attempt(max_retry + 1),\n            wait=wait_exponential(multiplier=multiplier, min=min_wait, max=max_wait),\n            before_sleep=on_retry,\n            reraise=True,\n        )\n        wrapped_func = retry_decorator(func)\n\n        @wraps(func)\n        def sync_wrapper(*args, **kwargs):\n            prefix = _log_prefix(resource_name, conn_id)\n            logger.info(f\"{prefix} {action_name} started...\")\n            try:\n                result = wrapped_func(*args, **kwargs)\n                logger.info(f\"{prefix} {action_name} completed successfully.\")\n                return result\n            except Exception as e:\n                logger.error(f\"{prefix} {action_name} failed after retries: {e}\")\n                raise\n\n        @wraps(func)\n        async def async_wrapper(*args, **kwargs):\n            prefix = _log_prefix(resource_name, conn_id)\n            logger.info(f\"{prefix} {action_name} started...\")\n            try:\n                result = await wrapped_func(*args, **kwargs)\n                logger.info(f\"{prefix} {action_name} completed successfully.\")\n                return result\n            except Exception as e:\n                logger.error(f\"{prefix} {action_name} failed after retries: {e}\")\n                raise\n\n        return async_wrapper if is_coroutine else sync_wrapper",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "is_coroutine = asyncio.iscoroutinefunction(func)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "is_coroutine = asyncio.iscoroutinefunction(func)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "is_coroutine",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "asyncio.iscoroutinefunction(func)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "asyncio.iscoroutinefunction",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "asyncio",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "iscoroutinefunction",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(func)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "func",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "retry_decorator = retry(\n            stop=stop_after_attempt(max_retry + 1),\n            wait=wait_exponential(multiplier=multiplier, min=min_wait, max=max_wait),\n            before_sleep=on_retry,\n            reraise=True,\n        )",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "retry_decorator = retry(\n            stop=stop_after_attempt(max_retry + 1),\n            wait=wait_exponential(multiplier=multiplier, min=min_wait, max=max_wait),\n            before_sleep=on_retry,\n            reraise=True,\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "retry_decorator",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "retry(\n            stop=stop_after_attempt(max_retry + 1),\n            wait=wait_exponential(multiplier=multiplier, min=min_wait, max=max_wait),\n            before_sleep=on_retry,\n            reraise=True,\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "retry",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n            stop=stop_after_attempt(max_retry + 1),\n            wait=wait_exponential(multiplier=multiplier, min=min_wait, max=max_wait),\n            before_sleep=on_retry,\n            reraise=True,\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "stop=stop_after_attempt(max_retry + 1)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "stop",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "stop_after_attempt(max_retry + 1)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "stop_after_attempt",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(max_retry + 1)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "binary_operator",
                                                                                                    "label": "max_retry + 1",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "max_retry",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "integer",
                                                                                                            "label": "1",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "wait=wait_exponential(multiplier=multiplier, min=min_wait, max=max_wait)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "wait",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "wait_exponential(multiplier=multiplier, min=min_wait, max=max_wait)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "wait_exponential",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(multiplier=multiplier, min=min_wait, max=max_wait)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "keyword_argument",
                                                                                                    "label": "multiplier=multiplier",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "multiplier",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "multiplier",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "keyword_argument",
                                                                                                    "label": "min=min_wait",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "min",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "min_wait",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "keyword_argument",
                                                                                                    "label": "max=max_wait",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "max",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "max_wait",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "before_sleep=on_retry",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "before_sleep",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "on_retry",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "reraise=True",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "reraise",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "true",
                                                                                    "label": "True",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "wrapped_func = retry_decorator(func)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "wrapped_func = retry_decorator(func)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "wrapped_func",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "retry_decorator(func)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "retry_decorator",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(func)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "func",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "decorated_definition",
                                            "label": "@wraps(func)\n        def sync_wrapper(*args, **kwargs):\n            prefix = _log_prefix(resource_name, conn_id)\n            logger.info(f\"{prefix} {action_name} started...\")\n            try:\n                result = wrapped_func(*args, **kwargs)\n                logger.info(f\"{prefix} {action_name} completed successfully.\")\n                return result\n            except Exception as e:\n                logger.error(f\"{prefix} {action_name} failed after retries: {e}\")\n                raise",
                                            "children": [
                                                {
                                                    "type": "decorator",
                                                    "label": "@wraps(func)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "wraps(func)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "wraps",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(func)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "func",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "function_definition",
                                                    "label": "def sync_wrapper(*args, **kwargs):\n            prefix = _log_prefix(resource_name, conn_id)\n            logger.info(f\"{prefix} {action_name} started...\")\n            try:\n                result = wrapped_func(*args, **kwargs)\n                logger.info(f\"{prefix} {action_name} completed successfully.\")\n                return result\n            except Exception as e:\n                logger.error(f\"{prefix} {action_name} failed after retries: {e}\")\n                raise",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "sync_wrapper",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "parameters",
                                                            "label": "(*args, **kwargs)",
                                                            "children": [
                                                                {
                                                                    "type": "list_splat_pattern",
                                                                    "label": "*args",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "args",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "dictionary_splat_pattern",
                                                                    "label": "**kwargs",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "kwargs",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "prefix = _log_prefix(resource_name, conn_id)\n            logger.info(f\"{prefix} {action_name} started...\")\n            try:\n                result = wrapped_func(*args, **kwargs)\n                logger.info(f\"{prefix} {action_name} completed successfully.\")\n                return result\n            except Exception as e:\n                logger.error(f\"{prefix} {action_name} failed after retries: {e}\")\n                raise",
                                                            "children": [
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "prefix = _log_prefix(resource_name, conn_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "assignment",
                                                                            "label": "prefix = _log_prefix(resource_name, conn_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "prefix",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "_log_prefix(resource_name, conn_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "_log_prefix",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(resource_name, conn_id)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "resource_name",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "conn_id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "logger.info(f\"{prefix} {action_name} started...\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "logger.info(f\"{prefix} {action_name} started...\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "logger.info",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "logger",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "info",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(f\"{prefix} {action_name} started...\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "f\"{prefix} {action_name} started...\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "f\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{prefix}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "prefix",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": " ",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{action_name}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "action_name",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": " started...",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "try_statement",
                                                                    "label": "try:\n                result = wrapped_func(*args, **kwargs)\n                logger.info(f\"{prefix} {action_name} completed successfully.\")\n                return result\n            except Exception as e:\n                logger.error(f\"{prefix} {action_name} failed after retries: {e}\")\n                raise",
                                                                    "children": [
                                                                        {
                                                                            "type": "block",
                                                                            "label": "result = wrapped_func(*args, **kwargs)\n                logger.info(f\"{prefix} {action_name} completed successfully.\")\n                return result",
                                                                            "children": [
                                                                                {
                                                                                    "type": "expression_statement",
                                                                                    "label": "result = wrapped_func(*args, **kwargs)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "assignment",
                                                                                            "label": "result = wrapped_func(*args, **kwargs)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "result",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "wrapped_func(*args, **kwargs)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "wrapped_func",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(*args, **kwargs)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "list_splat",
                                                                                                                    "label": "*args",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "args",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "dictionary_splat",
                                                                                                                    "label": "**kwargs",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "kwargs",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "expression_statement",
                                                                                    "label": "logger.info(f\"{prefix} {action_name} completed successfully.\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "logger.info(f\"{prefix} {action_name} completed successfully.\")",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "logger.info",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "logger",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "info",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(f\"{prefix} {action_name} completed successfully.\")",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "f\"{prefix} {action_name} completed successfully.\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "f\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "interpolation",
                                                                                                                    "label": "{prefix}",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "prefix",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": " ",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "interpolation",
                                                                                                                    "label": "{action_name}",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "action_name",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": " completed successfully.",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "return_statement",
                                                                                    "label": "return result",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "result",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "except_clause",
                                                                            "label": "except Exception as e:\n                logger.error(f\"{prefix} {action_name} failed after retries: {e}\")\n                raise",
                                                                            "children": [
                                                                                {
                                                                                    "type": "as_pattern",
                                                                                    "label": "Exception as e",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "Exception",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "as_pattern_target",
                                                                                            "label": "e",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "e",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "block",
                                                                                    "label": "logger.error(f\"{prefix} {action_name} failed after retries: {e}\")\n                raise",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "expression_statement",
                                                                                            "label": "logger.error(f\"{prefix} {action_name} failed after retries: {e}\")",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "logger.error(f\"{prefix} {action_name} failed after retries: {e}\")",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "logger.error",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "logger",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "error",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(f\"{prefix} {action_name} failed after retries: {e}\")",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string",
                                                                                                                    "label": "f\"{prefix} {action_name} failed after retries: {e}\"",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "string_start",
                                                                                                                            "label": "f\"",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "interpolation",
                                                                                                                            "label": "{prefix}",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "prefix",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": " ",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "interpolation",
                                                                                                                            "label": "{action_name}",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "action_name",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": " failed after retries: ",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "interpolation",
                                                                                                                            "label": "{e}",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "e",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_end",
                                                                                                                            "label": "\"",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "raise_statement",
                                                                                            "label": "raise",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "decorated_definition",
                                            "label": "@wraps(func)\n        async def async_wrapper(*args, **kwargs):\n            prefix = _log_prefix(resource_name, conn_id)\n            logger.info(f\"{prefix} {action_name} started...\")\n            try:\n                result = await wrapped_func(*args, **kwargs)\n                logger.info(f\"{prefix} {action_name} completed successfully.\")\n                return result\n            except Exception as e:\n                logger.error(f\"{prefix} {action_name} failed after retries: {e}\")\n                raise",
                                            "children": [
                                                {
                                                    "type": "decorator",
                                                    "label": "@wraps(func)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "wraps(func)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "wraps",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(func)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "func",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "function_definition",
                                                    "label": "async def async_wrapper(*args, **kwargs):\n            prefix = _log_prefix(resource_name, conn_id)\n            logger.info(f\"{prefix} {action_name} started...\")\n            try:\n                result = await wrapped_func(*args, **kwargs)\n                logger.info(f\"{prefix} {action_name} completed successfully.\")\n                return result\n            except Exception as e:\n                logger.error(f\"{prefix} {action_name} failed after retries: {e}\")\n                raise",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "async_wrapper",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "parameters",
                                                            "label": "(*args, **kwargs)",
                                                            "children": [
                                                                {
                                                                    "type": "list_splat_pattern",
                                                                    "label": "*args",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "args",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "dictionary_splat_pattern",
                                                                    "label": "**kwargs",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "kwargs",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "prefix = _log_prefix(resource_name, conn_id)\n            logger.info(f\"{prefix} {action_name} started...\")\n            try:\n                result = await wrapped_func(*args, **kwargs)\n                logger.info(f\"{prefix} {action_name} completed successfully.\")\n                return result\n            except Exception as e:\n                logger.error(f\"{prefix} {action_name} failed after retries: {e}\")\n                raise",
                                                            "children": [
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "prefix = _log_prefix(resource_name, conn_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "assignment",
                                                                            "label": "prefix = _log_prefix(resource_name, conn_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "prefix",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "_log_prefix(resource_name, conn_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "_log_prefix",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(resource_name, conn_id)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "resource_name",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "conn_id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "logger.info(f\"{prefix} {action_name} started...\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "logger.info(f\"{prefix} {action_name} started...\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "logger.info",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "logger",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "info",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(f\"{prefix} {action_name} started...\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "f\"{prefix} {action_name} started...\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "f\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{prefix}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "prefix",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": " ",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{action_name}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "action_name",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": " started...",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "try_statement",
                                                                    "label": "try:\n                result = await wrapped_func(*args, **kwargs)\n                logger.info(f\"{prefix} {action_name} completed successfully.\")\n                return result\n            except Exception as e:\n                logger.error(f\"{prefix} {action_name} failed after retries: {e}\")\n                raise",
                                                                    "children": [
                                                                        {
                                                                            "type": "block",
                                                                            "label": "result = await wrapped_func(*args, **kwargs)\n                logger.info(f\"{prefix} {action_name} completed successfully.\")\n                return result",
                                                                            "children": [
                                                                                {
                                                                                    "type": "expression_statement",
                                                                                    "label": "result = await wrapped_func(*args, **kwargs)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "assignment",
                                                                                            "label": "result = await wrapped_func(*args, **kwargs)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "result",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "await",
                                                                                                    "label": "await wrapped_func(*args, **kwargs)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "call",
                                                                                                            "label": "wrapped_func(*args, **kwargs)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "wrapped_func",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "argument_list",
                                                                                                                    "label": "(*args, **kwargs)",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "list_splat",
                                                                                                                            "label": "*args",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "args",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "dictionary_splat",
                                                                                                                            "label": "**kwargs",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "kwargs",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "expression_statement",
                                                                                    "label": "logger.info(f\"{prefix} {action_name} completed successfully.\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "logger.info(f\"{prefix} {action_name} completed successfully.\")",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "logger.info",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "logger",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "info",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(f\"{prefix} {action_name} completed successfully.\")",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "f\"{prefix} {action_name} completed successfully.\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "f\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "interpolation",
                                                                                                                    "label": "{prefix}",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "prefix",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": " ",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "interpolation",
                                                                                                                    "label": "{action_name}",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "action_name",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": " completed successfully.",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "return_statement",
                                                                                    "label": "return result",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "result",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "except_clause",
                                                                            "label": "except Exception as e:\n                logger.error(f\"{prefix} {action_name} failed after retries: {e}\")\n                raise",
                                                                            "children": [
                                                                                {
                                                                                    "type": "as_pattern",
                                                                                    "label": "Exception as e",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "Exception",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "as_pattern_target",
                                                                                            "label": "e",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "e",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "block",
                                                                                    "label": "logger.error(f\"{prefix} {action_name} failed after retries: {e}\")\n                raise",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "expression_statement",
                                                                                            "label": "logger.error(f\"{prefix} {action_name} failed after retries: {e}\")",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "logger.error(f\"{prefix} {action_name} failed after retries: {e}\")",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "logger.error",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "logger",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "error",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(f\"{prefix} {action_name} failed after retries: {e}\")",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string",
                                                                                                                    "label": "f\"{prefix} {action_name} failed after retries: {e}\"",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "string_start",
                                                                                                                            "label": "f\"",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "interpolation",
                                                                                                                            "label": "{prefix}",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "prefix",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": " ",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "interpolation",
                                                                                                                            "label": "{action_name}",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "action_name",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": " failed after retries: ",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "interpolation",
                                                                                                                            "label": "{e}",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "e",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_end",
                                                                                                                            "label": "\"",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "raise_statement",
                                                                                            "label": "raise",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "label": "return async_wrapper if is_coroutine else sync_wrapper",
                                            "children": [
                                                {
                                                    "type": "conditional_expression",
                                                    "label": "async_wrapper if is_coroutine else sync_wrapper",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "async_wrapper",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "is_coroutine",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "sync_wrapper",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return decorator",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "decorator",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}