{
    "type": "module",
    "label": "import asyncio\n\nimport pytest\n\nfrom backend.util.retry import conn_retry\n\n\ndef test_conn_retry_sync_function():\n    retry_count = 0\n\n    @conn_retry(\"Test\", \"Test function\", max_retry=2, max_wait=0.1, min_wait=0.1)\n    def test_function():\n        nonlocal retry_count\n        retry_count -= 1\n        if retry_count > 0:\n            raise ValueError(\"Test error\")\n        return \"Success\"\n\n    retry_count = 2\n    res = test_function()\n    assert res == \"Success\"\n\n    retry_count = 100\n    with pytest.raises(ValueError) as e:\n        test_function()\n        assert str(e.value) == \"Test error\"\n\n\n@pytest.mark.asyncio\nasync def test_conn_retry_async_function():\n    retry_count = 0\n\n    @conn_retry(\"Test\", \"Test function\", max_retry=2, max_wait=0.1, min_wait=0.1)\n    async def test_function():\n        nonlocal retry_count\n        await asyncio.sleep(1)\n        retry_count -= 1\n        if retry_count > 0:\n            raise ValueError(\"Test error\")\n        return \"Success\"\n\n    retry_count = 2\n    res = await test_function()\n    assert res == \"Success\"\n\n    retry_count = 100\n    with pytest.raises(ValueError) as e:\n        await test_function()\n        assert str(e.value) == \"Test error\"\n",
    "children": [
        {
            "type": "import_statement",
            "label": "import asyncio",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "asyncio",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "asyncio",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import pytest",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "pytest",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "pytest",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.util.retry import conn_retry",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.util.retry",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "util",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "retry",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "conn_retry",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "conn_retry",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def test_conn_retry_sync_function():\n    retry_count = 0\n\n    @conn_retry(\"Test\", \"Test function\", max_retry=2, max_wait=0.1, min_wait=0.1)\n    def test_function():\n        nonlocal retry_count\n        retry_count -= 1\n        if retry_count > 0:\n            raise ValueError(\"Test error\")\n        return \"Success\"\n\n    retry_count = 2\n    res = test_function()\n    assert res == \"Success\"\n\n    retry_count = 100\n    with pytest.raises(ValueError) as e:\n        test_function()\n        assert str(e.value) == \"Test error\"",
            "children": [
                {
                    "type": "identifier",
                    "label": "test_conn_retry_sync_function",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "()",
                    "children": []
                },
                {
                    "type": "block",
                    "label": "retry_count = 0\n\n    @conn_retry(\"Test\", \"Test function\", max_retry=2, max_wait=0.1, min_wait=0.1)\n    def test_function():\n        nonlocal retry_count\n        retry_count -= 1\n        if retry_count > 0:\n            raise ValueError(\"Test error\")\n        return \"Success\"\n\n    retry_count = 2\n    res = test_function()\n    assert res == \"Success\"\n\n    retry_count = 100\n    with pytest.raises(ValueError) as e:\n        test_function()\n        assert str(e.value) == \"Test error\"",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "retry_count = 0",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "retry_count = 0",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "retry_count",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "decorated_definition",
                            "label": "@conn_retry(\"Test\", \"Test function\", max_retry=2, max_wait=0.1, min_wait=0.1)\n    def test_function():\n        nonlocal retry_count\n        retry_count -= 1\n        if retry_count > 0:\n            raise ValueError(\"Test error\")\n        return \"Success\"",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@conn_retry(\"Test\", \"Test function\", max_retry=2, max_wait=0.1, min_wait=0.1)",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "conn_retry(\"Test\", \"Test function\", max_retry=2, max_wait=0.1, min_wait=0.1)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "conn_retry",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(\"Test\", \"Test function\", max_retry=2, max_wait=0.1, min_wait=0.1)",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"Test\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "Test",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "label": "\"Test function\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "Test function",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "max_retry=2",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "max_retry",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "label": "2",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "max_wait=0.1",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "max_wait",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "float",
                                                                    "label": "0.1",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "min_wait=0.1",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "min_wait",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "float",
                                                                    "label": "0.1",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "function_definition",
                                    "label": "def test_function():\n        nonlocal retry_count\n        retry_count -= 1\n        if retry_count > 0:\n            raise ValueError(\"Test error\")\n        return \"Success\"",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "test_function",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "()",
                                            "children": []
                                        },
                                        {
                                            "type": "block",
                                            "label": "nonlocal retry_count\n        retry_count -= 1\n        if retry_count > 0:\n            raise ValueError(\"Test error\")\n        return \"Success\"",
                                            "children": [
                                                {
                                                    "type": "nonlocal_statement",
                                                    "label": "nonlocal retry_count",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "retry_count",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "retry_count -= 1",
                                                    "children": [
                                                        {
                                                            "type": "augmented_assignment",
                                                            "label": "retry_count -= 1",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "retry_count",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "label": "1",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "if_statement",
                                                    "label": "if retry_count > 0:\n            raise ValueError(\"Test error\")",
                                                    "children": [
                                                        {
                                                            "type": "comparison_operator",
                                                            "label": "retry_count > 0",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "retry_count",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "label": "0",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "raise ValueError(\"Test error\")",
                                                            "children": [
                                                                {
                                                                    "type": "raise_statement",
                                                                    "label": "raise ValueError(\"Test error\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "ValueError(\"Test error\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "ValueError",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(\"Test error\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"Test error\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "Test error",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "return_statement",
                                                    "label": "return \"Success\"",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"Success\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "Success",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "retry_count = 2",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "retry_count = 2",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "retry_count",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "2",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "res = test_function()",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "res = test_function()",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "res",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "test_function()",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "test_function",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "()",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assert_statement",
                            "label": "assert res == \"Success\"",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "label": "res == \"Success\"",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "res",
                                            "children": []
                                        },
                                        {
                                            "type": "string",
                                            "label": "\"Success\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "Success",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "retry_count = 100",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "retry_count = 100",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "retry_count",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "100",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "with_statement",
                            "label": "with pytest.raises(ValueError) as e:\n        test_function()\n        assert str(e.value) == \"Test error\"",
                            "children": [
                                {
                                    "type": "with_clause",
                                    "label": "pytest.raises(ValueError) as e",
                                    "children": [
                                        {
                                            "type": "with_item",
                                            "label": "pytest.raises(ValueError) as e",
                                            "children": [
                                                {
                                                    "type": "as_pattern",
                                                    "label": "pytest.raises(ValueError) as e",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "pytest.raises(ValueError)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "pytest.raises",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "pytest",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "raises",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(ValueError)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "ValueError",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "as_pattern_target",
                                                            "label": "e",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "e",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "test_function()\n        assert str(e.value) == \"Test error\"",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "test_function()",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "test_function()",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "test_function",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "()",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assert_statement",
                                            "label": "assert str(e.value) == \"Test error\"",
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "label": "str(e.value) == \"Test error\"",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "str(e.value)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(e.value)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "e.value",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "e",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "value",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "label": "\"Test error\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "Test error",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@pytest.mark.asyncio\nasync def test_conn_retry_async_function():\n    retry_count = 0\n\n    @conn_retry(\"Test\", \"Test function\", max_retry=2, max_wait=0.1, min_wait=0.1)\n    async def test_function():\n        nonlocal retry_count\n        await asyncio.sleep(1)\n        retry_count -= 1\n        if retry_count > 0:\n            raise ValueError(\"Test error\")\n        return \"Success\"\n\n    retry_count = 2\n    res = await test_function()\n    assert res == \"Success\"\n\n    retry_count = 100\n    with pytest.raises(ValueError) as e:\n        await test_function()\n        assert str(e.value) == \"Test error\"",
            "children": [
                {
                    "type": "decorator",
                    "label": "@pytest.mark.asyncio",
                    "children": [
                        {
                            "type": "attribute",
                            "label": "pytest.mark.asyncio",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "pytest.mark",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "pytest",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "mark",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "identifier",
                                    "label": "asyncio",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "async def test_conn_retry_async_function():\n    retry_count = 0\n\n    @conn_retry(\"Test\", \"Test function\", max_retry=2, max_wait=0.1, min_wait=0.1)\n    async def test_function():\n        nonlocal retry_count\n        await asyncio.sleep(1)\n        retry_count -= 1\n        if retry_count > 0:\n            raise ValueError(\"Test error\")\n        return \"Success\"\n\n    retry_count = 2\n    res = await test_function()\n    assert res == \"Success\"\n\n    retry_count = 100\n    with pytest.raises(ValueError) as e:\n        await test_function()\n        assert str(e.value) == \"Test error\"",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "test_conn_retry_async_function",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "()",
                            "children": []
                        },
                        {
                            "type": "block",
                            "label": "retry_count = 0\n\n    @conn_retry(\"Test\", \"Test function\", max_retry=2, max_wait=0.1, min_wait=0.1)\n    async def test_function():\n        nonlocal retry_count\n        await asyncio.sleep(1)\n        retry_count -= 1\n        if retry_count > 0:\n            raise ValueError(\"Test error\")\n        return \"Success\"\n\n    retry_count = 2\n    res = await test_function()\n    assert res == \"Success\"\n\n    retry_count = 100\n    with pytest.raises(ValueError) as e:\n        await test_function()\n        assert str(e.value) == \"Test error\"",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "retry_count = 0",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "retry_count = 0",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "retry_count",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "label": "0",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "decorated_definition",
                                    "label": "@conn_retry(\"Test\", \"Test function\", max_retry=2, max_wait=0.1, min_wait=0.1)\n    async def test_function():\n        nonlocal retry_count\n        await asyncio.sleep(1)\n        retry_count -= 1\n        if retry_count > 0:\n            raise ValueError(\"Test error\")\n        return \"Success\"",
                                    "children": [
                                        {
                                            "type": "decorator",
                                            "label": "@conn_retry(\"Test\", \"Test function\", max_retry=2, max_wait=0.1, min_wait=0.1)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "conn_retry(\"Test\", \"Test function\", max_retry=2, max_wait=0.1, min_wait=0.1)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "conn_retry",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\"Test\", \"Test function\", max_retry=2, max_wait=0.1, min_wait=0.1)",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"Test\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "Test",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"Test function\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "Test function",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "max_retry=2",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "max_retry",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "2",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "max_wait=0.1",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "max_wait",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "float",
                                                                            "label": "0.1",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "min_wait=0.1",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "min_wait",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "float",
                                                                            "label": "0.1",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "function_definition",
                                            "label": "async def test_function():\n        nonlocal retry_count\n        await asyncio.sleep(1)\n        retry_count -= 1\n        if retry_count > 0:\n            raise ValueError(\"Test error\")\n        return \"Success\"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "test_function",
                                                    "children": []
                                                },
                                                {
                                                    "type": "parameters",
                                                    "label": "()",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "nonlocal retry_count\n        await asyncio.sleep(1)\n        retry_count -= 1\n        if retry_count > 0:\n            raise ValueError(\"Test error\")\n        return \"Success\"",
                                                    "children": [
                                                        {
                                                            "type": "nonlocal_statement",
                                                            "label": "nonlocal retry_count",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "retry_count",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "await asyncio.sleep(1)",
                                                            "children": [
                                                                {
                                                                    "type": "await",
                                                                    "label": "await asyncio.sleep(1)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "asyncio.sleep(1)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "asyncio.sleep",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "asyncio",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "sleep",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(1)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "label": "1",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "retry_count -= 1",
                                                            "children": [
                                                                {
                                                                    "type": "augmented_assignment",
                                                                    "label": "retry_count -= 1",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "retry_count",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "1",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "if_statement",
                                                            "label": "if retry_count > 0:\n            raise ValueError(\"Test error\")",
                                                            "children": [
                                                                {
                                                                    "type": "comparison_operator",
                                                                    "label": "retry_count > 0",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "retry_count",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "0",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": "raise ValueError(\"Test error\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "raise_statement",
                                                                            "label": "raise ValueError(\"Test error\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "ValueError(\"Test error\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "ValueError",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(\"Test error\")",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"Test error\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "Test error",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "return_statement",
                                                            "label": "return \"Success\"",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"Success\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "Success",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "retry_count = 2",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "retry_count = 2",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "retry_count",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "label": "2",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "res = await test_function()",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "res = await test_function()",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "res",
                                                    "children": []
                                                },
                                                {
                                                    "type": "await",
                                                    "label": "await test_function()",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "test_function()",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "test_function",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "assert_statement",
                                    "label": "assert res == \"Success\"",
                                    "children": [
                                        {
                                            "type": "comparison_operator",
                                            "label": "res == \"Success\"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "res",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"Success\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Success",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "retry_count = 100",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "retry_count = 100",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "retry_count",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "label": "100",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "with_statement",
                                    "label": "with pytest.raises(ValueError) as e:\n        await test_function()\n        assert str(e.value) == \"Test error\"",
                                    "children": [
                                        {
                                            "type": "with_clause",
                                            "label": "pytest.raises(ValueError) as e",
                                            "children": [
                                                {
                                                    "type": "with_item",
                                                    "label": "pytest.raises(ValueError) as e",
                                                    "children": [
                                                        {
                                                            "type": "as_pattern",
                                                            "label": "pytest.raises(ValueError) as e",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "pytest.raises(ValueError)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "pytest.raises",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "pytest",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "raises",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(ValueError)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "ValueError",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "as_pattern_target",
                                                                    "label": "e",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "e",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "await test_function()\n        assert str(e.value) == \"Test error\"",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "await test_function()",
                                                    "children": [
                                                        {
                                                            "type": "await",
                                                            "label": "await test_function()",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "test_function()",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "test_function",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "assert_statement",
                                                    "label": "assert str(e.value) == \"Test error\"",
                                                    "children": [
                                                        {
                                                            "type": "comparison_operator",
                                                            "label": "str(e.value) == \"Test error\"",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "str(e.value)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(e.value)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "e.value",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "e",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "value",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"Test error\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "Test error",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}