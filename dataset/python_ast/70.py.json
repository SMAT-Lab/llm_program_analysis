{
    "type": "module",
    "label": "import logging\nfrom typing import TYPE_CHECKING, Annotated, Literal\n\nfrom fastapi import APIRouter, Body, Depends, HTTPException, Path, Query, Request\nfrom pydantic import BaseModel, Field, SecretStr\n\nfrom backend.data.graph import set_node_webhook\nfrom backend.data.integrations import (\n    WebhookEvent,\n    get_all_webhooks_by_creds,\n    get_webhook,\n    publish_webhook_event,\n    wait_for_webhook_event,\n)\nfrom backend.data.model import (\n    APIKeyCredentials,\n    Credentials,\n    CredentialsType,\n    OAuth2Credentials,\n)\nfrom backend.executor.manager import ExecutionManager\nfrom backend.integrations.creds_manager import IntegrationCredentialsManager\nfrom backend.integrations.oauth import HANDLERS_BY_NAME\nfrom backend.integrations.providers import ProviderName\nfrom backend.integrations.webhooks import WEBHOOK_MANAGERS_BY_NAME\nfrom backend.util.exceptions import NeedConfirmation\nfrom backend.util.service import get_service_client\nfrom backend.util.settings import Settings\n\nif TYPE_CHECKING:\n    from backend.integrations.oauth import BaseOAuthHandler\n\nfrom ..utils import get_user_id\n\nlogger = logging.getLogger(__name__)\nsettings = Settings()\nrouter = APIRouter()\n\ncreds_manager = IntegrationCredentialsManager()\n\n\nclass LoginResponse(BaseModel):\n    login_url: str\n    state_token: str\n\n\n@router.get(\"/{provider}/login\")\ndef login(\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to initiate an OAuth flow for\")\n    ],\n    user_id: Annotated[str, Depends(get_user_id)],\n    request: Request,\n    scopes: Annotated[\n        str, Query(title=\"Comma-separated list of authorization scopes\")\n    ] = \"\",\n) -> LoginResponse:\n    handler = _get_provider_oauth_handler(request, provider)\n\n    requested_scopes = scopes.split(\",\") if scopes else []\n\n    # Generate and store a secure random state token along with the scopes\n    state_token = creds_manager.store.store_state_token(\n        user_id, provider, requested_scopes\n    )\n\n    login_url = handler.get_login_url(requested_scopes, state_token)\n\n    return LoginResponse(login_url=login_url, state_token=state_token)\n\n\nclass CredentialsMetaResponse(BaseModel):\n    id: str\n    provider: str\n    type: CredentialsType\n    title: str | None\n    scopes: list[str] | None\n    username: str | None\n\n\n@router.post(\"/{provider}/callback\")\ndef callback(\n    provider: Annotated[\n        ProviderName, Path(title=\"The target provider for this OAuth exchange\")\n    ],\n    code: Annotated[str, Body(title=\"Authorization code acquired by user login\")],\n    state_token: Annotated[str, Body(title=\"Anti-CSRF nonce\")],\n    user_id: Annotated[str, Depends(get_user_id)],\n    request: Request,\n) -> CredentialsMetaResponse:\n    logger.debug(f\"Received OAuth callback for provider: {provider}\")\n    handler = _get_provider_oauth_handler(request, provider)\n\n    # Verify the state token\n    if not creds_manager.store.verify_state_token(user_id, state_token, provider):\n        logger.warning(f\"Invalid or expired state token for user {user_id}\")\n        raise HTTPException(status_code=400, detail=\"Invalid or expired state token\")\n\n    try:\n        scopes = creds_manager.store.get_any_valid_scopes_from_state_token(\n            user_id, state_token, provider\n        )\n        logger.debug(f\"Retrieved scopes from state token: {scopes}\")\n\n        scopes = handler.handle_default_scopes(scopes)\n\n        credentials = handler.exchange_code_for_tokens(code, scopes)\n        logger.debug(f\"Received credentials with final scopes: {credentials.scopes}\")\n\n        # Check if the granted scopes are sufficient for the requested scopes\n        if not set(scopes).issubset(set(credentials.scopes)):\n            # For now, we'll just log the warning and continue\n            logger.warning(\n                f\"Granted scopes {credentials.scopes} for provider {provider.value} \"\n                f\"do not include all requested scopes {scopes}\"\n            )\n\n    except Exception as e:\n        logger.error(f\"Code->Token exchange failed for provider {provider.value}: {e}\")\n        raise HTTPException(\n            status_code=400, detail=f\"Failed to exchange code for tokens: {str(e)}\"\n        )\n\n    # TODO: Allow specifying `title` to set on `credentials`\n    creds_manager.create(user_id, credentials)\n\n    logger.debug(\n        f\"Successfully processed OAuth callback for user {user_id} \"\n        f\"and provider {provider.value}\"\n    )\n    return CredentialsMetaResponse(\n        id=credentials.id,\n        provider=credentials.provider,\n        type=credentials.type,\n        title=credentials.title,\n        scopes=credentials.scopes,\n        username=credentials.username,\n    )\n\n\n@router.get(\"/credentials\")\ndef list_credentials(\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> list[CredentialsMetaResponse]:\n    credentials = creds_manager.store.get_all_creds(user_id)\n    return [\n        CredentialsMetaResponse(\n            id=cred.id,\n            provider=cred.provider,\n            type=cred.type,\n            title=cred.title,\n            scopes=cred.scopes if isinstance(cred, OAuth2Credentials) else None,\n            username=cred.username if isinstance(cred, OAuth2Credentials) else None,\n        )\n        for cred in credentials\n    ]\n\n\n@router.get(\"/{provider}/credentials\")\ndef list_credentials_by_provider(\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to list credentials for\")\n    ],\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> list[CredentialsMetaResponse]:\n    credentials = creds_manager.store.get_creds_by_provider(user_id, provider)\n    return [\n        CredentialsMetaResponse(\n            id=cred.id,\n            provider=cred.provider,\n            type=cred.type,\n            title=cred.title,\n            scopes=cred.scopes if isinstance(cred, OAuth2Credentials) else None,\n            username=cred.username if isinstance(cred, OAuth2Credentials) else None,\n        )\n        for cred in credentials\n    ]\n\n\n@router.get(\"/{provider}/credentials/{cred_id}\")\ndef get_credential(\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to retrieve credentials for\")\n    ],\n    cred_id: Annotated[str, Path(title=\"The ID of the credentials to retrieve\")],\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> Credentials:\n    credential = creds_manager.get(user_id, cred_id)\n    if not credential:\n        raise HTTPException(status_code=404, detail=\"Credentials not found\")\n    if credential.provider != provider:\n        raise HTTPException(\n            status_code=404, detail=\"Credentials do not match the specified provider\"\n        )\n    return credential\n\n\n@router.post(\"/{provider}/credentials\", status_code=201)\ndef create_api_key_credentials(\n    user_id: Annotated[str, Depends(get_user_id)],\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to create credentials for\")\n    ],\n    api_key: Annotated[str, Body(title=\"The API key to store\")],\n    title: Annotated[str, Body(title=\"Optional title for the credentials\")],\n    expires_at: Annotated[\n        int | None, Body(title=\"Unix timestamp when the key expires\")\n    ] = None,\n) -> APIKeyCredentials:\n    new_credentials = APIKeyCredentials(\n        provider=provider,\n        api_key=SecretStr(api_key),\n        title=title,\n        expires_at=expires_at,\n    )\n\n    try:\n        creds_manager.create(user_id, new_credentials)\n    except Exception as e:\n        raise HTTPException(\n            status_code=500, detail=f\"Failed to store credentials: {str(e)}\"\n        )\n    return new_credentials\n\n\nclass CredentialsDeletionResponse(BaseModel):\n    deleted: Literal[True] = True\n    revoked: bool | None = Field(\n        description=\"Indicates whether the credentials were also revoked by their \"\n        \"provider. `None`/`null` if not applicable, e.g. when deleting \"\n        \"non-revocable credentials such as API keys.\"\n    )\n\n\nclass CredentialsDeletionNeedsConfirmationResponse(BaseModel):\n    deleted: Literal[False] = False\n    need_confirmation: Literal[True] = True\n    message: str\n\n\n@router.delete(\"/{provider}/credentials/{cred_id}\")\nasync def delete_credentials(\n    request: Request,\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to delete credentials for\")\n    ],\n    cred_id: Annotated[str, Path(title=\"The ID of the credentials to delete\")],\n    user_id: Annotated[str, Depends(get_user_id)],\n    force: Annotated[\n        bool, Query(title=\"Whether to proceed if any linked webhooks are still in use\")\n    ] = False,\n) -> CredentialsDeletionResponse | CredentialsDeletionNeedsConfirmationResponse:\n    creds = creds_manager.store.get_creds_by_id(user_id, cred_id)\n    if not creds:\n        raise HTTPException(status_code=404, detail=\"Credentials not found\")\n    if creds.provider != provider:\n        raise HTTPException(\n            status_code=404, detail=\"Credentials do not match the specified provider\"\n        )\n\n    try:\n        await remove_all_webhooks_for_credentials(creds, force)\n    except NeedConfirmation as e:\n        return CredentialsDeletionNeedsConfirmationResponse(message=str(e))\n\n    creds_manager.delete(user_id, cred_id)\n\n    tokens_revoked = None\n    if isinstance(creds, OAuth2Credentials):\n        handler = _get_provider_oauth_handler(request, provider)\n        tokens_revoked = handler.revoke_tokens(creds)\n\n    return CredentialsDeletionResponse(revoked=tokens_revoked)\n\n\n# ------------------------- WEBHOOK STUFF -------------------------- #\n\n\n# ⚠️ Note\n# No user auth check because this endpoint is for webhook ingress and relies on\n# validation by the provider-specific `WebhooksManager`.\n@router.post(\"/{provider}/webhooks/{webhook_id}/ingress\")\nasync def webhook_ingress_generic(\n    request: Request,\n    provider: Annotated[\n        ProviderName, Path(title=\"Provider where the webhook was registered\")\n    ],\n    webhook_id: Annotated[str, Path(title=\"Our ID for the webhook\")],\n):\n    logger.debug(f\"Received {provider.value} webhook ingress for ID {webhook_id}\")\n    webhook_manager = WEBHOOK_MANAGERS_BY_NAME[provider]()\n    webhook = await get_webhook(webhook_id)\n    logger.debug(f\"Webhook #{webhook_id}: {webhook}\")\n    payload, event_type = await webhook_manager.validate_payload(webhook, request)\n    logger.debug(\n        f\"Validated {provider.value} {webhook.webhook_type} {event_type} event \"\n        f\"with payload {payload}\"\n    )\n\n    webhook_event = WebhookEvent(\n        provider=provider,\n        webhook_id=webhook_id,\n        event_type=event_type,\n        payload=payload,\n    )\n    await publish_webhook_event(webhook_event)\n    logger.debug(f\"Webhook event published: {webhook_event}\")\n\n    if not webhook.attached_nodes:\n        return\n\n    executor = get_service_client(ExecutionManager)\n    for node in webhook.attached_nodes:\n        logger.debug(f\"Webhook-attached node: {node}\")\n        if not node.is_triggered_by_event_type(event_type):\n            logger.debug(f\"Node #{node.id} doesn't trigger on event {event_type}\")\n            continue\n        logger.debug(f\"Executing graph #{node.graph_id} node #{node.id}\")\n        executor.add_execution(\n            node.graph_id,\n            data={f\"webhook_{webhook_id}_payload\": payload},\n            user_id=webhook.user_id,\n        )\n\n\n@router.post(\"/webhooks/{webhook_id}/ping\")\nasync def webhook_ping(\n    webhook_id: Annotated[str, Path(title=\"Our ID for the webhook\")],\n    user_id: Annotated[str, Depends(get_user_id)],  # require auth\n):\n    webhook = await get_webhook(webhook_id)\n    webhook_manager = WEBHOOK_MANAGERS_BY_NAME[webhook.provider]()\n\n    credentials = (\n        creds_manager.get(user_id, webhook.credentials_id)\n        if webhook.credentials_id\n        else None\n    )\n    try:\n        await webhook_manager.trigger_ping(webhook, credentials)\n    except NotImplementedError:\n        return False\n\n    if not await wait_for_webhook_event(webhook_id, event_type=\"ping\", timeout=10):\n        raise HTTPException(status_code=504, detail=\"Webhook ping timed out\")\n\n    return True\n\n\n# --------------------------- UTILITIES ---------------------------- #\n\n\nasync def remove_all_webhooks_for_credentials(\n    credentials: Credentials, force: bool = False\n) -> None:\n    \"\"\"\n    Remove and deregister all webhooks that were registered using the given credentials.\n\n    Params:\n        credentials: The credentials for which to remove the associated webhooks.\n        force: Whether to proceed if any of the webhooks are still in use.\n\n    Raises:\n        NeedConfirmation: If any of the webhooks are still in use and `force` is `False`\n    \"\"\"\n    webhooks = await get_all_webhooks_by_creds(credentials.id)\n    if credentials.provider not in WEBHOOK_MANAGERS_BY_NAME:\n        if webhooks:\n            logger.error(\n                f\"Credentials #{credentials.id} for provider {credentials.provider} \"\n                f\"are attached to {len(webhooks)} webhooks, \"\n                f\"but there is no available WebhooksHandler for {credentials.provider}\"\n            )\n        return\n    if any(w.attached_nodes for w in webhooks) and not force:\n        raise NeedConfirmation(\n            \"Some webhooks linked to these credentials are still in use by an agent\"\n        )\n    for webhook in webhooks:\n        # Unlink all nodes\n        for node in webhook.attached_nodes or []:\n            await set_node_webhook(node.id, None)\n\n        # Prune the webhook\n        webhook_manager = WEBHOOK_MANAGERS_BY_NAME[credentials.provider]()\n        success = await webhook_manager.prune_webhook_if_dangling(\n            webhook.id, credentials\n        )\n        if not success:\n            logger.warning(f\"Webhook #{webhook.id} failed to prune\")\n\n\ndef _get_provider_oauth_handler(\n    req: Request, provider_name: ProviderName\n) -> \"BaseOAuthHandler\":\n    if provider_name not in HANDLERS_BY_NAME:\n        raise HTTPException(\n            status_code=404,\n            detail=f\"Provider '{provider_name.value}' does not support OAuth\",\n        )\n\n    client_id = getattr(settings.secrets, f\"{provider_name.value}_client_id\")\n    client_secret = getattr(settings.secrets, f\"{provider_name.value}_client_secret\")\n    if not (client_id and client_secret):\n        raise HTTPException(\n            status_code=501,\n            detail=(\n                f\"Integration with provider '{provider_name.value}' is not configured\"\n            ),\n        )\n\n    handler_class = HANDLERS_BY_NAME[provider_name]\n    frontend_base_url = (\n        settings.config.frontend_base_url\n        or settings.config.platform_base_url\n        or str(req.base_url)\n    )\n    return handler_class(\n        client_id=client_id,\n        client_secret=client_secret,\n        redirect_uri=f\"{frontend_base_url}/auth/integrations/oauth_callback\",\n    )\n",
    "children": [
        {
            "type": "import_statement",
            "label": "import logging",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "logging",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "logging",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from typing import TYPE_CHECKING, Annotated, Literal",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "typing",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "typing",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "TYPE_CHECKING",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "TYPE_CHECKING",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Annotated",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Annotated",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Literal",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Literal",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from fastapi import APIRouter, Body, Depends, HTTPException, Path, Query, Request",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "fastapi",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "fastapi",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "APIRouter",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "APIRouter",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Body",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Body",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Depends",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Depends",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "HTTPException",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "HTTPException",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Path",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Path",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Query",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Query",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Request",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Request",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from pydantic import BaseModel, Field, SecretStr",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "pydantic",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "pydantic",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "BaseModel",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "BaseModel",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Field",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Field",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "SecretStr",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "SecretStr",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.data.graph import set_node_webhook",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.data.graph",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "data",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "graph",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "set_node_webhook",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "set_node_webhook",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.data.integrations import (\n    WebhookEvent,\n    get_all_webhooks_by_creds,\n    get_webhook,\n    publish_webhook_event,\n    wait_for_webhook_event,\n)",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.data.integrations",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "data",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "integrations",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "WebhookEvent",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "WebhookEvent",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "get_all_webhooks_by_creds",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "get_all_webhooks_by_creds",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "get_webhook",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "get_webhook",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "publish_webhook_event",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "publish_webhook_event",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "wait_for_webhook_event",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "wait_for_webhook_event",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.data.model import (\n    APIKeyCredentials,\n    Credentials,\n    CredentialsType,\n    OAuth2Credentials,\n)",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.data.model",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "data",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "model",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "APIKeyCredentials",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "APIKeyCredentials",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Credentials",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Credentials",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "CredentialsType",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "CredentialsType",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "OAuth2Credentials",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "OAuth2Credentials",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.executor.manager import ExecutionManager",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.executor.manager",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "executor",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "manager",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "ExecutionManager",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "ExecutionManager",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.integrations.creds_manager import IntegrationCredentialsManager",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.integrations.creds_manager",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "integrations",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "creds_manager",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "IntegrationCredentialsManager",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "IntegrationCredentialsManager",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.integrations.oauth import HANDLERS_BY_NAME",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.integrations.oauth",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "integrations",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "oauth",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "HANDLERS_BY_NAME",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "HANDLERS_BY_NAME",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.integrations.providers import ProviderName",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.integrations.providers",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "integrations",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "providers",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "ProviderName",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "ProviderName",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.integrations.webhooks import WEBHOOK_MANAGERS_BY_NAME",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.integrations.webhooks",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "integrations",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "webhooks",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "WEBHOOK_MANAGERS_BY_NAME",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "WEBHOOK_MANAGERS_BY_NAME",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.util.exceptions import NeedConfirmation",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.util.exceptions",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "util",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "exceptions",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "NeedConfirmation",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "NeedConfirmation",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.util.service import get_service_client",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.util.service",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "util",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "service",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "get_service_client",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "get_service_client",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.util.settings import Settings",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.util.settings",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "util",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "settings",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Settings",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Settings",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "if_statement",
            "label": "if TYPE_CHECKING:\n    from backend.integrations.oauth import BaseOAuthHandler",
            "children": [
                {
                    "type": "identifier",
                    "label": "TYPE_CHECKING",
                    "children": []
                },
                {
                    "type": "block",
                    "label": "from backend.integrations.oauth import BaseOAuthHandler",
                    "children": [
                        {
                            "type": "import_from_statement",
                            "label": "from backend.integrations.oauth import BaseOAuthHandler",
                            "children": [
                                {
                                    "type": "dotted_name",
                                    "label": "backend.integrations.oauth",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "backend",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "integrations",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "oauth",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "dotted_name",
                                    "label": "BaseOAuthHandler",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "BaseOAuthHandler",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from ..utils import get_user_id",
            "children": [
                {
                    "type": "relative_import",
                    "label": "..utils",
                    "children": [
                        {
                            "type": "import_prefix",
                            "label": "..",
                            "children": []
                        },
                        {
                            "type": "dotted_name",
                            "label": "utils",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "utils",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "get_user_id",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "get_user_id",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "logger = logging.getLogger(__name__)",
            "children": [
                {
                    "type": "assignment",
                    "label": "logger = logging.getLogger(__name__)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "logger",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "logging.getLogger(__name__)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "logging.getLogger",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "logging",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "getLogger",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(__name__)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "__name__",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "settings = Settings()",
            "children": [
                {
                    "type": "assignment",
                    "label": "settings = Settings()",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "settings",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "Settings()",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "Settings",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "label": "()",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "router = APIRouter()",
            "children": [
                {
                    "type": "assignment",
                    "label": "router = APIRouter()",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "router",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "APIRouter()",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "APIRouter",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "label": "()",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "creds_manager = IntegrationCredentialsManager()",
            "children": [
                {
                    "type": "assignment",
                    "label": "creds_manager = IntegrationCredentialsManager()",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "creds_manager",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "IntegrationCredentialsManager()",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "IntegrationCredentialsManager",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "label": "()",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "label": "class LoginResponse(BaseModel):\n    login_url: str\n    state_token: str",
            "children": [
                {
                    "type": "identifier",
                    "label": "LoginResponse",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "(BaseModel)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "BaseModel",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "login_url: str\n    state_token: str",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "login_url: str",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "login_url: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "login_url",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "state_token: str",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "state_token: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "state_token",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@router.get(\"/{provider}/login\")\ndef login(\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to initiate an OAuth flow for\")\n    ],\n    user_id: Annotated[str, Depends(get_user_id)],\n    request: Request,\n    scopes: Annotated[\n        str, Query(title=\"Comma-separated list of authorization scopes\")\n    ] = \"\",\n) -> LoginResponse:\n    handler = _get_provider_oauth_handler(request, provider)\n\n    requested_scopes = scopes.split(\",\") if scopes else []\n\n    # Generate and store a secure random state token along with the scopes\n    state_token = creds_manager.store.store_state_token(\n        user_id, provider, requested_scopes\n    )\n\n    login_url = handler.get_login_url(requested_scopes, state_token)\n\n    return LoginResponse(login_url=login_url, state_token=state_token)",
            "children": [
                {
                    "type": "decorator",
                    "label": "@router.get(\"/{provider}/login\")",
                    "children": [
                        {
                            "type": "call",
                            "label": "router.get(\"/{provider}/login\")",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "router.get",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "get",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\"/{provider}/login\")",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"/{provider}/login\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "/{provider}/login",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "def login(\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to initiate an OAuth flow for\")\n    ],\n    user_id: Annotated[str, Depends(get_user_id)],\n    request: Request,\n    scopes: Annotated[\n        str, Query(title=\"Comma-separated list of authorization scopes\")\n    ] = \"\",\n) -> LoginResponse:\n    handler = _get_provider_oauth_handler(request, provider)\n\n    requested_scopes = scopes.split(\",\") if scopes else []\n\n    # Generate and store a secure random state token along with the scopes\n    state_token = creds_manager.store.store_state_token(\n        user_id, provider, requested_scopes\n    )\n\n    login_url = handler.get_login_url(requested_scopes, state_token)\n\n    return LoginResponse(login_url=login_url, state_token=state_token)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "login",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to initiate an OAuth flow for\")\n    ],\n    user_id: Annotated[str, Depends(get_user_id)],\n    request: Request,\n    scopes: Annotated[\n        str, Query(title=\"Comma-separated list of authorization scopes\")\n    ] = \"\",\n)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "provider: Annotated[\n        ProviderName, Path(title=\"The provider to initiate an OAuth flow for\")\n    ]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "provider",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[\n        ProviderName, Path(title=\"The provider to initiate an OAuth flow for\")\n    ]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[\n        ProviderName, Path(title=\"The provider to initiate an OAuth flow for\")\n    ]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[\n        ProviderName, Path(title=\"The provider to initiate an OAuth flow for\")\n    ]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "ProviderName",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "ProviderName",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Path(title=\"The provider to initiate an OAuth flow for\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Path(title=\"The provider to initiate an OAuth flow for\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Path",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(title=\"The provider to initiate an OAuth flow for\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "title=\"The provider to initiate an OAuth flow for\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "title",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"The provider to initiate an OAuth flow for\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "The provider to initiate an OAuth flow for",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "user_id: Annotated[str, Depends(get_user_id)]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Depends(get_user_id)]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Depends(get_user_id)]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Depends(get_user_id)]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Depends(get_user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Depends(get_user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Depends",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(get_user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "request: Request",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "request",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Request",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "Request",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_default_parameter",
                                    "label": "scopes: Annotated[\n        str, Query(title=\"Comma-separated list of authorization scopes\")\n    ] = \"\"",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "scopes",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[\n        str, Query(title=\"Comma-separated list of authorization scopes\")\n    ]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[\n        str, Query(title=\"Comma-separated list of authorization scopes\")\n    ]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[\n        str, Query(title=\"Comma-separated list of authorization scopes\")\n    ]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Query(title=\"Comma-separated list of authorization scopes\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Query(title=\"Comma-separated list of authorization scopes\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Query",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(title=\"Comma-separated list of authorization scopes\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "title=\"Comma-separated list of authorization scopes\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "title",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"Comma-separated list of authorization scopes\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "Comma-separated list of authorization scopes",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "string",
                                            "label": "\"\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "label": "LoginResponse",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "LoginResponse",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "handler = _get_provider_oauth_handler(request, provider)\n\n    requested_scopes = scopes.split(\",\") if scopes else []\n\n    # Generate and store a secure random state token along with the scopes\n    state_token = creds_manager.store.store_state_token(\n        user_id, provider, requested_scopes\n    )\n\n    login_url = handler.get_login_url(requested_scopes, state_token)\n\n    return LoginResponse(login_url=login_url, state_token=state_token)",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "handler = _get_provider_oauth_handler(request, provider)",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "handler = _get_provider_oauth_handler(request, provider)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "handler",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "_get_provider_oauth_handler(request, provider)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "_get_provider_oauth_handler",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(request, provider)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "request",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "provider",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "requested_scopes = scopes.split(\",\") if scopes else []",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "requested_scopes = scopes.split(\",\") if scopes else []",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "requested_scopes",
                                                    "children": []
                                                },
                                                {
                                                    "type": "conditional_expression",
                                                    "label": "scopes.split(\",\") if scopes else []",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "scopes.split(\",\")",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "scopes.split",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "scopes",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "split",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\",\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\",\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": ",",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "scopes",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "list",
                                                            "label": "[]",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "comment",
                                    "label": "# Generate and store a secure random state token along with the scopes",
                                    "children": []
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "state_token = creds_manager.store.store_state_token(\n        user_id, provider, requested_scopes\n    )",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "state_token = creds_manager.store.store_state_token(\n        user_id, provider, requested_scopes\n    )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "state_token",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "creds_manager.store.store_state_token(\n        user_id, provider, requested_scopes\n    )",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "creds_manager.store.store_state_token",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "creds_manager.store",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "creds_manager",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "store",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "store_state_token",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n        user_id, provider, requested_scopes\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "user_id",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "provider",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "requested_scopes",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "login_url = handler.get_login_url(requested_scopes, state_token)",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "login_url = handler.get_login_url(requested_scopes, state_token)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "login_url",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "handler.get_login_url(requested_scopes, state_token)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "handler.get_login_url",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "handler",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "get_login_url",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(requested_scopes, state_token)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "requested_scopes",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "state_token",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "return_statement",
                                    "label": "return LoginResponse(login_url=login_url, state_token=state_token)",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "LoginResponse(login_url=login_url, state_token=state_token)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "LoginResponse",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(login_url=login_url, state_token=state_token)",
                                                    "children": [
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "login_url=login_url",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "login_url",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "login_url",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "state_token=state_token",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "state_token",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "state_token",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "label": "class CredentialsMetaResponse(BaseModel):\n    id: str\n    provider: str\n    type: CredentialsType\n    title: str | None\n    scopes: list[str] | None\n    username: str | None",
            "children": [
                {
                    "type": "identifier",
                    "label": "CredentialsMetaResponse",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "(BaseModel)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "BaseModel",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "id: str\n    provider: str\n    type: CredentialsType\n    title: str | None\n    scopes: list[str] | None\n    username: str | None",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "id: str",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "id: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "provider: str",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "provider: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "provider",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "type: CredentialsType",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "type: CredentialsType",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "type",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "CredentialsType",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "CredentialsType",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "title: str | None",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "title: str | None",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "title",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str | None",
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "label": "str | None",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "str",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "none",
                                                            "label": "None",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "scopes: list[str] | None",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "scopes: list[str] | None",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "scopes",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "list[str] | None",
                                            "children": [
                                                {
                                                    "type": "union_type",
                                                    "label": "list[str] | None",
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "list[str]",
                                                            "children": [
                                                                {
                                                                    "type": "generic_type",
                                                                    "label": "list[str]",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "list",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "type_parameter",
                                                                            "label": "[str]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "type",
                                                                                    "label": "str",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "str",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "None",
                                                            "children": [
                                                                {
                                                                    "type": "none",
                                                                    "label": "None",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "username: str | None",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "username: str | None",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "username",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str | None",
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "label": "str | None",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "str",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "none",
                                                            "label": "None",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@router.post(\"/{provider}/callback\")\ndef callback(\n    provider: Annotated[\n        ProviderName, Path(title=\"The target provider for this OAuth exchange\")\n    ],\n    code: Annotated[str, Body(title=\"Authorization code acquired by user login\")],\n    state_token: Annotated[str, Body(title=\"Anti-CSRF nonce\")],\n    user_id: Annotated[str, Depends(get_user_id)],\n    request: Request,\n) -> CredentialsMetaResponse:\n    logger.debug(f\"Received OAuth callback for provider: {provider}\")\n    handler = _get_provider_oauth_handler(request, provider)\n\n    # Verify the state token\n    if not creds_manager.store.verify_state_token(user_id, state_token, provider):\n        logger.warning(f\"Invalid or expired state token for user {user_id}\")\n        raise HTTPException(status_code=400, detail=\"Invalid or expired state token\")\n\n    try:\n        scopes = creds_manager.store.get_any_valid_scopes_from_state_token(\n            user_id, state_token, provider\n        )\n        logger.debug(f\"Retrieved scopes from state token: {scopes}\")\n\n        scopes = handler.handle_default_scopes(scopes)\n\n        credentials = handler.exchange_code_for_tokens(code, scopes)\n        logger.debug(f\"Received credentials with final scopes: {credentials.scopes}\")\n\n        # Check if the granted scopes are sufficient for the requested scopes\n        if not set(scopes).issubset(set(credentials.scopes)):\n            # For now, we'll just log the warning and continue\n            logger.warning(\n                f\"Granted scopes {credentials.scopes} for provider {provider.value} \"\n                f\"do not include all requested scopes {scopes}\"\n            )\n\n    except Exception as e:\n        logger.error(f\"Code->Token exchange failed for provider {provider.value}: {e}\")\n        raise HTTPException(\n            status_code=400, detail=f\"Failed to exchange code for tokens: {str(e)}\"\n        )\n\n    # TODO: Allow specifying `title` to set on `credentials`\n    creds_manager.create(user_id, credentials)\n\n    logger.debug(\n        f\"Successfully processed OAuth callback for user {user_id} \"\n        f\"and provider {provider.value}\"\n    )\n    return CredentialsMetaResponse(\n        id=credentials.id,\n        provider=credentials.provider,\n        type=credentials.type,\n        title=credentials.title,\n        scopes=credentials.scopes,\n        username=credentials.username,\n    )",
            "children": [
                {
                    "type": "decorator",
                    "label": "@router.post(\"/{provider}/callback\")",
                    "children": [
                        {
                            "type": "call",
                            "label": "router.post(\"/{provider}/callback\")",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "router.post",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "post",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\"/{provider}/callback\")",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"/{provider}/callback\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "/{provider}/callback",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "def callback(\n    provider: Annotated[\n        ProviderName, Path(title=\"The target provider for this OAuth exchange\")\n    ],\n    code: Annotated[str, Body(title=\"Authorization code acquired by user login\")],\n    state_token: Annotated[str, Body(title=\"Anti-CSRF nonce\")],\n    user_id: Annotated[str, Depends(get_user_id)],\n    request: Request,\n) -> CredentialsMetaResponse:\n    logger.debug(f\"Received OAuth callback for provider: {provider}\")\n    handler = _get_provider_oauth_handler(request, provider)\n\n    # Verify the state token\n    if not creds_manager.store.verify_state_token(user_id, state_token, provider):\n        logger.warning(f\"Invalid or expired state token for user {user_id}\")\n        raise HTTPException(status_code=400, detail=\"Invalid or expired state token\")\n\n    try:\n        scopes = creds_manager.store.get_any_valid_scopes_from_state_token(\n            user_id, state_token, provider\n        )\n        logger.debug(f\"Retrieved scopes from state token: {scopes}\")\n\n        scopes = handler.handle_default_scopes(scopes)\n\n        credentials = handler.exchange_code_for_tokens(code, scopes)\n        logger.debug(f\"Received credentials with final scopes: {credentials.scopes}\")\n\n        # Check if the granted scopes are sufficient for the requested scopes\n        if not set(scopes).issubset(set(credentials.scopes)):\n            # For now, we'll just log the warning and continue\n            logger.warning(\n                f\"Granted scopes {credentials.scopes} for provider {provider.value} \"\n                f\"do not include all requested scopes {scopes}\"\n            )\n\n    except Exception as e:\n        logger.error(f\"Code->Token exchange failed for provider {provider.value}: {e}\")\n        raise HTTPException(\n            status_code=400, detail=f\"Failed to exchange code for tokens: {str(e)}\"\n        )\n\n    # TODO: Allow specifying `title` to set on `credentials`\n    creds_manager.create(user_id, credentials)\n\n    logger.debug(\n        f\"Successfully processed OAuth callback for user {user_id} \"\n        f\"and provider {provider.value}\"\n    )\n    return CredentialsMetaResponse(\n        id=credentials.id,\n        provider=credentials.provider,\n        type=credentials.type,\n        title=credentials.title,\n        scopes=credentials.scopes,\n        username=credentials.username,\n    )",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "callback",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(\n    provider: Annotated[\n        ProviderName, Path(title=\"The target provider for this OAuth exchange\")\n    ],\n    code: Annotated[str, Body(title=\"Authorization code acquired by user login\")],\n    state_token: Annotated[str, Body(title=\"Anti-CSRF nonce\")],\n    user_id: Annotated[str, Depends(get_user_id)],\n    request: Request,\n)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "provider: Annotated[\n        ProviderName, Path(title=\"The target provider for this OAuth exchange\")\n    ]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "provider",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[\n        ProviderName, Path(title=\"The target provider for this OAuth exchange\")\n    ]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[\n        ProviderName, Path(title=\"The target provider for this OAuth exchange\")\n    ]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[\n        ProviderName, Path(title=\"The target provider for this OAuth exchange\")\n    ]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "ProviderName",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "ProviderName",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Path(title=\"The target provider for this OAuth exchange\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Path(title=\"The target provider for this OAuth exchange\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Path",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(title=\"The target provider for this OAuth exchange\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "title=\"The target provider for this OAuth exchange\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "title",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"The target provider for this OAuth exchange\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "The target provider for this OAuth exchange",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "code: Annotated[str, Body(title=\"Authorization code acquired by user login\")]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "code",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Body(title=\"Authorization code acquired by user login\")]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Body(title=\"Authorization code acquired by user login\")]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Body(title=\"Authorization code acquired by user login\")]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Body(title=\"Authorization code acquired by user login\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Body(title=\"Authorization code acquired by user login\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Body",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(title=\"Authorization code acquired by user login\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "title=\"Authorization code acquired by user login\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "title",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"Authorization code acquired by user login\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "Authorization code acquired by user login",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "state_token: Annotated[str, Body(title=\"Anti-CSRF nonce\")]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "state_token",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Body(title=\"Anti-CSRF nonce\")]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Body(title=\"Anti-CSRF nonce\")]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Body(title=\"Anti-CSRF nonce\")]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Body(title=\"Anti-CSRF nonce\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Body(title=\"Anti-CSRF nonce\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Body",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(title=\"Anti-CSRF nonce\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "title=\"Anti-CSRF nonce\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "title",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"Anti-CSRF nonce\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "Anti-CSRF nonce",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "user_id: Annotated[str, Depends(get_user_id)]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Depends(get_user_id)]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Depends(get_user_id)]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Depends(get_user_id)]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Depends(get_user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Depends(get_user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Depends",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(get_user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "request: Request",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "request",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Request",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "Request",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "label": "CredentialsMetaResponse",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "CredentialsMetaResponse",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "logger.debug(f\"Received OAuth callback for provider: {provider}\")\n    handler = _get_provider_oauth_handler(request, provider)\n\n    # Verify the state token\n    if not creds_manager.store.verify_state_token(user_id, state_token, provider):\n        logger.warning(f\"Invalid or expired state token for user {user_id}\")\n        raise HTTPException(status_code=400, detail=\"Invalid or expired state token\")\n\n    try:\n        scopes = creds_manager.store.get_any_valid_scopes_from_state_token(\n            user_id, state_token, provider\n        )\n        logger.debug(f\"Retrieved scopes from state token: {scopes}\")\n\n        scopes = handler.handle_default_scopes(scopes)\n\n        credentials = handler.exchange_code_for_tokens(code, scopes)\n        logger.debug(f\"Received credentials with final scopes: {credentials.scopes}\")\n\n        # Check if the granted scopes are sufficient for the requested scopes\n        if not set(scopes).issubset(set(credentials.scopes)):\n            # For now, we'll just log the warning and continue\n            logger.warning(\n                f\"Granted scopes {credentials.scopes} for provider {provider.value} \"\n                f\"do not include all requested scopes {scopes}\"\n            )\n\n    except Exception as e:\n        logger.error(f\"Code->Token exchange failed for provider {provider.value}: {e}\")\n        raise HTTPException(\n            status_code=400, detail=f\"Failed to exchange code for tokens: {str(e)}\"\n        )\n\n    # TODO: Allow specifying `title` to set on `credentials`\n    creds_manager.create(user_id, credentials)\n\n    logger.debug(\n        f\"Successfully processed OAuth callback for user {user_id} \"\n        f\"and provider {provider.value}\"\n    )\n    return CredentialsMetaResponse(\n        id=credentials.id,\n        provider=credentials.provider,\n        type=credentials.type,\n        title=credentials.title,\n        scopes=credentials.scopes,\n        username=credentials.username,\n    )",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "logger.debug(f\"Received OAuth callback for provider: {provider}\")",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "logger.debug(f\"Received OAuth callback for provider: {provider}\")",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "logger.debug",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "logger",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "debug",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(f\"Received OAuth callback for provider: {provider}\")",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "f\"Received OAuth callback for provider: {provider}\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "f\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "Received OAuth callback for provider: ",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "interpolation",
                                                                    "label": "{provider}",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "provider",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "handler = _get_provider_oauth_handler(request, provider)",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "handler = _get_provider_oauth_handler(request, provider)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "handler",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "_get_provider_oauth_handler(request, provider)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "_get_provider_oauth_handler",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(request, provider)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "request",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "provider",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "comment",
                                    "label": "# Verify the state token",
                                    "children": []
                                },
                                {
                                    "type": "if_statement",
                                    "label": "if not creds_manager.store.verify_state_token(user_id, state_token, provider):\n        logger.warning(f\"Invalid or expired state token for user {user_id}\")\n        raise HTTPException(status_code=400, detail=\"Invalid or expired state token\")",
                                    "children": [
                                        {
                                            "type": "not_operator",
                                            "label": "not creds_manager.store.verify_state_token(user_id, state_token, provider)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "creds_manager.store.verify_state_token(user_id, state_token, provider)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "creds_manager.store.verify_state_token",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "creds_manager.store",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "creds_manager",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "store",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "verify_state_token",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(user_id, state_token, provider)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "user_id",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "state_token",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "provider",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "logger.warning(f\"Invalid or expired state token for user {user_id}\")\n        raise HTTPException(status_code=400, detail=\"Invalid or expired state token\")",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "logger.warning(f\"Invalid or expired state token for user {user_id}\")",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "logger.warning(f\"Invalid or expired state token for user {user_id}\")",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "logger.warning",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "logger",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "warning",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(f\"Invalid or expired state token for user {user_id}\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "f\"Invalid or expired state token for user {user_id}\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "f\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "Invalid or expired state token for user ",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{user_id}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "raise_statement",
                                                    "label": "raise HTTPException(status_code=400, detail=\"Invalid or expired state token\")",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "HTTPException(status_code=400, detail=\"Invalid or expired state token\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "HTTPException",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(status_code=400, detail=\"Invalid or expired state token\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "status_code=400",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "status_code",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "400",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "detail=\"Invalid or expired state token\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "detail",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"Invalid or expired state token\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Invalid or expired state token",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "try_statement",
                                    "label": "try:\n        scopes = creds_manager.store.get_any_valid_scopes_from_state_token(\n            user_id, state_token, provider\n        )\n        logger.debug(f\"Retrieved scopes from state token: {scopes}\")\n\n        scopes = handler.handle_default_scopes(scopes)\n\n        credentials = handler.exchange_code_for_tokens(code, scopes)\n        logger.debug(f\"Received credentials with final scopes: {credentials.scopes}\")\n\n        # Check if the granted scopes are sufficient for the requested scopes\n        if not set(scopes).issubset(set(credentials.scopes)):\n            # For now, we'll just log the warning and continue\n            logger.warning(\n                f\"Granted scopes {credentials.scopes} for provider {provider.value} \"\n                f\"do not include all requested scopes {scopes}\"\n            )\n\n    except Exception as e:\n        logger.error(f\"Code->Token exchange failed for provider {provider.value}: {e}\")\n        raise HTTPException(\n            status_code=400, detail=f\"Failed to exchange code for tokens: {str(e)}\"\n        )",
                                    "children": [
                                        {
                                            "type": "block",
                                            "label": "scopes = creds_manager.store.get_any_valid_scopes_from_state_token(\n            user_id, state_token, provider\n        )\n        logger.debug(f\"Retrieved scopes from state token: {scopes}\")\n\n        scopes = handler.handle_default_scopes(scopes)\n\n        credentials = handler.exchange_code_for_tokens(code, scopes)\n        logger.debug(f\"Received credentials with final scopes: {credentials.scopes}\")\n\n        # Check if the granted scopes are sufficient for the requested scopes\n        if not set(scopes).issubset(set(credentials.scopes)):\n            # For now, we'll just log the warning and continue\n            logger.warning(\n                f\"Granted scopes {credentials.scopes} for provider {provider.value} \"\n                f\"do not include all requested scopes {scopes}\"\n            )",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "scopes = creds_manager.store.get_any_valid_scopes_from_state_token(\n            user_id, state_token, provider\n        )",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "scopes = creds_manager.store.get_any_valid_scopes_from_state_token(\n            user_id, state_token, provider\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "scopes",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "creds_manager.store.get_any_valid_scopes_from_state_token(\n            user_id, state_token, provider\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "creds_manager.store.get_any_valid_scopes_from_state_token",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "creds_manager.store",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "creds_manager",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "store",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "get_any_valid_scopes_from_state_token",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(\n            user_id, state_token, provider\n        )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "state_token",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "provider",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "logger.debug(f\"Retrieved scopes from state token: {scopes}\")",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "logger.debug(f\"Retrieved scopes from state token: {scopes}\")",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "logger.debug",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "logger",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "debug",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(f\"Retrieved scopes from state token: {scopes}\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "f\"Retrieved scopes from state token: {scopes}\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "f\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "Retrieved scopes from state token: ",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{scopes}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "scopes",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "scopes = handler.handle_default_scopes(scopes)",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "scopes = handler.handle_default_scopes(scopes)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "scopes",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "handler.handle_default_scopes(scopes)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "handler.handle_default_scopes",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "handler",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "handle_default_scopes",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(scopes)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "scopes",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "credentials = handler.exchange_code_for_tokens(code, scopes)",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "credentials = handler.exchange_code_for_tokens(code, scopes)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "credentials",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "handler.exchange_code_for_tokens(code, scopes)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "handler.exchange_code_for_tokens",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "handler",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "exchange_code_for_tokens",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(code, scopes)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "code",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "scopes",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "logger.debug(f\"Received credentials with final scopes: {credentials.scopes}\")",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "logger.debug(f\"Received credentials with final scopes: {credentials.scopes}\")",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "logger.debug",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "logger",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "debug",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(f\"Received credentials with final scopes: {credentials.scopes}\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "f\"Received credentials with final scopes: {credentials.scopes}\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "f\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "Received credentials with final scopes: ",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{credentials.scopes}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "credentials.scopes",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "credentials",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "scopes",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "comment",
                                                    "label": "# Check if the granted scopes are sufficient for the requested scopes",
                                                    "children": []
                                                },
                                                {
                                                    "type": "if_statement",
                                                    "label": "if not set(scopes).issubset(set(credentials.scopes)):\n            # For now, we'll just log the warning and continue\n            logger.warning(\n                f\"Granted scopes {credentials.scopes} for provider {provider.value} \"\n                f\"do not include all requested scopes {scopes}\"\n            )",
                                                    "children": [
                                                        {
                                                            "type": "not_operator",
                                                            "label": "not set(scopes).issubset(set(credentials.scopes))",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "set(scopes).issubset(set(credentials.scopes))",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "set(scopes).issubset",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "set(scopes)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "set",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(scopes)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "scopes",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "issubset",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(set(credentials.scopes))",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "set(credentials.scopes)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "set",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(credentials.scopes)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "credentials.scopes",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "credentials",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "scopes",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "comment",
                                                            "label": "# For now, we'll just log the warning and continue",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "logger.warning(\n                f\"Granted scopes {credentials.scopes} for provider {provider.value} \"\n                f\"do not include all requested scopes {scopes}\"\n            )",
                                                            "children": [
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "logger.warning(\n                f\"Granted scopes {credentials.scopes} for provider {provider.value} \"\n                f\"do not include all requested scopes {scopes}\"\n            )",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "logger.warning(\n                f\"Granted scopes {credentials.scopes} for provider {provider.value} \"\n                f\"do not include all requested scopes {scopes}\"\n            )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "logger.warning",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "logger",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "warning",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(\n                f\"Granted scopes {credentials.scopes} for provider {provider.value} \"\n                f\"do not include all requested scopes {scopes}\"\n            )",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "concatenated_string",
                                                                                            "label": "f\"Granted scopes {credentials.scopes} for provider {provider.value} \"\n                f\"do not include all requested scopes {scopes}\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "f\"Granted scopes {credentials.scopes} for provider {provider.value} \"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "f\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "Granted scopes ",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "interpolation",
                                                                                                            "label": "{credentials.scopes}",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "attribute",
                                                                                                                    "label": "credentials.scopes",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "credentials",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "scopes",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": " for provider ",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "interpolation",
                                                                                                            "label": "{provider.value}",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "attribute",
                                                                                                                    "label": "provider.value",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "provider",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "value",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": " ",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "f\"do not include all requested scopes {scopes}\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "f\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "do not include all requested scopes ",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "interpolation",
                                                                                                            "label": "{scopes}",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "scopes",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "except_clause",
                                            "label": "except Exception as e:\n        logger.error(f\"Code->Token exchange failed for provider {provider.value}: {e}\")\n        raise HTTPException(\n            status_code=400, detail=f\"Failed to exchange code for tokens: {str(e)}\"\n        )",
                                            "children": [
                                                {
                                                    "type": "as_pattern",
                                                    "label": "Exception as e",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Exception",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "as_pattern_target",
                                                            "label": "e",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "e",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "logger.error(f\"Code->Token exchange failed for provider {provider.value}: {e}\")\n        raise HTTPException(\n            status_code=400, detail=f\"Failed to exchange code for tokens: {str(e)}\"\n        )",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "logger.error(f\"Code->Token exchange failed for provider {provider.value}: {e}\")",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "logger.error(f\"Code->Token exchange failed for provider {provider.value}: {e}\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "logger.error",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "logger",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "error",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(f\"Code->Token exchange failed for provider {provider.value}: {e}\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "f\"Code->Token exchange failed for provider {provider.value}: {e}\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "f\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Code->Token exchange failed for provider ",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "interpolation",
                                                                                            "label": "{provider.value}",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "provider.value",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "provider",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "value",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": ": ",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "interpolation",
                                                                                            "label": "{e}",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "e",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "raise_statement",
                                                            "label": "raise HTTPException(\n            status_code=400, detail=f\"Failed to exchange code for tokens: {str(e)}\"\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "HTTPException(\n            status_code=400, detail=f\"Failed to exchange code for tokens: {str(e)}\"\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "HTTPException",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(\n            status_code=400, detail=f\"Failed to exchange code for tokens: {str(e)}\"\n        )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "status_code=400",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "status_code",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "label": "400",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "detail=f\"Failed to exchange code for tokens: {str(e)}\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "detail",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "f\"Failed to exchange code for tokens: {str(e)}\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "f\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "Failed to exchange code for tokens: ",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{str(e)}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "call",
                                                                                                            "label": "str(e)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "str",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "argument_list",
                                                                                                                    "label": "(e)",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "e",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "comment",
                                    "label": "# TODO: Allow specifying `title` to set on `credentials`",
                                    "children": []
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "creds_manager.create(user_id, credentials)",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "creds_manager.create(user_id, credentials)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "creds_manager.create",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "creds_manager",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "create",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(user_id, credentials)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "user_id",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "credentials",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "logger.debug(\n        f\"Successfully processed OAuth callback for user {user_id} \"\n        f\"and provider {provider.value}\"\n    )",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "logger.debug(\n        f\"Successfully processed OAuth callback for user {user_id} \"\n        f\"and provider {provider.value}\"\n    )",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "logger.debug",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "logger",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "debug",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(\n        f\"Successfully processed OAuth callback for user {user_id} \"\n        f\"and provider {provider.value}\"\n    )",
                                                    "children": [
                                                        {
                                                            "type": "concatenated_string",
                                                            "label": "f\"Successfully processed OAuth callback for user {user_id} \"\n        f\"and provider {provider.value}\"",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "f\"Successfully processed OAuth callback for user {user_id} \"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "f\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "Successfully processed OAuth callback for user ",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{user_id}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": " ",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "f\"and provider {provider.value}\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "f\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "and provider ",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{provider.value}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "provider.value",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "provider",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "value",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "return_statement",
                                    "label": "return CredentialsMetaResponse(\n        id=credentials.id,\n        provider=credentials.provider,\n        type=credentials.type,\n        title=credentials.title,\n        scopes=credentials.scopes,\n        username=credentials.username,\n    )",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "CredentialsMetaResponse(\n        id=credentials.id,\n        provider=credentials.provider,\n        type=credentials.type,\n        title=credentials.title,\n        scopes=credentials.scopes,\n        username=credentials.username,\n    )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "CredentialsMetaResponse",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(\n        id=credentials.id,\n        provider=credentials.provider,\n        type=credentials.type,\n        title=credentials.title,\n        scopes=credentials.scopes,\n        username=credentials.username,\n    )",
                                                    "children": [
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "id=credentials.id",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "id",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "credentials.id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "credentials",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "provider=credentials.provider",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "provider",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "credentials.provider",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "credentials",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "provider",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "type=credentials.type",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "type",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "credentials.type",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "credentials",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "type",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "title=credentials.title",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "title",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "credentials.title",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "credentials",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "title",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "scopes=credentials.scopes",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "scopes",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "credentials.scopes",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "credentials",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "scopes",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "username=credentials.username",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "username",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "credentials.username",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "credentials",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "username",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@router.get(\"/credentials\")\ndef list_credentials(\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> list[CredentialsMetaResponse]:\n    credentials = creds_manager.store.get_all_creds(user_id)\n    return [\n        CredentialsMetaResponse(\n            id=cred.id,\n            provider=cred.provider,\n            type=cred.type,\n            title=cred.title,\n            scopes=cred.scopes if isinstance(cred, OAuth2Credentials) else None,\n            username=cred.username if isinstance(cred, OAuth2Credentials) else None,\n        )\n        for cred in credentials\n    ]",
            "children": [
                {
                    "type": "decorator",
                    "label": "@router.get(\"/credentials\")",
                    "children": [
                        {
                            "type": "call",
                            "label": "router.get(\"/credentials\")",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "router.get",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "get",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\"/credentials\")",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"/credentials\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "/credentials",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "def list_credentials(\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> list[CredentialsMetaResponse]:\n    credentials = creds_manager.store.get_all_creds(user_id)\n    return [\n        CredentialsMetaResponse(\n            id=cred.id,\n            provider=cred.provider,\n            type=cred.type,\n            title=cred.title,\n            scopes=cred.scopes if isinstance(cred, OAuth2Credentials) else None,\n            username=cred.username if isinstance(cred, OAuth2Credentials) else None,\n        )\n        for cred in credentials\n    ]",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "list_credentials",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(\n    user_id: Annotated[str, Depends(get_user_id)],\n)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "user_id: Annotated[str, Depends(get_user_id)]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Depends(get_user_id)]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Depends(get_user_id)]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Depends(get_user_id)]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Depends(get_user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Depends(get_user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Depends",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(get_user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "label": "list[CredentialsMetaResponse]",
                            "children": [
                                {
                                    "type": "generic_type",
                                    "label": "list[CredentialsMetaResponse]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "list",
                                            "children": []
                                        },
                                        {
                                            "type": "type_parameter",
                                            "label": "[CredentialsMetaResponse]",
                                            "children": [
                                                {
                                                    "type": "type",
                                                    "label": "CredentialsMetaResponse",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "CredentialsMetaResponse",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "credentials = creds_manager.store.get_all_creds(user_id)\n    return [\n        CredentialsMetaResponse(\n            id=cred.id,\n            provider=cred.provider,\n            type=cred.type,\n            title=cred.title,\n            scopes=cred.scopes if isinstance(cred, OAuth2Credentials) else None,\n            username=cred.username if isinstance(cred, OAuth2Credentials) else None,\n        )\n        for cred in credentials\n    ]",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "credentials = creds_manager.store.get_all_creds(user_id)",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "credentials = creds_manager.store.get_all_creds(user_id)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "credentials",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "creds_manager.store.get_all_creds(user_id)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "creds_manager.store.get_all_creds",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "creds_manager.store",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "creds_manager",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "store",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "get_all_creds",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(user_id)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "user_id",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "return_statement",
                                    "label": "return [\n        CredentialsMetaResponse(\n            id=cred.id,\n            provider=cred.provider,\n            type=cred.type,\n            title=cred.title,\n            scopes=cred.scopes if isinstance(cred, OAuth2Credentials) else None,\n            username=cred.username if isinstance(cred, OAuth2Credentials) else None,\n        )\n        for cred in credentials\n    ]",
                                    "children": [
                                        {
                                            "type": "list_comprehension",
                                            "label": "[\n        CredentialsMetaResponse(\n            id=cred.id,\n            provider=cred.provider,\n            type=cred.type,\n            title=cred.title,\n            scopes=cred.scopes if isinstance(cred, OAuth2Credentials) else None,\n            username=cred.username if isinstance(cred, OAuth2Credentials) else None,\n        )\n        for cred in credentials\n    ]",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "CredentialsMetaResponse(\n            id=cred.id,\n            provider=cred.provider,\n            type=cred.type,\n            title=cred.title,\n            scopes=cred.scopes if isinstance(cred, OAuth2Credentials) else None,\n            username=cred.username if isinstance(cred, OAuth2Credentials) else None,\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "CredentialsMetaResponse",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n            id=cred.id,\n            provider=cred.provider,\n            type=cred.type,\n            title=cred.title,\n            scopes=cred.scopes if isinstance(cred, OAuth2Credentials) else None,\n            username=cred.username if isinstance(cred, OAuth2Credentials) else None,\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "id=cred.id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "cred.id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "cred",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "provider=cred.provider",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "provider",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "cred.provider",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "cred",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "provider",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "type=cred.type",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "type",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "cred.type",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "cred",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "type",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "title=cred.title",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "title",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "cred.title",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "cred",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "title",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "scopes=cred.scopes if isinstance(cred, OAuth2Credentials) else None",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "scopes",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "conditional_expression",
                                                                            "label": "cred.scopes if isinstance(cred, OAuth2Credentials) else None",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "cred.scopes",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "cred",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "scopes",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "isinstance(cred, OAuth2Credentials)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "isinstance",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(cred, OAuth2Credentials)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "cred",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "OAuth2Credentials",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "none",
                                                                                    "label": "None",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "username=cred.username if isinstance(cred, OAuth2Credentials) else None",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "username",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "conditional_expression",
                                                                            "label": "cred.username if isinstance(cred, OAuth2Credentials) else None",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "cred.username",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "cred",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "username",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "isinstance(cred, OAuth2Credentials)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "isinstance",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(cred, OAuth2Credentials)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "cred",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "OAuth2Credentials",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "none",
                                                                                    "label": "None",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "for_in_clause",
                                                    "label": "for cred in credentials",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "cred",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "credentials",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@router.get(\"/{provider}/credentials\")\ndef list_credentials_by_provider(\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to list credentials for\")\n    ],\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> list[CredentialsMetaResponse]:\n    credentials = creds_manager.store.get_creds_by_provider(user_id, provider)\n    return [\n        CredentialsMetaResponse(\n            id=cred.id,\n            provider=cred.provider,\n            type=cred.type,\n            title=cred.title,\n            scopes=cred.scopes if isinstance(cred, OAuth2Credentials) else None,\n            username=cred.username if isinstance(cred, OAuth2Credentials) else None,\n        )\n        for cred in credentials\n    ]",
            "children": [
                {
                    "type": "decorator",
                    "label": "@router.get(\"/{provider}/credentials\")",
                    "children": [
                        {
                            "type": "call",
                            "label": "router.get(\"/{provider}/credentials\")",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "router.get",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "get",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\"/{provider}/credentials\")",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"/{provider}/credentials\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "/{provider}/credentials",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "def list_credentials_by_provider(\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to list credentials for\")\n    ],\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> list[CredentialsMetaResponse]:\n    credentials = creds_manager.store.get_creds_by_provider(user_id, provider)\n    return [\n        CredentialsMetaResponse(\n            id=cred.id,\n            provider=cred.provider,\n            type=cred.type,\n            title=cred.title,\n            scopes=cred.scopes if isinstance(cred, OAuth2Credentials) else None,\n            username=cred.username if isinstance(cred, OAuth2Credentials) else None,\n        )\n        for cred in credentials\n    ]",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "list_credentials_by_provider",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to list credentials for\")\n    ],\n    user_id: Annotated[str, Depends(get_user_id)],\n)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "provider: Annotated[\n        ProviderName, Path(title=\"The provider to list credentials for\")\n    ]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "provider",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[\n        ProviderName, Path(title=\"The provider to list credentials for\")\n    ]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[\n        ProviderName, Path(title=\"The provider to list credentials for\")\n    ]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[\n        ProviderName, Path(title=\"The provider to list credentials for\")\n    ]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "ProviderName",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "ProviderName",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Path(title=\"The provider to list credentials for\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Path(title=\"The provider to list credentials for\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Path",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(title=\"The provider to list credentials for\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "title=\"The provider to list credentials for\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "title",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"The provider to list credentials for\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "The provider to list credentials for",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "user_id: Annotated[str, Depends(get_user_id)]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Depends(get_user_id)]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Depends(get_user_id)]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Depends(get_user_id)]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Depends(get_user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Depends(get_user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Depends",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(get_user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "label": "list[CredentialsMetaResponse]",
                            "children": [
                                {
                                    "type": "generic_type",
                                    "label": "list[CredentialsMetaResponse]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "list",
                                            "children": []
                                        },
                                        {
                                            "type": "type_parameter",
                                            "label": "[CredentialsMetaResponse]",
                                            "children": [
                                                {
                                                    "type": "type",
                                                    "label": "CredentialsMetaResponse",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "CredentialsMetaResponse",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "credentials = creds_manager.store.get_creds_by_provider(user_id, provider)\n    return [\n        CredentialsMetaResponse(\n            id=cred.id,\n            provider=cred.provider,\n            type=cred.type,\n            title=cred.title,\n            scopes=cred.scopes if isinstance(cred, OAuth2Credentials) else None,\n            username=cred.username if isinstance(cred, OAuth2Credentials) else None,\n        )\n        for cred in credentials\n    ]",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "credentials = creds_manager.store.get_creds_by_provider(user_id, provider)",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "credentials = creds_manager.store.get_creds_by_provider(user_id, provider)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "credentials",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "creds_manager.store.get_creds_by_provider(user_id, provider)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "creds_manager.store.get_creds_by_provider",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "creds_manager.store",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "creds_manager",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "store",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "get_creds_by_provider",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(user_id, provider)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "user_id",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "provider",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "return_statement",
                                    "label": "return [\n        CredentialsMetaResponse(\n            id=cred.id,\n            provider=cred.provider,\n            type=cred.type,\n            title=cred.title,\n            scopes=cred.scopes if isinstance(cred, OAuth2Credentials) else None,\n            username=cred.username if isinstance(cred, OAuth2Credentials) else None,\n        )\n        for cred in credentials\n    ]",
                                    "children": [
                                        {
                                            "type": "list_comprehension",
                                            "label": "[\n        CredentialsMetaResponse(\n            id=cred.id,\n            provider=cred.provider,\n            type=cred.type,\n            title=cred.title,\n            scopes=cred.scopes if isinstance(cred, OAuth2Credentials) else None,\n            username=cred.username if isinstance(cred, OAuth2Credentials) else None,\n        )\n        for cred in credentials\n    ]",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "CredentialsMetaResponse(\n            id=cred.id,\n            provider=cred.provider,\n            type=cred.type,\n            title=cred.title,\n            scopes=cred.scopes if isinstance(cred, OAuth2Credentials) else None,\n            username=cred.username if isinstance(cred, OAuth2Credentials) else None,\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "CredentialsMetaResponse",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n            id=cred.id,\n            provider=cred.provider,\n            type=cred.type,\n            title=cred.title,\n            scopes=cred.scopes if isinstance(cred, OAuth2Credentials) else None,\n            username=cred.username if isinstance(cred, OAuth2Credentials) else None,\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "id=cred.id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "cred.id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "cred",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "provider=cred.provider",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "provider",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "cred.provider",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "cred",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "provider",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "type=cred.type",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "type",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "cred.type",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "cred",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "type",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "title=cred.title",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "title",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "cred.title",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "cred",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "title",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "scopes=cred.scopes if isinstance(cred, OAuth2Credentials) else None",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "scopes",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "conditional_expression",
                                                                            "label": "cred.scopes if isinstance(cred, OAuth2Credentials) else None",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "cred.scopes",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "cred",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "scopes",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "isinstance(cred, OAuth2Credentials)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "isinstance",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(cred, OAuth2Credentials)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "cred",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "OAuth2Credentials",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "none",
                                                                                    "label": "None",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "username=cred.username if isinstance(cred, OAuth2Credentials) else None",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "username",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "conditional_expression",
                                                                            "label": "cred.username if isinstance(cred, OAuth2Credentials) else None",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "cred.username",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "cred",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "username",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "isinstance(cred, OAuth2Credentials)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "isinstance",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(cred, OAuth2Credentials)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "cred",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "OAuth2Credentials",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "none",
                                                                                    "label": "None",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "for_in_clause",
                                                    "label": "for cred in credentials",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "cred",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "credentials",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@router.get(\"/{provider}/credentials/{cred_id}\")\ndef get_credential(\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to retrieve credentials for\")\n    ],\n    cred_id: Annotated[str, Path(title=\"The ID of the credentials to retrieve\")],\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> Credentials:\n    credential = creds_manager.get(user_id, cred_id)\n    if not credential:\n        raise HTTPException(status_code=404, detail=\"Credentials not found\")\n    if credential.provider != provider:\n        raise HTTPException(\n            status_code=404, detail=\"Credentials do not match the specified provider\"\n        )\n    return credential",
            "children": [
                {
                    "type": "decorator",
                    "label": "@router.get(\"/{provider}/credentials/{cred_id}\")",
                    "children": [
                        {
                            "type": "call",
                            "label": "router.get(\"/{provider}/credentials/{cred_id}\")",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "router.get",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "get",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\"/{provider}/credentials/{cred_id}\")",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"/{provider}/credentials/{cred_id}\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "/{provider}/credentials/{cred_id}",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "def get_credential(\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to retrieve credentials for\")\n    ],\n    cred_id: Annotated[str, Path(title=\"The ID of the credentials to retrieve\")],\n    user_id: Annotated[str, Depends(get_user_id)],\n) -> Credentials:\n    credential = creds_manager.get(user_id, cred_id)\n    if not credential:\n        raise HTTPException(status_code=404, detail=\"Credentials not found\")\n    if credential.provider != provider:\n        raise HTTPException(\n            status_code=404, detail=\"Credentials do not match the specified provider\"\n        )\n    return credential",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "get_credential",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to retrieve credentials for\")\n    ],\n    cred_id: Annotated[str, Path(title=\"The ID of the credentials to retrieve\")],\n    user_id: Annotated[str, Depends(get_user_id)],\n)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "provider: Annotated[\n        ProviderName, Path(title=\"The provider to retrieve credentials for\")\n    ]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "provider",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[\n        ProviderName, Path(title=\"The provider to retrieve credentials for\")\n    ]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[\n        ProviderName, Path(title=\"The provider to retrieve credentials for\")\n    ]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[\n        ProviderName, Path(title=\"The provider to retrieve credentials for\")\n    ]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "ProviderName",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "ProviderName",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Path(title=\"The provider to retrieve credentials for\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Path(title=\"The provider to retrieve credentials for\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Path",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(title=\"The provider to retrieve credentials for\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "title=\"The provider to retrieve credentials for\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "title",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"The provider to retrieve credentials for\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "The provider to retrieve credentials for",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "cred_id: Annotated[str, Path(title=\"The ID of the credentials to retrieve\")]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "cred_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Path(title=\"The ID of the credentials to retrieve\")]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Path(title=\"The ID of the credentials to retrieve\")]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Path(title=\"The ID of the credentials to retrieve\")]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Path(title=\"The ID of the credentials to retrieve\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Path(title=\"The ID of the credentials to retrieve\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Path",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(title=\"The ID of the credentials to retrieve\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "title=\"The ID of the credentials to retrieve\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "title",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"The ID of the credentials to retrieve\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "The ID of the credentials to retrieve",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "user_id: Annotated[str, Depends(get_user_id)]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Depends(get_user_id)]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Depends(get_user_id)]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Depends(get_user_id)]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Depends(get_user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Depends(get_user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Depends",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(get_user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "label": "Credentials",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "Credentials",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "credential = creds_manager.get(user_id, cred_id)\n    if not credential:\n        raise HTTPException(status_code=404, detail=\"Credentials not found\")\n    if credential.provider != provider:\n        raise HTTPException(\n            status_code=404, detail=\"Credentials do not match the specified provider\"\n        )\n    return credential",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "credential = creds_manager.get(user_id, cred_id)",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "credential = creds_manager.get(user_id, cred_id)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "credential",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "creds_manager.get(user_id, cred_id)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "creds_manager.get",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "creds_manager",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "get",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(user_id, cred_id)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "user_id",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "cred_id",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "if_statement",
                                    "label": "if not credential:\n        raise HTTPException(status_code=404, detail=\"Credentials not found\")",
                                    "children": [
                                        {
                                            "type": "not_operator",
                                            "label": "not credential",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "credential",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "raise HTTPException(status_code=404, detail=\"Credentials not found\")",
                                            "children": [
                                                {
                                                    "type": "raise_statement",
                                                    "label": "raise HTTPException(status_code=404, detail=\"Credentials not found\")",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "HTTPException(status_code=404, detail=\"Credentials not found\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "HTTPException",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(status_code=404, detail=\"Credentials not found\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "status_code=404",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "status_code",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "404",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "detail=\"Credentials not found\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "detail",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"Credentials not found\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Credentials not found",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "if_statement",
                                    "label": "if credential.provider != provider:\n        raise HTTPException(\n            status_code=404, detail=\"Credentials do not match the specified provider\"\n        )",
                                    "children": [
                                        {
                                            "type": "comparison_operator",
                                            "label": "credential.provider != provider",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "credential.provider",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "credential",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "provider",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "provider",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "raise HTTPException(\n            status_code=404, detail=\"Credentials do not match the specified provider\"\n        )",
                                            "children": [
                                                {
                                                    "type": "raise_statement",
                                                    "label": "raise HTTPException(\n            status_code=404, detail=\"Credentials do not match the specified provider\"\n        )",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "HTTPException(\n            status_code=404, detail=\"Credentials do not match the specified provider\"\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "HTTPException",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n            status_code=404, detail=\"Credentials do not match the specified provider\"\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "status_code=404",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "status_code",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "404",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "detail=\"Credentials do not match the specified provider\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "detail",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"Credentials do not match the specified provider\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Credentials do not match the specified provider",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "return_statement",
                                    "label": "return credential",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "credential",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@router.post(\"/{provider}/credentials\", status_code=201)\ndef create_api_key_credentials(\n    user_id: Annotated[str, Depends(get_user_id)],\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to create credentials for\")\n    ],\n    api_key: Annotated[str, Body(title=\"The API key to store\")],\n    title: Annotated[str, Body(title=\"Optional title for the credentials\")],\n    expires_at: Annotated[\n        int | None, Body(title=\"Unix timestamp when the key expires\")\n    ] = None,\n) -> APIKeyCredentials:\n    new_credentials = APIKeyCredentials(\n        provider=provider,\n        api_key=SecretStr(api_key),\n        title=title,\n        expires_at=expires_at,\n    )\n\n    try:\n        creds_manager.create(user_id, new_credentials)\n    except Exception as e:\n        raise HTTPException(\n            status_code=500, detail=f\"Failed to store credentials: {str(e)}\"\n        )\n    return new_credentials",
            "children": [
                {
                    "type": "decorator",
                    "label": "@router.post(\"/{provider}/credentials\", status_code=201)",
                    "children": [
                        {
                            "type": "call",
                            "label": "router.post(\"/{provider}/credentials\", status_code=201)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "router.post",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "post",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\"/{provider}/credentials\", status_code=201)",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"/{provider}/credentials\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "/{provider}/credentials",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "label": "status_code=201",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "status_code",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "label": "201",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "def create_api_key_credentials(\n    user_id: Annotated[str, Depends(get_user_id)],\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to create credentials for\")\n    ],\n    api_key: Annotated[str, Body(title=\"The API key to store\")],\n    title: Annotated[str, Body(title=\"Optional title for the credentials\")],\n    expires_at: Annotated[\n        int | None, Body(title=\"Unix timestamp when the key expires\")\n    ] = None,\n) -> APIKeyCredentials:\n    new_credentials = APIKeyCredentials(\n        provider=provider,\n        api_key=SecretStr(api_key),\n        title=title,\n        expires_at=expires_at,\n    )\n\n    try:\n        creds_manager.create(user_id, new_credentials)\n    except Exception as e:\n        raise HTTPException(\n            status_code=500, detail=f\"Failed to store credentials: {str(e)}\"\n        )\n    return new_credentials",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "create_api_key_credentials",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(\n    user_id: Annotated[str, Depends(get_user_id)],\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to create credentials for\")\n    ],\n    api_key: Annotated[str, Body(title=\"The API key to store\")],\n    title: Annotated[str, Body(title=\"Optional title for the credentials\")],\n    expires_at: Annotated[\n        int | None, Body(title=\"Unix timestamp when the key expires\")\n    ] = None,\n)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "user_id: Annotated[str, Depends(get_user_id)]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Depends(get_user_id)]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Depends(get_user_id)]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Depends(get_user_id)]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Depends(get_user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Depends(get_user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Depends",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(get_user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "provider: Annotated[\n        ProviderName, Path(title=\"The provider to create credentials for\")\n    ]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "provider",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[\n        ProviderName, Path(title=\"The provider to create credentials for\")\n    ]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[\n        ProviderName, Path(title=\"The provider to create credentials for\")\n    ]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[\n        ProviderName, Path(title=\"The provider to create credentials for\")\n    ]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "ProviderName",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "ProviderName",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Path(title=\"The provider to create credentials for\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Path(title=\"The provider to create credentials for\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Path",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(title=\"The provider to create credentials for\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "title=\"The provider to create credentials for\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "title",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"The provider to create credentials for\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "The provider to create credentials for",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "api_key: Annotated[str, Body(title=\"The API key to store\")]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "api_key",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Body(title=\"The API key to store\")]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Body(title=\"The API key to store\")]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Body(title=\"The API key to store\")]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Body(title=\"The API key to store\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Body(title=\"The API key to store\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Body",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(title=\"The API key to store\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "title=\"The API key to store\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "title",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"The API key to store\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "The API key to store",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "title: Annotated[str, Body(title=\"Optional title for the credentials\")]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "title",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Body(title=\"Optional title for the credentials\")]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Body(title=\"Optional title for the credentials\")]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Body(title=\"Optional title for the credentials\")]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Body(title=\"Optional title for the credentials\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Body(title=\"Optional title for the credentials\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Body",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(title=\"Optional title for the credentials\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "title=\"Optional title for the credentials\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "title",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"Optional title for the credentials\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "Optional title for the credentials",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_default_parameter",
                                    "label": "expires_at: Annotated[\n        int | None, Body(title=\"Unix timestamp when the key expires\")\n    ] = None",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "expires_at",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[\n        int | None, Body(title=\"Unix timestamp when the key expires\")\n    ]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[\n        int | None, Body(title=\"Unix timestamp when the key expires\")\n    ]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[\n        int | None, Body(title=\"Unix timestamp when the key expires\")\n    ]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "int | None",
                                                                    "children": [
                                                                        {
                                                                            "type": "binary_operator",
                                                                            "label": "int | None",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "int",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "none",
                                                                                    "label": "None",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Body(title=\"Unix timestamp when the key expires\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Body(title=\"Unix timestamp when the key expires\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Body",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(title=\"Unix timestamp when the key expires\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "title=\"Unix timestamp when the key expires\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "title",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"Unix timestamp when the key expires\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "Unix timestamp when the key expires",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "none",
                                            "label": "None",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "label": "APIKeyCredentials",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "APIKeyCredentials",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "new_credentials = APIKeyCredentials(\n        provider=provider,\n        api_key=SecretStr(api_key),\n        title=title,\n        expires_at=expires_at,\n    )\n\n    try:\n        creds_manager.create(user_id, new_credentials)\n    except Exception as e:\n        raise HTTPException(\n            status_code=500, detail=f\"Failed to store credentials: {str(e)}\"\n        )\n    return new_credentials",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "new_credentials = APIKeyCredentials(\n        provider=provider,\n        api_key=SecretStr(api_key),\n        title=title,\n        expires_at=expires_at,\n    )",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "new_credentials = APIKeyCredentials(\n        provider=provider,\n        api_key=SecretStr(api_key),\n        title=title,\n        expires_at=expires_at,\n    )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "new_credentials",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "APIKeyCredentials(\n        provider=provider,\n        api_key=SecretStr(api_key),\n        title=title,\n        expires_at=expires_at,\n    )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "APIKeyCredentials",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n        provider=provider,\n        api_key=SecretStr(api_key),\n        title=title,\n        expires_at=expires_at,\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "provider=provider",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "provider",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "provider",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "api_key=SecretStr(api_key)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "api_key",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "label": "SecretStr(api_key)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "SecretStr",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(api_key)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "api_key",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "title=title",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "title",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "title",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "expires_at=expires_at",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "expires_at",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "expires_at",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "try_statement",
                                    "label": "try:\n        creds_manager.create(user_id, new_credentials)\n    except Exception as e:\n        raise HTTPException(\n            status_code=500, detail=f\"Failed to store credentials: {str(e)}\"\n        )",
                                    "children": [
                                        {
                                            "type": "block",
                                            "label": "creds_manager.create(user_id, new_credentials)",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "creds_manager.create(user_id, new_credentials)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "creds_manager.create(user_id, new_credentials)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "creds_manager.create",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "creds_manager",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "create",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(user_id, new_credentials)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "user_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "new_credentials",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "except_clause",
                                            "label": "except Exception as e:\n        raise HTTPException(\n            status_code=500, detail=f\"Failed to store credentials: {str(e)}\"\n        )",
                                            "children": [
                                                {
                                                    "type": "as_pattern",
                                                    "label": "Exception as e",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Exception",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "as_pattern_target",
                                                            "label": "e",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "e",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "raise HTTPException(\n            status_code=500, detail=f\"Failed to store credentials: {str(e)}\"\n        )",
                                                    "children": [
                                                        {
                                                            "type": "raise_statement",
                                                            "label": "raise HTTPException(\n            status_code=500, detail=f\"Failed to store credentials: {str(e)}\"\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "HTTPException(\n            status_code=500, detail=f\"Failed to store credentials: {str(e)}\"\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "HTTPException",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(\n            status_code=500, detail=f\"Failed to store credentials: {str(e)}\"\n        )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "status_code=500",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "status_code",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "label": "500",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "detail=f\"Failed to store credentials: {str(e)}\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "detail",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "f\"Failed to store credentials: {str(e)}\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "f\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "Failed to store credentials: ",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{str(e)}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "call",
                                                                                                            "label": "str(e)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "str",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "argument_list",
                                                                                                                    "label": "(e)",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "e",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "return_statement",
                                    "label": "return new_credentials",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "new_credentials",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "label": "class CredentialsDeletionResponse(BaseModel):\n    deleted: Literal[True] = True\n    revoked: bool | None = Field(\n        description=\"Indicates whether the credentials were also revoked by their \"\n        \"provider. `None`/`null` if not applicable, e.g. when deleting \"\n        \"non-revocable credentials such as API keys.\"\n    )",
            "children": [
                {
                    "type": "identifier",
                    "label": "CredentialsDeletionResponse",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "(BaseModel)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "BaseModel",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "deleted: Literal[True] = True\n    revoked: bool | None = Field(\n        description=\"Indicates whether the credentials were also revoked by their \"\n        \"provider. `None`/`null` if not applicable, e.g. when deleting \"\n        \"non-revocable credentials such as API keys.\"\n    )",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "deleted: Literal[True] = True",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "deleted: Literal[True] = True",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "deleted",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Literal[True]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Literal[True]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Literal",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[True]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "True",
                                                                    "children": [
                                                                        {
                                                                            "type": "true",
                                                                            "label": "True",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "true",
                                            "label": "True",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "revoked: bool | None = Field(\n        description=\"Indicates whether the credentials were also revoked by their \"\n        \"provider. `None`/`null` if not applicable, e.g. when deleting \"\n        \"non-revocable credentials such as API keys.\"\n    )",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "revoked: bool | None = Field(\n        description=\"Indicates whether the credentials were also revoked by their \"\n        \"provider. `None`/`null` if not applicable, e.g. when deleting \"\n        \"non-revocable credentials such as API keys.\"\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "revoked",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "bool | None",
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "label": "bool | None",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "bool",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "none",
                                                            "label": "None",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "call",
                                            "label": "Field(\n        description=\"Indicates whether the credentials were also revoked by their \"\n        \"provider. `None`/`null` if not applicable, e.g. when deleting \"\n        \"non-revocable credentials such as API keys.\"\n    )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "Field",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(\n        description=\"Indicates whether the credentials were also revoked by their \"\n        \"provider. `None`/`null` if not applicable, e.g. when deleting \"\n        \"non-revocable credentials such as API keys.\"\n    )",
                                                    "children": [
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "description=\"Indicates whether the credentials were also revoked by their \"\n        \"provider. `None`/`null` if not applicable, e.g. when deleting \"\n        \"non-revocable credentials such as API keys.\"",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "description",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "concatenated_string",
                                                                    "label": "\"Indicates whether the credentials were also revoked by their \"\n        \"provider. `None`/`null` if not applicable, e.g. when deleting \"\n        \"non-revocable credentials such as API keys.\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"Indicates whether the credentials were also revoked by their \"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "Indicates whether the credentials were also revoked by their ",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"provider. `None`/`null` if not applicable, e.g. when deleting \"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "provider. `None`/`null` if not applicable, e.g. when deleting ",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"non-revocable credentials such as API keys.\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "non-revocable credentials such as API keys.",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "label": "class CredentialsDeletionNeedsConfirmationResponse(BaseModel):\n    deleted: Literal[False] = False\n    need_confirmation: Literal[True] = True\n    message: str",
            "children": [
                {
                    "type": "identifier",
                    "label": "CredentialsDeletionNeedsConfirmationResponse",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "(BaseModel)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "BaseModel",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "deleted: Literal[False] = False\n    need_confirmation: Literal[True] = True\n    message: str",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "deleted: Literal[False] = False",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "deleted: Literal[False] = False",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "deleted",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Literal[False]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Literal[False]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Literal",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[False]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "False",
                                                                    "children": [
                                                                        {
                                                                            "type": "false",
                                                                            "label": "False",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "false",
                                            "label": "False",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "need_confirmation: Literal[True] = True",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "need_confirmation: Literal[True] = True",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "need_confirmation",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Literal[True]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Literal[True]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Literal",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[True]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "True",
                                                                    "children": [
                                                                        {
                                                                            "type": "true",
                                                                            "label": "True",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "true",
                                            "label": "True",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "message: str",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "message: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "message",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@router.delete(\"/{provider}/credentials/{cred_id}\")\nasync def delete_credentials(\n    request: Request,\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to delete credentials for\")\n    ],\n    cred_id: Annotated[str, Path(title=\"The ID of the credentials to delete\")],\n    user_id: Annotated[str, Depends(get_user_id)],\n    force: Annotated[\n        bool, Query(title=\"Whether to proceed if any linked webhooks are still in use\")\n    ] = False,\n) -> CredentialsDeletionResponse | CredentialsDeletionNeedsConfirmationResponse:\n    creds = creds_manager.store.get_creds_by_id(user_id, cred_id)\n    if not creds:\n        raise HTTPException(status_code=404, detail=\"Credentials not found\")\n    if creds.provider != provider:\n        raise HTTPException(\n            status_code=404, detail=\"Credentials do not match the specified provider\"\n        )\n\n    try:\n        await remove_all_webhooks_for_credentials(creds, force)\n    except NeedConfirmation as e:\n        return CredentialsDeletionNeedsConfirmationResponse(message=str(e))\n\n    creds_manager.delete(user_id, cred_id)\n\n    tokens_revoked = None\n    if isinstance(creds, OAuth2Credentials):\n        handler = _get_provider_oauth_handler(request, provider)\n        tokens_revoked = handler.revoke_tokens(creds)\n\n    return CredentialsDeletionResponse(revoked=tokens_revoked)",
            "children": [
                {
                    "type": "decorator",
                    "label": "@router.delete(\"/{provider}/credentials/{cred_id}\")",
                    "children": [
                        {
                            "type": "call",
                            "label": "router.delete(\"/{provider}/credentials/{cred_id}\")",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "router.delete",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "delete",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\"/{provider}/credentials/{cred_id}\")",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"/{provider}/credentials/{cred_id}\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "/{provider}/credentials/{cred_id}",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "async def delete_credentials(\n    request: Request,\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to delete credentials for\")\n    ],\n    cred_id: Annotated[str, Path(title=\"The ID of the credentials to delete\")],\n    user_id: Annotated[str, Depends(get_user_id)],\n    force: Annotated[\n        bool, Query(title=\"Whether to proceed if any linked webhooks are still in use\")\n    ] = False,\n) -> CredentialsDeletionResponse | CredentialsDeletionNeedsConfirmationResponse:\n    creds = creds_manager.store.get_creds_by_id(user_id, cred_id)\n    if not creds:\n        raise HTTPException(status_code=404, detail=\"Credentials not found\")\n    if creds.provider != provider:\n        raise HTTPException(\n            status_code=404, detail=\"Credentials do not match the specified provider\"\n        )\n\n    try:\n        await remove_all_webhooks_for_credentials(creds, force)\n    except NeedConfirmation as e:\n        return CredentialsDeletionNeedsConfirmationResponse(message=str(e))\n\n    creds_manager.delete(user_id, cred_id)\n\n    tokens_revoked = None\n    if isinstance(creds, OAuth2Credentials):\n        handler = _get_provider_oauth_handler(request, provider)\n        tokens_revoked = handler.revoke_tokens(creds)\n\n    return CredentialsDeletionResponse(revoked=tokens_revoked)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "delete_credentials",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(\n    request: Request,\n    provider: Annotated[\n        ProviderName, Path(title=\"The provider to delete credentials for\")\n    ],\n    cred_id: Annotated[str, Path(title=\"The ID of the credentials to delete\")],\n    user_id: Annotated[str, Depends(get_user_id)],\n    force: Annotated[\n        bool, Query(title=\"Whether to proceed if any linked webhooks are still in use\")\n    ] = False,\n)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "request: Request",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "request",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Request",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "Request",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "provider: Annotated[\n        ProviderName, Path(title=\"The provider to delete credentials for\")\n    ]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "provider",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[\n        ProviderName, Path(title=\"The provider to delete credentials for\")\n    ]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[\n        ProviderName, Path(title=\"The provider to delete credentials for\")\n    ]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[\n        ProviderName, Path(title=\"The provider to delete credentials for\")\n    ]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "ProviderName",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "ProviderName",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Path(title=\"The provider to delete credentials for\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Path(title=\"The provider to delete credentials for\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Path",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(title=\"The provider to delete credentials for\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "title=\"The provider to delete credentials for\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "title",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"The provider to delete credentials for\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "The provider to delete credentials for",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "cred_id: Annotated[str, Path(title=\"The ID of the credentials to delete\")]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "cred_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Path(title=\"The ID of the credentials to delete\")]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Path(title=\"The ID of the credentials to delete\")]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Path(title=\"The ID of the credentials to delete\")]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Path(title=\"The ID of the credentials to delete\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Path(title=\"The ID of the credentials to delete\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Path",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(title=\"The ID of the credentials to delete\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "title=\"The ID of the credentials to delete\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "title",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"The ID of the credentials to delete\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "The ID of the credentials to delete",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "user_id: Annotated[str, Depends(get_user_id)]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Depends(get_user_id)]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Depends(get_user_id)]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Depends(get_user_id)]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Depends(get_user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Depends(get_user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Depends",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(get_user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_default_parameter",
                                    "label": "force: Annotated[\n        bool, Query(title=\"Whether to proceed if any linked webhooks are still in use\")\n    ] = False",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "force",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[\n        bool, Query(title=\"Whether to proceed if any linked webhooks are still in use\")\n    ]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[\n        bool, Query(title=\"Whether to proceed if any linked webhooks are still in use\")\n    ]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[\n        bool, Query(title=\"Whether to proceed if any linked webhooks are still in use\")\n    ]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "bool",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "bool",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Query(title=\"Whether to proceed if any linked webhooks are still in use\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Query(title=\"Whether to proceed if any linked webhooks are still in use\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Query",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(title=\"Whether to proceed if any linked webhooks are still in use\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "title=\"Whether to proceed if any linked webhooks are still in use\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "title",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"Whether to proceed if any linked webhooks are still in use\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "Whether to proceed if any linked webhooks are still in use",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "false",
                                            "label": "False",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "label": "CredentialsDeletionResponse | CredentialsDeletionNeedsConfirmationResponse",
                            "children": [
                                {
                                    "type": "binary_operator",
                                    "label": "CredentialsDeletionResponse | CredentialsDeletionNeedsConfirmationResponse",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "CredentialsDeletionResponse",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "CredentialsDeletionNeedsConfirmationResponse",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "creds = creds_manager.store.get_creds_by_id(user_id, cred_id)\n    if not creds:\n        raise HTTPException(status_code=404, detail=\"Credentials not found\")\n    if creds.provider != provider:\n        raise HTTPException(\n            status_code=404, detail=\"Credentials do not match the specified provider\"\n        )\n\n    try:\n        await remove_all_webhooks_for_credentials(creds, force)\n    except NeedConfirmation as e:\n        return CredentialsDeletionNeedsConfirmationResponse(message=str(e))\n\n    creds_manager.delete(user_id, cred_id)\n\n    tokens_revoked = None\n    if isinstance(creds, OAuth2Credentials):\n        handler = _get_provider_oauth_handler(request, provider)\n        tokens_revoked = handler.revoke_tokens(creds)\n\n    return CredentialsDeletionResponse(revoked=tokens_revoked)",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "creds = creds_manager.store.get_creds_by_id(user_id, cred_id)",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "creds = creds_manager.store.get_creds_by_id(user_id, cred_id)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "creds",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "creds_manager.store.get_creds_by_id(user_id, cred_id)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "creds_manager.store.get_creds_by_id",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "creds_manager.store",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "creds_manager",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "store",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "get_creds_by_id",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(user_id, cred_id)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "user_id",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "cred_id",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "if_statement",
                                    "label": "if not creds:\n        raise HTTPException(status_code=404, detail=\"Credentials not found\")",
                                    "children": [
                                        {
                                            "type": "not_operator",
                                            "label": "not creds",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "creds",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "raise HTTPException(status_code=404, detail=\"Credentials not found\")",
                                            "children": [
                                                {
                                                    "type": "raise_statement",
                                                    "label": "raise HTTPException(status_code=404, detail=\"Credentials not found\")",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "HTTPException(status_code=404, detail=\"Credentials not found\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "HTTPException",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(status_code=404, detail=\"Credentials not found\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "status_code=404",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "status_code",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "404",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "detail=\"Credentials not found\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "detail",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"Credentials not found\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Credentials not found",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "if_statement",
                                    "label": "if creds.provider != provider:\n        raise HTTPException(\n            status_code=404, detail=\"Credentials do not match the specified provider\"\n        )",
                                    "children": [
                                        {
                                            "type": "comparison_operator",
                                            "label": "creds.provider != provider",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "creds.provider",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "creds",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "provider",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "provider",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "raise HTTPException(\n            status_code=404, detail=\"Credentials do not match the specified provider\"\n        )",
                                            "children": [
                                                {
                                                    "type": "raise_statement",
                                                    "label": "raise HTTPException(\n            status_code=404, detail=\"Credentials do not match the specified provider\"\n        )",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "HTTPException(\n            status_code=404, detail=\"Credentials do not match the specified provider\"\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "HTTPException",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n            status_code=404, detail=\"Credentials do not match the specified provider\"\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "status_code=404",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "status_code",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "404",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "detail=\"Credentials do not match the specified provider\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "detail",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"Credentials do not match the specified provider\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Credentials do not match the specified provider",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "try_statement",
                                    "label": "try:\n        await remove_all_webhooks_for_credentials(creds, force)\n    except NeedConfirmation as e:\n        return CredentialsDeletionNeedsConfirmationResponse(message=str(e))",
                                    "children": [
                                        {
                                            "type": "block",
                                            "label": "await remove_all_webhooks_for_credentials(creds, force)",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "await remove_all_webhooks_for_credentials(creds, force)",
                                                    "children": [
                                                        {
                                                            "type": "await",
                                                            "label": "await remove_all_webhooks_for_credentials(creds, force)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "remove_all_webhooks_for_credentials(creds, force)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "remove_all_webhooks_for_credentials",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(creds, force)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "creds",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "force",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "except_clause",
                                            "label": "except NeedConfirmation as e:\n        return CredentialsDeletionNeedsConfirmationResponse(message=str(e))",
                                            "children": [
                                                {
                                                    "type": "as_pattern",
                                                    "label": "NeedConfirmation as e",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "NeedConfirmation",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "as_pattern_target",
                                                            "label": "e",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "e",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "return CredentialsDeletionNeedsConfirmationResponse(message=str(e))",
                                                    "children": [
                                                        {
                                                            "type": "return_statement",
                                                            "label": "return CredentialsDeletionNeedsConfirmationResponse(message=str(e))",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "CredentialsDeletionNeedsConfirmationResponse(message=str(e))",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "CredentialsDeletionNeedsConfirmationResponse",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(message=str(e))",
                                                                            "children": [
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "message=str(e)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "message",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "str(e)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "str",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(e)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "e",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "creds_manager.delete(user_id, cred_id)",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "creds_manager.delete(user_id, cred_id)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "creds_manager.delete",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "creds_manager",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "delete",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(user_id, cred_id)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "user_id",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "cred_id",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "tokens_revoked = None",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "tokens_revoked = None",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "tokens_revoked",
                                                    "children": []
                                                },
                                                {
                                                    "type": "none",
                                                    "label": "None",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "if_statement",
                                    "label": "if isinstance(creds, OAuth2Credentials):\n        handler = _get_provider_oauth_handler(request, provider)\n        tokens_revoked = handler.revoke_tokens(creds)",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "isinstance(creds, OAuth2Credentials)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "isinstance",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(creds, OAuth2Credentials)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "creds",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "OAuth2Credentials",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "handler = _get_provider_oauth_handler(request, provider)\n        tokens_revoked = handler.revoke_tokens(creds)",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "handler = _get_provider_oauth_handler(request, provider)",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "handler = _get_provider_oauth_handler(request, provider)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "handler",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "_get_provider_oauth_handler(request, provider)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "_get_provider_oauth_handler",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(request, provider)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "request",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "provider",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "tokens_revoked = handler.revoke_tokens(creds)",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "tokens_revoked = handler.revoke_tokens(creds)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "tokens_revoked",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "handler.revoke_tokens(creds)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "handler.revoke_tokens",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "handler",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "revoke_tokens",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(creds)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "creds",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "return_statement",
                                    "label": "return CredentialsDeletionResponse(revoked=tokens_revoked)",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "CredentialsDeletionResponse(revoked=tokens_revoked)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "CredentialsDeletionResponse",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(revoked=tokens_revoked)",
                                                    "children": [
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "revoked=tokens_revoked",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "revoked",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "tokens_revoked",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "comment",
            "label": "# ------------------------- WEBHOOK STUFF -------------------------- #",
            "children": []
        },
        {
            "type": "comment",
            "label": "# ⚠️ Note",
            "children": []
        },
        {
            "type": "comment",
            "label": "# No user auth check because this endpoint is for webhook ingress and relies on",
            "children": []
        },
        {
            "type": "comment",
            "label": "# validation by the provider-specific `WebhooksManager`.",
            "children": []
        },
        {
            "type": "decorated_definition",
            "label": "@router.post(\"/{provider}/webhooks/{webhook_id}/ingress\")\nasync def webhook_ingress_generic(\n    request: Request,\n    provider: Annotated[\n        ProviderName, Path(title=\"Provider where the webhook was registered\")\n    ],\n    webhook_id: Annotated[str, Path(title=\"Our ID for the webhook\")],\n):\n    logger.debug(f\"Received {provider.value} webhook ingress for ID {webhook_id}\")\n    webhook_manager = WEBHOOK_MANAGERS_BY_NAME[provider]()\n    webhook = await get_webhook(webhook_id)\n    logger.debug(f\"Webhook #{webhook_id}: {webhook}\")\n    payload, event_type = await webhook_manager.validate_payload(webhook, request)\n    logger.debug(\n        f\"Validated {provider.value} {webhook.webhook_type} {event_type} event \"\n        f\"with payload {payload}\"\n    )\n\n    webhook_event = WebhookEvent(\n        provider=provider,\n        webhook_id=webhook_id,\n        event_type=event_type,\n        payload=payload,\n    )\n    await publish_webhook_event(webhook_event)\n    logger.debug(f\"Webhook event published: {webhook_event}\")\n\n    if not webhook.attached_nodes:\n        return\n\n    executor = get_service_client(ExecutionManager)\n    for node in webhook.attached_nodes:\n        logger.debug(f\"Webhook-attached node: {node}\")\n        if not node.is_triggered_by_event_type(event_type):\n            logger.debug(f\"Node #{node.id} doesn't trigger on event {event_type}\")\n            continue\n        logger.debug(f\"Executing graph #{node.graph_id} node #{node.id}\")\n        executor.add_execution(\n            node.graph_id,\n            data={f\"webhook_{webhook_id}_payload\": payload},\n            user_id=webhook.user_id,\n        )",
            "children": [
                {
                    "type": "decorator",
                    "label": "@router.post(\"/{provider}/webhooks/{webhook_id}/ingress\")",
                    "children": [
                        {
                            "type": "call",
                            "label": "router.post(\"/{provider}/webhooks/{webhook_id}/ingress\")",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "router.post",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "post",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\"/{provider}/webhooks/{webhook_id}/ingress\")",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"/{provider}/webhooks/{webhook_id}/ingress\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "/{provider}/webhooks/{webhook_id}/ingress",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "async def webhook_ingress_generic(\n    request: Request,\n    provider: Annotated[\n        ProviderName, Path(title=\"Provider where the webhook was registered\")\n    ],\n    webhook_id: Annotated[str, Path(title=\"Our ID for the webhook\")],\n):\n    logger.debug(f\"Received {provider.value} webhook ingress for ID {webhook_id}\")\n    webhook_manager = WEBHOOK_MANAGERS_BY_NAME[provider]()\n    webhook = await get_webhook(webhook_id)\n    logger.debug(f\"Webhook #{webhook_id}: {webhook}\")\n    payload, event_type = await webhook_manager.validate_payload(webhook, request)\n    logger.debug(\n        f\"Validated {provider.value} {webhook.webhook_type} {event_type} event \"\n        f\"with payload {payload}\"\n    )\n\n    webhook_event = WebhookEvent(\n        provider=provider,\n        webhook_id=webhook_id,\n        event_type=event_type,\n        payload=payload,\n    )\n    await publish_webhook_event(webhook_event)\n    logger.debug(f\"Webhook event published: {webhook_event}\")\n\n    if not webhook.attached_nodes:\n        return\n\n    executor = get_service_client(ExecutionManager)\n    for node in webhook.attached_nodes:\n        logger.debug(f\"Webhook-attached node: {node}\")\n        if not node.is_triggered_by_event_type(event_type):\n            logger.debug(f\"Node #{node.id} doesn't trigger on event {event_type}\")\n            continue\n        logger.debug(f\"Executing graph #{node.graph_id} node #{node.id}\")\n        executor.add_execution(\n            node.graph_id,\n            data={f\"webhook_{webhook_id}_payload\": payload},\n            user_id=webhook.user_id,\n        )",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "webhook_ingress_generic",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(\n    request: Request,\n    provider: Annotated[\n        ProviderName, Path(title=\"Provider where the webhook was registered\")\n    ],\n    webhook_id: Annotated[str, Path(title=\"Our ID for the webhook\")],\n)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "request: Request",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "request",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Request",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "Request",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "provider: Annotated[\n        ProviderName, Path(title=\"Provider where the webhook was registered\")\n    ]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "provider",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[\n        ProviderName, Path(title=\"Provider where the webhook was registered\")\n    ]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[\n        ProviderName, Path(title=\"Provider where the webhook was registered\")\n    ]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[\n        ProviderName, Path(title=\"Provider where the webhook was registered\")\n    ]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "ProviderName",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "ProviderName",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Path(title=\"Provider where the webhook was registered\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Path(title=\"Provider where the webhook was registered\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Path",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(title=\"Provider where the webhook was registered\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "title=\"Provider where the webhook was registered\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "title",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"Provider where the webhook was registered\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "Provider where the webhook was registered",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "webhook_id: Annotated[str, Path(title=\"Our ID for the webhook\")]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "webhook_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Path(title=\"Our ID for the webhook\")]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Path(title=\"Our ID for the webhook\")]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Path(title=\"Our ID for the webhook\")]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Path(title=\"Our ID for the webhook\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Path(title=\"Our ID for the webhook\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Path",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(title=\"Our ID for the webhook\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "title=\"Our ID for the webhook\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "title",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"Our ID for the webhook\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "Our ID for the webhook",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "logger.debug(f\"Received {provider.value} webhook ingress for ID {webhook_id}\")\n    webhook_manager = WEBHOOK_MANAGERS_BY_NAME[provider]()\n    webhook = await get_webhook(webhook_id)\n    logger.debug(f\"Webhook #{webhook_id}: {webhook}\")\n    payload, event_type = await webhook_manager.validate_payload(webhook, request)\n    logger.debug(\n        f\"Validated {provider.value} {webhook.webhook_type} {event_type} event \"\n        f\"with payload {payload}\"\n    )\n\n    webhook_event = WebhookEvent(\n        provider=provider,\n        webhook_id=webhook_id,\n        event_type=event_type,\n        payload=payload,\n    )\n    await publish_webhook_event(webhook_event)\n    logger.debug(f\"Webhook event published: {webhook_event}\")\n\n    if not webhook.attached_nodes:\n        return\n\n    executor = get_service_client(ExecutionManager)\n    for node in webhook.attached_nodes:\n        logger.debug(f\"Webhook-attached node: {node}\")\n        if not node.is_triggered_by_event_type(event_type):\n            logger.debug(f\"Node #{node.id} doesn't trigger on event {event_type}\")\n            continue\n        logger.debug(f\"Executing graph #{node.graph_id} node #{node.id}\")\n        executor.add_execution(\n            node.graph_id,\n            data={f\"webhook_{webhook_id}_payload\": payload},\n            user_id=webhook.user_id,\n        )",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "logger.debug(f\"Received {provider.value} webhook ingress for ID {webhook_id}\")",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "logger.debug(f\"Received {provider.value} webhook ingress for ID {webhook_id}\")",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "logger.debug",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "logger",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "debug",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(f\"Received {provider.value} webhook ingress for ID {webhook_id}\")",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "f\"Received {provider.value} webhook ingress for ID {webhook_id}\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "f\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "Received ",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "interpolation",
                                                                    "label": "{provider.value}",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "provider.value",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "provider",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "value",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": " webhook ingress for ID ",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "interpolation",
                                                                    "label": "{webhook_id}",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "webhook_id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "webhook_manager = WEBHOOK_MANAGERS_BY_NAME[provider]()",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "webhook_manager = WEBHOOK_MANAGERS_BY_NAME[provider]()",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "webhook_manager",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "WEBHOOK_MANAGERS_BY_NAME[provider]()",
                                                    "children": [
                                                        {
                                                            "type": "subscript",
                                                            "label": "WEBHOOK_MANAGERS_BY_NAME[provider]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "WEBHOOK_MANAGERS_BY_NAME",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "provider",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "()",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "webhook = await get_webhook(webhook_id)",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "webhook = await get_webhook(webhook_id)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "webhook",
                                                    "children": []
                                                },
                                                {
                                                    "type": "await",
                                                    "label": "await get_webhook(webhook_id)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "get_webhook(webhook_id)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "get_webhook",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(webhook_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "webhook_id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "logger.debug(f\"Webhook #{webhook_id}: {webhook}\")",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "logger.debug(f\"Webhook #{webhook_id}: {webhook}\")",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "logger.debug",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "logger",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "debug",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(f\"Webhook #{webhook_id}: {webhook}\")",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "f\"Webhook #{webhook_id}: {webhook}\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "f\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "Webhook #",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "interpolation",
                                                                    "label": "{webhook_id}",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "webhook_id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": ": ",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "interpolation",
                                                                    "label": "{webhook}",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "webhook",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "payload, event_type = await webhook_manager.validate_payload(webhook, request)",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "payload, event_type = await webhook_manager.validate_payload(webhook, request)",
                                            "children": [
                                                {
                                                    "type": "pattern_list",
                                                    "label": "payload, event_type",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "payload",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "event_type",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "await",
                                                    "label": "await webhook_manager.validate_payload(webhook, request)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "webhook_manager.validate_payload(webhook, request)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "webhook_manager.validate_payload",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "webhook_manager",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "validate_payload",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(webhook, request)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "webhook",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "request",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "logger.debug(\n        f\"Validated {provider.value} {webhook.webhook_type} {event_type} event \"\n        f\"with payload {payload}\"\n    )",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "logger.debug(\n        f\"Validated {provider.value} {webhook.webhook_type} {event_type} event \"\n        f\"with payload {payload}\"\n    )",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "logger.debug",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "logger",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "debug",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(\n        f\"Validated {provider.value} {webhook.webhook_type} {event_type} event \"\n        f\"with payload {payload}\"\n    )",
                                                    "children": [
                                                        {
                                                            "type": "concatenated_string",
                                                            "label": "f\"Validated {provider.value} {webhook.webhook_type} {event_type} event \"\n        f\"with payload {payload}\"",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "f\"Validated {provider.value} {webhook.webhook_type} {event_type} event \"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "f\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "Validated ",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{provider.value}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "provider.value",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "provider",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "value",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": " ",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{webhook.webhook_type}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "webhook.webhook_type",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "webhook",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "webhook_type",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": " ",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{event_type}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "event_type",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": " event ",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "f\"with payload {payload}\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "f\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "with payload ",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{payload}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "payload",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "webhook_event = WebhookEvent(\n        provider=provider,\n        webhook_id=webhook_id,\n        event_type=event_type,\n        payload=payload,\n    )",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "webhook_event = WebhookEvent(\n        provider=provider,\n        webhook_id=webhook_id,\n        event_type=event_type,\n        payload=payload,\n    )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "webhook_event",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "WebhookEvent(\n        provider=provider,\n        webhook_id=webhook_id,\n        event_type=event_type,\n        payload=payload,\n    )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "WebhookEvent",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n        provider=provider,\n        webhook_id=webhook_id,\n        event_type=event_type,\n        payload=payload,\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "provider=provider",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "provider",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "provider",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "webhook_id=webhook_id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "webhook_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "webhook_id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "event_type=event_type",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "event_type",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "event_type",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "payload=payload",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "payload",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "payload",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "await publish_webhook_event(webhook_event)",
                                    "children": [
                                        {
                                            "type": "await",
                                            "label": "await publish_webhook_event(webhook_event)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "publish_webhook_event(webhook_event)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "publish_webhook_event",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(webhook_event)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "webhook_event",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "logger.debug(f\"Webhook event published: {webhook_event}\")",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "logger.debug(f\"Webhook event published: {webhook_event}\")",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "logger.debug",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "logger",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "debug",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(f\"Webhook event published: {webhook_event}\")",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "f\"Webhook event published: {webhook_event}\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "f\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "Webhook event published: ",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "interpolation",
                                                                    "label": "{webhook_event}",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "webhook_event",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "if_statement",
                                    "label": "if not webhook.attached_nodes:\n        return",
                                    "children": [
                                        {
                                            "type": "not_operator",
                                            "label": "not webhook.attached_nodes",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "webhook.attached_nodes",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "webhook",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "attached_nodes",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "return",
                                            "children": [
                                                {
                                                    "type": "return_statement",
                                                    "label": "return",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "executor = get_service_client(ExecutionManager)",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "executor = get_service_client(ExecutionManager)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "executor",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "get_service_client(ExecutionManager)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "get_service_client",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(ExecutionManager)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "ExecutionManager",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "for_statement",
                                    "label": "for node in webhook.attached_nodes:\n        logger.debug(f\"Webhook-attached node: {node}\")\n        if not node.is_triggered_by_event_type(event_type):\n            logger.debug(f\"Node #{node.id} doesn't trigger on event {event_type}\")\n            continue\n        logger.debug(f\"Executing graph #{node.graph_id} node #{node.id}\")\n        executor.add_execution(\n            node.graph_id,\n            data={f\"webhook_{webhook_id}_payload\": payload},\n            user_id=webhook.user_id,\n        )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "node",
                                            "children": []
                                        },
                                        {
                                            "type": "attribute",
                                            "label": "webhook.attached_nodes",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "webhook",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "attached_nodes",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "logger.debug(f\"Webhook-attached node: {node}\")\n        if not node.is_triggered_by_event_type(event_type):\n            logger.debug(f\"Node #{node.id} doesn't trigger on event {event_type}\")\n            continue\n        logger.debug(f\"Executing graph #{node.graph_id} node #{node.id}\")\n        executor.add_execution(\n            node.graph_id,\n            data={f\"webhook_{webhook_id}_payload\": payload},\n            user_id=webhook.user_id,\n        )",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "logger.debug(f\"Webhook-attached node: {node}\")",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "logger.debug(f\"Webhook-attached node: {node}\")",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "logger.debug",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "logger",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "debug",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(f\"Webhook-attached node: {node}\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "f\"Webhook-attached node: {node}\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "f\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "Webhook-attached node: ",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{node}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "node",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "if_statement",
                                                    "label": "if not node.is_triggered_by_event_type(event_type):\n            logger.debug(f\"Node #{node.id} doesn't trigger on event {event_type}\")\n            continue",
                                                    "children": [
                                                        {
                                                            "type": "not_operator",
                                                            "label": "not node.is_triggered_by_event_type(event_type)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "node.is_triggered_by_event_type(event_type)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "node.is_triggered_by_event_type",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "node",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "is_triggered_by_event_type",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(event_type)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "event_type",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "logger.debug(f\"Node #{node.id} doesn't trigger on event {event_type}\")\n            continue",
                                                            "children": [
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "logger.debug(f\"Node #{node.id} doesn't trigger on event {event_type}\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "logger.debug(f\"Node #{node.id} doesn't trigger on event {event_type}\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "logger.debug",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "logger",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "debug",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(f\"Node #{node.id} doesn't trigger on event {event_type}\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "f\"Node #{node.id} doesn't trigger on event {event_type}\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "f\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "Node #",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{node.id}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "node.id",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "node",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "id",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": " doesn't trigger on event ",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{event_type}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "event_type",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "continue_statement",
                                                                    "label": "continue",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "logger.debug(f\"Executing graph #{node.graph_id} node #{node.id}\")",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "logger.debug(f\"Executing graph #{node.graph_id} node #{node.id}\")",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "logger.debug",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "logger",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "debug",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(f\"Executing graph #{node.graph_id} node #{node.id}\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "f\"Executing graph #{node.graph_id} node #{node.id}\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "f\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "Executing graph #",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{node.graph_id}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "node.graph_id",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "node",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "graph_id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": " node #",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{node.id}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "node.id",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "node",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "executor.add_execution(\n            node.graph_id,\n            data={f\"webhook_{webhook_id}_payload\": payload},\n            user_id=webhook.user_id,\n        )",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "executor.add_execution(\n            node.graph_id,\n            data={f\"webhook_{webhook_id}_payload\": payload},\n            user_id=webhook.user_id,\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "executor.add_execution",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "executor",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "add_execution",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n            node.graph_id,\n            data={f\"webhook_{webhook_id}_payload\": payload},\n            user_id=webhook.user_id,\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "node.graph_id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "node",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "graph_id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "data={f\"webhook_{webhook_id}_payload\": payload}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "data",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "dictionary",
                                                                                    "label": "{f\"webhook_{webhook_id}_payload\": payload}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "pair",
                                                                                            "label": "f\"webhook_{webhook_id}_payload\": payload",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "f\"webhook_{webhook_id}_payload\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "f\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "webhook_",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "interpolation",
                                                                                                            "label": "{webhook_id}",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "webhook_id",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "_payload",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "payload",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "user_id=webhook.user_id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "webhook.user_id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "webhook",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@router.post(\"/webhooks/{webhook_id}/ping\")\nasync def webhook_ping(\n    webhook_id: Annotated[str, Path(title=\"Our ID for the webhook\")],\n    user_id: Annotated[str, Depends(get_user_id)],  # require auth\n):\n    webhook = await get_webhook(webhook_id)\n    webhook_manager = WEBHOOK_MANAGERS_BY_NAME[webhook.provider]()\n\n    credentials = (\n        creds_manager.get(user_id, webhook.credentials_id)\n        if webhook.credentials_id\n        else None\n    )\n    try:\n        await webhook_manager.trigger_ping(webhook, credentials)\n    except NotImplementedError:\n        return False\n\n    if not await wait_for_webhook_event(webhook_id, event_type=\"ping\", timeout=10):\n        raise HTTPException(status_code=504, detail=\"Webhook ping timed out\")\n\n    return True",
            "children": [
                {
                    "type": "decorator",
                    "label": "@router.post(\"/webhooks/{webhook_id}/ping\")",
                    "children": [
                        {
                            "type": "call",
                            "label": "router.post(\"/webhooks/{webhook_id}/ping\")",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "router.post",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "router",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "post",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\"/webhooks/{webhook_id}/ping\")",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"/webhooks/{webhook_id}/ping\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "/webhooks/{webhook_id}/ping",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "async def webhook_ping(\n    webhook_id: Annotated[str, Path(title=\"Our ID for the webhook\")],\n    user_id: Annotated[str, Depends(get_user_id)],  # require auth\n):\n    webhook = await get_webhook(webhook_id)\n    webhook_manager = WEBHOOK_MANAGERS_BY_NAME[webhook.provider]()\n\n    credentials = (\n        creds_manager.get(user_id, webhook.credentials_id)\n        if webhook.credentials_id\n        else None\n    )\n    try:\n        await webhook_manager.trigger_ping(webhook, credentials)\n    except NotImplementedError:\n        return False\n\n    if not await wait_for_webhook_event(webhook_id, event_type=\"ping\", timeout=10):\n        raise HTTPException(status_code=504, detail=\"Webhook ping timed out\")\n\n    return True",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "webhook_ping",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(\n    webhook_id: Annotated[str, Path(title=\"Our ID for the webhook\")],\n    user_id: Annotated[str, Depends(get_user_id)],  # require auth\n)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "webhook_id: Annotated[str, Path(title=\"Our ID for the webhook\")]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "webhook_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Path(title=\"Our ID for the webhook\")]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Path(title=\"Our ID for the webhook\")]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Path(title=\"Our ID for the webhook\")]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Path(title=\"Our ID for the webhook\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Path(title=\"Our ID for the webhook\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Path",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(title=\"Our ID for the webhook\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "title=\"Our ID for the webhook\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "title",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"Our ID for the webhook\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "Our ID for the webhook",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "label": "user_id: Annotated[str, Depends(get_user_id)]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Annotated[str, Depends(get_user_id)]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Annotated[str, Depends(get_user_id)]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Annotated",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Depends(get_user_id)]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Depends(get_user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Depends(get_user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Depends",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(get_user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "comment",
                                    "label": "# require auth",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "webhook = await get_webhook(webhook_id)\n    webhook_manager = WEBHOOK_MANAGERS_BY_NAME[webhook.provider]()\n\n    credentials = (\n        creds_manager.get(user_id, webhook.credentials_id)\n        if webhook.credentials_id\n        else None\n    )\n    try:\n        await webhook_manager.trigger_ping(webhook, credentials)\n    except NotImplementedError:\n        return False\n\n    if not await wait_for_webhook_event(webhook_id, event_type=\"ping\", timeout=10):\n        raise HTTPException(status_code=504, detail=\"Webhook ping timed out\")\n\n    return True",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "webhook = await get_webhook(webhook_id)",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "webhook = await get_webhook(webhook_id)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "webhook",
                                                    "children": []
                                                },
                                                {
                                                    "type": "await",
                                                    "label": "await get_webhook(webhook_id)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "get_webhook(webhook_id)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "get_webhook",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(webhook_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "webhook_id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "webhook_manager = WEBHOOK_MANAGERS_BY_NAME[webhook.provider]()",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "webhook_manager = WEBHOOK_MANAGERS_BY_NAME[webhook.provider]()",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "webhook_manager",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "WEBHOOK_MANAGERS_BY_NAME[webhook.provider]()",
                                                    "children": [
                                                        {
                                                            "type": "subscript",
                                                            "label": "WEBHOOK_MANAGERS_BY_NAME[webhook.provider]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "WEBHOOK_MANAGERS_BY_NAME",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "webhook.provider",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "webhook",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "provider",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "()",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "credentials = (\n        creds_manager.get(user_id, webhook.credentials_id)\n        if webhook.credentials_id\n        else None\n    )",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "credentials = (\n        creds_manager.get(user_id, webhook.credentials_id)\n        if webhook.credentials_id\n        else None\n    )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "credentials",
                                                    "children": []
                                                },
                                                {
                                                    "type": "parenthesized_expression",
                                                    "label": "(\n        creds_manager.get(user_id, webhook.credentials_id)\n        if webhook.credentials_id\n        else None\n    )",
                                                    "children": [
                                                        {
                                                            "type": "conditional_expression",
                                                            "label": "creds_manager.get(user_id, webhook.credentials_id)\n        if webhook.credentials_id\n        else None",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "creds_manager.get(user_id, webhook.credentials_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "creds_manager.get",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "creds_manager",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "get",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(user_id, webhook.credentials_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "webhook.credentials_id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "webhook",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "credentials_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "webhook.credentials_id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "webhook",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "credentials_id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "none",
                                                                    "label": "None",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "try_statement",
                                    "label": "try:\n        await webhook_manager.trigger_ping(webhook, credentials)\n    except NotImplementedError:\n        return False",
                                    "children": [
                                        {
                                            "type": "block",
                                            "label": "await webhook_manager.trigger_ping(webhook, credentials)",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "await webhook_manager.trigger_ping(webhook, credentials)",
                                                    "children": [
                                                        {
                                                            "type": "await",
                                                            "label": "await webhook_manager.trigger_ping(webhook, credentials)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "webhook_manager.trigger_ping(webhook, credentials)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "webhook_manager.trigger_ping",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "webhook_manager",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "trigger_ping",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(webhook, credentials)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "webhook",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "credentials",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "except_clause",
                                            "label": "except NotImplementedError:\n        return False",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "NotImplementedError",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "return False",
                                                    "children": [
                                                        {
                                                            "type": "return_statement",
                                                            "label": "return False",
                                                            "children": [
                                                                {
                                                                    "type": "false",
                                                                    "label": "False",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "if_statement",
                                    "label": "if not await wait_for_webhook_event(webhook_id, event_type=\"ping\", timeout=10):\n        raise HTTPException(status_code=504, detail=\"Webhook ping timed out\")",
                                    "children": [
                                        {
                                            "type": "not_operator",
                                            "label": "not await wait_for_webhook_event(webhook_id, event_type=\"ping\", timeout=10)",
                                            "children": [
                                                {
                                                    "type": "await",
                                                    "label": "await wait_for_webhook_event(webhook_id, event_type=\"ping\", timeout=10)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "wait_for_webhook_event(webhook_id, event_type=\"ping\", timeout=10)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "wait_for_webhook_event",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(webhook_id, event_type=\"ping\", timeout=10)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "webhook_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "event_type=\"ping\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "event_type",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"ping\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "ping",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "timeout=10",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "timeout",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "10",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "raise HTTPException(status_code=504, detail=\"Webhook ping timed out\")",
                                            "children": [
                                                {
                                                    "type": "raise_statement",
                                                    "label": "raise HTTPException(status_code=504, detail=\"Webhook ping timed out\")",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "HTTPException(status_code=504, detail=\"Webhook ping timed out\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "HTTPException",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(status_code=504, detail=\"Webhook ping timed out\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "status_code=504",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "status_code",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "504",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "detail=\"Webhook ping timed out\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "detail",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"Webhook ping timed out\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Webhook ping timed out",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "return_statement",
                                    "label": "return True",
                                    "children": [
                                        {
                                            "type": "true",
                                            "label": "True",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "comment",
            "label": "# --------------------------- UTILITIES ---------------------------- #",
            "children": []
        },
        {
            "type": "function_definition",
            "label": "async def remove_all_webhooks_for_credentials(\n    credentials: Credentials, force: bool = False\n) -> None:\n    \"\"\"\n    Remove and deregister all webhooks that were registered using the given credentials.\n\n    Params:\n        credentials: The credentials for which to remove the associated webhooks.\n        force: Whether to proceed if any of the webhooks are still in use.\n\n    Raises:\n        NeedConfirmation: If any of the webhooks are still in use and `force` is `False`\n    \"\"\"\n    webhooks = await get_all_webhooks_by_creds(credentials.id)\n    if credentials.provider not in WEBHOOK_MANAGERS_BY_NAME:\n        if webhooks:\n            logger.error(\n                f\"Credentials #{credentials.id} for provider {credentials.provider} \"\n                f\"are attached to {len(webhooks)} webhooks, \"\n                f\"but there is no available WebhooksHandler for {credentials.provider}\"\n            )\n        return\n    if any(w.attached_nodes for w in webhooks) and not force:\n        raise NeedConfirmation(\n            \"Some webhooks linked to these credentials are still in use by an agent\"\n        )\n    for webhook in webhooks:\n        # Unlink all nodes\n        for node in webhook.attached_nodes or []:\n            await set_node_webhook(node.id, None)\n\n        # Prune the webhook\n        webhook_manager = WEBHOOK_MANAGERS_BY_NAME[credentials.provider]()\n        success = await webhook_manager.prune_webhook_if_dangling(\n            webhook.id, credentials\n        )\n        if not success:\n            logger.warning(f\"Webhook #{webhook.id} failed to prune\")",
            "children": [
                {
                    "type": "identifier",
                    "label": "remove_all_webhooks_for_credentials",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(\n    credentials: Credentials, force: bool = False\n)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "credentials: Credentials",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "credentials",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "Credentials",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "Credentials",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_default_parameter",
                            "label": "force: bool = False",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "force",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "bool",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "bool",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "false",
                                    "label": "False",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "None",
                    "children": [
                        {
                            "type": "none",
                            "label": "None",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    Remove and deregister all webhooks that were registered using the given credentials.\n\n    Params:\n        credentials: The credentials for which to remove the associated webhooks.\n        force: Whether to proceed if any of the webhooks are still in use.\n\n    Raises:\n        NeedConfirmation: If any of the webhooks are still in use and `force` is `False`\n    \"\"\"\n    webhooks = await get_all_webhooks_by_creds(credentials.id)\n    if credentials.provider not in WEBHOOK_MANAGERS_BY_NAME:\n        if webhooks:\n            logger.error(\n                f\"Credentials #{credentials.id} for provider {credentials.provider} \"\n                f\"are attached to {len(webhooks)} webhooks, \"\n                f\"but there is no available WebhooksHandler for {credentials.provider}\"\n            )\n        return\n    if any(w.attached_nodes for w in webhooks) and not force:\n        raise NeedConfirmation(\n            \"Some webhooks linked to these credentials are still in use by an agent\"\n        )\n    for webhook in webhooks:\n        # Unlink all nodes\n        for node in webhook.attached_nodes or []:\n            await set_node_webhook(node.id, None)\n\n        # Prune the webhook\n        webhook_manager = WEBHOOK_MANAGERS_BY_NAME[credentials.provider]()\n        success = await webhook_manager.prune_webhook_if_dangling(\n            webhook.id, credentials\n        )\n        if not success:\n            logger.warning(f\"Webhook #{webhook.id} failed to prune\")",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    Remove and deregister all webhooks that were registered using the given credentials.\n\n    Params:\n        credentials: The credentials for which to remove the associated webhooks.\n        force: Whether to proceed if any of the webhooks are still in use.\n\n    Raises:\n        NeedConfirmation: If any of the webhooks are still in use and `force` is `False`\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    Remove and deregister all webhooks that were registered using the given credentials.\n\n    Params:\n        credentials: The credentials for which to remove the associated webhooks.\n        force: Whether to proceed if any of the webhooks are still in use.\n\n    Raises:\n        NeedConfirmation: If any of the webhooks are still in use and `force` is `False`\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    Remove and deregister all webhooks that were registered using the given credentials.\n\n    Params:\n        credentials: The credentials for which to remove the associated webhooks.\n        force: Whether to proceed if any of the webhooks are still in use.\n\n    Raises:\n        NeedConfirmation: If any of the webhooks are still in use and `force` is `False`\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "webhooks = await get_all_webhooks_by_creds(credentials.id)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "webhooks = await get_all_webhooks_by_creds(credentials.id)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "webhooks",
                                            "children": []
                                        },
                                        {
                                            "type": "await",
                                            "label": "await get_all_webhooks_by_creds(credentials.id)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "get_all_webhooks_by_creds(credentials.id)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "get_all_webhooks_by_creds",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(credentials.id)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "credentials.id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "credentials",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if credentials.provider not in WEBHOOK_MANAGERS_BY_NAME:\n        if webhooks:\n            logger.error(\n                f\"Credentials #{credentials.id} for provider {credentials.provider} \"\n                f\"are attached to {len(webhooks)} webhooks, \"\n                f\"but there is no available WebhooksHandler for {credentials.provider}\"\n            )\n        return",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "label": "credentials.provider not in WEBHOOK_MANAGERS_BY_NAME",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "credentials.provider",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "credentials",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "provider",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "WEBHOOK_MANAGERS_BY_NAME",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "if webhooks:\n            logger.error(\n                f\"Credentials #{credentials.id} for provider {credentials.provider} \"\n                f\"are attached to {len(webhooks)} webhooks, \"\n                f\"but there is no available WebhooksHandler for {credentials.provider}\"\n            )\n        return",
                                    "children": [
                                        {
                                            "type": "if_statement",
                                            "label": "if webhooks:\n            logger.error(\n                f\"Credentials #{credentials.id} for provider {credentials.provider} \"\n                f\"are attached to {len(webhooks)} webhooks, \"\n                f\"but there is no available WebhooksHandler for {credentials.provider}\"\n            )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "webhooks",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "logger.error(\n                f\"Credentials #{credentials.id} for provider {credentials.provider} \"\n                f\"are attached to {len(webhooks)} webhooks, \"\n                f\"but there is no available WebhooksHandler for {credentials.provider}\"\n            )",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "logger.error(\n                f\"Credentials #{credentials.id} for provider {credentials.provider} \"\n                f\"are attached to {len(webhooks)} webhooks, \"\n                f\"but there is no available WebhooksHandler for {credentials.provider}\"\n            )",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "logger.error(\n                f\"Credentials #{credentials.id} for provider {credentials.provider} \"\n                f\"are attached to {len(webhooks)} webhooks, \"\n                f\"but there is no available WebhooksHandler for {credentials.provider}\"\n            )",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "logger.error",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "logger",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "error",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(\n                f\"Credentials #{credentials.id} for provider {credentials.provider} \"\n                f\"are attached to {len(webhooks)} webhooks, \"\n                f\"but there is no available WebhooksHandler for {credentials.provider}\"\n            )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "concatenated_string",
                                                                                    "label": "f\"Credentials #{credentials.id} for provider {credentials.provider} \"\n                f\"are attached to {len(webhooks)} webhooks, \"\n                f\"but there is no available WebhooksHandler for {credentials.provider}\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "f\"Credentials #{credentials.id} for provider {credentials.provider} \"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "f\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "Credentials #",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{credentials.id}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "credentials.id",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "credentials",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "id",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": " for provider ",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{credentials.provider}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "credentials.provider",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "credentials",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "provider",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": " ",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "f\"are attached to {len(webhooks)} webhooks, \"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "f\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "are attached to ",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{len(webhooks)}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "call",
                                                                                                            "label": "len(webhooks)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "len",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "argument_list",
                                                                                                                    "label": "(webhooks)",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "webhooks",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": " webhooks, ",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "f\"but there is no available WebhooksHandler for {credentials.provider}\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "f\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "but there is no available WebhooksHandler for ",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{credentials.provider}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "credentials.provider",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "credentials",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "provider",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "label": "return",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if any(w.attached_nodes for w in webhooks) and not force:\n        raise NeedConfirmation(\n            \"Some webhooks linked to these credentials are still in use by an agent\"\n        )",
                            "children": [
                                {
                                    "type": "boolean_operator",
                                    "label": "any(w.attached_nodes for w in webhooks) and not force",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "any(w.attached_nodes for w in webhooks)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "any",
                                                    "children": []
                                                },
                                                {
                                                    "type": "generator_expression",
                                                    "label": "(w.attached_nodes for w in webhooks)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "w.attached_nodes",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "w",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "attached_nodes",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "for_in_clause",
                                                            "label": "for w in webhooks",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "w",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "webhooks",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "not_operator",
                                            "label": "not force",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "force",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "raise NeedConfirmation(\n            \"Some webhooks linked to these credentials are still in use by an agent\"\n        )",
                                    "children": [
                                        {
                                            "type": "raise_statement",
                                            "label": "raise NeedConfirmation(\n            \"Some webhooks linked to these credentials are still in use by an agent\"\n        )",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "NeedConfirmation(\n            \"Some webhooks linked to these credentials are still in use by an agent\"\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "NeedConfirmation",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n            \"Some webhooks linked to these credentials are still in use by an agent\"\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"Some webhooks linked to these credentials are still in use by an agent\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "Some webhooks linked to these credentials are still in use by an agent",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "for_statement",
                            "label": "for webhook in webhooks:\n        # Unlink all nodes\n        for node in webhook.attached_nodes or []:\n            await set_node_webhook(node.id, None)\n\n        # Prune the webhook\n        webhook_manager = WEBHOOK_MANAGERS_BY_NAME[credentials.provider]()\n        success = await webhook_manager.prune_webhook_if_dangling(\n            webhook.id, credentials\n        )\n        if not success:\n            logger.warning(f\"Webhook #{webhook.id} failed to prune\")",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "webhook",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "webhooks",
                                    "children": []
                                },
                                {
                                    "type": "comment",
                                    "label": "# Unlink all nodes",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "label": "for node in webhook.attached_nodes or []:\n            await set_node_webhook(node.id, None)\n\n        # Prune the webhook\n        webhook_manager = WEBHOOK_MANAGERS_BY_NAME[credentials.provider]()\n        success = await webhook_manager.prune_webhook_if_dangling(\n            webhook.id, credentials\n        )\n        if not success:\n            logger.warning(f\"Webhook #{webhook.id} failed to prune\")",
                                    "children": [
                                        {
                                            "type": "for_statement",
                                            "label": "for node in webhook.attached_nodes or []:\n            await set_node_webhook(node.id, None)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "node",
                                                    "children": []
                                                },
                                                {
                                                    "type": "boolean_operator",
                                                    "label": "webhook.attached_nodes or []",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "webhook.attached_nodes",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "webhook",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "attached_nodes",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "list",
                                                            "label": "[]",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "await set_node_webhook(node.id, None)",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "await set_node_webhook(node.id, None)",
                                                            "children": [
                                                                {
                                                                    "type": "await",
                                                                    "label": "await set_node_webhook(node.id, None)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "set_node_webhook(node.id, None)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "set_node_webhook",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(node.id, None)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "node.id",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "node",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "none",
                                                                                            "label": "None",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "label": "# Prune the webhook",
                                            "children": []
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "webhook_manager = WEBHOOK_MANAGERS_BY_NAME[credentials.provider]()",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "webhook_manager = WEBHOOK_MANAGERS_BY_NAME[credentials.provider]()",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "webhook_manager",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "WEBHOOK_MANAGERS_BY_NAME[credentials.provider]()",
                                                            "children": [
                                                                {
                                                                    "type": "subscript",
                                                                    "label": "WEBHOOK_MANAGERS_BY_NAME[credentials.provider]",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "WEBHOOK_MANAGERS_BY_NAME",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "credentials.provider",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "credentials",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "provider",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "success = await webhook_manager.prune_webhook_if_dangling(\n            webhook.id, credentials\n        )",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "success = await webhook_manager.prune_webhook_if_dangling(\n            webhook.id, credentials\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "success",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "await",
                                                            "label": "await webhook_manager.prune_webhook_if_dangling(\n            webhook.id, credentials\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "webhook_manager.prune_webhook_if_dangling(\n            webhook.id, credentials\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "webhook_manager.prune_webhook_if_dangling",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "webhook_manager",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "prune_webhook_if_dangling",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(\n            webhook.id, credentials\n        )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "webhook.id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "webhook",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "credentials",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if not success:\n            logger.warning(f\"Webhook #{webhook.id} failed to prune\")",
                                            "children": [
                                                {
                                                    "type": "not_operator",
                                                    "label": "not success",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "success",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "logger.warning(f\"Webhook #{webhook.id} failed to prune\")",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "logger.warning(f\"Webhook #{webhook.id} failed to prune\")",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "logger.warning(f\"Webhook #{webhook.id} failed to prune\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "logger.warning",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "logger",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "warning",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(f\"Webhook #{webhook.id} failed to prune\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "f\"Webhook #{webhook.id} failed to prune\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "f\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Webhook #",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "interpolation",
                                                                                            "label": "{webhook.id}",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "webhook.id",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "webhook",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "id",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": " failed to prune",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def _get_provider_oauth_handler(\n    req: Request, provider_name: ProviderName\n) -> \"BaseOAuthHandler\":\n    if provider_name not in HANDLERS_BY_NAME:\n        raise HTTPException(\n            status_code=404,\n            detail=f\"Provider '{provider_name.value}' does not support OAuth\",\n        )\n\n    client_id = getattr(settings.secrets, f\"{provider_name.value}_client_id\")\n    client_secret = getattr(settings.secrets, f\"{provider_name.value}_client_secret\")\n    if not (client_id and client_secret):\n        raise HTTPException(\n            status_code=501,\n            detail=(\n                f\"Integration with provider '{provider_name.value}' is not configured\"\n            ),\n        )\n\n    handler_class = HANDLERS_BY_NAME[provider_name]\n    frontend_base_url = (\n        settings.config.frontend_base_url\n        or settings.config.platform_base_url\n        or str(req.base_url)\n    )\n    return handler_class(\n        client_id=client_id,\n        client_secret=client_secret,\n        redirect_uri=f\"{frontend_base_url}/auth/integrations/oauth_callback\",\n    )",
            "children": [
                {
                    "type": "identifier",
                    "label": "_get_provider_oauth_handler",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(\n    req: Request, provider_name: ProviderName\n)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "req: Request",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "req",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "Request",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "Request",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "provider_name: ProviderName",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "provider_name",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "ProviderName",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "ProviderName",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "\"BaseOAuthHandler\"",
                    "children": [
                        {
                            "type": "string",
                            "label": "\"BaseOAuthHandler\"",
                            "children": [
                                {
                                    "type": "string_start",
                                    "label": "\"",
                                    "children": []
                                },
                                {
                                    "type": "string_content",
                                    "label": "BaseOAuthHandler",
                                    "children": []
                                },
                                {
                                    "type": "string_end",
                                    "label": "\"",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "if provider_name not in HANDLERS_BY_NAME:\n        raise HTTPException(\n            status_code=404,\n            detail=f\"Provider '{provider_name.value}' does not support OAuth\",\n        )\n\n    client_id = getattr(settings.secrets, f\"{provider_name.value}_client_id\")\n    client_secret = getattr(settings.secrets, f\"{provider_name.value}_client_secret\")\n    if not (client_id and client_secret):\n        raise HTTPException(\n            status_code=501,\n            detail=(\n                f\"Integration with provider '{provider_name.value}' is not configured\"\n            ),\n        )\n\n    handler_class = HANDLERS_BY_NAME[provider_name]\n    frontend_base_url = (\n        settings.config.frontend_base_url\n        or settings.config.platform_base_url\n        or str(req.base_url)\n    )\n    return handler_class(\n        client_id=client_id,\n        client_secret=client_secret,\n        redirect_uri=f\"{frontend_base_url}/auth/integrations/oauth_callback\",\n    )",
                    "children": [
                        {
                            "type": "if_statement",
                            "label": "if provider_name not in HANDLERS_BY_NAME:\n        raise HTTPException(\n            status_code=404,\n            detail=f\"Provider '{provider_name.value}' does not support OAuth\",\n        )",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "label": "provider_name not in HANDLERS_BY_NAME",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "provider_name",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "HANDLERS_BY_NAME",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "raise HTTPException(\n            status_code=404,\n            detail=f\"Provider '{provider_name.value}' does not support OAuth\",\n        )",
                                    "children": [
                                        {
                                            "type": "raise_statement",
                                            "label": "raise HTTPException(\n            status_code=404,\n            detail=f\"Provider '{provider_name.value}' does not support OAuth\",\n        )",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "HTTPException(\n            status_code=404,\n            detail=f\"Provider '{provider_name.value}' does not support OAuth\",\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "HTTPException",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n            status_code=404,\n            detail=f\"Provider '{provider_name.value}' does not support OAuth\",\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "status_code=404",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "status_code",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "404",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "detail=f\"Provider '{provider_name.value}' does not support OAuth\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "detail",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "f\"Provider '{provider_name.value}' does not support OAuth\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "f\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "Provider '",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{provider_name.value}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "provider_name.value",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "provider_name",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "value",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "' does not support OAuth",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "client_id = getattr(settings.secrets, f\"{provider_name.value}_client_id\")",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "client_id = getattr(settings.secrets, f\"{provider_name.value}_client_id\")",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "client_id",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "getattr(settings.secrets, f\"{provider_name.value}_client_id\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "getattr",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(settings.secrets, f\"{provider_name.value}_client_id\")",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "settings.secrets",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "settings",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "secrets",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "label": "f\"{provider_name.value}_client_id\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "f\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "interpolation",
                                                                    "label": "{provider_name.value}",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "provider_name.value",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "provider_name",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "value",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "_client_id",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "client_secret = getattr(settings.secrets, f\"{provider_name.value}_client_secret\")",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "client_secret = getattr(settings.secrets, f\"{provider_name.value}_client_secret\")",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "client_secret",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "getattr(settings.secrets, f\"{provider_name.value}_client_secret\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "getattr",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(settings.secrets, f\"{provider_name.value}_client_secret\")",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "settings.secrets",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "settings",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "secrets",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "label": "f\"{provider_name.value}_client_secret\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "f\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "interpolation",
                                                                    "label": "{provider_name.value}",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "provider_name.value",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "provider_name",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "value",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "_client_secret",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if not (client_id and client_secret):\n        raise HTTPException(\n            status_code=501,\n            detail=(\n                f\"Integration with provider '{provider_name.value}' is not configured\"\n            ),\n        )",
                            "children": [
                                {
                                    "type": "not_operator",
                                    "label": "not (client_id and client_secret)",
                                    "children": [
                                        {
                                            "type": "parenthesized_expression",
                                            "label": "(client_id and client_secret)",
                                            "children": [
                                                {
                                                    "type": "boolean_operator",
                                                    "label": "client_id and client_secret",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "client_id",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "client_secret",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "raise HTTPException(\n            status_code=501,\n            detail=(\n                f\"Integration with provider '{provider_name.value}' is not configured\"\n            ),\n        )",
                                    "children": [
                                        {
                                            "type": "raise_statement",
                                            "label": "raise HTTPException(\n            status_code=501,\n            detail=(\n                f\"Integration with provider '{provider_name.value}' is not configured\"\n            ),\n        )",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "HTTPException(\n            status_code=501,\n            detail=(\n                f\"Integration with provider '{provider_name.value}' is not configured\"\n            ),\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "HTTPException",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n            status_code=501,\n            detail=(\n                f\"Integration with provider '{provider_name.value}' is not configured\"\n            ),\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "status_code=501",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "status_code",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "501",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "detail=(\n                f\"Integration with provider '{provider_name.value}' is not configured\"\n            )",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "detail",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "parenthesized_expression",
                                                                            "label": "(\n                f\"Integration with provider '{provider_name.value}' is not configured\"\n            )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "f\"Integration with provider '{provider_name.value}' is not configured\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "f\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Integration with provider '",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "interpolation",
                                                                                            "label": "{provider_name.value}",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "provider_name.value",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "provider_name",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "value",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "' is not configured",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "handler_class = HANDLERS_BY_NAME[provider_name]",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "handler_class = HANDLERS_BY_NAME[provider_name]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "handler_class",
                                            "children": []
                                        },
                                        {
                                            "type": "subscript",
                                            "label": "HANDLERS_BY_NAME[provider_name]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "HANDLERS_BY_NAME",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "provider_name",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "frontend_base_url = (\n        settings.config.frontend_base_url\n        or settings.config.platform_base_url\n        or str(req.base_url)\n    )",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "frontend_base_url = (\n        settings.config.frontend_base_url\n        or settings.config.platform_base_url\n        or str(req.base_url)\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "frontend_base_url",
                                            "children": []
                                        },
                                        {
                                            "type": "parenthesized_expression",
                                            "label": "(\n        settings.config.frontend_base_url\n        or settings.config.platform_base_url\n        or str(req.base_url)\n    )",
                                            "children": [
                                                {
                                                    "type": "boolean_operator",
                                                    "label": "settings.config.frontend_base_url\n        or settings.config.platform_base_url\n        or str(req.base_url)",
                                                    "children": [
                                                        {
                                                            "type": "boolean_operator",
                                                            "label": "settings.config.frontend_base_url\n        or settings.config.platform_base_url",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "settings.config.frontend_base_url",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "settings.config",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "settings",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "config",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "frontend_base_url",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "settings.config.platform_base_url",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "settings.config",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "settings",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "config",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "platform_base_url",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "str(req.base_url)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(req.base_url)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "req.base_url",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "req",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "base_url",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return handler_class(\n        client_id=client_id,\n        client_secret=client_secret,\n        redirect_uri=f\"{frontend_base_url}/auth/integrations/oauth_callback\",\n    )",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "handler_class(\n        client_id=client_id,\n        client_secret=client_secret,\n        redirect_uri=f\"{frontend_base_url}/auth/integrations/oauth_callback\",\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "handler_class",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(\n        client_id=client_id,\n        client_secret=client_secret,\n        redirect_uri=f\"{frontend_base_url}/auth/integrations/oauth_callback\",\n    )",
                                            "children": [
                                                {
                                                    "type": "keyword_argument",
                                                    "label": "client_id=client_id",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "client_id",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "client_id",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "keyword_argument",
                                                    "label": "client_secret=client_secret",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "client_secret",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "client_secret",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "keyword_argument",
                                                    "label": "redirect_uri=f\"{frontend_base_url}/auth/integrations/oauth_callback\"",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "redirect_uri",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "label": "f\"{frontend_base_url}/auth/integrations/oauth_callback\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "f\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "interpolation",
                                                                    "label": "{frontend_base_url}",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "frontend_base_url",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "/auth/integrations/oauth_callback",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}