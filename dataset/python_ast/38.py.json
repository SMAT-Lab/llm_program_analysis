{
    "type": "module",
    "label": "import asyncio\nimport logging\nimport uuid\nfrom collections import defaultdict\nfrom datetime import datetime, timezone\nfrom typing import Any, Literal, Optional, Type\n\nimport prisma\nfrom prisma.models import AgentGraph, AgentGraphExecution, AgentNode, AgentNodeLink\nfrom prisma.types import AgentGraphWhereInput\nfrom pydantic.fields import computed_field\n\nfrom backend.blocks.agent import AgentExecutorBlock\nfrom backend.blocks.basic import AgentInputBlock, AgentOutputBlock\nfrom backend.util import json\n\nfrom .block import BlockInput, BlockType, get_block, get_blocks\nfrom .db import BaseDbModel, transaction\nfrom .execution import ExecutionStatus\nfrom .includes import AGENT_GRAPH_INCLUDE, AGENT_NODE_INCLUDE\nfrom .integrations import Webhook\n\nlogger = logging.getLogger(__name__)\n\n\nclass Link(BaseDbModel):\n    source_id: str\n    sink_id: str\n    source_name: str\n    sink_name: str\n    is_static: bool = False\n\n    @staticmethod\n    def from_db(link: AgentNodeLink):\n        return Link(\n            id=link.id,\n            source_name=link.sourceName,\n            source_id=link.agentNodeSourceId,\n            sink_name=link.sinkName,\n            sink_id=link.agentNodeSinkId,\n            is_static=link.isStatic,\n        )\n\n    def __hash__(self):\n        return hash((self.source_id, self.sink_id, self.source_name, self.sink_name))\n\n\nclass Node(BaseDbModel):\n    block_id: str\n    input_default: BlockInput = {}  # dict[input_name, default_value]\n    metadata: dict[str, Any] = {}\n    input_links: list[Link] = []\n    output_links: list[Link] = []\n\n    webhook_id: Optional[str] = None\n\n\nclass NodeModel(Node):\n    graph_id: str\n    graph_version: int\n\n    webhook: Optional[Webhook] = None\n\n    @staticmethod\n    def from_db(node: AgentNode):\n        if not node.AgentBlock:\n            raise ValueError(f\"Invalid node {node.id}, invalid AgentBlock.\")\n        obj = NodeModel(\n            id=node.id,\n            block_id=node.AgentBlock.id,\n            input_default=json.loads(node.constantInput, target_type=dict[str, Any]),\n            metadata=json.loads(node.metadata, target_type=dict[str, Any]),\n            graph_id=node.agentGraphId,\n            graph_version=node.agentGraphVersion,\n            webhook_id=node.webhookId,\n            webhook=Webhook.from_db(node.Webhook) if node.Webhook else None,\n        )\n        obj.input_links = [Link.from_db(link) for link in node.Input or []]\n        obj.output_links = [Link.from_db(link) for link in node.Output or []]\n        return obj\n\n    def is_triggered_by_event_type(self, event_type: str) -> bool:\n        if not (block := get_block(self.block_id)):\n            raise ValueError(f\"Block #{self.block_id} not found for node #{self.id}\")\n        if not block.webhook_config:\n            raise TypeError(\"This method can't be used on non-webhook blocks\")\n        if not block.webhook_config.event_filter_input:\n            return True\n        event_filter = self.input_default.get(block.webhook_config.event_filter_input)\n        if not event_filter:\n            raise ValueError(f\"Event filter is not configured on node #{self.id}\")\n        return event_type in [\n            block.webhook_config.event_format.format(event=k)\n            for k in event_filter\n            if event_filter[k] is True\n        ]\n\n\n# Fix 2-way reference Node <-> Webhook\nWebhook.model_rebuild()\n\n\nclass GraphExecution(BaseDbModel):\n    execution_id: str\n    started_at: datetime\n    ended_at: datetime\n    duration: float\n    total_run_time: float\n    status: ExecutionStatus\n    graph_id: str\n    graph_version: int\n\n    @staticmethod\n    def from_db(execution: AgentGraphExecution):\n        now = datetime.now(timezone.utc)\n        start_time = execution.startedAt or execution.createdAt\n        end_time = execution.updatedAt or now\n        duration = (end_time - start_time).total_seconds()\n        total_run_time = duration\n\n        try:\n            stats = json.loads(execution.stats or \"{}\", target_type=dict[str, Any])\n        except ValueError:\n            stats = {}\n\n        duration = stats.get(\"walltime\", duration)\n        total_run_time = stats.get(\"nodes_walltime\", total_run_time)\n\n        return GraphExecution(\n            id=execution.id,\n            execution_id=execution.id,\n            started_at=start_time,\n            ended_at=end_time,\n            duration=duration,\n            total_run_time=total_run_time,\n            status=ExecutionStatus(execution.executionStatus),\n            graph_id=execution.agentGraphId,\n            graph_version=execution.agentGraphVersion,\n        )\n\n\nclass Graph(BaseDbModel):\n    version: int = 1\n    is_active: bool = True\n    is_template: bool = False\n    name: str\n    description: str\n    nodes: list[Node] = []\n    links: list[Link] = []\n\n    @computed_field\n    @property\n    def input_schema(self) -> dict[str, Any]:\n        return self._generate_schema(\n            AgentInputBlock.Input,\n            [\n                node.input_default\n                for node in self.nodes\n                if (b := get_block(node.block_id))\n                and b.block_type == BlockType.INPUT\n                and \"name\" in node.input_default\n            ],\n        )\n\n    @computed_field\n    @property\n    def output_schema(self) -> dict[str, Any]:\n        return self._generate_schema(\n            AgentOutputBlock.Input,\n            [\n                node.input_default\n                for node in self.nodes\n                if (b := get_block(node.block_id))\n                and b.block_type == BlockType.OUTPUT\n                and \"name\" in node.input_default\n            ],\n        )\n\n    @staticmethod\n    def _generate_schema(\n        type_class: Type[AgentInputBlock.Input] | Type[AgentOutputBlock.Input],\n        data: list[dict],\n    ) -> dict[str, Any]:\n        props = []\n        for p in data:\n            try:\n                props.append(type_class(**p))\n            except Exception as e:\n                logger.warning(f\"Invalid {type_class}: {p}, {e}\")\n\n        return {\n            \"type\": \"object\",\n            \"properties\": {\n                p.name: {\n                    \"secret\": p.secret,\n                    \"advanced\": p.advanced,\n                    \"title\": p.title or p.name,\n                    **({\"description\": p.description} if p.description else {}),\n                    **({\"default\": p.value} if p.value is not None else {}),\n                }\n                for p in props\n            },\n            \"required\": [p.name for p in props if p.value is None],\n        }\n\n\nclass GraphModel(Graph):\n    user_id: str\n    nodes: list[NodeModel] = []  # type: ignore\n\n    @property\n    def starting_nodes(self) -> list[Node]:\n        outbound_nodes = {link.sink_id for link in self.links}\n        input_nodes = {\n            v.id\n            for v in self.nodes\n            if (b := get_block(v.block_id)) and b.block_type == BlockType.INPUT\n        }\n        return [\n            node\n            for node in self.nodes\n            if node.id not in outbound_nodes or node.id in input_nodes\n        ]\n\n    def reassign_ids(self, user_id: str, reassign_graph_id: bool = False):\n        \"\"\"\n        Reassigns all IDs in the graph to new UUIDs.\n        This method can be used before storing a new graph to the database.\n        \"\"\"\n\n        # Reassign Graph ID\n        id_map = {node.id: str(uuid.uuid4()) for node in self.nodes}\n        if reassign_graph_id:\n            self.id = str(uuid.uuid4())\n\n        # Reassign Node IDs\n        for node in self.nodes:\n            node.id = id_map[node.id]\n\n        # Reassign Link IDs\n        for link in self.links:\n            link.source_id = id_map[link.source_id]\n            link.sink_id = id_map[link.sink_id]\n\n        # Reassign User IDs for agent blocks\n        for node in self.nodes:\n            if node.block_id != AgentExecutorBlock().id:\n                continue\n            node.input_default[\"user_id\"] = user_id\n            node.input_default.setdefault(\"data\", {})\n\n        self.validate_graph()\n\n    def validate_graph(self, for_run: bool = False):\n        def sanitize(name):\n            return name.split(\"_#_\")[0].split(\"_@_\")[0].split(\"_$_\")[0]\n\n        input_links = defaultdict(list)\n        for link in self.links:\n            input_links[link.sink_id].append(link)\n\n        # Nodes: required fields are filled or connected and dependencies are satisfied\n        for node in self.nodes:\n            block = get_block(node.block_id)\n            if block is None:\n                raise ValueError(f\"Invalid block {node.block_id} for node #{node.id}\")\n\n            provided_inputs = set(\n                [sanitize(name) for name in node.input_default]\n                + [sanitize(link.sink_name) for link in input_links.get(node.id, [])]\n            )\n            for name in block.input_schema.get_required_fields():\n                if (\n                    name not in provided_inputs\n                    and not (\n                        name == \"payload\"\n                        and block.block_type\n                        in (BlockType.WEBHOOK, BlockType.WEBHOOK_MANUAL)\n                    )\n                    and (\n                        for_run  # Skip input completion validation, unless when executing.\n                        or block.block_type == BlockType.INPUT\n                        or block.block_type == BlockType.OUTPUT\n                        or block.block_type == BlockType.AGENT\n                    )\n                ):\n                    raise ValueError(\n                        f\"Node {block.name} #{node.id} required input missing: `{name}`\"\n                    )\n\n            # Get input schema properties and check dependencies\n            input_schema = block.input_schema.model_fields\n            required_fields = block.input_schema.get_required_fields()\n\n            def has_value(name):\n                return (\n                    node is not None\n                    and name in node.input_default\n                    and node.input_default[name] is not None\n                    and str(node.input_default[name]).strip() != \"\"\n                ) or (name in input_schema and input_schema[name].default is not None)\n\n            # Validate dependencies between fields\n            for field_name, field_info in input_schema.items():\n                # Apply input dependency validation only on run & field with depends_on\n                json_schema_extra = field_info.json_schema_extra or {}\n                dependencies = json_schema_extra.get(\"depends_on\", [])\n                if not for_run or not dependencies:\n                    continue\n\n                # Check if dependent field has value in input_default\n                field_has_value = has_value(field_name)\n                field_is_required = field_name in required_fields\n\n                # Check for missing dependencies when dependent field is present\n                missing_deps = [dep for dep in dependencies if not has_value(dep)]\n                if missing_deps and (field_has_value or field_is_required):\n                    raise ValueError(\n                        f\"Node {block.name} #{node.id}: Field `{field_name}` requires [{', '.join(missing_deps)}] to be set\"\n                    )\n\n        node_map = {v.id: v for v in self.nodes}\n\n        def is_static_output_block(nid: str) -> bool:\n            bid = node_map[nid].block_id\n            b = get_block(bid)\n            return b.static_output if b else False\n\n        # Links: links are connected and the connected pin data type are compatible.\n        for link in self.links:\n            source = (link.source_id, link.source_name)\n            sink = (link.sink_id, link.sink_name)\n            suffix = f\"Link {source} <-> {sink}\"\n\n            for i, (node_id, name) in enumerate([source, sink]):\n                node = node_map.get(node_id)\n                if not node:\n                    raise ValueError(\n                        f\"{suffix}, {node_id} is invalid node id, available nodes: {node_map.keys()}\"\n                    )\n\n                block = get_block(node.block_id)\n                if not block:\n                    blocks = {v().id: v().name for v in get_blocks().values()}\n                    raise ValueError(\n                        f\"{suffix}, {node.block_id} is invalid block id, available blocks: {blocks}\"\n                    )\n\n                sanitized_name = sanitize(name)\n                vals = node.input_default\n                if i == 0:\n                    fields = (\n                        block.output_schema.get_fields()\n                        if block.block_type != BlockType.AGENT\n                        else vals.get(\"output_schema\", {}).get(\"properties\", {}).keys()\n                    )\n                else:\n                    fields = (\n                        block.input_schema.get_fields()\n                        if block.block_type != BlockType.AGENT\n                        else vals.get(\"input_schema\", {}).get(\"properties\", {}).keys()\n                    )\n                if sanitized_name not in fields:\n                    fields_msg = f\"Allowed fields: {fields}\"\n                    raise ValueError(f\"{suffix}, `{name}` invalid, {fields_msg}\")\n\n            if is_static_output_block(link.source_id):\n                link.is_static = True  # Each value block output should be static.\n\n    @staticmethod\n    def from_db(graph: AgentGraph, for_export: bool = False):\n        return GraphModel(\n            id=graph.id,\n            user_id=graph.userId,\n            version=graph.version,\n            is_active=graph.isActive,\n            is_template=graph.isTemplate,\n            name=graph.name or \"\",\n            description=graph.description or \"\",\n            nodes=[\n                NodeModel.from_db(GraphModel._process_node(node, for_export))\n                for node in graph.AgentNodes or []\n            ],\n            links=list(\n                {\n                    Link.from_db(link)\n                    for node in graph.AgentNodes or []\n                    for link in (node.Input or []) + (node.Output or [])\n                }\n            ),\n        )\n\n    @staticmethod\n    def _process_node(node: AgentNode, for_export: bool) -> AgentNode:\n        if for_export:\n            # Remove credentials from node input\n            if node.constantInput:\n                constant_input = json.loads(\n                    node.constantInput, target_type=dict[str, Any]\n                )\n                constant_input = GraphModel._hide_node_input_credentials(constant_input)\n                node.constantInput = json.dumps(constant_input)\n\n            # Remove webhook info\n            node.webhookId = None\n            node.Webhook = None\n\n        return node\n\n    @staticmethod\n    def _hide_node_input_credentials(input_data: dict[str, Any]) -> dict[str, Any]:\n        sensitive_keys = [\"credentials\", \"api_key\", \"password\", \"token\", \"secret\"]\n        result = {}\n        for key, value in input_data.items():\n            if isinstance(value, dict):\n                result[key] = GraphModel._hide_node_input_credentials(value)\n            elif isinstance(value, str) and any(\n                sensitive_key in key.lower() for sensitive_key in sensitive_keys\n            ):\n                # Skip this key-value pair in the result\n                continue\n            else:\n                result[key] = value\n        return result\n\n\n# --------------------- CRUD functions --------------------- #\n\n\nasync def get_node(node_id: str) -> NodeModel:\n    node = await AgentNode.prisma().find_unique_or_raise(\n        where={\"id\": node_id},\n        include=AGENT_NODE_INCLUDE,\n    )\n    return NodeModel.from_db(node)\n\n\nasync def set_node_webhook(node_id: str, webhook_id: str | None) -> NodeModel:\n    node = await AgentNode.prisma().update(\n        where={\"id\": node_id},\n        data=(\n            {\"Webhook\": {\"connect\": {\"id\": webhook_id}}}\n            if webhook_id\n            else {\"Webhook\": {\"disconnect\": True}}\n        ),\n        include=AGENT_NODE_INCLUDE,\n    )\n    if not node:\n        raise ValueError(f\"Node #{node_id} not found\")\n    return NodeModel.from_db(node)\n\n\nasync def get_graphs(\n    user_id: str,\n    filter_by: Literal[\"active\", \"template\"] | None = \"active\",\n) -> list[GraphModel]:\n    \"\"\"\n    Retrieves graph metadata objects.\n    Default behaviour is to get all currently active graphs.\n\n    Args:\n        filter_by: An optional filter to either select templates or active graphs.\n        user_id: The ID of the user that owns the graph.\n\n    Returns:\n        list[GraphModel]: A list of objects representing the retrieved graphs.\n    \"\"\"\n    where_clause: AgentGraphWhereInput = {\"userId\": user_id}\n\n    if filter_by == \"active\":\n        where_clause[\"isActive\"] = True\n    elif filter_by == \"template\":\n        where_clause[\"isTemplate\"] = True\n\n    graphs = await AgentGraph.prisma().find_many(\n        where=where_clause,\n        distinct=[\"id\"],\n        order={\"version\": \"desc\"},\n        include=AGENT_GRAPH_INCLUDE,\n    )\n\n    graph_models = []\n    for graph in graphs:\n        try:\n            graph_models.append(GraphModel.from_db(graph))\n        except Exception as e:\n            logger.error(f\"Error processing graph {graph.id}: {e}\")\n            continue\n\n    return graph_models\n\n\nasync def get_executions(user_id: str) -> list[GraphExecution]:\n    executions = await AgentGraphExecution.prisma().find_many(\n        where={\"userId\": user_id},\n        order={\"createdAt\": \"desc\"},\n    )\n    return [GraphExecution.from_db(execution) for execution in executions]\n\n\nasync def get_execution(user_id: str, execution_id: str) -> GraphExecution | None:\n    execution = await AgentGraphExecution.prisma().find_first(\n        where={\"id\": execution_id, \"userId\": user_id}\n    )\n    return GraphExecution.from_db(execution) if execution else None\n\n\nasync def get_graph(\n    graph_id: str,\n    version: int | None = None,\n    template: bool = False,\n    user_id: str | None = None,\n    for_export: bool = False,\n) -> GraphModel | None:\n    \"\"\"\n    Retrieves a graph from the DB.\n    Defaults to the version with `is_active` if `version` is not passed,\n    or the latest version with `is_template` if `template=True`.\n\n    Returns `None` if the record is not found.\n    \"\"\"\n    where_clause: AgentGraphWhereInput = {\n        \"id\": graph_id,\n    }\n    if version is not None:\n        where_clause[\"version\"] = version\n    elif not template:\n        where_clause[\"isActive\"] = True\n\n    # TODO: Fix hack workaround to get adding store agents to work\n    if user_id is not None and not template:\n        where_clause[\"userId\"] = user_id\n\n    graph = await AgentGraph.prisma().find_first(\n        where=where_clause,\n        include=AGENT_GRAPH_INCLUDE,\n        order={\"version\": \"desc\"},\n    )\n    return GraphModel.from_db(graph, for_export) if graph else None\n\n\nasync def set_graph_active_version(graph_id: str, version: int, user_id: str) -> None:\n    # Activate the requested version if it exists and is owned by the user.\n    updated_count = await AgentGraph.prisma().update_many(\n        data={\"isActive\": True},\n        where={\n            \"id\": graph_id,\n            \"version\": version,\n            \"userId\": user_id,\n        },\n    )\n    if updated_count == 0:\n        raise Exception(f\"Graph #{graph_id} v{version} not found or not owned by user\")\n\n    # Deactivate all other versions.\n    await AgentGraph.prisma().update_many(\n        data={\"isActive\": False},\n        where={\n            \"id\": graph_id,\n            \"version\": {\"not\": version},\n            \"userId\": user_id,\n            \"isActive\": True,\n        },\n    )\n\n\nasync def get_graph_all_versions(graph_id: str, user_id: str) -> list[GraphModel]:\n    graph_versions = await AgentGraph.prisma().find_many(\n        where={\"id\": graph_id, \"userId\": user_id},\n        order={\"version\": \"desc\"},\n        include=AGENT_GRAPH_INCLUDE,\n    )\n\n    if not graph_versions:\n        return []\n\n    return [GraphModel.from_db(graph) for graph in graph_versions]\n\n\nasync def delete_graph(graph_id: str, user_id: str) -> int:\n    entries_count = await AgentGraph.prisma().delete_many(\n        where={\"id\": graph_id, \"userId\": user_id}\n    )\n    if entries_count:\n        logger.info(f\"Deleted {entries_count} graph entries for Graph #{graph_id}\")\n    return entries_count\n\n\nasync def create_graph(graph: Graph, user_id: str) -> GraphModel:\n    async with transaction() as tx:\n        await __create_graph(tx, graph, user_id)\n\n    if created_graph := await get_graph(\n        graph.id, graph.version, graph.is_template, user_id=user_id\n    ):\n        return created_graph\n\n    raise ValueError(f\"Created graph {graph.id} v{graph.version} is not in DB\")\n\n\nasync def __create_graph(tx, graph: Graph, user_id: str):\n    await AgentGraph.prisma(tx).create(\n        data={\n            \"id\": graph.id,\n            \"version\": graph.version,\n            \"name\": graph.name,\n            \"description\": graph.description,\n            \"isTemplate\": graph.is_template,\n            \"isActive\": graph.is_active,\n            \"userId\": user_id,\n        }\n    )\n\n    await asyncio.gather(\n        *[\n            AgentNode.prisma(tx).create(\n                {\n                    \"id\": node.id,\n                    \"agentBlockId\": node.block_id,\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"constantInput\": json.dumps(node.input_default),\n                    \"metadata\": json.dumps(node.metadata),\n                }\n            )\n            for node in graph.nodes\n        ]\n    )\n\n    await asyncio.gather(\n        *[\n            AgentNodeLink.prisma(tx).create(\n                {\n                    \"id\": str(uuid.uuid4()),\n                    \"sourceName\": link.source_name,\n                    \"sinkName\": link.sink_name,\n                    \"agentNodeSourceId\": link.source_id,\n                    \"agentNodeSinkId\": link.sink_id,\n                    \"isStatic\": link.is_static,\n                }\n            )\n            for link in graph.links\n        ]\n    )\n\n\n# ------------------------ UTILITIES ------------------------ #\n\n\ndef make_graph_model(creatable_graph: Graph, user_id: str) -> GraphModel:\n    \"\"\"\n    Convert a Graph to a GraphModel, setting graph_id and graph_version on all nodes.\n\n    Args:\n        creatable_graph (Graph): The creatable graph to convert.\n        user_id (str): The ID of the user creating the graph.\n\n    Returns:\n        GraphModel: The converted Graph object.\n    \"\"\"\n    # Create a new Graph object, inheriting properties from CreatableGraph\n    return GraphModel(\n        **creatable_graph.model_dump(exclude={\"nodes\"}),\n        user_id=user_id,\n        nodes=[\n            NodeModel(\n                **creatable_node.model_dump(),\n                graph_id=creatable_graph.id,\n                graph_version=creatable_graph.version,\n            )\n            for creatable_node in creatable_graph.nodes\n        ],\n    )\n\n\nasync def fix_llm_provider_credentials():\n    \"\"\"Fix node credentials with provider `llm`\"\"\"\n    from backend.integrations.credentials_store import IntegrationCredentialsStore\n\n    from .user import get_user_integrations\n\n    store = IntegrationCredentialsStore()\n\n    broken_nodes = await prisma.get_client().query_raw(\n        \"\"\"\n        SELECT    graph.\"userId\"       user_id,\n                  node.id              node_id,\n                  node.\"constantInput\" node_preset_input\n        FROM      platform.\"AgentNode\"  node\n        LEFT JOIN platform.\"AgentGraph\" graph\n        ON        node.\"agentGraphId\" = graph.id\n        WHERE     node.\"constantInput\"::jsonb->'credentials'->>'provider' = 'llm'\n        ORDER BY  graph.\"userId\";\n        \"\"\"\n    )\n    logger.info(f\"Fixing LLM credential inputs on {len(broken_nodes)} nodes\")\n\n    user_id: str = \"\"\n    user_integrations = None\n    for node in broken_nodes:\n        if node[\"user_id\"] != user_id:\n            # Save queries by only fetching once per user\n            user_id = node[\"user_id\"]\n            user_integrations = await get_user_integrations(user_id)\n        elif not user_integrations:\n            raise RuntimeError(f\"Impossible state while processing node {node}\")\n\n        node_id: str = node[\"node_id\"]\n        node_preset_input: dict = json.loads(node[\"node_preset_input\"])\n        credentials_meta: dict = node_preset_input[\"credentials\"]\n\n        credentials = next(\n            (\n                c\n                for c in user_integrations.credentials\n                if c.id == credentials_meta[\"id\"]\n            ),\n            None,\n        )\n        if not credentials:\n            continue\n        if credentials.type != \"api_key\":\n            logger.warning(\n                f\"User {user_id} credentials {credentials.id} with provider 'llm' \"\n                f\"has invalid type '{credentials.type}'\"\n            )\n            continue\n\n        api_key = credentials.api_key.get_secret_value()\n        if api_key.startswith(\"sk-ant-api03-\"):\n            credentials.provider = credentials_meta[\"provider\"] = \"anthropic\"\n        elif api_key.startswith(\"sk-\"):\n            credentials.provider = credentials_meta[\"provider\"] = \"openai\"\n        elif api_key.startswith(\"gsk_\"):\n            credentials.provider = credentials_meta[\"provider\"] = \"groq\"\n        else:\n            logger.warning(\n                f\"Could not identify provider from key prefix {api_key[:13]}*****\"\n            )\n            continue\n\n        store.update_creds(user_id, credentials)\n        await AgentNode.prisma().update(\n            where={\"id\": node_id},\n            data={\"constantInput\": json.dumps(node_preset_input)},\n        )\n",
    "children": [
        {
            "type": "import_statement",
            "label": "import asyncio",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "asyncio",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "asyncio",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import logging",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "logging",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "logging",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import uuid",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "uuid",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "uuid",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from collections import defaultdict",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "collections",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "collections",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "defaultdict",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "defaultdict",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from datetime import datetime, timezone",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "datetime",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "datetime",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "datetime",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "datetime",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "timezone",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "timezone",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from typing import Any, Literal, Optional, Type",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "typing",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "typing",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Any",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Any",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Literal",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Literal",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Optional",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Optional",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Type",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Type",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import prisma",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "prisma",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "prisma",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from prisma.models import AgentGraph, AgentGraphExecution, AgentNode, AgentNodeLink",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "prisma.models",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "prisma",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "models",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "AgentGraph",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "AgentGraph",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "AgentGraphExecution",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "AgentGraphExecution",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "AgentNode",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "AgentNode",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "AgentNodeLink",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "AgentNodeLink",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from prisma.types import AgentGraphWhereInput",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "prisma.types",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "prisma",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "types",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "AgentGraphWhereInput",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "AgentGraphWhereInput",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from pydantic.fields import computed_field",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "pydantic.fields",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "pydantic",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "fields",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "computed_field",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "computed_field",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.blocks.agent import AgentExecutorBlock",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.blocks.agent",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "blocks",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "agent",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "AgentExecutorBlock",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "AgentExecutorBlock",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.blocks.basic import AgentInputBlock, AgentOutputBlock",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.blocks.basic",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "blocks",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "basic",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "AgentInputBlock",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "AgentInputBlock",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "AgentOutputBlock",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "AgentOutputBlock",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.util import json",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.util",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "util",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "json",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "json",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from .block import BlockInput, BlockType, get_block, get_blocks",
            "children": [
                {
                    "type": "relative_import",
                    "label": ".block",
                    "children": [
                        {
                            "type": "import_prefix",
                            "label": ".",
                            "children": []
                        },
                        {
                            "type": "dotted_name",
                            "label": "block",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "block",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "BlockInput",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "BlockInput",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "BlockType",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "BlockType",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "get_block",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "get_block",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "get_blocks",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "get_blocks",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from .db import BaseDbModel, transaction",
            "children": [
                {
                    "type": "relative_import",
                    "label": ".db",
                    "children": [
                        {
                            "type": "import_prefix",
                            "label": ".",
                            "children": []
                        },
                        {
                            "type": "dotted_name",
                            "label": "db",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "db",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "BaseDbModel",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "BaseDbModel",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "transaction",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "transaction",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from .execution import ExecutionStatus",
            "children": [
                {
                    "type": "relative_import",
                    "label": ".execution",
                    "children": [
                        {
                            "type": "import_prefix",
                            "label": ".",
                            "children": []
                        },
                        {
                            "type": "dotted_name",
                            "label": "execution",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "execution",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "ExecutionStatus",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "ExecutionStatus",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from .includes import AGENT_GRAPH_INCLUDE, AGENT_NODE_INCLUDE",
            "children": [
                {
                    "type": "relative_import",
                    "label": ".includes",
                    "children": [
                        {
                            "type": "import_prefix",
                            "label": ".",
                            "children": []
                        },
                        {
                            "type": "dotted_name",
                            "label": "includes",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "includes",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "AGENT_GRAPH_INCLUDE",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "AGENT_GRAPH_INCLUDE",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "AGENT_NODE_INCLUDE",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "AGENT_NODE_INCLUDE",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from .integrations import Webhook",
            "children": [
                {
                    "type": "relative_import",
                    "label": ".integrations",
                    "children": [
                        {
                            "type": "import_prefix",
                            "label": ".",
                            "children": []
                        },
                        {
                            "type": "dotted_name",
                            "label": "integrations",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "integrations",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Webhook",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Webhook",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "logger = logging.getLogger(__name__)",
            "children": [
                {
                    "type": "assignment",
                    "label": "logger = logging.getLogger(__name__)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "logger",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "logging.getLogger(__name__)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "logging.getLogger",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "logging",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "getLogger",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(__name__)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "__name__",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "label": "class Link(BaseDbModel):\n    source_id: str\n    sink_id: str\n    source_name: str\n    sink_name: str\n    is_static: bool = False\n\n    @staticmethod\n    def from_db(link: AgentNodeLink):\n        return Link(\n            id=link.id,\n            source_name=link.sourceName,\n            source_id=link.agentNodeSourceId,\n            sink_name=link.sinkName,\n            sink_id=link.agentNodeSinkId,\n            is_static=link.isStatic,\n        )\n\n    def __hash__(self):\n        return hash((self.source_id, self.sink_id, self.source_name, self.sink_name))",
            "children": [
                {
                    "type": "identifier",
                    "label": "Link",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "(BaseDbModel)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "BaseDbModel",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "source_id: str\n    sink_id: str\n    source_name: str\n    sink_name: str\n    is_static: bool = False\n\n    @staticmethod\n    def from_db(link: AgentNodeLink):\n        return Link(\n            id=link.id,\n            source_name=link.sourceName,\n            source_id=link.agentNodeSourceId,\n            sink_name=link.sinkName,\n            sink_id=link.agentNodeSinkId,\n            is_static=link.isStatic,\n        )\n\n    def __hash__(self):\n        return hash((self.source_id, self.sink_id, self.source_name, self.sink_name))",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "source_id: str",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "source_id: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "source_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "sink_id: str",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "sink_id: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "sink_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "source_name: str",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "source_name: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "source_name",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "sink_name: str",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "sink_name: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "sink_name",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "is_static: bool = False",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "is_static: bool = False",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "is_static",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "bool",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "bool",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "false",
                                            "label": "False",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "decorated_definition",
                            "label": "@staticmethod\n    def from_db(link: AgentNodeLink):\n        return Link(\n            id=link.id,\n            source_name=link.sourceName,\n            source_id=link.agentNodeSourceId,\n            sink_name=link.sinkName,\n            sink_id=link.agentNodeSinkId,\n            is_static=link.isStatic,\n        )",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@staticmethod",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "staticmethod",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "function_definition",
                                    "label": "def from_db(link: AgentNodeLink):\n        return Link(\n            id=link.id,\n            source_name=link.sourceName,\n            source_id=link.agentNodeSourceId,\n            sink_name=link.sinkName,\n            sink_id=link.agentNodeSinkId,\n            is_static=link.isStatic,\n        )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "from_db",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(link: AgentNodeLink)",
                                            "children": [
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "link: AgentNodeLink",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "link",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "AgentNodeLink",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "AgentNodeLink",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "return Link(\n            id=link.id,\n            source_name=link.sourceName,\n            source_id=link.agentNodeSourceId,\n            sink_name=link.sinkName,\n            sink_id=link.agentNodeSinkId,\n            is_static=link.isStatic,\n        )",
                                            "children": [
                                                {
                                                    "type": "return_statement",
                                                    "label": "return Link(\n            id=link.id,\n            source_name=link.sourceName,\n            source_id=link.agentNodeSourceId,\n            sink_name=link.sinkName,\n            sink_id=link.agentNodeSinkId,\n            is_static=link.isStatic,\n        )",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "Link(\n            id=link.id,\n            source_name=link.sourceName,\n            source_id=link.agentNodeSourceId,\n            sink_name=link.sinkName,\n            sink_id=link.agentNodeSinkId,\n            is_static=link.isStatic,\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Link",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n            id=link.id,\n            source_name=link.sourceName,\n            source_id=link.agentNodeSourceId,\n            sink_name=link.sinkName,\n            sink_id=link.agentNodeSinkId,\n            is_static=link.isStatic,\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "id=link.id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "link.id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "link",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "source_name=link.sourceName",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "source_name",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "link.sourceName",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "link",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "sourceName",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "source_id=link.agentNodeSourceId",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "source_id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "link.agentNodeSourceId",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "link",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "agentNodeSourceId",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "sink_name=link.sinkName",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "sink_name",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "link.sinkName",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "link",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "sinkName",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "sink_id=link.agentNodeSinkId",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "sink_id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "link.agentNodeSinkId",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "link",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "agentNodeSinkId",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "is_static=link.isStatic",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "is_static",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "link.isStatic",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "link",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "isStatic",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def __hash__(self):\n        return hash((self.source_id, self.sink_id, self.source_name, self.sink_name))",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "__hash__",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "return hash((self.source_id, self.sink_id, self.source_name, self.sink_name))",
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "label": "return hash((self.source_id, self.sink_id, self.source_name, self.sink_name))",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "hash((self.source_id, self.sink_id, self.source_name, self.sink_name))",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "hash",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "((self.source_id, self.sink_id, self.source_name, self.sink_name))",
                                                            "children": [
                                                                {
                                                                    "type": "tuple",
                                                                    "label": "(self.source_id, self.sink_id, self.source_name, self.sink_name)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "self.source_id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "self",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "source_id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "self.sink_id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "self",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "sink_id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "self.source_name",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "self",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "source_name",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "self.sink_name",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "self",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "sink_name",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "label": "class Node(BaseDbModel):\n    block_id: str\n    input_default: BlockInput = {}  # dict[input_name, default_value]\n    metadata: dict[str, Any] = {}\n    input_links: list[Link] = []\n    output_links: list[Link] = []\n\n    webhook_id: Optional[str] = None",
            "children": [
                {
                    "type": "identifier",
                    "label": "Node",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "(BaseDbModel)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "BaseDbModel",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "block_id: str\n    input_default: BlockInput = {}  # dict[input_name, default_value]\n    metadata: dict[str, Any] = {}\n    input_links: list[Link] = []\n    output_links: list[Link] = []\n\n    webhook_id: Optional[str] = None",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "block_id: str",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "block_id: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "block_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "input_default: BlockInput = {}",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "input_default: BlockInput = {}",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "input_default",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "BlockInput",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "BlockInput",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "dictionary",
                                            "label": "{}",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# dict[input_name, default_value]",
                            "children": []
                        },
                        {
                            "type": "expression_statement",
                            "label": "metadata: dict[str, Any] = {}",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "metadata: dict[str, Any] = {}",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "metadata",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "dict[str, Any]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "dict[str, Any]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "dict",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Any]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Any",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "Any",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "dictionary",
                                            "label": "{}",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "input_links: list[Link] = []",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "input_links: list[Link] = []",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "input_links",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "list[Link]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "list[Link]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "list",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[Link]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "Link",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "Link",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "list",
                                            "label": "[]",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "output_links: list[Link] = []",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "output_links: list[Link] = []",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "output_links",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "list[Link]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "list[Link]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "list",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[Link]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "Link",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "Link",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "list",
                                            "label": "[]",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "webhook_id: Optional[str] = None",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "webhook_id: Optional[str] = None",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "webhook_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Optional[str]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Optional[str]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Optional",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "none",
                                            "label": "None",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "label": "class NodeModel(Node):\n    graph_id: str\n    graph_version: int\n\n    webhook: Optional[Webhook] = None\n\n    @staticmethod\n    def from_db(node: AgentNode):\n        if not node.AgentBlock:\n            raise ValueError(f\"Invalid node {node.id}, invalid AgentBlock.\")\n        obj = NodeModel(\n            id=node.id,\n            block_id=node.AgentBlock.id,\n            input_default=json.loads(node.constantInput, target_type=dict[str, Any]),\n            metadata=json.loads(node.metadata, target_type=dict[str, Any]),\n            graph_id=node.agentGraphId,\n            graph_version=node.agentGraphVersion,\n            webhook_id=node.webhookId,\n            webhook=Webhook.from_db(node.Webhook) if node.Webhook else None,\n        )\n        obj.input_links = [Link.from_db(link) for link in node.Input or []]\n        obj.output_links = [Link.from_db(link) for link in node.Output or []]\n        return obj\n\n    def is_triggered_by_event_type(self, event_type: str) -> bool:\n        if not (block := get_block(self.block_id)):\n            raise ValueError(f\"Block #{self.block_id} not found for node #{self.id}\")\n        if not block.webhook_config:\n            raise TypeError(\"This method can't be used on non-webhook blocks\")\n        if not block.webhook_config.event_filter_input:\n            return True\n        event_filter = self.input_default.get(block.webhook_config.event_filter_input)\n        if not event_filter:\n            raise ValueError(f\"Event filter is not configured on node #{self.id}\")\n        return event_type in [\n            block.webhook_config.event_format.format(event=k)\n            for k in event_filter\n            if event_filter[k] is True\n        ]",
            "children": [
                {
                    "type": "identifier",
                    "label": "NodeModel",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "(Node)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Node",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "graph_id: str\n    graph_version: int\n\n    webhook: Optional[Webhook] = None\n\n    @staticmethod\n    def from_db(node: AgentNode):\n        if not node.AgentBlock:\n            raise ValueError(f\"Invalid node {node.id}, invalid AgentBlock.\")\n        obj = NodeModel(\n            id=node.id,\n            block_id=node.AgentBlock.id,\n            input_default=json.loads(node.constantInput, target_type=dict[str, Any]),\n            metadata=json.loads(node.metadata, target_type=dict[str, Any]),\n            graph_id=node.agentGraphId,\n            graph_version=node.agentGraphVersion,\n            webhook_id=node.webhookId,\n            webhook=Webhook.from_db(node.Webhook) if node.Webhook else None,\n        )\n        obj.input_links = [Link.from_db(link) for link in node.Input or []]\n        obj.output_links = [Link.from_db(link) for link in node.Output or []]\n        return obj\n\n    def is_triggered_by_event_type(self, event_type: str) -> bool:\n        if not (block := get_block(self.block_id)):\n            raise ValueError(f\"Block #{self.block_id} not found for node #{self.id}\")\n        if not block.webhook_config:\n            raise TypeError(\"This method can't be used on non-webhook blocks\")\n        if not block.webhook_config.event_filter_input:\n            return True\n        event_filter = self.input_default.get(block.webhook_config.event_filter_input)\n        if not event_filter:\n            raise ValueError(f\"Event filter is not configured on node #{self.id}\")\n        return event_type in [\n            block.webhook_config.event_format.format(event=k)\n            for k in event_filter\n            if event_filter[k] is True\n        ]",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "graph_id: str",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "graph_id: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graph_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "graph_version: int",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "graph_version: int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graph_version",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "int",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "int",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "webhook: Optional[Webhook] = None",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "webhook: Optional[Webhook] = None",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "webhook",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "Optional[Webhook]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "Optional[Webhook]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Optional",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[Webhook]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "Webhook",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "Webhook",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "none",
                                            "label": "None",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "decorated_definition",
                            "label": "@staticmethod\n    def from_db(node: AgentNode):\n        if not node.AgentBlock:\n            raise ValueError(f\"Invalid node {node.id}, invalid AgentBlock.\")\n        obj = NodeModel(\n            id=node.id,\n            block_id=node.AgentBlock.id,\n            input_default=json.loads(node.constantInput, target_type=dict[str, Any]),\n            metadata=json.loads(node.metadata, target_type=dict[str, Any]),\n            graph_id=node.agentGraphId,\n            graph_version=node.agentGraphVersion,\n            webhook_id=node.webhookId,\n            webhook=Webhook.from_db(node.Webhook) if node.Webhook else None,\n        )\n        obj.input_links = [Link.from_db(link) for link in node.Input or []]\n        obj.output_links = [Link.from_db(link) for link in node.Output or []]\n        return obj",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@staticmethod",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "staticmethod",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "function_definition",
                                    "label": "def from_db(node: AgentNode):\n        if not node.AgentBlock:\n            raise ValueError(f\"Invalid node {node.id}, invalid AgentBlock.\")\n        obj = NodeModel(\n            id=node.id,\n            block_id=node.AgentBlock.id,\n            input_default=json.loads(node.constantInput, target_type=dict[str, Any]),\n            metadata=json.loads(node.metadata, target_type=dict[str, Any]),\n            graph_id=node.agentGraphId,\n            graph_version=node.agentGraphVersion,\n            webhook_id=node.webhookId,\n            webhook=Webhook.from_db(node.Webhook) if node.Webhook else None,\n        )\n        obj.input_links = [Link.from_db(link) for link in node.Input or []]\n        obj.output_links = [Link.from_db(link) for link in node.Output or []]\n        return obj",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "from_db",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(node: AgentNode)",
                                            "children": [
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "node: AgentNode",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "node",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "AgentNode",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "AgentNode",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "if not node.AgentBlock:\n            raise ValueError(f\"Invalid node {node.id}, invalid AgentBlock.\")\n        obj = NodeModel(\n            id=node.id,\n            block_id=node.AgentBlock.id,\n            input_default=json.loads(node.constantInput, target_type=dict[str, Any]),\n            metadata=json.loads(node.metadata, target_type=dict[str, Any]),\n            graph_id=node.agentGraphId,\n            graph_version=node.agentGraphVersion,\n            webhook_id=node.webhookId,\n            webhook=Webhook.from_db(node.Webhook) if node.Webhook else None,\n        )\n        obj.input_links = [Link.from_db(link) for link in node.Input or []]\n        obj.output_links = [Link.from_db(link) for link in node.Output or []]\n        return obj",
                                            "children": [
                                                {
                                                    "type": "if_statement",
                                                    "label": "if not node.AgentBlock:\n            raise ValueError(f\"Invalid node {node.id}, invalid AgentBlock.\")",
                                                    "children": [
                                                        {
                                                            "type": "not_operator",
                                                            "label": "not node.AgentBlock",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "node.AgentBlock",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "node",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "AgentBlock",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "raise ValueError(f\"Invalid node {node.id}, invalid AgentBlock.\")",
                                                            "children": [
                                                                {
                                                                    "type": "raise_statement",
                                                                    "label": "raise ValueError(f\"Invalid node {node.id}, invalid AgentBlock.\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "ValueError(f\"Invalid node {node.id}, invalid AgentBlock.\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "ValueError",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(f\"Invalid node {node.id}, invalid AgentBlock.\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "f\"Invalid node {node.id}, invalid AgentBlock.\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "f\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "Invalid node ",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{node.id}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "node.id",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "node",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "id",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": ", invalid AgentBlock.",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "obj = NodeModel(\n            id=node.id,\n            block_id=node.AgentBlock.id,\n            input_default=json.loads(node.constantInput, target_type=dict[str, Any]),\n            metadata=json.loads(node.metadata, target_type=dict[str, Any]),\n            graph_id=node.agentGraphId,\n            graph_version=node.agentGraphVersion,\n            webhook_id=node.webhookId,\n            webhook=Webhook.from_db(node.Webhook) if node.Webhook else None,\n        )",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "obj = NodeModel(\n            id=node.id,\n            block_id=node.AgentBlock.id,\n            input_default=json.loads(node.constantInput, target_type=dict[str, Any]),\n            metadata=json.loads(node.metadata, target_type=dict[str, Any]),\n            graph_id=node.agentGraphId,\n            graph_version=node.agentGraphVersion,\n            webhook_id=node.webhookId,\n            webhook=Webhook.from_db(node.Webhook) if node.Webhook else None,\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "obj",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "NodeModel(\n            id=node.id,\n            block_id=node.AgentBlock.id,\n            input_default=json.loads(node.constantInput, target_type=dict[str, Any]),\n            metadata=json.loads(node.metadata, target_type=dict[str, Any]),\n            graph_id=node.agentGraphId,\n            graph_version=node.agentGraphVersion,\n            webhook_id=node.webhookId,\n            webhook=Webhook.from_db(node.Webhook) if node.Webhook else None,\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "NodeModel",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(\n            id=node.id,\n            block_id=node.AgentBlock.id,\n            input_default=json.loads(node.constantInput, target_type=dict[str, Any]),\n            metadata=json.loads(node.metadata, target_type=dict[str, Any]),\n            graph_id=node.agentGraphId,\n            graph_version=node.agentGraphVersion,\n            webhook_id=node.webhookId,\n            webhook=Webhook.from_db(node.Webhook) if node.Webhook else None,\n        )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "id=node.id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "id",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "node.id",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "node",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "block_id=node.AgentBlock.id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "block_id",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "node.AgentBlock.id",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "node.AgentBlock",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "node",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "AgentBlock",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "input_default=json.loads(node.constantInput, target_type=dict[str, Any])",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "input_default",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "json.loads(node.constantInput, target_type=dict[str, Any])",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "json.loads",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "json",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "loads",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(node.constantInput, target_type=dict[str, Any])",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "node.constantInput",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "node",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "constantInput",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "keyword_argument",
                                                                                                            "label": "target_type=dict[str, Any]",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "target_type",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "subscript",
                                                                                                                    "label": "dict[str, Any]",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "dict",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "str",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "Any",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "metadata=json.loads(node.metadata, target_type=dict[str, Any])",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "metadata",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "json.loads(node.metadata, target_type=dict[str, Any])",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "json.loads",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "json",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "loads",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(node.metadata, target_type=dict[str, Any])",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "node.metadata",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "node",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "metadata",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "keyword_argument",
                                                                                                            "label": "target_type=dict[str, Any]",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "target_type",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "subscript",
                                                                                                                    "label": "dict[str, Any]",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "dict",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "str",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "Any",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "graph_id=node.agentGraphId",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "graph_id",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "node.agentGraphId",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "node",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "agentGraphId",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "graph_version=node.agentGraphVersion",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "graph_version",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "node.agentGraphVersion",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "node",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "agentGraphVersion",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "webhook_id=node.webhookId",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "webhook_id",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "node.webhookId",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "node",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "webhookId",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "webhook=Webhook.from_db(node.Webhook) if node.Webhook else None",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "webhook",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "conditional_expression",
                                                                                            "label": "Webhook.from_db(node.Webhook) if node.Webhook else None",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "Webhook.from_db(node.Webhook)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "Webhook.from_db",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "Webhook",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "from_db",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(node.Webhook)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "attribute",
                                                                                                                    "label": "node.Webhook",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "node",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "Webhook",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "node.Webhook",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "node",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "Webhook",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "none",
                                                                                                    "label": "None",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "obj.input_links = [Link.from_db(link) for link in node.Input or []]",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "obj.input_links = [Link.from_db(link) for link in node.Input or []]",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "obj.input_links",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "obj",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "input_links",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "list_comprehension",
                                                                    "label": "[Link.from_db(link) for link in node.Input or []]",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Link.from_db(link)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "Link.from_db",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "Link",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "from_db",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(link)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "link",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "for_in_clause",
                                                                            "label": "for link in node.Input or []",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "link",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "boolean_operator",
                                                                                    "label": "node.Input or []",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "node.Input",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "node",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "Input",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "list",
                                                                                            "label": "[]",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "obj.output_links = [Link.from_db(link) for link in node.Output or []]",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "obj.output_links = [Link.from_db(link) for link in node.Output or []]",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "obj.output_links",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "obj",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "output_links",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "list_comprehension",
                                                                    "label": "[Link.from_db(link) for link in node.Output or []]",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "Link.from_db(link)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "Link.from_db",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "Link",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "from_db",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(link)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "link",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "for_in_clause",
                                                                            "label": "for link in node.Output or []",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "link",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "boolean_operator",
                                                                                    "label": "node.Output or []",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "node.Output",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "node",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "Output",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "list",
                                                                                            "label": "[]",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "return_statement",
                                                    "label": "return obj",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "obj",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def is_triggered_by_event_type(self, event_type: str) -> bool:\n        if not (block := get_block(self.block_id)):\n            raise ValueError(f\"Block #{self.block_id} not found for node #{self.id}\")\n        if not block.webhook_config:\n            raise TypeError(\"This method can't be used on non-webhook blocks\")\n        if not block.webhook_config.event_filter_input:\n            return True\n        event_filter = self.input_default.get(block.webhook_config.event_filter_input)\n        if not event_filter:\n            raise ValueError(f\"Event filter is not configured on node #{self.id}\")\n        return event_type in [\n            block.webhook_config.event_format.format(event=k)\n            for k in event_filter\n            if event_filter[k] is True\n        ]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "is_triggered_by_event_type",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, event_type: str)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "event_type: str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "event_type",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "str",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "label": "bool",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "bool",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "if not (block := get_block(self.block_id)):\n            raise ValueError(f\"Block #{self.block_id} not found for node #{self.id}\")\n        if not block.webhook_config:\n            raise TypeError(\"This method can't be used on non-webhook blocks\")\n        if not block.webhook_config.event_filter_input:\n            return True\n        event_filter = self.input_default.get(block.webhook_config.event_filter_input)\n        if not event_filter:\n            raise ValueError(f\"Event filter is not configured on node #{self.id}\")\n        return event_type in [\n            block.webhook_config.event_format.format(event=k)\n            for k in event_filter\n            if event_filter[k] is True\n        ]",
                                    "children": [
                                        {
                                            "type": "if_statement",
                                            "label": "if not (block := get_block(self.block_id)):\n            raise ValueError(f\"Block #{self.block_id} not found for node #{self.id}\")",
                                            "children": [
                                                {
                                                    "type": "not_operator",
                                                    "label": "not (block := get_block(self.block_id))",
                                                    "children": [
                                                        {
                                                            "type": "parenthesized_expression",
                                                            "label": "(block := get_block(self.block_id))",
                                                            "children": [
                                                                {
                                                                    "type": "named_expression",
                                                                    "label": "block := get_block(self.block_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "block",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "label": "get_block(self.block_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "get_block",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(self.block_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "self.block_id",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "self",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "block_id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "raise ValueError(f\"Block #{self.block_id} not found for node #{self.id}\")",
                                                    "children": [
                                                        {
                                                            "type": "raise_statement",
                                                            "label": "raise ValueError(f\"Block #{self.block_id} not found for node #{self.id}\")",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "ValueError(f\"Block #{self.block_id} not found for node #{self.id}\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "ValueError",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(f\"Block #{self.block_id} not found for node #{self.id}\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "f\"Block #{self.block_id} not found for node #{self.id}\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "f\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Block #",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "interpolation",
                                                                                            "label": "{self.block_id}",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "self.block_id",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "self",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "block_id",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": " not found for node #",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "interpolation",
                                                                                            "label": "{self.id}",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "self.id",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "self",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "id",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if not block.webhook_config:\n            raise TypeError(\"This method can't be used on non-webhook blocks\")",
                                            "children": [
                                                {
                                                    "type": "not_operator",
                                                    "label": "not block.webhook_config",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "block.webhook_config",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "block",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "webhook_config",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "raise TypeError(\"This method can't be used on non-webhook blocks\")",
                                                    "children": [
                                                        {
                                                            "type": "raise_statement",
                                                            "label": "raise TypeError(\"This method can't be used on non-webhook blocks\")",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "TypeError(\"This method can't be used on non-webhook blocks\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "TypeError",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(\"This method can't be used on non-webhook blocks\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"This method can't be used on non-webhook blocks\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "This method can't be used on non-webhook blocks",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if not block.webhook_config.event_filter_input:\n            return True",
                                            "children": [
                                                {
                                                    "type": "not_operator",
                                                    "label": "not block.webhook_config.event_filter_input",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "block.webhook_config.event_filter_input",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "block.webhook_config",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "block",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "webhook_config",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "event_filter_input",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "return True",
                                                    "children": [
                                                        {
                                                            "type": "return_statement",
                                                            "label": "return True",
                                                            "children": [
                                                                {
                                                                    "type": "true",
                                                                    "label": "True",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "event_filter = self.input_default.get(block.webhook_config.event_filter_input)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "event_filter = self.input_default.get(block.webhook_config.event_filter_input)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "event_filter",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "self.input_default.get(block.webhook_config.event_filter_input)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "self.input_default.get",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "self.input_default",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "self",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "input_default",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "get",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(block.webhook_config.event_filter_input)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "block.webhook_config.event_filter_input",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "block.webhook_config",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "block",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "webhook_config",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "event_filter_input",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if not event_filter:\n            raise ValueError(f\"Event filter is not configured on node #{self.id}\")",
                                            "children": [
                                                {
                                                    "type": "not_operator",
                                                    "label": "not event_filter",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "event_filter",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "raise ValueError(f\"Event filter is not configured on node #{self.id}\")",
                                                    "children": [
                                                        {
                                                            "type": "raise_statement",
                                                            "label": "raise ValueError(f\"Event filter is not configured on node #{self.id}\")",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "ValueError(f\"Event filter is not configured on node #{self.id}\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "ValueError",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(f\"Event filter is not configured on node #{self.id}\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "f\"Event filter is not configured on node #{self.id}\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "f\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Event filter is not configured on node #",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "interpolation",
                                                                                            "label": "{self.id}",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "self.id",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "self",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "id",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "label": "return event_type in [\n            block.webhook_config.event_format.format(event=k)\n            for k in event_filter\n            if event_filter[k] is True\n        ]",
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "label": "event_type in [\n            block.webhook_config.event_format.format(event=k)\n            for k in event_filter\n            if event_filter[k] is True\n        ]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "event_type",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "list_comprehension",
                                                            "label": "[\n            block.webhook_config.event_format.format(event=k)\n            for k in event_filter\n            if event_filter[k] is True\n        ]",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "block.webhook_config.event_format.format(event=k)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "block.webhook_config.event_format.format",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "block.webhook_config.event_format",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "block.webhook_config",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "block",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "webhook_config",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "event_format",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "format",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(event=k)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "event=k",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "event",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "k",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "for_in_clause",
                                                                    "label": "for k in event_filter",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "k",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "event_filter",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "if_clause",
                                                                    "label": "if event_filter[k] is True",
                                                                    "children": [
                                                                        {
                                                                            "type": "comparison_operator",
                                                                            "label": "event_filter[k] is True",
                                                                            "children": [
                                                                                {
                                                                                    "type": "subscript",
                                                                                    "label": "event_filter[k]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "event_filter",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "k",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "true",
                                                                                    "label": "True",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "comment",
            "label": "# Fix 2-way reference Node <-> Webhook",
            "children": []
        },
        {
            "type": "expression_statement",
            "label": "Webhook.model_rebuild()",
            "children": [
                {
                    "type": "call",
                    "label": "Webhook.model_rebuild()",
                    "children": [
                        {
                            "type": "attribute",
                            "label": "Webhook.model_rebuild",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "Webhook",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "model_rebuild",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "argument_list",
                            "label": "()",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "label": "class GraphExecution(BaseDbModel):\n    execution_id: str\n    started_at: datetime\n    ended_at: datetime\n    duration: float\n    total_run_time: float\n    status: ExecutionStatus\n    graph_id: str\n    graph_version: int\n\n    @staticmethod\n    def from_db(execution: AgentGraphExecution):\n        now = datetime.now(timezone.utc)\n        start_time = execution.startedAt or execution.createdAt\n        end_time = execution.updatedAt or now\n        duration = (end_time - start_time).total_seconds()\n        total_run_time = duration\n\n        try:\n            stats = json.loads(execution.stats or \"{}\", target_type=dict[str, Any])\n        except ValueError:\n            stats = {}\n\n        duration = stats.get(\"walltime\", duration)\n        total_run_time = stats.get(\"nodes_walltime\", total_run_time)\n\n        return GraphExecution(\n            id=execution.id,\n            execution_id=execution.id,\n            started_at=start_time,\n            ended_at=end_time,\n            duration=duration,\n            total_run_time=total_run_time,\n            status=ExecutionStatus(execution.executionStatus),\n            graph_id=execution.agentGraphId,\n            graph_version=execution.agentGraphVersion,\n        )",
            "children": [
                {
                    "type": "identifier",
                    "label": "GraphExecution",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "(BaseDbModel)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "BaseDbModel",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "execution_id: str\n    started_at: datetime\n    ended_at: datetime\n    duration: float\n    total_run_time: float\n    status: ExecutionStatus\n    graph_id: str\n    graph_version: int\n\n    @staticmethod\n    def from_db(execution: AgentGraphExecution):\n        now = datetime.now(timezone.utc)\n        start_time = execution.startedAt or execution.createdAt\n        end_time = execution.updatedAt or now\n        duration = (end_time - start_time).total_seconds()\n        total_run_time = duration\n\n        try:\n            stats = json.loads(execution.stats or \"{}\", target_type=dict[str, Any])\n        except ValueError:\n            stats = {}\n\n        duration = stats.get(\"walltime\", duration)\n        total_run_time = stats.get(\"nodes_walltime\", total_run_time)\n\n        return GraphExecution(\n            id=execution.id,\n            execution_id=execution.id,\n            started_at=start_time,\n            ended_at=end_time,\n            duration=duration,\n            total_run_time=total_run_time,\n            status=ExecutionStatus(execution.executionStatus),\n            graph_id=execution.agentGraphId,\n            graph_version=execution.agentGraphVersion,\n        )",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "execution_id: str",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "execution_id: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "execution_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "started_at: datetime",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "started_at: datetime",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "started_at",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "datetime",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "datetime",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "ended_at: datetime",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "ended_at: datetime",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "ended_at",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "datetime",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "datetime",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "duration: float",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "duration: float",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "duration",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "float",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "float",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "total_run_time: float",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "total_run_time: float",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "total_run_time",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "float",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "float",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "status: ExecutionStatus",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "status: ExecutionStatus",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "status",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "ExecutionStatus",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "ExecutionStatus",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "graph_id: str",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "graph_id: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graph_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "graph_version: int",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "graph_version: int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graph_version",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "int",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "int",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "decorated_definition",
                            "label": "@staticmethod\n    def from_db(execution: AgentGraphExecution):\n        now = datetime.now(timezone.utc)\n        start_time = execution.startedAt or execution.createdAt\n        end_time = execution.updatedAt or now\n        duration = (end_time - start_time).total_seconds()\n        total_run_time = duration\n\n        try:\n            stats = json.loads(execution.stats or \"{}\", target_type=dict[str, Any])\n        except ValueError:\n            stats = {}\n\n        duration = stats.get(\"walltime\", duration)\n        total_run_time = stats.get(\"nodes_walltime\", total_run_time)\n\n        return GraphExecution(\n            id=execution.id,\n            execution_id=execution.id,\n            started_at=start_time,\n            ended_at=end_time,\n            duration=duration,\n            total_run_time=total_run_time,\n            status=ExecutionStatus(execution.executionStatus),\n            graph_id=execution.agentGraphId,\n            graph_version=execution.agentGraphVersion,\n        )",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@staticmethod",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "staticmethod",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "function_definition",
                                    "label": "def from_db(execution: AgentGraphExecution):\n        now = datetime.now(timezone.utc)\n        start_time = execution.startedAt or execution.createdAt\n        end_time = execution.updatedAt or now\n        duration = (end_time - start_time).total_seconds()\n        total_run_time = duration\n\n        try:\n            stats = json.loads(execution.stats or \"{}\", target_type=dict[str, Any])\n        except ValueError:\n            stats = {}\n\n        duration = stats.get(\"walltime\", duration)\n        total_run_time = stats.get(\"nodes_walltime\", total_run_time)\n\n        return GraphExecution(\n            id=execution.id,\n            execution_id=execution.id,\n            started_at=start_time,\n            ended_at=end_time,\n            duration=duration,\n            total_run_time=total_run_time,\n            status=ExecutionStatus(execution.executionStatus),\n            graph_id=execution.agentGraphId,\n            graph_version=execution.agentGraphVersion,\n        )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "from_db",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(execution: AgentGraphExecution)",
                                            "children": [
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "execution: AgentGraphExecution",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "execution",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "AgentGraphExecution",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "AgentGraphExecution",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "now = datetime.now(timezone.utc)\n        start_time = execution.startedAt or execution.createdAt\n        end_time = execution.updatedAt or now\n        duration = (end_time - start_time).total_seconds()\n        total_run_time = duration\n\n        try:\n            stats = json.loads(execution.stats or \"{}\", target_type=dict[str, Any])\n        except ValueError:\n            stats = {}\n\n        duration = stats.get(\"walltime\", duration)\n        total_run_time = stats.get(\"nodes_walltime\", total_run_time)\n\n        return GraphExecution(\n            id=execution.id,\n            execution_id=execution.id,\n            started_at=start_time,\n            ended_at=end_time,\n            duration=duration,\n            total_run_time=total_run_time,\n            status=ExecutionStatus(execution.executionStatus),\n            graph_id=execution.agentGraphId,\n            graph_version=execution.agentGraphVersion,\n        )",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "now = datetime.now(timezone.utc)",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "now = datetime.now(timezone.utc)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "now",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "datetime.now(timezone.utc)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "datetime.now",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "datetime",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "now",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(timezone.utc)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "timezone.utc",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "timezone",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "utc",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "start_time = execution.startedAt or execution.createdAt",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "start_time = execution.startedAt or execution.createdAt",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "start_time",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "boolean_operator",
                                                                    "label": "execution.startedAt or execution.createdAt",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "execution.startedAt",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "execution",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "startedAt",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "execution.createdAt",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "execution",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "createdAt",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "end_time = execution.updatedAt or now",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "end_time = execution.updatedAt or now",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "end_time",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "boolean_operator",
                                                                    "label": "execution.updatedAt or now",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "execution.updatedAt",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "execution",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "updatedAt",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "now",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "duration = (end_time - start_time).total_seconds()",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "duration = (end_time - start_time).total_seconds()",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "duration",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "(end_time - start_time).total_seconds()",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "(end_time - start_time).total_seconds",
                                                                            "children": [
                                                                                {
                                                                                    "type": "parenthesized_expression",
                                                                                    "label": "(end_time - start_time)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "binary_operator",
                                                                                            "label": "end_time - start_time",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "end_time",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "start_time",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "total_seconds",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "total_run_time = duration",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "total_run_time = duration",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "total_run_time",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "duration",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "try_statement",
                                                    "label": "try:\n            stats = json.loads(execution.stats or \"{}\", target_type=dict[str, Any])\n        except ValueError:\n            stats = {}",
                                                    "children": [
                                                        {
                                                            "type": "block",
                                                            "label": "stats = json.loads(execution.stats or \"{}\", target_type=dict[str, Any])",
                                                            "children": [
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "stats = json.loads(execution.stats or \"{}\", target_type=dict[str, Any])",
                                                                    "children": [
                                                                        {
                                                                            "type": "assignment",
                                                                            "label": "stats = json.loads(execution.stats or \"{}\", target_type=dict[str, Any])",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "stats",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "json.loads(execution.stats or \"{}\", target_type=dict[str, Any])",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "json.loads",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "json",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "loads",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(execution.stats or \"{}\", target_type=dict[str, Any])",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "boolean_operator",
                                                                                                    "label": "execution.stats or \"{}\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "execution.stats",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "execution",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "stats",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"{}\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "{}",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "keyword_argument",
                                                                                                    "label": "target_type=dict[str, Any]",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "target_type",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "subscript",
                                                                                                            "label": "dict[str, Any]",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "dict",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "str",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "Any",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "except_clause",
                                                            "label": "except ValueError:\n            stats = {}",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "ValueError",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": "stats = {}",
                                                                    "children": [
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "label": "stats = {}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "assignment",
                                                                                    "label": "stats = {}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "stats",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "dictionary",
                                                                                            "label": "{}",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "duration = stats.get(\"walltime\", duration)",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "duration = stats.get(\"walltime\", duration)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "duration",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "stats.get(\"walltime\", duration)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "stats.get",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "stats",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "get",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(\"walltime\", duration)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"walltime\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "walltime",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "duration",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "total_run_time = stats.get(\"nodes_walltime\", total_run_time)",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "total_run_time = stats.get(\"nodes_walltime\", total_run_time)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "total_run_time",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "stats.get(\"nodes_walltime\", total_run_time)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "stats.get",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "stats",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "get",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(\"nodes_walltime\", total_run_time)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"nodes_walltime\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "nodes_walltime",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "total_run_time",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "return_statement",
                                                    "label": "return GraphExecution(\n            id=execution.id,\n            execution_id=execution.id,\n            started_at=start_time,\n            ended_at=end_time,\n            duration=duration,\n            total_run_time=total_run_time,\n            status=ExecutionStatus(execution.executionStatus),\n            graph_id=execution.agentGraphId,\n            graph_version=execution.agentGraphVersion,\n        )",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "GraphExecution(\n            id=execution.id,\n            execution_id=execution.id,\n            started_at=start_time,\n            ended_at=end_time,\n            duration=duration,\n            total_run_time=total_run_time,\n            status=ExecutionStatus(execution.executionStatus),\n            graph_id=execution.agentGraphId,\n            graph_version=execution.agentGraphVersion,\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "GraphExecution",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n            id=execution.id,\n            execution_id=execution.id,\n            started_at=start_time,\n            ended_at=end_time,\n            duration=duration,\n            total_run_time=total_run_time,\n            status=ExecutionStatus(execution.executionStatus),\n            graph_id=execution.agentGraphId,\n            graph_version=execution.agentGraphVersion,\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "id=execution.id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "execution.id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "execution",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "execution_id=execution.id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "execution_id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "execution.id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "execution",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "started_at=start_time",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "started_at",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "start_time",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "ended_at=end_time",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "ended_at",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "end_time",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "duration=duration",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "duration",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "duration",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "total_run_time=total_run_time",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "total_run_time",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "total_run_time",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "status=ExecutionStatus(execution.executionStatus)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "status",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "ExecutionStatus(execution.executionStatus)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "ExecutionStatus",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(execution.executionStatus)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "execution.executionStatus",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "execution",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "executionStatus",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "graph_id=execution.agentGraphId",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "graph_id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "execution.agentGraphId",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "execution",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "agentGraphId",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "graph_version=execution.agentGraphVersion",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "graph_version",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "execution.agentGraphVersion",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "execution",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "agentGraphVersion",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "label": "class Graph(BaseDbModel):\n    version: int = 1\n    is_active: bool = True\n    is_template: bool = False\n    name: str\n    description: str\n    nodes: list[Node] = []\n    links: list[Link] = []\n\n    @computed_field\n    @property\n    def input_schema(self) -> dict[str, Any]:\n        return self._generate_schema(\n            AgentInputBlock.Input,\n            [\n                node.input_default\n                for node in self.nodes\n                if (b := get_block(node.block_id))\n                and b.block_type == BlockType.INPUT\n                and \"name\" in node.input_default\n            ],\n        )\n\n    @computed_field\n    @property\n    def output_schema(self) -> dict[str, Any]:\n        return self._generate_schema(\n            AgentOutputBlock.Input,\n            [\n                node.input_default\n                for node in self.nodes\n                if (b := get_block(node.block_id))\n                and b.block_type == BlockType.OUTPUT\n                and \"name\" in node.input_default\n            ],\n        )\n\n    @staticmethod\n    def _generate_schema(\n        type_class: Type[AgentInputBlock.Input] | Type[AgentOutputBlock.Input],\n        data: list[dict],\n    ) -> dict[str, Any]:\n        props = []\n        for p in data:\n            try:\n                props.append(type_class(**p))\n            except Exception as e:\n                logger.warning(f\"Invalid {type_class}: {p}, {e}\")\n\n        return {\n            \"type\": \"object\",\n            \"properties\": {\n                p.name: {\n                    \"secret\": p.secret,\n                    \"advanced\": p.advanced,\n                    \"title\": p.title or p.name,\n                    **({\"description\": p.description} if p.description else {}),\n                    **({\"default\": p.value} if p.value is not None else {}),\n                }\n                for p in props\n            },\n            \"required\": [p.name for p in props if p.value is None],\n        }",
            "children": [
                {
                    "type": "identifier",
                    "label": "Graph",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "(BaseDbModel)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "BaseDbModel",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "version: int = 1\n    is_active: bool = True\n    is_template: bool = False\n    name: str\n    description: str\n    nodes: list[Node] = []\n    links: list[Link] = []\n\n    @computed_field\n    @property\n    def input_schema(self) -> dict[str, Any]:\n        return self._generate_schema(\n            AgentInputBlock.Input,\n            [\n                node.input_default\n                for node in self.nodes\n                if (b := get_block(node.block_id))\n                and b.block_type == BlockType.INPUT\n                and \"name\" in node.input_default\n            ],\n        )\n\n    @computed_field\n    @property\n    def output_schema(self) -> dict[str, Any]:\n        return self._generate_schema(\n            AgentOutputBlock.Input,\n            [\n                node.input_default\n                for node in self.nodes\n                if (b := get_block(node.block_id))\n                and b.block_type == BlockType.OUTPUT\n                and \"name\" in node.input_default\n            ],\n        )\n\n    @staticmethod\n    def _generate_schema(\n        type_class: Type[AgentInputBlock.Input] | Type[AgentOutputBlock.Input],\n        data: list[dict],\n    ) -> dict[str, Any]:\n        props = []\n        for p in data:\n            try:\n                props.append(type_class(**p))\n            except Exception as e:\n                logger.warning(f\"Invalid {type_class}: {p}, {e}\")\n\n        return {\n            \"type\": \"object\",\n            \"properties\": {\n                p.name: {\n                    \"secret\": p.secret,\n                    \"advanced\": p.advanced,\n                    \"title\": p.title or p.name,\n                    **({\"description\": p.description} if p.description else {}),\n                    **({\"default\": p.value} if p.value is not None else {}),\n                }\n                for p in props\n            },\n            \"required\": [p.name for p in props if p.value is None],\n        }",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "version: int = 1",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "version: int = 1",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "version",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "int",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "int",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "integer",
                                            "label": "1",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "is_active: bool = True",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "is_active: bool = True",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "is_active",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "bool",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "bool",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "true",
                                            "label": "True",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "is_template: bool = False",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "is_template: bool = False",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "is_template",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "bool",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "bool",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "false",
                                            "label": "False",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "name: str",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "name: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "name",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "description: str",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "description: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "description",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "nodes: list[Node] = []",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "nodes: list[Node] = []",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "nodes",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "list[Node]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "list[Node]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "list",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[Node]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "Node",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "Node",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "list",
                                            "label": "[]",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "links: list[Link] = []",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "links: list[Link] = []",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "links",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "list[Link]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "list[Link]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "list",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[Link]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "Link",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "Link",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "list",
                                            "label": "[]",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "decorated_definition",
                            "label": "@computed_field\n    @property\n    def input_schema(self) -> dict[str, Any]:\n        return self._generate_schema(\n            AgentInputBlock.Input,\n            [\n                node.input_default\n                for node in self.nodes\n                if (b := get_block(node.block_id))\n                and b.block_type == BlockType.INPUT\n                and \"name\" in node.input_default\n            ],\n        )",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@computed_field",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "computed_field",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "decorator",
                                    "label": "@property",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "property",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "function_definition",
                                    "label": "def input_schema(self) -> dict[str, Any]:\n        return self._generate_schema(\n            AgentInputBlock.Input,\n            [\n                node.input_default\n                for node in self.nodes\n                if (b := get_block(node.block_id))\n                and b.block_type == BlockType.INPUT\n                and \"name\" in node.input_default\n            ],\n        )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "input_schema",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(self)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "self",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "dict[str, Any]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "dict[str, Any]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "dict",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Any]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Any",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "Any",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "return self._generate_schema(\n            AgentInputBlock.Input,\n            [\n                node.input_default\n                for node in self.nodes\n                if (b := get_block(node.block_id))\n                and b.block_type == BlockType.INPUT\n                and \"name\" in node.input_default\n            ],\n        )",
                                            "children": [
                                                {
                                                    "type": "return_statement",
                                                    "label": "return self._generate_schema(\n            AgentInputBlock.Input,\n            [\n                node.input_default\n                for node in self.nodes\n                if (b := get_block(node.block_id))\n                and b.block_type == BlockType.INPUT\n                and \"name\" in node.input_default\n            ],\n        )",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "self._generate_schema(\n            AgentInputBlock.Input,\n            [\n                node.input_default\n                for node in self.nodes\n                if (b := get_block(node.block_id))\n                and b.block_type == BlockType.INPUT\n                and \"name\" in node.input_default\n            ],\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "self._generate_schema",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "self",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "_generate_schema",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n            AgentInputBlock.Input,\n            [\n                node.input_default\n                for node in self.nodes\n                if (b := get_block(node.block_id))\n                and b.block_type == BlockType.INPUT\n                and \"name\" in node.input_default\n            ],\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "AgentInputBlock.Input",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "AgentInputBlock",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Input",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "list_comprehension",
                                                                            "label": "[\n                node.input_default\n                for node in self.nodes\n                if (b := get_block(node.block_id))\n                and b.block_type == BlockType.INPUT\n                and \"name\" in node.input_default\n            ]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "node.input_default",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "node",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "input_default",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "for_in_clause",
                                                                                    "label": "for node in self.nodes",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "node",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "self.nodes",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "self",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "nodes",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "if_clause",
                                                                                    "label": "if (b := get_block(node.block_id))\n                and b.block_type == BlockType.INPUT\n                and \"name\" in node.input_default",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "boolean_operator",
                                                                                            "label": "(b := get_block(node.block_id))\n                and b.block_type == BlockType.INPUT\n                and \"name\" in node.input_default",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "boolean_operator",
                                                                                                    "label": "(b := get_block(node.block_id))\n                and b.block_type == BlockType.INPUT",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "parenthesized_expression",
                                                                                                            "label": "(b := get_block(node.block_id))",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "named_expression",
                                                                                                                    "label": "b := get_block(node.block_id)",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "b",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "call",
                                                                                                                            "label": "get_block(node.block_id)",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "get_block",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "argument_list",
                                                                                                                                    "label": "(node.block_id)",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "attribute",
                                                                                                                                            "label": "node.block_id",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "node",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "block_id",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "comparison_operator",
                                                                                                            "label": "b.block_type == BlockType.INPUT",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "attribute",
                                                                                                                    "label": "b.block_type",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "b",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "block_type",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "attribute",
                                                                                                                    "label": "BlockType.INPUT",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "BlockType",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "INPUT",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "comparison_operator",
                                                                                                    "label": "\"name\" in node.input_default",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"name\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "name",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "node.input_default",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "node",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "input_default",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "decorated_definition",
                            "label": "@computed_field\n    @property\n    def output_schema(self) -> dict[str, Any]:\n        return self._generate_schema(\n            AgentOutputBlock.Input,\n            [\n                node.input_default\n                for node in self.nodes\n                if (b := get_block(node.block_id))\n                and b.block_type == BlockType.OUTPUT\n                and \"name\" in node.input_default\n            ],\n        )",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@computed_field",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "computed_field",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "decorator",
                                    "label": "@property",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "property",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "function_definition",
                                    "label": "def output_schema(self) -> dict[str, Any]:\n        return self._generate_schema(\n            AgentOutputBlock.Input,\n            [\n                node.input_default\n                for node in self.nodes\n                if (b := get_block(node.block_id))\n                and b.block_type == BlockType.OUTPUT\n                and \"name\" in node.input_default\n            ],\n        )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "output_schema",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(self)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "self",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "dict[str, Any]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "dict[str, Any]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "dict",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Any]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Any",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "Any",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "return self._generate_schema(\n            AgentOutputBlock.Input,\n            [\n                node.input_default\n                for node in self.nodes\n                if (b := get_block(node.block_id))\n                and b.block_type == BlockType.OUTPUT\n                and \"name\" in node.input_default\n            ],\n        )",
                                            "children": [
                                                {
                                                    "type": "return_statement",
                                                    "label": "return self._generate_schema(\n            AgentOutputBlock.Input,\n            [\n                node.input_default\n                for node in self.nodes\n                if (b := get_block(node.block_id))\n                and b.block_type == BlockType.OUTPUT\n                and \"name\" in node.input_default\n            ],\n        )",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "self._generate_schema(\n            AgentOutputBlock.Input,\n            [\n                node.input_default\n                for node in self.nodes\n                if (b := get_block(node.block_id))\n                and b.block_type == BlockType.OUTPUT\n                and \"name\" in node.input_default\n            ],\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "self._generate_schema",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "self",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "_generate_schema",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n            AgentOutputBlock.Input,\n            [\n                node.input_default\n                for node in self.nodes\n                if (b := get_block(node.block_id))\n                and b.block_type == BlockType.OUTPUT\n                and \"name\" in node.input_default\n            ],\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "AgentOutputBlock.Input",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "AgentOutputBlock",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Input",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "list_comprehension",
                                                                            "label": "[\n                node.input_default\n                for node in self.nodes\n                if (b := get_block(node.block_id))\n                and b.block_type == BlockType.OUTPUT\n                and \"name\" in node.input_default\n            ]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "node.input_default",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "node",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "input_default",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "for_in_clause",
                                                                                    "label": "for node in self.nodes",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "node",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "self.nodes",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "self",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "nodes",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "if_clause",
                                                                                    "label": "if (b := get_block(node.block_id))\n                and b.block_type == BlockType.OUTPUT\n                and \"name\" in node.input_default",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "boolean_operator",
                                                                                            "label": "(b := get_block(node.block_id))\n                and b.block_type == BlockType.OUTPUT\n                and \"name\" in node.input_default",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "boolean_operator",
                                                                                                    "label": "(b := get_block(node.block_id))\n                and b.block_type == BlockType.OUTPUT",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "parenthesized_expression",
                                                                                                            "label": "(b := get_block(node.block_id))",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "named_expression",
                                                                                                                    "label": "b := get_block(node.block_id)",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "b",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "call",
                                                                                                                            "label": "get_block(node.block_id)",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "get_block",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "argument_list",
                                                                                                                                    "label": "(node.block_id)",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "attribute",
                                                                                                                                            "label": "node.block_id",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "node",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "block_id",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "comparison_operator",
                                                                                                            "label": "b.block_type == BlockType.OUTPUT",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "attribute",
                                                                                                                    "label": "b.block_type",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "b",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "block_type",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "attribute",
                                                                                                                    "label": "BlockType.OUTPUT",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "BlockType",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "OUTPUT",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "comparison_operator",
                                                                                                    "label": "\"name\" in node.input_default",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"name\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "name",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "node.input_default",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "node",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "input_default",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "decorated_definition",
                            "label": "@staticmethod\n    def _generate_schema(\n        type_class: Type[AgentInputBlock.Input] | Type[AgentOutputBlock.Input],\n        data: list[dict],\n    ) -> dict[str, Any]:\n        props = []\n        for p in data:\n            try:\n                props.append(type_class(**p))\n            except Exception as e:\n                logger.warning(f\"Invalid {type_class}: {p}, {e}\")\n\n        return {\n            \"type\": \"object\",\n            \"properties\": {\n                p.name: {\n                    \"secret\": p.secret,\n                    \"advanced\": p.advanced,\n                    \"title\": p.title or p.name,\n                    **({\"description\": p.description} if p.description else {}),\n                    **({\"default\": p.value} if p.value is not None else {}),\n                }\n                for p in props\n            },\n            \"required\": [p.name for p in props if p.value is None],\n        }",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@staticmethod",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "staticmethod",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "function_definition",
                                    "label": "def _generate_schema(\n        type_class: Type[AgentInputBlock.Input] | Type[AgentOutputBlock.Input],\n        data: list[dict],\n    ) -> dict[str, Any]:\n        props = []\n        for p in data:\n            try:\n                props.append(type_class(**p))\n            except Exception as e:\n                logger.warning(f\"Invalid {type_class}: {p}, {e}\")\n\n        return {\n            \"type\": \"object\",\n            \"properties\": {\n                p.name: {\n                    \"secret\": p.secret,\n                    \"advanced\": p.advanced,\n                    \"title\": p.title or p.name,\n                    **({\"description\": p.description} if p.description else {}),\n                    **({\"default\": p.value} if p.value is not None else {}),\n                }\n                for p in props\n            },\n            \"required\": [p.name for p in props if p.value is None],\n        }",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "_generate_schema",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(\n        type_class: Type[AgentInputBlock.Input] | Type[AgentOutputBlock.Input],\n        data: list[dict],\n    )",
                                            "children": [
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "type_class: Type[AgentInputBlock.Input] | Type[AgentOutputBlock.Input]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "type_class",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "Type[AgentInputBlock.Input] | Type[AgentOutputBlock.Input]",
                                                            "children": [
                                                                {
                                                                    "type": "union_type",
                                                                    "label": "Type[AgentInputBlock.Input] | Type[AgentOutputBlock.Input]",
                                                                    "children": [
                                                                        {
                                                                            "type": "type",
                                                                            "label": "Type[AgentInputBlock.Input]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "generic_type",
                                                                                    "label": "Type[AgentInputBlock.Input]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "Type",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "type_parameter",
                                                                                            "label": "[AgentInputBlock.Input]",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "type",
                                                                                                    "label": "AgentInputBlock.Input",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "AgentInputBlock.Input",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "AgentInputBlock",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "Input",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "type",
                                                                            "label": "Type[AgentOutputBlock.Input]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "generic_type",
                                                                                    "label": "Type[AgentOutputBlock.Input]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "Type",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "type_parameter",
                                                                                            "label": "[AgentOutputBlock.Input]",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "type",
                                                                                                    "label": "AgentOutputBlock.Input",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "AgentOutputBlock.Input",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "AgentOutputBlock",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "Input",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "data: list[dict]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "data",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "list[dict]",
                                                            "children": [
                                                                {
                                                                    "type": "generic_type",
                                                                    "label": "list[dict]",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "list",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "type_parameter",
                                                                            "label": "[dict]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "type",
                                                                                    "label": "dict",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "dict",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "dict[str, Any]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "dict[str, Any]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "dict",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Any]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Any",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "Any",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "props = []\n        for p in data:\n            try:\n                props.append(type_class(**p))\n            except Exception as e:\n                logger.warning(f\"Invalid {type_class}: {p}, {e}\")\n\n        return {\n            \"type\": \"object\",\n            \"properties\": {\n                p.name: {\n                    \"secret\": p.secret,\n                    \"advanced\": p.advanced,\n                    \"title\": p.title or p.name,\n                    **({\"description\": p.description} if p.description else {}),\n                    **({\"default\": p.value} if p.value is not None else {}),\n                }\n                for p in props\n            },\n            \"required\": [p.name for p in props if p.value is None],\n        }",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "props = []",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "props = []",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "props",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "list",
                                                                    "label": "[]",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "for_statement",
                                                    "label": "for p in data:\n            try:\n                props.append(type_class(**p))\n            except Exception as e:\n                logger.warning(f\"Invalid {type_class}: {p}, {e}\")",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "p",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "data",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "try:\n                props.append(type_class(**p))\n            except Exception as e:\n                logger.warning(f\"Invalid {type_class}: {p}, {e}\")",
                                                            "children": [
                                                                {
                                                                    "type": "try_statement",
                                                                    "label": "try:\n                props.append(type_class(**p))\n            except Exception as e:\n                logger.warning(f\"Invalid {type_class}: {p}, {e}\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "block",
                                                                            "label": "props.append(type_class(**p))",
                                                                            "children": [
                                                                                {
                                                                                    "type": "expression_statement",
                                                                                    "label": "props.append(type_class(**p))",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "props.append(type_class(**p))",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "props.append",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "props",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "append",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(type_class(**p))",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "call",
                                                                                                            "label": "type_class(**p)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "type_class",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "argument_list",
                                                                                                                    "label": "(**p)",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "dictionary_splat",
                                                                                                                            "label": "**p",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "p",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "except_clause",
                                                                            "label": "except Exception as e:\n                logger.warning(f\"Invalid {type_class}: {p}, {e}\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "as_pattern",
                                                                                    "label": "Exception as e",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "Exception",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "as_pattern_target",
                                                                                            "label": "e",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "e",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "block",
                                                                                    "label": "logger.warning(f\"Invalid {type_class}: {p}, {e}\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "expression_statement",
                                                                                            "label": "logger.warning(f\"Invalid {type_class}: {p}, {e}\")",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "logger.warning(f\"Invalid {type_class}: {p}, {e}\")",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "logger.warning",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "logger",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "warning",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(f\"Invalid {type_class}: {p}, {e}\")",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string",
                                                                                                                    "label": "f\"Invalid {type_class}: {p}, {e}\"",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "string_start",
                                                                                                                            "label": "f\"",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": "Invalid ",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "interpolation",
                                                                                                                            "label": "{type_class}",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "type_class",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": ": ",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "interpolation",
                                                                                                                            "label": "{p}",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "p",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": ", ",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "interpolation",
                                                                                                                            "label": "{e}",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "e",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_end",
                                                                                                                            "label": "\"",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "return_statement",
                                                    "label": "return {\n            \"type\": \"object\",\n            \"properties\": {\n                p.name: {\n                    \"secret\": p.secret,\n                    \"advanced\": p.advanced,\n                    \"title\": p.title or p.name,\n                    **({\"description\": p.description} if p.description else {}),\n                    **({\"default\": p.value} if p.value is not None else {}),\n                }\n                for p in props\n            },\n            \"required\": [p.name for p in props if p.value is None],\n        }",
                                                    "children": [
                                                        {
                                                            "type": "dictionary",
                                                            "label": "{\n            \"type\": \"object\",\n            \"properties\": {\n                p.name: {\n                    \"secret\": p.secret,\n                    \"advanced\": p.advanced,\n                    \"title\": p.title or p.name,\n                    **({\"description\": p.description} if p.description else {}),\n                    **({\"default\": p.value} if p.value is not None else {}),\n                }\n                for p in props\n            },\n            \"required\": [p.name for p in props if p.value is None],\n        }",
                                                            "children": [
                                                                {
                                                                    "type": "pair",
                                                                    "label": "\"type\": \"object\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"type\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "type",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"object\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "object",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "pair",
                                                                    "label": "\"properties\": {\n                p.name: {\n                    \"secret\": p.secret,\n                    \"advanced\": p.advanced,\n                    \"title\": p.title or p.name,\n                    **({\"description\": p.description} if p.description else {}),\n                    **({\"default\": p.value} if p.value is not None else {}),\n                }\n                for p in props\n            }",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"properties\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "properties",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "dictionary_comprehension",
                                                                            "label": "{\n                p.name: {\n                    \"secret\": p.secret,\n                    \"advanced\": p.advanced,\n                    \"title\": p.title or p.name,\n                    **({\"description\": p.description} if p.description else {}),\n                    **({\"default\": p.value} if p.value is not None else {}),\n                }\n                for p in props\n            }",
                                                                            "children": [
                                                                                {
                                                                                    "type": "pair",
                                                                                    "label": "p.name: {\n                    \"secret\": p.secret,\n                    \"advanced\": p.advanced,\n                    \"title\": p.title or p.name,\n                    **({\"description\": p.description} if p.description else {}),\n                    **({\"default\": p.value} if p.value is not None else {}),\n                }",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "p.name",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "p",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "name",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "dictionary",
                                                                                            "label": "{\n                    \"secret\": p.secret,\n                    \"advanced\": p.advanced,\n                    \"title\": p.title or p.name,\n                    **({\"description\": p.description} if p.description else {}),\n                    **({\"default\": p.value} if p.value is not None else {}),\n                }",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "pair",
                                                                                                    "label": "\"secret\": p.secret",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"secret\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "secret",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "p.secret",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "p",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "secret",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "pair",
                                                                                                    "label": "\"advanced\": p.advanced",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"advanced\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "advanced",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "p.advanced",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "p",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "advanced",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "pair",
                                                                                                    "label": "\"title\": p.title or p.name",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"title\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "title",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "boolean_operator",
                                                                                                            "label": "p.title or p.name",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "attribute",
                                                                                                                    "label": "p.title",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "p",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "title",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "attribute",
                                                                                                                    "label": "p.name",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "p",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "name",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "dictionary_splat",
                                                                                                    "label": "**({\"description\": p.description} if p.description else {})",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "parenthesized_expression",
                                                                                                            "label": "({\"description\": p.description} if p.description else {})",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "conditional_expression",
                                                                                                                    "label": "{\"description\": p.description} if p.description else {}",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "dictionary",
                                                                                                                            "label": "{\"description\": p.description}",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "pair",
                                                                                                                                    "label": "\"description\": p.description",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "string",
                                                                                                                                            "label": "\"description\"",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "string_start",
                                                                                                                                                    "label": "\"",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "string_content",
                                                                                                                                                    "label": "description",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "string_end",
                                                                                                                                                    "label": "\"",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "attribute",
                                                                                                                                            "label": "p.description",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "p",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "description",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "attribute",
                                                                                                                            "label": "p.description",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "p",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "description",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "dictionary",
                                                                                                                            "label": "{}",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "dictionary_splat",
                                                                                                    "label": "**({\"default\": p.value} if p.value is not None else {})",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "parenthesized_expression",
                                                                                                            "label": "({\"default\": p.value} if p.value is not None else {})",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "conditional_expression",
                                                                                                                    "label": "{\"default\": p.value} if p.value is not None else {}",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "dictionary",
                                                                                                                            "label": "{\"default\": p.value}",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "pair",
                                                                                                                                    "label": "\"default\": p.value",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "string",
                                                                                                                                            "label": "\"default\"",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "string_start",
                                                                                                                                                    "label": "\"",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "string_content",
                                                                                                                                                    "label": "default",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "string_end",
                                                                                                                                                    "label": "\"",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "attribute",
                                                                                                                                            "label": "p.value",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "p",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "value",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "comparison_operator",
                                                                                                                            "label": "p.value is not None",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "attribute",
                                                                                                                                    "label": "p.value",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "p",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "value",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "none",
                                                                                                                                    "label": "None",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "dictionary",
                                                                                                                            "label": "{}",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "for_in_clause",
                                                                                    "label": "for p in props",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "p",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "props",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "pair",
                                                                    "label": "\"required\": [p.name for p in props if p.value is None]",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"required\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "required",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "list_comprehension",
                                                                            "label": "[p.name for p in props if p.value is None]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "p.name",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "p",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "name",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "for_in_clause",
                                                                                    "label": "for p in props",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "p",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "props",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "if_clause",
                                                                                    "label": "if p.value is None",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "comparison_operator",
                                                                                            "label": "p.value is None",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "p.value",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "p",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "value",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "none",
                                                                                                    "label": "None",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "label": "class GraphModel(Graph):\n    user_id: str\n    nodes: list[NodeModel] = []  # type: ignore\n\n    @property\n    def starting_nodes(self) -> list[Node]:\n        outbound_nodes = {link.sink_id for link in self.links}\n        input_nodes = {\n            v.id\n            for v in self.nodes\n            if (b := get_block(v.block_id)) and b.block_type == BlockType.INPUT\n        }\n        return [\n            node\n            for node in self.nodes\n            if node.id not in outbound_nodes or node.id in input_nodes\n        ]\n\n    def reassign_ids(self, user_id: str, reassign_graph_id: bool = False):\n        \"\"\"\n        Reassigns all IDs in the graph to new UUIDs.\n        This method can be used before storing a new graph to the database.\n        \"\"\"\n\n        # Reassign Graph ID\n        id_map = {node.id: str(uuid.uuid4()) for node in self.nodes}\n        if reassign_graph_id:\n            self.id = str(uuid.uuid4())\n\n        # Reassign Node IDs\n        for node in self.nodes:\n            node.id = id_map[node.id]\n\n        # Reassign Link IDs\n        for link in self.links:\n            link.source_id = id_map[link.source_id]\n            link.sink_id = id_map[link.sink_id]\n\n        # Reassign User IDs for agent blocks\n        for node in self.nodes:\n            if node.block_id != AgentExecutorBlock().id:\n                continue\n            node.input_default[\"user_id\"] = user_id\n            node.input_default.setdefault(\"data\", {})\n\n        self.validate_graph()\n\n    def validate_graph(self, for_run: bool = False):\n        def sanitize(name):\n            return name.split(\"_#_\")[0].split(\"_@_\")[0].split(\"_$_\")[0]\n\n        input_links = defaultdict(list)\n        for link in self.links:\n            input_links[link.sink_id].append(link)\n\n        # Nodes: required fields are filled or connected and dependencies are satisfied\n        for node in self.nodes:\n            block = get_block(node.block_id)\n            if block is None:\n                raise ValueError(f\"Invalid block {node.block_id} for node #{node.id}\")\n\n            provided_inputs = set(\n                [sanitize(name) for name in node.input_default]\n                + [sanitize(link.sink_name) for link in input_links.get(node.id, [])]\n            )\n            for name in block.input_schema.get_required_fields():\n                if (\n                    name not in provided_inputs\n                    and not (\n                        name == \"payload\"\n                        and block.block_type\n                        in (BlockType.WEBHOOK, BlockType.WEBHOOK_MANUAL)\n                    )\n                    and (\n                        for_run  # Skip input completion validation, unless when executing.\n                        or block.block_type == BlockType.INPUT\n                        or block.block_type == BlockType.OUTPUT\n                        or block.block_type == BlockType.AGENT\n                    )\n                ):\n                    raise ValueError(\n                        f\"Node {block.name} #{node.id} required input missing: `{name}`\"\n                    )\n\n            # Get input schema properties and check dependencies\n            input_schema = block.input_schema.model_fields\n            required_fields = block.input_schema.get_required_fields()\n\n            def has_value(name):\n                return (\n                    node is not None\n                    and name in node.input_default\n                    and node.input_default[name] is not None\n                    and str(node.input_default[name]).strip() != \"\"\n                ) or (name in input_schema and input_schema[name].default is not None)\n\n            # Validate dependencies between fields\n            for field_name, field_info in input_schema.items():\n                # Apply input dependency validation only on run & field with depends_on\n                json_schema_extra = field_info.json_schema_extra or {}\n                dependencies = json_schema_extra.get(\"depends_on\", [])\n                if not for_run or not dependencies:\n                    continue\n\n                # Check if dependent field has value in input_default\n                field_has_value = has_value(field_name)\n                field_is_required = field_name in required_fields\n\n                # Check for missing dependencies when dependent field is present\n                missing_deps = [dep for dep in dependencies if not has_value(dep)]\n                if missing_deps and (field_has_value or field_is_required):\n                    raise ValueError(\n                        f\"Node {block.name} #{node.id}: Field `{field_name}` requires [{', '.join(missing_deps)}] to be set\"\n                    )\n\n        node_map = {v.id: v for v in self.nodes}\n\n        def is_static_output_block(nid: str) -> bool:\n            bid = node_map[nid].block_id\n            b = get_block(bid)\n            return b.static_output if b else False\n\n        # Links: links are connected and the connected pin data type are compatible.\n        for link in self.links:\n            source = (link.source_id, link.source_name)\n            sink = (link.sink_id, link.sink_name)\n            suffix = f\"Link {source} <-> {sink}\"\n\n            for i, (node_id, name) in enumerate([source, sink]):\n                node = node_map.get(node_id)\n                if not node:\n                    raise ValueError(\n                        f\"{suffix}, {node_id} is invalid node id, available nodes: {node_map.keys()}\"\n                    )\n\n                block = get_block(node.block_id)\n                if not block:\n                    blocks = {v().id: v().name for v in get_blocks().values()}\n                    raise ValueError(\n                        f\"{suffix}, {node.block_id} is invalid block id, available blocks: {blocks}\"\n                    )\n\n                sanitized_name = sanitize(name)\n                vals = node.input_default\n                if i == 0:\n                    fields = (\n                        block.output_schema.get_fields()\n                        if block.block_type != BlockType.AGENT\n                        else vals.get(\"output_schema\", {}).get(\"properties\", {}).keys()\n                    )\n                else:\n                    fields = (\n                        block.input_schema.get_fields()\n                        if block.block_type != BlockType.AGENT\n                        else vals.get(\"input_schema\", {}).get(\"properties\", {}).keys()\n                    )\n                if sanitized_name not in fields:\n                    fields_msg = f\"Allowed fields: {fields}\"\n                    raise ValueError(f\"{suffix}, `{name}` invalid, {fields_msg}\")\n\n            if is_static_output_block(link.source_id):\n                link.is_static = True  # Each value block output should be static.\n\n    @staticmethod\n    def from_db(graph: AgentGraph, for_export: bool = False):\n        return GraphModel(\n            id=graph.id,\n            user_id=graph.userId,\n            version=graph.version,\n            is_active=graph.isActive,\n            is_template=graph.isTemplate,\n            name=graph.name or \"\",\n            description=graph.description or \"\",\n            nodes=[\n                NodeModel.from_db(GraphModel._process_node(node, for_export))\n                for node in graph.AgentNodes or []\n            ],\n            links=list(\n                {\n                    Link.from_db(link)\n                    for node in graph.AgentNodes or []\n                    for link in (node.Input or []) + (node.Output or [])\n                }\n            ),\n        )\n\n    @staticmethod\n    def _process_node(node: AgentNode, for_export: bool) -> AgentNode:\n        if for_export:\n            # Remove credentials from node input\n            if node.constantInput:\n                constant_input = json.loads(\n                    node.constantInput, target_type=dict[str, Any]\n                )\n                constant_input = GraphModel._hide_node_input_credentials(constant_input)\n                node.constantInput = json.dumps(constant_input)\n\n            # Remove webhook info\n            node.webhookId = None\n            node.Webhook = None\n\n        return node\n\n    @staticmethod\n    def _hide_node_input_credentials(input_data: dict[str, Any]) -> dict[str, Any]:\n        sensitive_keys = [\"credentials\", \"api_key\", \"password\", \"token\", \"secret\"]\n        result = {}\n        for key, value in input_data.items():\n            if isinstance(value, dict):\n                result[key] = GraphModel._hide_node_input_credentials(value)\n            elif isinstance(value, str) and any(\n                sensitive_key in key.lower() for sensitive_key in sensitive_keys\n            ):\n                # Skip this key-value pair in the result\n                continue\n            else:\n                result[key] = value\n        return result",
            "children": [
                {
                    "type": "identifier",
                    "label": "GraphModel",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "(Graph)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Graph",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "user_id: str\n    nodes: list[NodeModel] = []  # type: ignore\n\n    @property\n    def starting_nodes(self) -> list[Node]:\n        outbound_nodes = {link.sink_id for link in self.links}\n        input_nodes = {\n            v.id\n            for v in self.nodes\n            if (b := get_block(v.block_id)) and b.block_type == BlockType.INPUT\n        }\n        return [\n            node\n            for node in self.nodes\n            if node.id not in outbound_nodes or node.id in input_nodes\n        ]\n\n    def reassign_ids(self, user_id: str, reassign_graph_id: bool = False):\n        \"\"\"\n        Reassigns all IDs in the graph to new UUIDs.\n        This method can be used before storing a new graph to the database.\n        \"\"\"\n\n        # Reassign Graph ID\n        id_map = {node.id: str(uuid.uuid4()) for node in self.nodes}\n        if reassign_graph_id:\n            self.id = str(uuid.uuid4())\n\n        # Reassign Node IDs\n        for node in self.nodes:\n            node.id = id_map[node.id]\n\n        # Reassign Link IDs\n        for link in self.links:\n            link.source_id = id_map[link.source_id]\n            link.sink_id = id_map[link.sink_id]\n\n        # Reassign User IDs for agent blocks\n        for node in self.nodes:\n            if node.block_id != AgentExecutorBlock().id:\n                continue\n            node.input_default[\"user_id\"] = user_id\n            node.input_default.setdefault(\"data\", {})\n\n        self.validate_graph()\n\n    def validate_graph(self, for_run: bool = False):\n        def sanitize(name):\n            return name.split(\"_#_\")[0].split(\"_@_\")[0].split(\"_$_\")[0]\n\n        input_links = defaultdict(list)\n        for link in self.links:\n            input_links[link.sink_id].append(link)\n\n        # Nodes: required fields are filled or connected and dependencies are satisfied\n        for node in self.nodes:\n            block = get_block(node.block_id)\n            if block is None:\n                raise ValueError(f\"Invalid block {node.block_id} for node #{node.id}\")\n\n            provided_inputs = set(\n                [sanitize(name) for name in node.input_default]\n                + [sanitize(link.sink_name) for link in input_links.get(node.id, [])]\n            )\n            for name in block.input_schema.get_required_fields():\n                if (\n                    name not in provided_inputs\n                    and not (\n                        name == \"payload\"\n                        and block.block_type\n                        in (BlockType.WEBHOOK, BlockType.WEBHOOK_MANUAL)\n                    )\n                    and (\n                        for_run  # Skip input completion validation, unless when executing.\n                        or block.block_type == BlockType.INPUT\n                        or block.block_type == BlockType.OUTPUT\n                        or block.block_type == BlockType.AGENT\n                    )\n                ):\n                    raise ValueError(\n                        f\"Node {block.name} #{node.id} required input missing: `{name}`\"\n                    )\n\n            # Get input schema properties and check dependencies\n            input_schema = block.input_schema.model_fields\n            required_fields = block.input_schema.get_required_fields()\n\n            def has_value(name):\n                return (\n                    node is not None\n                    and name in node.input_default\n                    and node.input_default[name] is not None\n                    and str(node.input_default[name]).strip() != \"\"\n                ) or (name in input_schema and input_schema[name].default is not None)\n\n            # Validate dependencies between fields\n            for field_name, field_info in input_schema.items():\n                # Apply input dependency validation only on run & field with depends_on\n                json_schema_extra = field_info.json_schema_extra or {}\n                dependencies = json_schema_extra.get(\"depends_on\", [])\n                if not for_run or not dependencies:\n                    continue\n\n                # Check if dependent field has value in input_default\n                field_has_value = has_value(field_name)\n                field_is_required = field_name in required_fields\n\n                # Check for missing dependencies when dependent field is present\n                missing_deps = [dep for dep in dependencies if not has_value(dep)]\n                if missing_deps and (field_has_value or field_is_required):\n                    raise ValueError(\n                        f\"Node {block.name} #{node.id}: Field `{field_name}` requires [{', '.join(missing_deps)}] to be set\"\n                    )\n\n        node_map = {v.id: v for v in self.nodes}\n\n        def is_static_output_block(nid: str) -> bool:\n            bid = node_map[nid].block_id\n            b = get_block(bid)\n            return b.static_output if b else False\n\n        # Links: links are connected and the connected pin data type are compatible.\n        for link in self.links:\n            source = (link.source_id, link.source_name)\n            sink = (link.sink_id, link.sink_name)\n            suffix = f\"Link {source} <-> {sink}\"\n\n            for i, (node_id, name) in enumerate([source, sink]):\n                node = node_map.get(node_id)\n                if not node:\n                    raise ValueError(\n                        f\"{suffix}, {node_id} is invalid node id, available nodes: {node_map.keys()}\"\n                    )\n\n                block = get_block(node.block_id)\n                if not block:\n                    blocks = {v().id: v().name for v in get_blocks().values()}\n                    raise ValueError(\n                        f\"{suffix}, {node.block_id} is invalid block id, available blocks: {blocks}\"\n                    )\n\n                sanitized_name = sanitize(name)\n                vals = node.input_default\n                if i == 0:\n                    fields = (\n                        block.output_schema.get_fields()\n                        if block.block_type != BlockType.AGENT\n                        else vals.get(\"output_schema\", {}).get(\"properties\", {}).keys()\n                    )\n                else:\n                    fields = (\n                        block.input_schema.get_fields()\n                        if block.block_type != BlockType.AGENT\n                        else vals.get(\"input_schema\", {}).get(\"properties\", {}).keys()\n                    )\n                if sanitized_name not in fields:\n                    fields_msg = f\"Allowed fields: {fields}\"\n                    raise ValueError(f\"{suffix}, `{name}` invalid, {fields_msg}\")\n\n            if is_static_output_block(link.source_id):\n                link.is_static = True  # Each value block output should be static.\n\n    @staticmethod\n    def from_db(graph: AgentGraph, for_export: bool = False):\n        return GraphModel(\n            id=graph.id,\n            user_id=graph.userId,\n            version=graph.version,\n            is_active=graph.isActive,\n            is_template=graph.isTemplate,\n            name=graph.name or \"\",\n            description=graph.description or \"\",\n            nodes=[\n                NodeModel.from_db(GraphModel._process_node(node, for_export))\n                for node in graph.AgentNodes or []\n            ],\n            links=list(\n                {\n                    Link.from_db(link)\n                    for node in graph.AgentNodes or []\n                    for link in (node.Input or []) + (node.Output or [])\n                }\n            ),\n        )\n\n    @staticmethod\n    def _process_node(node: AgentNode, for_export: bool) -> AgentNode:\n        if for_export:\n            # Remove credentials from node input\n            if node.constantInput:\n                constant_input = json.loads(\n                    node.constantInput, target_type=dict[str, Any]\n                )\n                constant_input = GraphModel._hide_node_input_credentials(constant_input)\n                node.constantInput = json.dumps(constant_input)\n\n            # Remove webhook info\n            node.webhookId = None\n            node.Webhook = None\n\n        return node\n\n    @staticmethod\n    def _hide_node_input_credentials(input_data: dict[str, Any]) -> dict[str, Any]:\n        sensitive_keys = [\"credentials\", \"api_key\", \"password\", \"token\", \"secret\"]\n        result = {}\n        for key, value in input_data.items():\n            if isinstance(value, dict):\n                result[key] = GraphModel._hide_node_input_credentials(value)\n            elif isinstance(value, str) and any(\n                sensitive_key in key.lower() for sensitive_key in sensitive_keys\n            ):\n                # Skip this key-value pair in the result\n                continue\n            else:\n                result[key] = value\n        return result",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "user_id: str",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "user_id: str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "nodes: list[NodeModel] = []",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "nodes: list[NodeModel] = []",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "nodes",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "list[NodeModel]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "list[NodeModel]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "list",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[NodeModel]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "NodeModel",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "NodeModel",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "list",
                                            "label": "[]",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# type: ignore",
                            "children": []
                        },
                        {
                            "type": "decorated_definition",
                            "label": "@property\n    def starting_nodes(self) -> list[Node]:\n        outbound_nodes = {link.sink_id for link in self.links}\n        input_nodes = {\n            v.id\n            for v in self.nodes\n            if (b := get_block(v.block_id)) and b.block_type == BlockType.INPUT\n        }\n        return [\n            node\n            for node in self.nodes\n            if node.id not in outbound_nodes or node.id in input_nodes\n        ]",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@property",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "property",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "function_definition",
                                    "label": "def starting_nodes(self) -> list[Node]:\n        outbound_nodes = {link.sink_id for link in self.links}\n        input_nodes = {\n            v.id\n            for v in self.nodes\n            if (b := get_block(v.block_id)) and b.block_type == BlockType.INPUT\n        }\n        return [\n            node\n            for node in self.nodes\n            if node.id not in outbound_nodes or node.id in input_nodes\n        ]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "starting_nodes",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(self)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "self",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "list[Node]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "list[Node]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "list",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[Node]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "Node",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "Node",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "outbound_nodes = {link.sink_id for link in self.links}\n        input_nodes = {\n            v.id\n            for v in self.nodes\n            if (b := get_block(v.block_id)) and b.block_type == BlockType.INPUT\n        }\n        return [\n            node\n            for node in self.nodes\n            if node.id not in outbound_nodes or node.id in input_nodes\n        ]",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "outbound_nodes = {link.sink_id for link in self.links}",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "outbound_nodes = {link.sink_id for link in self.links}",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "outbound_nodes",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "set_comprehension",
                                                                    "label": "{link.sink_id for link in self.links}",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "link.sink_id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "link",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "sink_id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "for_in_clause",
                                                                            "label": "for link in self.links",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "link",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "self.links",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "self",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "links",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "input_nodes = {\n            v.id\n            for v in self.nodes\n            if (b := get_block(v.block_id)) and b.block_type == BlockType.INPUT\n        }",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "input_nodes = {\n            v.id\n            for v in self.nodes\n            if (b := get_block(v.block_id)) and b.block_type == BlockType.INPUT\n        }",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "input_nodes",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "set_comprehension",
                                                                    "label": "{\n            v.id\n            for v in self.nodes\n            if (b := get_block(v.block_id)) and b.block_type == BlockType.INPUT\n        }",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "v.id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "v",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "for_in_clause",
                                                                            "label": "for v in self.nodes",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "v",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "self.nodes",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "self",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "nodes",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "if_clause",
                                                                            "label": "if (b := get_block(v.block_id)) and b.block_type == BlockType.INPUT",
                                                                            "children": [
                                                                                {
                                                                                    "type": "boolean_operator",
                                                                                    "label": "(b := get_block(v.block_id)) and b.block_type == BlockType.INPUT",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "parenthesized_expression",
                                                                                            "label": "(b := get_block(v.block_id))",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "named_expression",
                                                                                                    "label": "b := get_block(v.block_id)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "b",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "call",
                                                                                                            "label": "get_block(v.block_id)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "get_block",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "argument_list",
                                                                                                                    "label": "(v.block_id)",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "attribute",
                                                                                                                            "label": "v.block_id",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "v",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "block_id",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "comparison_operator",
                                                                                            "label": "b.block_type == BlockType.INPUT",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "b.block_type",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "b",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "block_type",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "BlockType.INPUT",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "BlockType",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "INPUT",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "return_statement",
                                                    "label": "return [\n            node\n            for node in self.nodes\n            if node.id not in outbound_nodes or node.id in input_nodes\n        ]",
                                                    "children": [
                                                        {
                                                            "type": "list_comprehension",
                                                            "label": "[\n            node\n            for node in self.nodes\n            if node.id not in outbound_nodes or node.id in input_nodes\n        ]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "node",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "for_in_clause",
                                                                    "label": "for node in self.nodes",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "node",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "self.nodes",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "self",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "nodes",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "if_clause",
                                                                    "label": "if node.id not in outbound_nodes or node.id in input_nodes",
                                                                    "children": [
                                                                        {
                                                                            "type": "boolean_operator",
                                                                            "label": "node.id not in outbound_nodes or node.id in input_nodes",
                                                                            "children": [
                                                                                {
                                                                                    "type": "comparison_operator",
                                                                                    "label": "node.id not in outbound_nodes",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "node.id",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "node",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "outbound_nodes",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "comparison_operator",
                                                                                    "label": "node.id in input_nodes",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "node.id",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "node",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "input_nodes",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def reassign_ids(self, user_id: str, reassign_graph_id: bool = False):\n        \"\"\"\n        Reassigns all IDs in the graph to new UUIDs.\n        This method can be used before storing a new graph to the database.\n        \"\"\"\n\n        # Reassign Graph ID\n        id_map = {node.id: str(uuid.uuid4()) for node in self.nodes}\n        if reassign_graph_id:\n            self.id = str(uuid.uuid4())\n\n        # Reassign Node IDs\n        for node in self.nodes:\n            node.id = id_map[node.id]\n\n        # Reassign Link IDs\n        for link in self.links:\n            link.source_id = id_map[link.source_id]\n            link.sink_id = id_map[link.sink_id]\n\n        # Reassign User IDs for agent blocks\n        for node in self.nodes:\n            if node.block_id != AgentExecutorBlock().id:\n                continue\n            node.input_default[\"user_id\"] = user_id\n            node.input_default.setdefault(\"data\", {})\n\n        self.validate_graph()",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "reassign_ids",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, user_id: str, reassign_graph_id: bool = False)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "user_id: str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "user_id",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "str",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "typed_default_parameter",
                                            "label": "reassign_graph_id: bool = False",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "reassign_graph_id",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "bool",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "bool",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "false",
                                                    "label": "False",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "\"\"\"\n        Reassigns all IDs in the graph to new UUIDs.\n        This method can be used before storing a new graph to the database.\n        \"\"\"\n\n        # Reassign Graph ID\n        id_map = {node.id: str(uuid.uuid4()) for node in self.nodes}\n        if reassign_graph_id:\n            self.id = str(uuid.uuid4())\n\n        # Reassign Node IDs\n        for node in self.nodes:\n            node.id = id_map[node.id]\n\n        # Reassign Link IDs\n        for link in self.links:\n            link.source_id = id_map[link.source_id]\n            link.sink_id = id_map[link.sink_id]\n\n        # Reassign User IDs for agent blocks\n        for node in self.nodes:\n            if node.block_id != AgentExecutorBlock().id:\n                continue\n            node.input_default[\"user_id\"] = user_id\n            node.input_default.setdefault(\"data\", {})\n\n        self.validate_graph()",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "\"\"\"\n        Reassigns all IDs in the graph to new UUIDs.\n        This method can be used before storing a new graph to the database.\n        \"\"\"",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "\"\"\"\n        Reassigns all IDs in the graph to new UUIDs.\n        This method can be used before storing a new graph to the database.\n        \"\"\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"\"\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "\n        Reassigns all IDs in the graph to new UUIDs.\n        This method can be used before storing a new graph to the database.\n        ",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"\"\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "label": "# Reassign Graph ID",
                                            "children": []
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "id_map = {node.id: str(uuid.uuid4()) for node in self.nodes}",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "id_map = {node.id: str(uuid.uuid4()) for node in self.nodes}",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "id_map",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "dictionary_comprehension",
                                                            "label": "{node.id: str(uuid.uuid4()) for node in self.nodes}",
                                                            "children": [
                                                                {
                                                                    "type": "pair",
                                                                    "label": "node.id: str(uuid.uuid4())",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "node.id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "node",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "label": "str(uuid.uuid4())",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "str",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(uuid.uuid4())",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "uuid.uuid4()",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "uuid.uuid4",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "uuid",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "uuid4",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "()",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "for_in_clause",
                                                                    "label": "for node in self.nodes",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "node",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "self.nodes",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "self",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "nodes",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if reassign_graph_id:\n            self.id = str(uuid.uuid4())",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "reassign_graph_id",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "self.id = str(uuid.uuid4())",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "self.id = str(uuid.uuid4())",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "self.id = str(uuid.uuid4())",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "self.id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "self",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "label": "str(uuid.uuid4())",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "str",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(uuid.uuid4())",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "uuid.uuid4()",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "uuid.uuid4",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "uuid",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "uuid4",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "()",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "label": "# Reassign Node IDs",
                                            "children": []
                                        },
                                        {
                                            "type": "for_statement",
                                            "label": "for node in self.nodes:\n            node.id = id_map[node.id]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "node",
                                                    "children": []
                                                },
                                                {
                                                    "type": "attribute",
                                                    "label": "self.nodes",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "self",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "nodes",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "node.id = id_map[node.id]",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "node.id = id_map[node.id]",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "node.id = id_map[node.id]",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "node.id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "node",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "subscript",
                                                                            "label": "id_map[node.id]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "id_map",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "node.id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "node",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "label": "# Reassign Link IDs",
                                            "children": []
                                        },
                                        {
                                            "type": "for_statement",
                                            "label": "for link in self.links:\n            link.source_id = id_map[link.source_id]\n            link.sink_id = id_map[link.sink_id]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "link",
                                                    "children": []
                                                },
                                                {
                                                    "type": "attribute",
                                                    "label": "self.links",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "self",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "links",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "link.source_id = id_map[link.source_id]\n            link.sink_id = id_map[link.sink_id]",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "link.source_id = id_map[link.source_id]",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "link.source_id = id_map[link.source_id]",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "link.source_id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "link",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "source_id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "subscript",
                                                                            "label": "id_map[link.source_id]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "id_map",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "link.source_id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "link",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "source_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "link.sink_id = id_map[link.sink_id]",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "link.sink_id = id_map[link.sink_id]",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "link.sink_id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "link",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "sink_id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "subscript",
                                                                            "label": "id_map[link.sink_id]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "id_map",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "link.sink_id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "link",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "sink_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "label": "# Reassign User IDs for agent blocks",
                                            "children": []
                                        },
                                        {
                                            "type": "for_statement",
                                            "label": "for node in self.nodes:\n            if node.block_id != AgentExecutorBlock().id:\n                continue\n            node.input_default[\"user_id\"] = user_id\n            node.input_default.setdefault(\"data\", {})",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "node",
                                                    "children": []
                                                },
                                                {
                                                    "type": "attribute",
                                                    "label": "self.nodes",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "self",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "nodes",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "if node.block_id != AgentExecutorBlock().id:\n                continue\n            node.input_default[\"user_id\"] = user_id\n            node.input_default.setdefault(\"data\", {})",
                                                    "children": [
                                                        {
                                                            "type": "if_statement",
                                                            "label": "if node.block_id != AgentExecutorBlock().id:\n                continue",
                                                            "children": [
                                                                {
                                                                    "type": "comparison_operator",
                                                                    "label": "node.block_id != AgentExecutorBlock().id",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "node.block_id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "node",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "block_id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "AgentExecutorBlock().id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "AgentExecutorBlock()",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "AgentExecutorBlock",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "()",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": "continue",
                                                                    "children": [
                                                                        {
                                                                            "type": "continue_statement",
                                                                            "label": "continue",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "node.input_default[\"user_id\"] = user_id",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "node.input_default[\"user_id\"] = user_id",
                                                                    "children": [
                                                                        {
                                                                            "type": "subscript",
                                                                            "label": "node.input_default[\"user_id\"]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "node.input_default",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "node",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "input_default",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"user_id\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "user_id",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "user_id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "node.input_default.setdefault(\"data\", {})",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "node.input_default.setdefault(\"data\", {})",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "node.input_default.setdefault",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "node.input_default",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "node",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "input_default",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "setdefault",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(\"data\", {})",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"data\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "data",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "dictionary",
                                                                                    "label": "{}",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "self.validate_graph()",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "self.validate_graph()",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.validate_graph",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "validate_graph",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "()",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def validate_graph(self, for_run: bool = False):\n        def sanitize(name):\n            return name.split(\"_#_\")[0].split(\"_@_\")[0].split(\"_$_\")[0]\n\n        input_links = defaultdict(list)\n        for link in self.links:\n            input_links[link.sink_id].append(link)\n\n        # Nodes: required fields are filled or connected and dependencies are satisfied\n        for node in self.nodes:\n            block = get_block(node.block_id)\n            if block is None:\n                raise ValueError(f\"Invalid block {node.block_id} for node #{node.id}\")\n\n            provided_inputs = set(\n                [sanitize(name) for name in node.input_default]\n                + [sanitize(link.sink_name) for link in input_links.get(node.id, [])]\n            )\n            for name in block.input_schema.get_required_fields():\n                if (\n                    name not in provided_inputs\n                    and not (\n                        name == \"payload\"\n                        and block.block_type\n                        in (BlockType.WEBHOOK, BlockType.WEBHOOK_MANUAL)\n                    )\n                    and (\n                        for_run  # Skip input completion validation, unless when executing.\n                        or block.block_type == BlockType.INPUT\n                        or block.block_type == BlockType.OUTPUT\n                        or block.block_type == BlockType.AGENT\n                    )\n                ):\n                    raise ValueError(\n                        f\"Node {block.name} #{node.id} required input missing: `{name}`\"\n                    )\n\n            # Get input schema properties and check dependencies\n            input_schema = block.input_schema.model_fields\n            required_fields = block.input_schema.get_required_fields()\n\n            def has_value(name):\n                return (\n                    node is not None\n                    and name in node.input_default\n                    and node.input_default[name] is not None\n                    and str(node.input_default[name]).strip() != \"\"\n                ) or (name in input_schema and input_schema[name].default is not None)\n\n            # Validate dependencies between fields\n            for field_name, field_info in input_schema.items():\n                # Apply input dependency validation only on run & field with depends_on\n                json_schema_extra = field_info.json_schema_extra or {}\n                dependencies = json_schema_extra.get(\"depends_on\", [])\n                if not for_run or not dependencies:\n                    continue\n\n                # Check if dependent field has value in input_default\n                field_has_value = has_value(field_name)\n                field_is_required = field_name in required_fields\n\n                # Check for missing dependencies when dependent field is present\n                missing_deps = [dep for dep in dependencies if not has_value(dep)]\n                if missing_deps and (field_has_value or field_is_required):\n                    raise ValueError(\n                        f\"Node {block.name} #{node.id}: Field `{field_name}` requires [{', '.join(missing_deps)}] to be set\"\n                    )\n\n        node_map = {v.id: v for v in self.nodes}\n\n        def is_static_output_block(nid: str) -> bool:\n            bid = node_map[nid].block_id\n            b = get_block(bid)\n            return b.static_output if b else False\n\n        # Links: links are connected and the connected pin data type are compatible.\n        for link in self.links:\n            source = (link.source_id, link.source_name)\n            sink = (link.sink_id, link.sink_name)\n            suffix = f\"Link {source} <-> {sink}\"\n\n            for i, (node_id, name) in enumerate([source, sink]):\n                node = node_map.get(node_id)\n                if not node:\n                    raise ValueError(\n                        f\"{suffix}, {node_id} is invalid node id, available nodes: {node_map.keys()}\"\n                    )\n\n                block = get_block(node.block_id)\n                if not block:\n                    blocks = {v().id: v().name for v in get_blocks().values()}\n                    raise ValueError(\n                        f\"{suffix}, {node.block_id} is invalid block id, available blocks: {blocks}\"\n                    )\n\n                sanitized_name = sanitize(name)\n                vals = node.input_default\n                if i == 0:\n                    fields = (\n                        block.output_schema.get_fields()\n                        if block.block_type != BlockType.AGENT\n                        else vals.get(\"output_schema\", {}).get(\"properties\", {}).keys()\n                    )\n                else:\n                    fields = (\n                        block.input_schema.get_fields()\n                        if block.block_type != BlockType.AGENT\n                        else vals.get(\"input_schema\", {}).get(\"properties\", {}).keys()\n                    )\n                if sanitized_name not in fields:\n                    fields_msg = f\"Allowed fields: {fields}\"\n                    raise ValueError(f\"{suffix}, `{name}` invalid, {fields_msg}\")\n\n            if is_static_output_block(link.source_id):\n                link.is_static = True  # Each value block output should be static.",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "validate_graph",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, for_run: bool = False)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_default_parameter",
                                            "label": "for_run: bool = False",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "for_run",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "bool",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "bool",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "false",
                                                    "label": "False",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "def sanitize(name):\n            return name.split(\"_#_\")[0].split(\"_@_\")[0].split(\"_$_\")[0]\n\n        input_links = defaultdict(list)\n        for link in self.links:\n            input_links[link.sink_id].append(link)\n\n        # Nodes: required fields are filled or connected and dependencies are satisfied\n        for node in self.nodes:\n            block = get_block(node.block_id)\n            if block is None:\n                raise ValueError(f\"Invalid block {node.block_id} for node #{node.id}\")\n\n            provided_inputs = set(\n                [sanitize(name) for name in node.input_default]\n                + [sanitize(link.sink_name) for link in input_links.get(node.id, [])]\n            )\n            for name in block.input_schema.get_required_fields():\n                if (\n                    name not in provided_inputs\n                    and not (\n                        name == \"payload\"\n                        and block.block_type\n                        in (BlockType.WEBHOOK, BlockType.WEBHOOK_MANUAL)\n                    )\n                    and (\n                        for_run  # Skip input completion validation, unless when executing.\n                        or block.block_type == BlockType.INPUT\n                        or block.block_type == BlockType.OUTPUT\n                        or block.block_type == BlockType.AGENT\n                    )\n                ):\n                    raise ValueError(\n                        f\"Node {block.name} #{node.id} required input missing: `{name}`\"\n                    )\n\n            # Get input schema properties and check dependencies\n            input_schema = block.input_schema.model_fields\n            required_fields = block.input_schema.get_required_fields()\n\n            def has_value(name):\n                return (\n                    node is not None\n                    and name in node.input_default\n                    and node.input_default[name] is not None\n                    and str(node.input_default[name]).strip() != \"\"\n                ) or (name in input_schema and input_schema[name].default is not None)\n\n            # Validate dependencies between fields\n            for field_name, field_info in input_schema.items():\n                # Apply input dependency validation only on run & field with depends_on\n                json_schema_extra = field_info.json_schema_extra or {}\n                dependencies = json_schema_extra.get(\"depends_on\", [])\n                if not for_run or not dependencies:\n                    continue\n\n                # Check if dependent field has value in input_default\n                field_has_value = has_value(field_name)\n                field_is_required = field_name in required_fields\n\n                # Check for missing dependencies when dependent field is present\n                missing_deps = [dep for dep in dependencies if not has_value(dep)]\n                if missing_deps and (field_has_value or field_is_required):\n                    raise ValueError(\n                        f\"Node {block.name} #{node.id}: Field `{field_name}` requires [{', '.join(missing_deps)}] to be set\"\n                    )\n\n        node_map = {v.id: v for v in self.nodes}\n\n        def is_static_output_block(nid: str) -> bool:\n            bid = node_map[nid].block_id\n            b = get_block(bid)\n            return b.static_output if b else False\n\n        # Links: links are connected and the connected pin data type are compatible.\n        for link in self.links:\n            source = (link.source_id, link.source_name)\n            sink = (link.sink_id, link.sink_name)\n            suffix = f\"Link {source} <-> {sink}\"\n\n            for i, (node_id, name) in enumerate([source, sink]):\n                node = node_map.get(node_id)\n                if not node:\n                    raise ValueError(\n                        f\"{suffix}, {node_id} is invalid node id, available nodes: {node_map.keys()}\"\n                    )\n\n                block = get_block(node.block_id)\n                if not block:\n                    blocks = {v().id: v().name for v in get_blocks().values()}\n                    raise ValueError(\n                        f\"{suffix}, {node.block_id} is invalid block id, available blocks: {blocks}\"\n                    )\n\n                sanitized_name = sanitize(name)\n                vals = node.input_default\n                if i == 0:\n                    fields = (\n                        block.output_schema.get_fields()\n                        if block.block_type != BlockType.AGENT\n                        else vals.get(\"output_schema\", {}).get(\"properties\", {}).keys()\n                    )\n                else:\n                    fields = (\n                        block.input_schema.get_fields()\n                        if block.block_type != BlockType.AGENT\n                        else vals.get(\"input_schema\", {}).get(\"properties\", {}).keys()\n                    )\n                if sanitized_name not in fields:\n                    fields_msg = f\"Allowed fields: {fields}\"\n                    raise ValueError(f\"{suffix}, `{name}` invalid, {fields_msg}\")\n\n            if is_static_output_block(link.source_id):\n                link.is_static = True  # Each value block output should be static.",
                                    "children": [
                                        {
                                            "type": "function_definition",
                                            "label": "def sanitize(name):\n            return name.split(\"_#_\")[0].split(\"_@_\")[0].split(\"_$_\")[0]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "sanitize",
                                                    "children": []
                                                },
                                                {
                                                    "type": "parameters",
                                                    "label": "(name)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "name",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "return name.split(\"_#_\")[0].split(\"_@_\")[0].split(\"_$_\")[0]",
                                                    "children": [
                                                        {
                                                            "type": "return_statement",
                                                            "label": "return name.split(\"_#_\")[0].split(\"_@_\")[0].split(\"_$_\")[0]",
                                                            "children": [
                                                                {
                                                                    "type": "subscript",
                                                                    "label": "name.split(\"_#_\")[0].split(\"_@_\")[0].split(\"_$_\")[0]",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "name.split(\"_#_\")[0].split(\"_@_\")[0].split(\"_$_\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "name.split(\"_#_\")[0].split(\"_@_\")[0].split",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "subscript",
                                                                                            "label": "name.split(\"_#_\")[0].split(\"_@_\")[0]",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "name.split(\"_#_\")[0].split(\"_@_\")",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "name.split(\"_#_\")[0].split",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "subscript",
                                                                                                                    "label": "name.split(\"_#_\")[0]",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "call",
                                                                                                                            "label": "name.split(\"_#_\")",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "attribute",
                                                                                                                                    "label": "name.split",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "name",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "split",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "argument_list",
                                                                                                                                    "label": "(\"_#_\")",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "string",
                                                                                                                                            "label": "\"_#_\"",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "string_start",
                                                                                                                                                    "label": "\"",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "string_content",
                                                                                                                                                    "label": "_#_",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "string_end",
                                                                                                                                                    "label": "\"",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "integer",
                                                                                                                            "label": "0",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "split",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(\"_@_\")",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string",
                                                                                                                    "label": "\"_@_\"",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "string_start",
                                                                                                                            "label": "\"",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": "_@_",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_end",
                                                                                                                            "label": "\"",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "integer",
                                                                                                    "label": "0",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "split",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(\"_$_\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"_$_\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "_$_",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "0",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "input_links = defaultdict(list)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "input_links = defaultdict(list)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "input_links",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "defaultdict(list)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "defaultdict",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(list)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "list",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "for_statement",
                                            "label": "for link in self.links:\n            input_links[link.sink_id].append(link)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "link",
                                                    "children": []
                                                },
                                                {
                                                    "type": "attribute",
                                                    "label": "self.links",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "self",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "links",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "input_links[link.sink_id].append(link)",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "input_links[link.sink_id].append(link)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "input_links[link.sink_id].append(link)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "input_links[link.sink_id].append",
                                                                            "children": [
                                                                                {
                                                                                    "type": "subscript",
                                                                                    "label": "input_links[link.sink_id]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "input_links",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "link.sink_id",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "link",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "sink_id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "append",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(link)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "link",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "label": "# Nodes: required fields are filled or connected and dependencies are satisfied",
                                            "children": []
                                        },
                                        {
                                            "type": "for_statement",
                                            "label": "for node in self.nodes:\n            block = get_block(node.block_id)\n            if block is None:\n                raise ValueError(f\"Invalid block {node.block_id} for node #{node.id}\")\n\n            provided_inputs = set(\n                [sanitize(name) for name in node.input_default]\n                + [sanitize(link.sink_name) for link in input_links.get(node.id, [])]\n            )\n            for name in block.input_schema.get_required_fields():\n                if (\n                    name not in provided_inputs\n                    and not (\n                        name == \"payload\"\n                        and block.block_type\n                        in (BlockType.WEBHOOK, BlockType.WEBHOOK_MANUAL)\n                    )\n                    and (\n                        for_run  # Skip input completion validation, unless when executing.\n                        or block.block_type == BlockType.INPUT\n                        or block.block_type == BlockType.OUTPUT\n                        or block.block_type == BlockType.AGENT\n                    )\n                ):\n                    raise ValueError(\n                        f\"Node {block.name} #{node.id} required input missing: `{name}`\"\n                    )\n\n            # Get input schema properties and check dependencies\n            input_schema = block.input_schema.model_fields\n            required_fields = block.input_schema.get_required_fields()\n\n            def has_value(name):\n                return (\n                    node is not None\n                    and name in node.input_default\n                    and node.input_default[name] is not None\n                    and str(node.input_default[name]).strip() != \"\"\n                ) or (name in input_schema and input_schema[name].default is not None)\n\n            # Validate dependencies between fields\n            for field_name, field_info in input_schema.items():\n                # Apply input dependency validation only on run & field with depends_on\n                json_schema_extra = field_info.json_schema_extra or {}\n                dependencies = json_schema_extra.get(\"depends_on\", [])\n                if not for_run or not dependencies:\n                    continue\n\n                # Check if dependent field has value in input_default\n                field_has_value = has_value(field_name)\n                field_is_required = field_name in required_fields\n\n                # Check for missing dependencies when dependent field is present\n                missing_deps = [dep for dep in dependencies if not has_value(dep)]\n                if missing_deps and (field_has_value or field_is_required):\n                    raise ValueError(\n                        f\"Node {block.name} #{node.id}: Field `{field_name}` requires [{', '.join(missing_deps)}] to be set\"\n                    )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "node",
                                                    "children": []
                                                },
                                                {
                                                    "type": "attribute",
                                                    "label": "self.nodes",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "self",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "nodes",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "block = get_block(node.block_id)\n            if block is None:\n                raise ValueError(f\"Invalid block {node.block_id} for node #{node.id}\")\n\n            provided_inputs = set(\n                [sanitize(name) for name in node.input_default]\n                + [sanitize(link.sink_name) for link in input_links.get(node.id, [])]\n            )\n            for name in block.input_schema.get_required_fields():\n                if (\n                    name not in provided_inputs\n                    and not (\n                        name == \"payload\"\n                        and block.block_type\n                        in (BlockType.WEBHOOK, BlockType.WEBHOOK_MANUAL)\n                    )\n                    and (\n                        for_run  # Skip input completion validation, unless when executing.\n                        or block.block_type == BlockType.INPUT\n                        or block.block_type == BlockType.OUTPUT\n                        or block.block_type == BlockType.AGENT\n                    )\n                ):\n                    raise ValueError(\n                        f\"Node {block.name} #{node.id} required input missing: `{name}`\"\n                    )\n\n            # Get input schema properties and check dependencies\n            input_schema = block.input_schema.model_fields\n            required_fields = block.input_schema.get_required_fields()\n\n            def has_value(name):\n                return (\n                    node is not None\n                    and name in node.input_default\n                    and node.input_default[name] is not None\n                    and str(node.input_default[name]).strip() != \"\"\n                ) or (name in input_schema and input_schema[name].default is not None)\n\n            # Validate dependencies between fields\n            for field_name, field_info in input_schema.items():\n                # Apply input dependency validation only on run & field with depends_on\n                json_schema_extra = field_info.json_schema_extra or {}\n                dependencies = json_schema_extra.get(\"depends_on\", [])\n                if not for_run or not dependencies:\n                    continue\n\n                # Check if dependent field has value in input_default\n                field_has_value = has_value(field_name)\n                field_is_required = field_name in required_fields\n\n                # Check for missing dependencies when dependent field is present\n                missing_deps = [dep for dep in dependencies if not has_value(dep)]\n                if missing_deps and (field_has_value or field_is_required):\n                    raise ValueError(\n                        f\"Node {block.name} #{node.id}: Field `{field_name}` requires [{', '.join(missing_deps)}] to be set\"\n                    )",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "block = get_block(node.block_id)",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "block = get_block(node.block_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "block",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "label": "get_block(node.block_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "get_block",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(node.block_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "node.block_id",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "node",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "block_id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "if_statement",
                                                            "label": "if block is None:\n                raise ValueError(f\"Invalid block {node.block_id} for node #{node.id}\")",
                                                            "children": [
                                                                {
                                                                    "type": "comparison_operator",
                                                                    "label": "block is None",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "block",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "none",
                                                                            "label": "None",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": "raise ValueError(f\"Invalid block {node.block_id} for node #{node.id}\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "raise_statement",
                                                                            "label": "raise ValueError(f\"Invalid block {node.block_id} for node #{node.id}\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "ValueError(f\"Invalid block {node.block_id} for node #{node.id}\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "ValueError",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(f\"Invalid block {node.block_id} for node #{node.id}\")",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "f\"Invalid block {node.block_id} for node #{node.id}\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "f\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "Invalid block ",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "interpolation",
                                                                                                            "label": "{node.block_id}",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "attribute",
                                                                                                                    "label": "node.block_id",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "node",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "block_id",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": " for node #",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "interpolation",
                                                                                                            "label": "{node.id}",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "attribute",
                                                                                                                    "label": "node.id",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "node",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "id",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "provided_inputs = set(\n                [sanitize(name) for name in node.input_default]\n                + [sanitize(link.sink_name) for link in input_links.get(node.id, [])]\n            )",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "provided_inputs = set(\n                [sanitize(name) for name in node.input_default]\n                + [sanitize(link.sink_name) for link in input_links.get(node.id, [])]\n            )",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "provided_inputs",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "label": "set(\n                [sanitize(name) for name in node.input_default]\n                + [sanitize(link.sink_name) for link in input_links.get(node.id, [])]\n            )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "set",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(\n                [sanitize(name) for name in node.input_default]\n                + [sanitize(link.sink_name) for link in input_links.get(node.id, [])]\n            )",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "binary_operator",
                                                                                            "label": "[sanitize(name) for name in node.input_default]\n                + [sanitize(link.sink_name) for link in input_links.get(node.id, [])]",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "list_comprehension",
                                                                                                    "label": "[sanitize(name) for name in node.input_default]",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "call",
                                                                                                            "label": "sanitize(name)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "sanitize",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "argument_list",
                                                                                                                    "label": "(name)",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "name",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "for_in_clause",
                                                                                                            "label": "for name in node.input_default",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "name",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "attribute",
                                                                                                                    "label": "node.input_default",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "node",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "input_default",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "list_comprehension",
                                                                                                    "label": "[sanitize(link.sink_name) for link in input_links.get(node.id, [])]",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "call",
                                                                                                            "label": "sanitize(link.sink_name)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "sanitize",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "argument_list",
                                                                                                                    "label": "(link.sink_name)",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "attribute",
                                                                                                                            "label": "link.sink_name",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "link",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "sink_name",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "for_in_clause",
                                                                                                            "label": "for link in input_links.get(node.id, [])",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "link",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "call",
                                                                                                                    "label": "input_links.get(node.id, [])",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "attribute",
                                                                                                                            "label": "input_links.get",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "input_links",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "get",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "argument_list",
                                                                                                                            "label": "(node.id, [])",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "attribute",
                                                                                                                                    "label": "node.id",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "node",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "id",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "list",
                                                                                                                                    "label": "[]",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "for_statement",
                                                            "label": "for name in block.input_schema.get_required_fields():\n                if (\n                    name not in provided_inputs\n                    and not (\n                        name == \"payload\"\n                        and block.block_type\n                        in (BlockType.WEBHOOK, BlockType.WEBHOOK_MANUAL)\n                    )\n                    and (\n                        for_run  # Skip input completion validation, unless when executing.\n                        or block.block_type == BlockType.INPUT\n                        or block.block_type == BlockType.OUTPUT\n                        or block.block_type == BlockType.AGENT\n                    )\n                ):\n                    raise ValueError(\n                        f\"Node {block.name} #{node.id} required input missing: `{name}`\"\n                    )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "name",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "block.input_schema.get_required_fields()",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "block.input_schema.get_required_fields",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "block.input_schema",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "block",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "input_schema",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "get_required_fields",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": "if (\n                    name not in provided_inputs\n                    and not (\n                        name == \"payload\"\n                        and block.block_type\n                        in (BlockType.WEBHOOK, BlockType.WEBHOOK_MANUAL)\n                    )\n                    and (\n                        for_run  # Skip input completion validation, unless when executing.\n                        or block.block_type == BlockType.INPUT\n                        or block.block_type == BlockType.OUTPUT\n                        or block.block_type == BlockType.AGENT\n                    )\n                ):\n                    raise ValueError(\n                        f\"Node {block.name} #{node.id} required input missing: `{name}`\"\n                    )",
                                                                    "children": [
                                                                        {
                                                                            "type": "if_statement",
                                                                            "label": "if (\n                    name not in provided_inputs\n                    and not (\n                        name == \"payload\"\n                        and block.block_type\n                        in (BlockType.WEBHOOK, BlockType.WEBHOOK_MANUAL)\n                    )\n                    and (\n                        for_run  # Skip input completion validation, unless when executing.\n                        or block.block_type == BlockType.INPUT\n                        or block.block_type == BlockType.OUTPUT\n                        or block.block_type == BlockType.AGENT\n                    )\n                ):\n                    raise ValueError(\n                        f\"Node {block.name} #{node.id} required input missing: `{name}`\"\n                    )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "parenthesized_expression",
                                                                                    "label": "(\n                    name not in provided_inputs\n                    and not (\n                        name == \"payload\"\n                        and block.block_type\n                        in (BlockType.WEBHOOK, BlockType.WEBHOOK_MANUAL)\n                    )\n                    and (\n                        for_run  # Skip input completion validation, unless when executing.\n                        or block.block_type == BlockType.INPUT\n                        or block.block_type == BlockType.OUTPUT\n                        or block.block_type == BlockType.AGENT\n                    )\n                )",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "boolean_operator",
                                                                                            "label": "name not in provided_inputs\n                    and not (\n                        name == \"payload\"\n                        and block.block_type\n                        in (BlockType.WEBHOOK, BlockType.WEBHOOK_MANUAL)\n                    )\n                    and (\n                        for_run  # Skip input completion validation, unless when executing.\n                        or block.block_type == BlockType.INPUT\n                        or block.block_type == BlockType.OUTPUT\n                        or block.block_type == BlockType.AGENT\n                    )",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "boolean_operator",
                                                                                                    "label": "name not in provided_inputs\n                    and not (\n                        name == \"payload\"\n                        and block.block_type\n                        in (BlockType.WEBHOOK, BlockType.WEBHOOK_MANUAL)\n                    )",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "comparison_operator",
                                                                                                            "label": "name not in provided_inputs",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "name",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "provided_inputs",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "not_operator",
                                                                                                            "label": "not (\n                        name == \"payload\"\n                        and block.block_type\n                        in (BlockType.WEBHOOK, BlockType.WEBHOOK_MANUAL)\n                    )",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "parenthesized_expression",
                                                                                                                    "label": "(\n                        name == \"payload\"\n                        and block.block_type\n                        in (BlockType.WEBHOOK, BlockType.WEBHOOK_MANUAL)\n                    )",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "boolean_operator",
                                                                                                                            "label": "name == \"payload\"\n                        and block.block_type\n                        in (BlockType.WEBHOOK, BlockType.WEBHOOK_MANUAL)",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "comparison_operator",
                                                                                                                                    "label": "name == \"payload\"",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "name",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "string",
                                                                                                                                            "label": "\"payload\"",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "string_start",
                                                                                                                                                    "label": "\"",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "string_content",
                                                                                                                                                    "label": "payload",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "string_end",
                                                                                                                                                    "label": "\"",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "comparison_operator",
                                                                                                                                    "label": "block.block_type\n                        in (BlockType.WEBHOOK, BlockType.WEBHOOK_MANUAL)",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "attribute",
                                                                                                                                            "label": "block.block_type",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "block",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "block_type",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "tuple",
                                                                                                                                            "label": "(BlockType.WEBHOOK, BlockType.WEBHOOK_MANUAL)",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "attribute",
                                                                                                                                                    "label": "BlockType.WEBHOOK",
                                                                                                                                                    "children": [
                                                                                                                                                        {
                                                                                                                                                            "type": "identifier",
                                                                                                                                                            "label": "BlockType",
                                                                                                                                                            "children": []
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                            "type": "identifier",
                                                                                                                                                            "label": "WEBHOOK",
                                                                                                                                                            "children": []
                                                                                                                                                        }
                                                                                                                                                    ]
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "attribute",
                                                                                                                                                    "label": "BlockType.WEBHOOK_MANUAL",
                                                                                                                                                    "children": [
                                                                                                                                                        {
                                                                                                                                                            "type": "identifier",
                                                                                                                                                            "label": "BlockType",
                                                                                                                                                            "children": []
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                            "type": "identifier",
                                                                                                                                                            "label": "WEBHOOK_MANUAL",
                                                                                                                                                            "children": []
                                                                                                                                                        }
                                                                                                                                                    ]
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "parenthesized_expression",
                                                                                                    "label": "(\n                        for_run  # Skip input completion validation, unless when executing.\n                        or block.block_type == BlockType.INPUT\n                        or block.block_type == BlockType.OUTPUT\n                        or block.block_type == BlockType.AGENT\n                    )",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "boolean_operator",
                                                                                                            "label": "for_run  # Skip input completion validation, unless when executing.\n                        or block.block_type == BlockType.INPUT\n                        or block.block_type == BlockType.OUTPUT\n                        or block.block_type == BlockType.AGENT",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "boolean_operator",
                                                                                                                    "label": "for_run  # Skip input completion validation, unless when executing.\n                        or block.block_type == BlockType.INPUT\n                        or block.block_type == BlockType.OUTPUT",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "boolean_operator",
                                                                                                                            "label": "for_run  # Skip input completion validation, unless when executing.\n                        or block.block_type == BlockType.INPUT",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "for_run",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "comment",
                                                                                                                                    "label": "# Skip input completion validation, unless when executing.",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "comparison_operator",
                                                                                                                                    "label": "block.block_type == BlockType.INPUT",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "attribute",
                                                                                                                                            "label": "block.block_type",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "block",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "block_type",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "attribute",
                                                                                                                                            "label": "BlockType.INPUT",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "BlockType",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "INPUT",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "comparison_operator",
                                                                                                                            "label": "block.block_type == BlockType.OUTPUT",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "attribute",
                                                                                                                                    "label": "block.block_type",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "block",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "block_type",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "attribute",
                                                                                                                                    "label": "BlockType.OUTPUT",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "BlockType",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "OUTPUT",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "comparison_operator",
                                                                                                                    "label": "block.block_type == BlockType.AGENT",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "attribute",
                                                                                                                            "label": "block.block_type",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "block",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "block_type",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "attribute",
                                                                                                                            "label": "BlockType.AGENT",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "BlockType",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "AGENT",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "block",
                                                                                    "label": "raise ValueError(\n                        f\"Node {block.name} #{node.id} required input missing: `{name}`\"\n                    )",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "raise_statement",
                                                                                            "label": "raise ValueError(\n                        f\"Node {block.name} #{node.id} required input missing: `{name}`\"\n                    )",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "ValueError(\n                        f\"Node {block.name} #{node.id} required input missing: `{name}`\"\n                    )",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "ValueError",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(\n                        f\"Node {block.name} #{node.id} required input missing: `{name}`\"\n                    )",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string",
                                                                                                                    "label": "f\"Node {block.name} #{node.id} required input missing: `{name}`\"",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "string_start",
                                                                                                                            "label": "f\"",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": "Node ",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "interpolation",
                                                                                                                            "label": "{block.name}",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "attribute",
                                                                                                                                    "label": "block.name",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "block",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "name",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": " #",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "interpolation",
                                                                                                                            "label": "{node.id}",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "attribute",
                                                                                                                                    "label": "node.id",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "node",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "id",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": " required input missing: `",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "interpolation",
                                                                                                                            "label": "{name}",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "name",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": "`",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_end",
                                                                                                                            "label": "\"",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "comment",
                                                            "label": "# Get input schema properties and check dependencies",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "input_schema = block.input_schema.model_fields",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "input_schema = block.input_schema.model_fields",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "input_schema",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "block.input_schema.model_fields",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "block.input_schema",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "block",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "input_schema",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "model_fields",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "required_fields = block.input_schema.get_required_fields()",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "required_fields = block.input_schema.get_required_fields()",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "required_fields",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "label": "block.input_schema.get_required_fields()",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "block.input_schema.get_required_fields",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "block.input_schema",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "block",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "input_schema",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_required_fields",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "()",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "function_definition",
                                                            "label": "def has_value(name):\n                return (\n                    node is not None\n                    and name in node.input_default\n                    and node.input_default[name] is not None\n                    and str(node.input_default[name]).strip() != \"\"\n                ) or (name in input_schema and input_schema[name].default is not None)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "has_value",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "parameters",
                                                                    "label": "(name)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "name",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": "return (\n                    node is not None\n                    and name in node.input_default\n                    and node.input_default[name] is not None\n                    and str(node.input_default[name]).strip() != \"\"\n                ) or (name in input_schema and input_schema[name].default is not None)",
                                                                    "children": [
                                                                        {
                                                                            "type": "return_statement",
                                                                            "label": "return (\n                    node is not None\n                    and name in node.input_default\n                    and node.input_default[name] is not None\n                    and str(node.input_default[name]).strip() != \"\"\n                ) or (name in input_schema and input_schema[name].default is not None)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "boolean_operator",
                                                                                    "label": "(\n                    node is not None\n                    and name in node.input_default\n                    and node.input_default[name] is not None\n                    and str(node.input_default[name]).strip() != \"\"\n                ) or (name in input_schema and input_schema[name].default is not None)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "parenthesized_expression",
                                                                                            "label": "(\n                    node is not None\n                    and name in node.input_default\n                    and node.input_default[name] is not None\n                    and str(node.input_default[name]).strip() != \"\"\n                )",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "boolean_operator",
                                                                                                    "label": "node is not None\n                    and name in node.input_default\n                    and node.input_default[name] is not None\n                    and str(node.input_default[name]).strip() != \"\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "boolean_operator",
                                                                                                            "label": "node is not None\n                    and name in node.input_default\n                    and node.input_default[name] is not None",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "boolean_operator",
                                                                                                                    "label": "node is not None\n                    and name in node.input_default",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "comparison_operator",
                                                                                                                            "label": "node is not None",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "node",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "none",
                                                                                                                                    "label": "None",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "comparison_operator",
                                                                                                                            "label": "name in node.input_default",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "name",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "attribute",
                                                                                                                                    "label": "node.input_default",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "node",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "input_default",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "comparison_operator",
                                                                                                                    "label": "node.input_default[name] is not None",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "subscript",
                                                                                                                            "label": "node.input_default[name]",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "attribute",
                                                                                                                                    "label": "node.input_default",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "node",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "input_default",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "name",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "none",
                                                                                                                            "label": "None",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "comparison_operator",
                                                                                                            "label": "str(node.input_default[name]).strip() != \"\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "call",
                                                                                                                    "label": "str(node.input_default[name]).strip()",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "attribute",
                                                                                                                            "label": "str(node.input_default[name]).strip",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "call",
                                                                                                                                    "label": "str(node.input_default[name])",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "str",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "argument_list",
                                                                                                                                            "label": "(node.input_default[name])",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "subscript",
                                                                                                                                                    "label": "node.input_default[name]",
                                                                                                                                                    "children": [
                                                                                                                                                        {
                                                                                                                                                            "type": "attribute",
                                                                                                                                                            "label": "node.input_default",
                                                                                                                                                            "children": [
                                                                                                                                                                {
                                                                                                                                                                    "type": "identifier",
                                                                                                                                                                    "label": "node",
                                                                                                                                                                    "children": []
                                                                                                                                                                },
                                                                                                                                                                {
                                                                                                                                                                    "type": "identifier",
                                                                                                                                                                    "label": "input_default",
                                                                                                                                                                    "children": []
                                                                                                                                                                }
                                                                                                                                                            ]
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                            "type": "identifier",
                                                                                                                                                            "label": "name",
                                                                                                                                                            "children": []
                                                                                                                                                        }
                                                                                                                                                    ]
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "strip",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "argument_list",
                                                                                                                            "label": "()",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string",
                                                                                                                    "label": "\"\"",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "string_start",
                                                                                                                            "label": "\"",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_end",
                                                                                                                            "label": "\"",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "parenthesized_expression",
                                                                                            "label": "(name in input_schema and input_schema[name].default is not None)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "boolean_operator",
                                                                                                    "label": "name in input_schema and input_schema[name].default is not None",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "comparison_operator",
                                                                                                            "label": "name in input_schema",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "name",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "input_schema",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "comparison_operator",
                                                                                                            "label": "input_schema[name].default is not None",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "attribute",
                                                                                                                    "label": "input_schema[name].default",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "subscript",
                                                                                                                            "label": "input_schema[name]",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "input_schema",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "name",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "default",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "none",
                                                                                                                    "label": "None",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "comment",
                                                            "label": "# Validate dependencies between fields",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "for_statement",
                                                            "label": "for field_name, field_info in input_schema.items():\n                # Apply input dependency validation only on run & field with depends_on\n                json_schema_extra = field_info.json_schema_extra or {}\n                dependencies = json_schema_extra.get(\"depends_on\", [])\n                if not for_run or not dependencies:\n                    continue\n\n                # Check if dependent field has value in input_default\n                field_has_value = has_value(field_name)\n                field_is_required = field_name in required_fields\n\n                # Check for missing dependencies when dependent field is present\n                missing_deps = [dep for dep in dependencies if not has_value(dep)]\n                if missing_deps and (field_has_value or field_is_required):\n                    raise ValueError(\n                        f\"Node {block.name} #{node.id}: Field `{field_name}` requires [{', '.join(missing_deps)}] to be set\"\n                    )",
                                                            "children": [
                                                                {
                                                                    "type": "pattern_list",
                                                                    "label": "field_name, field_info",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "field_name",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "field_info",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "input_schema.items()",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "input_schema.items",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "input_schema",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "items",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "comment",
                                                                    "label": "# Apply input dependency validation only on run & field with depends_on",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": "json_schema_extra = field_info.json_schema_extra or {}\n                dependencies = json_schema_extra.get(\"depends_on\", [])\n                if not for_run or not dependencies:\n                    continue\n\n                # Check if dependent field has value in input_default\n                field_has_value = has_value(field_name)\n                field_is_required = field_name in required_fields\n\n                # Check for missing dependencies when dependent field is present\n                missing_deps = [dep for dep in dependencies if not has_value(dep)]\n                if missing_deps and (field_has_value or field_is_required):\n                    raise ValueError(\n                        f\"Node {block.name} #{node.id}: Field `{field_name}` requires [{', '.join(missing_deps)}] to be set\"\n                    )",
                                                                    "children": [
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "label": "json_schema_extra = field_info.json_schema_extra or {}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "assignment",
                                                                                    "label": "json_schema_extra = field_info.json_schema_extra or {}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "json_schema_extra",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "boolean_operator",
                                                                                            "label": "field_info.json_schema_extra or {}",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "field_info.json_schema_extra",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "field_info",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "json_schema_extra",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "dictionary",
                                                                                                    "label": "{}",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "label": "dependencies = json_schema_extra.get(\"depends_on\", [])",
                                                                            "children": [
                                                                                {
                                                                                    "type": "assignment",
                                                                                    "label": "dependencies = json_schema_extra.get(\"depends_on\", [])",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "dependencies",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "json_schema_extra.get(\"depends_on\", [])",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "json_schema_extra.get",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "json_schema_extra",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "get",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(\"depends_on\", [])",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"depends_on\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "depends_on",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "list",
                                                                                                            "label": "[]",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "if_statement",
                                                                            "label": "if not for_run or not dependencies:\n                    continue",
                                                                            "children": [
                                                                                {
                                                                                    "type": "boolean_operator",
                                                                                    "label": "not for_run or not dependencies",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "not_operator",
                                                                                            "label": "not for_run",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "for_run",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "not_operator",
                                                                                            "label": "not dependencies",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "dependencies",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "block",
                                                                                    "label": "continue",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "continue_statement",
                                                                                            "label": "continue",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "comment",
                                                                            "label": "# Check if dependent field has value in input_default",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "label": "field_has_value = has_value(field_name)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "assignment",
                                                                                    "label": "field_has_value = has_value(field_name)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "field_has_value",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "has_value(field_name)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "has_value",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(field_name)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "field_name",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "label": "field_is_required = field_name in required_fields",
                                                                            "children": [
                                                                                {
                                                                                    "type": "assignment",
                                                                                    "label": "field_is_required = field_name in required_fields",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "field_is_required",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "comparison_operator",
                                                                                            "label": "field_name in required_fields",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "field_name",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "required_fields",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "comment",
                                                                            "label": "# Check for missing dependencies when dependent field is present",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "label": "missing_deps = [dep for dep in dependencies if not has_value(dep)]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "assignment",
                                                                                    "label": "missing_deps = [dep for dep in dependencies if not has_value(dep)]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "missing_deps",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "list_comprehension",
                                                                                            "label": "[dep for dep in dependencies if not has_value(dep)]",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "dep",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "for_in_clause",
                                                                                                    "label": "for dep in dependencies",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "dep",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "dependencies",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "if_clause",
                                                                                                    "label": "if not has_value(dep)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "not_operator",
                                                                                                            "label": "not has_value(dep)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "call",
                                                                                                                    "label": "has_value(dep)",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "has_value",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "argument_list",
                                                                                                                            "label": "(dep)",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "dep",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "if_statement",
                                                                            "label": "if missing_deps and (field_has_value or field_is_required):\n                    raise ValueError(\n                        f\"Node {block.name} #{node.id}: Field `{field_name}` requires [{', '.join(missing_deps)}] to be set\"\n                    )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "boolean_operator",
                                                                                    "label": "missing_deps and (field_has_value or field_is_required)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "missing_deps",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "parenthesized_expression",
                                                                                            "label": "(field_has_value or field_is_required)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "boolean_operator",
                                                                                                    "label": "field_has_value or field_is_required",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "field_has_value",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "field_is_required",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "block",
                                                                                    "label": "raise ValueError(\n                        f\"Node {block.name} #{node.id}: Field `{field_name}` requires [{', '.join(missing_deps)}] to be set\"\n                    )",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "raise_statement",
                                                                                            "label": "raise ValueError(\n                        f\"Node {block.name} #{node.id}: Field `{field_name}` requires [{', '.join(missing_deps)}] to be set\"\n                    )",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "ValueError(\n                        f\"Node {block.name} #{node.id}: Field `{field_name}` requires [{', '.join(missing_deps)}] to be set\"\n                    )",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "ValueError",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(\n                        f\"Node {block.name} #{node.id}: Field `{field_name}` requires [{', '.join(missing_deps)}] to be set\"\n                    )",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string",
                                                                                                                    "label": "f\"Node {block.name} #{node.id}: Field `{field_name}` requires [{', '.join(missing_deps)}] to be set\"",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "string_start",
                                                                                                                            "label": "f\"",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": "Node ",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "interpolation",
                                                                                                                            "label": "{block.name}",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "attribute",
                                                                                                                                    "label": "block.name",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "block",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "name",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": " #",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "interpolation",
                                                                                                                            "label": "{node.id}",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "attribute",
                                                                                                                                    "label": "node.id",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "node",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "id",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": ": Field `",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "interpolation",
                                                                                                                            "label": "{field_name}",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "field_name",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": "` requires [",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "interpolation",
                                                                                                                            "label": "{', '.join(missing_deps)}",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "call",
                                                                                                                                    "label": "', '.join(missing_deps)",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "attribute",
                                                                                                                                            "label": "', '.join",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "string",
                                                                                                                                                    "label": "', '",
                                                                                                                                                    "children": [
                                                                                                                                                        {
                                                                                                                                                            "type": "string_start",
                                                                                                                                                            "label": "'",
                                                                                                                                                            "children": []
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                            "type": "string_content",
                                                                                                                                                            "label": ", ",
                                                                                                                                                            "children": []
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                            "type": "string_end",
                                                                                                                                                            "label": "'",
                                                                                                                                                            "children": []
                                                                                                                                                        }
                                                                                                                                                    ]
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "join",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "argument_list",
                                                                                                                                            "label": "(missing_deps)",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "missing_deps",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": "] to be set",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_end",
                                                                                                                            "label": "\"",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "node_map = {v.id: v for v in self.nodes}",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "node_map = {v.id: v for v in self.nodes}",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "node_map",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "dictionary_comprehension",
                                                            "label": "{v.id: v for v in self.nodes}",
                                                            "children": [
                                                                {
                                                                    "type": "pair",
                                                                    "label": "v.id: v",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "v.id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "v",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "v",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "for_in_clause",
                                                                    "label": "for v in self.nodes",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "v",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "self.nodes",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "self",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "nodes",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "function_definition",
                                            "label": "def is_static_output_block(nid: str) -> bool:\n            bid = node_map[nid].block_id\n            b = get_block(bid)\n            return b.static_output if b else False",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "is_static_output_block",
                                                    "children": []
                                                },
                                                {
                                                    "type": "parameters",
                                                    "label": "(nid: str)",
                                                    "children": [
                                                        {
                                                            "type": "typed_parameter",
                                                            "label": "nid: str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "nid",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "bool",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "bool",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "bid = node_map[nid].block_id\n            b = get_block(bid)\n            return b.static_output if b else False",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "bid = node_map[nid].block_id",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "bid = node_map[nid].block_id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "bid",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "node_map[nid].block_id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "subscript",
                                                                                    "label": "node_map[nid]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "node_map",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "nid",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "block_id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "b = get_block(bid)",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "b = get_block(bid)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "b",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "label": "get_block(bid)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "get_block",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(bid)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "bid",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "return_statement",
                                                            "label": "return b.static_output if b else False",
                                                            "children": [
                                                                {
                                                                    "type": "conditional_expression",
                                                                    "label": "b.static_output if b else False",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "b.static_output",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "b",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "static_output",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "b",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "false",
                                                                            "label": "False",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "label": "# Links: links are connected and the connected pin data type are compatible.",
                                            "children": []
                                        },
                                        {
                                            "type": "for_statement",
                                            "label": "for link in self.links:\n            source = (link.source_id, link.source_name)\n            sink = (link.sink_id, link.sink_name)\n            suffix = f\"Link {source} <-> {sink}\"\n\n            for i, (node_id, name) in enumerate([source, sink]):\n                node = node_map.get(node_id)\n                if not node:\n                    raise ValueError(\n                        f\"{suffix}, {node_id} is invalid node id, available nodes: {node_map.keys()}\"\n                    )\n\n                block = get_block(node.block_id)\n                if not block:\n                    blocks = {v().id: v().name for v in get_blocks().values()}\n                    raise ValueError(\n                        f\"{suffix}, {node.block_id} is invalid block id, available blocks: {blocks}\"\n                    )\n\n                sanitized_name = sanitize(name)\n                vals = node.input_default\n                if i == 0:\n                    fields = (\n                        block.output_schema.get_fields()\n                        if block.block_type != BlockType.AGENT\n                        else vals.get(\"output_schema\", {}).get(\"properties\", {}).keys()\n                    )\n                else:\n                    fields = (\n                        block.input_schema.get_fields()\n                        if block.block_type != BlockType.AGENT\n                        else vals.get(\"input_schema\", {}).get(\"properties\", {}).keys()\n                    )\n                if sanitized_name not in fields:\n                    fields_msg = f\"Allowed fields: {fields}\"\n                    raise ValueError(f\"{suffix}, `{name}` invalid, {fields_msg}\")\n\n            if is_static_output_block(link.source_id):\n                link.is_static = True  # Each value block output should be static.",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "link",
                                                    "children": []
                                                },
                                                {
                                                    "type": "attribute",
                                                    "label": "self.links",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "self",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "links",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "source = (link.source_id, link.source_name)\n            sink = (link.sink_id, link.sink_name)\n            suffix = f\"Link {source} <-> {sink}\"\n\n            for i, (node_id, name) in enumerate([source, sink]):\n                node = node_map.get(node_id)\n                if not node:\n                    raise ValueError(\n                        f\"{suffix}, {node_id} is invalid node id, available nodes: {node_map.keys()}\"\n                    )\n\n                block = get_block(node.block_id)\n                if not block:\n                    blocks = {v().id: v().name for v in get_blocks().values()}\n                    raise ValueError(\n                        f\"{suffix}, {node.block_id} is invalid block id, available blocks: {blocks}\"\n                    )\n\n                sanitized_name = sanitize(name)\n                vals = node.input_default\n                if i == 0:\n                    fields = (\n                        block.output_schema.get_fields()\n                        if block.block_type != BlockType.AGENT\n                        else vals.get(\"output_schema\", {}).get(\"properties\", {}).keys()\n                    )\n                else:\n                    fields = (\n                        block.input_schema.get_fields()\n                        if block.block_type != BlockType.AGENT\n                        else vals.get(\"input_schema\", {}).get(\"properties\", {}).keys()\n                    )\n                if sanitized_name not in fields:\n                    fields_msg = f\"Allowed fields: {fields}\"\n                    raise ValueError(f\"{suffix}, `{name}` invalid, {fields_msg}\")\n\n            if is_static_output_block(link.source_id):\n                link.is_static = True  # Each value block output should be static.",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "source = (link.source_id, link.source_name)",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "source = (link.source_id, link.source_name)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "source",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "tuple",
                                                                            "label": "(link.source_id, link.source_name)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "link.source_id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "link",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "source_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "link.source_name",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "link",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "source_name",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "sink = (link.sink_id, link.sink_name)",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "sink = (link.sink_id, link.sink_name)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "sink",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "tuple",
                                                                            "label": "(link.sink_id, link.sink_name)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "link.sink_id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "link",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "sink_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "link.sink_name",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "link",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "sink_name",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "suffix = f\"Link {source} <-> {sink}\"",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "suffix = f\"Link {source} <-> {sink}\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "suffix",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "f\"Link {source} <-> {sink}\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "f\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "Link ",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{source}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "source",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": " <-> ",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{sink}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "sink",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "for_statement",
                                                            "label": "for i, (node_id, name) in enumerate([source, sink]):\n                node = node_map.get(node_id)\n                if not node:\n                    raise ValueError(\n                        f\"{suffix}, {node_id} is invalid node id, available nodes: {node_map.keys()}\"\n                    )\n\n                block = get_block(node.block_id)\n                if not block:\n                    blocks = {v().id: v().name for v in get_blocks().values()}\n                    raise ValueError(\n                        f\"{suffix}, {node.block_id} is invalid block id, available blocks: {blocks}\"\n                    )\n\n                sanitized_name = sanitize(name)\n                vals = node.input_default\n                if i == 0:\n                    fields = (\n                        block.output_schema.get_fields()\n                        if block.block_type != BlockType.AGENT\n                        else vals.get(\"output_schema\", {}).get(\"properties\", {}).keys()\n                    )\n                else:\n                    fields = (\n                        block.input_schema.get_fields()\n                        if block.block_type != BlockType.AGENT\n                        else vals.get(\"input_schema\", {}).get(\"properties\", {}).keys()\n                    )\n                if sanitized_name not in fields:\n                    fields_msg = f\"Allowed fields: {fields}\"\n                    raise ValueError(f\"{suffix}, `{name}` invalid, {fields_msg}\")",
                                                            "children": [
                                                                {
                                                                    "type": "pattern_list",
                                                                    "label": "i, (node_id, name)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "i",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "tuple_pattern",
                                                                            "label": "(node_id, name)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "node_id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "name",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "enumerate([source, sink])",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "enumerate",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "([source, sink])",
                                                                            "children": [
                                                                                {
                                                                                    "type": "list",
                                                                                    "label": "[source, sink]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "source",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "sink",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": "node = node_map.get(node_id)\n                if not node:\n                    raise ValueError(\n                        f\"{suffix}, {node_id} is invalid node id, available nodes: {node_map.keys()}\"\n                    )\n\n                block = get_block(node.block_id)\n                if not block:\n                    blocks = {v().id: v().name for v in get_blocks().values()}\n                    raise ValueError(\n                        f\"{suffix}, {node.block_id} is invalid block id, available blocks: {blocks}\"\n                    )\n\n                sanitized_name = sanitize(name)\n                vals = node.input_default\n                if i == 0:\n                    fields = (\n                        block.output_schema.get_fields()\n                        if block.block_type != BlockType.AGENT\n                        else vals.get(\"output_schema\", {}).get(\"properties\", {}).keys()\n                    )\n                else:\n                    fields = (\n                        block.input_schema.get_fields()\n                        if block.block_type != BlockType.AGENT\n                        else vals.get(\"input_schema\", {}).get(\"properties\", {}).keys()\n                    )\n                if sanitized_name not in fields:\n                    fields_msg = f\"Allowed fields: {fields}\"\n                    raise ValueError(f\"{suffix}, `{name}` invalid, {fields_msg}\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "label": "node = node_map.get(node_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "assignment",
                                                                                    "label": "node = node_map.get(node_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "node",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "node_map.get(node_id)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "node_map.get",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "node_map",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "get",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(node_id)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "node_id",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "if_statement",
                                                                            "label": "if not node:\n                    raise ValueError(\n                        f\"{suffix}, {node_id} is invalid node id, available nodes: {node_map.keys()}\"\n                    )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "not_operator",
                                                                                    "label": "not node",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "node",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "block",
                                                                                    "label": "raise ValueError(\n                        f\"{suffix}, {node_id} is invalid node id, available nodes: {node_map.keys()}\"\n                    )",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "raise_statement",
                                                                                            "label": "raise ValueError(\n                        f\"{suffix}, {node_id} is invalid node id, available nodes: {node_map.keys()}\"\n                    )",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "ValueError(\n                        f\"{suffix}, {node_id} is invalid node id, available nodes: {node_map.keys()}\"\n                    )",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "ValueError",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(\n                        f\"{suffix}, {node_id} is invalid node id, available nodes: {node_map.keys()}\"\n                    )",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string",
                                                                                                                    "label": "f\"{suffix}, {node_id} is invalid node id, available nodes: {node_map.keys()}\"",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "string_start",
                                                                                                                            "label": "f\"",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "interpolation",
                                                                                                                            "label": "{suffix}",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "suffix",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": ", ",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "interpolation",
                                                                                                                            "label": "{node_id}",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "node_id",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": " is invalid node id, available nodes: ",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "interpolation",
                                                                                                                            "label": "{node_map.keys()}",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "call",
                                                                                                                                    "label": "node_map.keys()",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "attribute",
                                                                                                                                            "label": "node_map.keys",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "node_map",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "keys",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "argument_list",
                                                                                                                                            "label": "()",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_end",
                                                                                                                            "label": "\"",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "label": "block = get_block(node.block_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "assignment",
                                                                                    "label": "block = get_block(node.block_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "block",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "get_block(node.block_id)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "get_block",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(node.block_id)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "node.block_id",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "node",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "block_id",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "if_statement",
                                                                            "label": "if not block:\n                    blocks = {v().id: v().name for v in get_blocks().values()}\n                    raise ValueError(\n                        f\"{suffix}, {node.block_id} is invalid block id, available blocks: {blocks}\"\n                    )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "not_operator",
                                                                                    "label": "not block",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "block",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "block",
                                                                                    "label": "blocks = {v().id: v().name for v in get_blocks().values()}\n                    raise ValueError(\n                        f\"{suffix}, {node.block_id} is invalid block id, available blocks: {blocks}\"\n                    )",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "expression_statement",
                                                                                            "label": "blocks = {v().id: v().name for v in get_blocks().values()}",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "assignment",
                                                                                                    "label": "blocks = {v().id: v().name for v in get_blocks().values()}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "blocks",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "dictionary_comprehension",
                                                                                                            "label": "{v().id: v().name for v in get_blocks().values()}",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "pair",
                                                                                                                    "label": "v().id: v().name",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "attribute",
                                                                                                                            "label": "v().id",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "call",
                                                                                                                                    "label": "v()",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "v",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "argument_list",
                                                                                                                                            "label": "()",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "id",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "attribute",
                                                                                                                            "label": "v().name",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "call",
                                                                                                                                    "label": "v()",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "v",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "argument_list",
                                                                                                                                            "label": "()",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "name",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "for_in_clause",
                                                                                                                    "label": "for v in get_blocks().values()",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "v",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "call",
                                                                                                                            "label": "get_blocks().values()",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "attribute",
                                                                                                                                    "label": "get_blocks().values",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "call",
                                                                                                                                            "label": "get_blocks()",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "get_blocks",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "argument_list",
                                                                                                                                                    "label": "()",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "values",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "argument_list",
                                                                                                                                    "label": "()",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "raise_statement",
                                                                                            "label": "raise ValueError(\n                        f\"{suffix}, {node.block_id} is invalid block id, available blocks: {blocks}\"\n                    )",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "ValueError(\n                        f\"{suffix}, {node.block_id} is invalid block id, available blocks: {blocks}\"\n                    )",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "ValueError",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(\n                        f\"{suffix}, {node.block_id} is invalid block id, available blocks: {blocks}\"\n                    )",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string",
                                                                                                                    "label": "f\"{suffix}, {node.block_id} is invalid block id, available blocks: {blocks}\"",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "string_start",
                                                                                                                            "label": "f\"",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "interpolation",
                                                                                                                            "label": "{suffix}",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "suffix",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": ", ",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "interpolation",
                                                                                                                            "label": "{node.block_id}",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "attribute",
                                                                                                                                    "label": "node.block_id",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "node",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "block_id",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": " is invalid block id, available blocks: ",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "interpolation",
                                                                                                                            "label": "{blocks}",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "blocks",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_end",
                                                                                                                            "label": "\"",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "label": "sanitized_name = sanitize(name)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "assignment",
                                                                                    "label": "sanitized_name = sanitize(name)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "sanitized_name",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "sanitize(name)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "sanitize",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(name)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "name",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "label": "vals = node.input_default",
                                                                            "children": [
                                                                                {
                                                                                    "type": "assignment",
                                                                                    "label": "vals = node.input_default",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "vals",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "node.input_default",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "node",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "input_default",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "if_statement",
                                                                            "label": "if i == 0:\n                    fields = (\n                        block.output_schema.get_fields()\n                        if block.block_type != BlockType.AGENT\n                        else vals.get(\"output_schema\", {}).get(\"properties\", {}).keys()\n                    )\n                else:\n                    fields = (\n                        block.input_schema.get_fields()\n                        if block.block_type != BlockType.AGENT\n                        else vals.get(\"input_schema\", {}).get(\"properties\", {}).keys()\n                    )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "comparison_operator",
                                                                                    "label": "i == 0",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "i",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "label": "0",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "block",
                                                                                    "label": "fields = (\n                        block.output_schema.get_fields()\n                        if block.block_type != BlockType.AGENT\n                        else vals.get(\"output_schema\", {}).get(\"properties\", {}).keys()\n                    )",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "expression_statement",
                                                                                            "label": "fields = (\n                        block.output_schema.get_fields()\n                        if block.block_type != BlockType.AGENT\n                        else vals.get(\"output_schema\", {}).get(\"properties\", {}).keys()\n                    )",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "assignment",
                                                                                                    "label": "fields = (\n                        block.output_schema.get_fields()\n                        if block.block_type != BlockType.AGENT\n                        else vals.get(\"output_schema\", {}).get(\"properties\", {}).keys()\n                    )",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "fields",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "parenthesized_expression",
                                                                                                            "label": "(\n                        block.output_schema.get_fields()\n                        if block.block_type != BlockType.AGENT\n                        else vals.get(\"output_schema\", {}).get(\"properties\", {}).keys()\n                    )",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "conditional_expression",
                                                                                                                    "label": "block.output_schema.get_fields()\n                        if block.block_type != BlockType.AGENT\n                        else vals.get(\"output_schema\", {}).get(\"properties\", {}).keys()",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "call",
                                                                                                                            "label": "block.output_schema.get_fields()",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "attribute",
                                                                                                                                    "label": "block.output_schema.get_fields",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "attribute",
                                                                                                                                            "label": "block.output_schema",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "block",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "output_schema",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "get_fields",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "argument_list",
                                                                                                                                    "label": "()",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "comparison_operator",
                                                                                                                            "label": "block.block_type != BlockType.AGENT",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "attribute",
                                                                                                                                    "label": "block.block_type",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "block",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "block_type",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "attribute",
                                                                                                                                    "label": "BlockType.AGENT",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "BlockType",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "AGENT",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "call",
                                                                                                                            "label": "vals.get(\"output_schema\", {}).get(\"properties\", {}).keys()",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "attribute",
                                                                                                                                    "label": "vals.get(\"output_schema\", {}).get(\"properties\", {}).keys",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "call",
                                                                                                                                            "label": "vals.get(\"output_schema\", {}).get(\"properties\", {})",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "attribute",
                                                                                                                                                    "label": "vals.get(\"output_schema\", {}).get",
                                                                                                                                                    "children": [
                                                                                                                                                        {
                                                                                                                                                            "type": "call",
                                                                                                                                                            "label": "vals.get(\"output_schema\", {})",
                                                                                                                                                            "children": [
                                                                                                                                                                {
                                                                                                                                                                    "type": "attribute",
                                                                                                                                                                    "label": "vals.get",
                                                                                                                                                                    "children": [
                                                                                                                                                                        {
                                                                                                                                                                            "type": "identifier",
                                                                                                                                                                            "label": "vals",
                                                                                                                                                                            "children": []
                                                                                                                                                                        },
                                                                                                                                                                        {
                                                                                                                                                                            "type": "identifier",
                                                                                                                                                                            "label": "get",
                                                                                                                                                                            "children": []
                                                                                                                                                                        }
                                                                                                                                                                    ]
                                                                                                                                                                },
                                                                                                                                                                {
                                                                                                                                                                    "type": "argument_list",
                                                                                                                                                                    "label": "(\"output_schema\", {})",
                                                                                                                                                                    "children": [
                                                                                                                                                                        {
                                                                                                                                                                            "type": "string",
                                                                                                                                                                            "label": "\"output_schema\"",
                                                                                                                                                                            "children": [
                                                                                                                                                                                {
                                                                                                                                                                                    "type": "string_start",
                                                                                                                                                                                    "label": "\"",
                                                                                                                                                                                    "children": []
                                                                                                                                                                                },
                                                                                                                                                                                {
                                                                                                                                                                                    "type": "string_content",
                                                                                                                                                                                    "label": "output_schema",
                                                                                                                                                                                    "children": []
                                                                                                                                                                                },
                                                                                                                                                                                {
                                                                                                                                                                                    "type": "string_end",
                                                                                                                                                                                    "label": "\"",
                                                                                                                                                                                    "children": []
                                                                                                                                                                                }
                                                                                                                                                                            ]
                                                                                                                                                                        },
                                                                                                                                                                        {
                                                                                                                                                                            "type": "dictionary",
                                                                                                                                                                            "label": "{}",
                                                                                                                                                                            "children": []
                                                                                                                                                                        }
                                                                                                                                                                    ]
                                                                                                                                                                }
                                                                                                                                                            ]
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                            "type": "identifier",
                                                                                                                                                            "label": "get",
                                                                                                                                                            "children": []
                                                                                                                                                        }
                                                                                                                                                    ]
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "argument_list",
                                                                                                                                                    "label": "(\"properties\", {})",
                                                                                                                                                    "children": [
                                                                                                                                                        {
                                                                                                                                                            "type": "string",
                                                                                                                                                            "label": "\"properties\"",
                                                                                                                                                            "children": [
                                                                                                                                                                {
                                                                                                                                                                    "type": "string_start",
                                                                                                                                                                    "label": "\"",
                                                                                                                                                                    "children": []
                                                                                                                                                                },
                                                                                                                                                                {
                                                                                                                                                                    "type": "string_content",
                                                                                                                                                                    "label": "properties",
                                                                                                                                                                    "children": []
                                                                                                                                                                },
                                                                                                                                                                {
                                                                                                                                                                    "type": "string_end",
                                                                                                                                                                    "label": "\"",
                                                                                                                                                                    "children": []
                                                                                                                                                                }
                                                                                                                                                            ]
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                            "type": "dictionary",
                                                                                                                                                            "label": "{}",
                                                                                                                                                            "children": []
                                                                                                                                                        }
                                                                                                                                                    ]
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "keys",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "argument_list",
                                                                                                                                    "label": "()",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "else_clause",
                                                                                    "label": "else:\n                    fields = (\n                        block.input_schema.get_fields()\n                        if block.block_type != BlockType.AGENT\n                        else vals.get(\"input_schema\", {}).get(\"properties\", {}).keys()\n                    )",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "block",
                                                                                            "label": "fields = (\n                        block.input_schema.get_fields()\n                        if block.block_type != BlockType.AGENT\n                        else vals.get(\"input_schema\", {}).get(\"properties\", {}).keys()\n                    )",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "expression_statement",
                                                                                                    "label": "fields = (\n                        block.input_schema.get_fields()\n                        if block.block_type != BlockType.AGENT\n                        else vals.get(\"input_schema\", {}).get(\"properties\", {}).keys()\n                    )",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "assignment",
                                                                                                            "label": "fields = (\n                        block.input_schema.get_fields()\n                        if block.block_type != BlockType.AGENT\n                        else vals.get(\"input_schema\", {}).get(\"properties\", {}).keys()\n                    )",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "fields",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "parenthesized_expression",
                                                                                                                    "label": "(\n                        block.input_schema.get_fields()\n                        if block.block_type != BlockType.AGENT\n                        else vals.get(\"input_schema\", {}).get(\"properties\", {}).keys()\n                    )",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "conditional_expression",
                                                                                                                            "label": "block.input_schema.get_fields()\n                        if block.block_type != BlockType.AGENT\n                        else vals.get(\"input_schema\", {}).get(\"properties\", {}).keys()",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "call",
                                                                                                                                    "label": "block.input_schema.get_fields()",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "attribute",
                                                                                                                                            "label": "block.input_schema.get_fields",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "attribute",
                                                                                                                                                    "label": "block.input_schema",
                                                                                                                                                    "children": [
                                                                                                                                                        {
                                                                                                                                                            "type": "identifier",
                                                                                                                                                            "label": "block",
                                                                                                                                                            "children": []
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                            "type": "identifier",
                                                                                                                                                            "label": "input_schema",
                                                                                                                                                            "children": []
                                                                                                                                                        }
                                                                                                                                                    ]
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "get_fields",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "argument_list",
                                                                                                                                            "label": "()",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "comparison_operator",
                                                                                                                                    "label": "block.block_type != BlockType.AGENT",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "attribute",
                                                                                                                                            "label": "block.block_type",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "block",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "block_type",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "attribute",
                                                                                                                                            "label": "BlockType.AGENT",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "BlockType",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "AGENT",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "call",
                                                                                                                                    "label": "vals.get(\"input_schema\", {}).get(\"properties\", {}).keys()",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "attribute",
                                                                                                                                            "label": "vals.get(\"input_schema\", {}).get(\"properties\", {}).keys",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "call",
                                                                                                                                                    "label": "vals.get(\"input_schema\", {}).get(\"properties\", {})",
                                                                                                                                                    "children": [
                                                                                                                                                        {
                                                                                                                                                            "type": "attribute",
                                                                                                                                                            "label": "vals.get(\"input_schema\", {}).get",
                                                                                                                                                            "children": [
                                                                                                                                                                {
                                                                                                                                                                    "type": "call",
                                                                                                                                                                    "label": "vals.get(\"input_schema\", {})",
                                                                                                                                                                    "children": [
                                                                                                                                                                        {
                                                                                                                                                                            "type": "attribute",
                                                                                                                                                                            "label": "vals.get",
                                                                                                                                                                            "children": [
                                                                                                                                                                                {
                                                                                                                                                                                    "type": "identifier",
                                                                                                                                                                                    "label": "vals",
                                                                                                                                                                                    "children": []
                                                                                                                                                                                },
                                                                                                                                                                                {
                                                                                                                                                                                    "type": "identifier",
                                                                                                                                                                                    "label": "get",
                                                                                                                                                                                    "children": []
                                                                                                                                                                                }
                                                                                                                                                                            ]
                                                                                                                                                                        },
                                                                                                                                                                        {
                                                                                                                                                                            "type": "argument_list",
                                                                                                                                                                            "label": "(\"input_schema\", {})",
                                                                                                                                                                            "children": [
                                                                                                                                                                                {
                                                                                                                                                                                    "type": "string",
                                                                                                                                                                                    "label": "\"input_schema\"",
                                                                                                                                                                                    "children": [
                                                                                                                                                                                        {
                                                                                                                                                                                            "type": "string_start",
                                                                                                                                                                                            "label": "\"",
                                                                                                                                                                                            "children": []
                                                                                                                                                                                        },
                                                                                                                                                                                        {
                                                                                                                                                                                            "type": "string_content",
                                                                                                                                                                                            "label": "input_schema",
                                                                                                                                                                                            "children": []
                                                                                                                                                                                        },
                                                                                                                                                                                        {
                                                                                                                                                                                            "type": "string_end",
                                                                                                                                                                                            "label": "\"",
                                                                                                                                                                                            "children": []
                                                                                                                                                                                        }
                                                                                                                                                                                    ]
                                                                                                                                                                                },
                                                                                                                                                                                {
                                                                                                                                                                                    "type": "dictionary",
                                                                                                                                                                                    "label": "{}",
                                                                                                                                                                                    "children": []
                                                                                                                                                                                }
                                                                                                                                                                            ]
                                                                                                                                                                        }
                                                                                                                                                                    ]
                                                                                                                                                                },
                                                                                                                                                                {
                                                                                                                                                                    "type": "identifier",
                                                                                                                                                                    "label": "get",
                                                                                                                                                                    "children": []
                                                                                                                                                                }
                                                                                                                                                            ]
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                            "type": "argument_list",
                                                                                                                                                            "label": "(\"properties\", {})",
                                                                                                                                                            "children": [
                                                                                                                                                                {
                                                                                                                                                                    "type": "string",
                                                                                                                                                                    "label": "\"properties\"",
                                                                                                                                                                    "children": [
                                                                                                                                                                        {
                                                                                                                                                                            "type": "string_start",
                                                                                                                                                                            "label": "\"",
                                                                                                                                                                            "children": []
                                                                                                                                                                        },
                                                                                                                                                                        {
                                                                                                                                                                            "type": "string_content",
                                                                                                                                                                            "label": "properties",
                                                                                                                                                                            "children": []
                                                                                                                                                                        },
                                                                                                                                                                        {
                                                                                                                                                                            "type": "string_end",
                                                                                                                                                                            "label": "\"",
                                                                                                                                                                            "children": []
                                                                                                                                                                        }
                                                                                                                                                                    ]
                                                                                                                                                                },
                                                                                                                                                                {
                                                                                                                                                                    "type": "dictionary",
                                                                                                                                                                    "label": "{}",
                                                                                                                                                                    "children": []
                                                                                                                                                                }
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    ]
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "keys",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "argument_list",
                                                                                                                                            "label": "()",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "if_statement",
                                                                            "label": "if sanitized_name not in fields:\n                    fields_msg = f\"Allowed fields: {fields}\"\n                    raise ValueError(f\"{suffix}, `{name}` invalid, {fields_msg}\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "comparison_operator",
                                                                                    "label": "sanitized_name not in fields",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "sanitized_name",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "fields",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "block",
                                                                                    "label": "fields_msg = f\"Allowed fields: {fields}\"\n                    raise ValueError(f\"{suffix}, `{name}` invalid, {fields_msg}\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "expression_statement",
                                                                                            "label": "fields_msg = f\"Allowed fields: {fields}\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "assignment",
                                                                                                    "label": "fields_msg = f\"Allowed fields: {fields}\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "fields_msg",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "f\"Allowed fields: {fields}\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "f\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "Allowed fields: ",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "interpolation",
                                                                                                                    "label": "{fields}",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "fields",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "raise_statement",
                                                                                            "label": "raise ValueError(f\"{suffix}, `{name}` invalid, {fields_msg}\")",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "ValueError(f\"{suffix}, `{name}` invalid, {fields_msg}\")",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "ValueError",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(f\"{suffix}, `{name}` invalid, {fields_msg}\")",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string",
                                                                                                                    "label": "f\"{suffix}, `{name}` invalid, {fields_msg}\"",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "string_start",
                                                                                                                            "label": "f\"",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "interpolation",
                                                                                                                            "label": "{suffix}",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "suffix",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": ", `",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "interpolation",
                                                                                                                            "label": "{name}",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "name",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": "` invalid, ",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "interpolation",
                                                                                                                            "label": "{fields_msg}",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "fields_msg",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_end",
                                                                                                                            "label": "\"",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "if_statement",
                                                            "label": "if is_static_output_block(link.source_id):\n                link.is_static = True  # Each value block output should be static.",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "is_static_output_block(link.source_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "is_static_output_block",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(link.source_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "link.source_id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "link",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "source_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": "link.is_static = True  # Each value block output should be static.",
                                                                    "children": [
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "label": "link.is_static = True",
                                                                            "children": [
                                                                                {
                                                                                    "type": "assignment",
                                                                                    "label": "link.is_static = True",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "link.is_static",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "link",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "is_static",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "true",
                                                                                            "label": "True",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "comment",
                                                                            "label": "# Each value block output should be static.",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "decorated_definition",
                            "label": "@staticmethod\n    def from_db(graph: AgentGraph, for_export: bool = False):\n        return GraphModel(\n            id=graph.id,\n            user_id=graph.userId,\n            version=graph.version,\n            is_active=graph.isActive,\n            is_template=graph.isTemplate,\n            name=graph.name or \"\",\n            description=graph.description or \"\",\n            nodes=[\n                NodeModel.from_db(GraphModel._process_node(node, for_export))\n                for node in graph.AgentNodes or []\n            ],\n            links=list(\n                {\n                    Link.from_db(link)\n                    for node in graph.AgentNodes or []\n                    for link in (node.Input or []) + (node.Output or [])\n                }\n            ),\n        )",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@staticmethod",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "staticmethod",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "function_definition",
                                    "label": "def from_db(graph: AgentGraph, for_export: bool = False):\n        return GraphModel(\n            id=graph.id,\n            user_id=graph.userId,\n            version=graph.version,\n            is_active=graph.isActive,\n            is_template=graph.isTemplate,\n            name=graph.name or \"\",\n            description=graph.description or \"\",\n            nodes=[\n                NodeModel.from_db(GraphModel._process_node(node, for_export))\n                for node in graph.AgentNodes or []\n            ],\n            links=list(\n                {\n                    Link.from_db(link)\n                    for node in graph.AgentNodes or []\n                    for link in (node.Input or []) + (node.Output or [])\n                }\n            ),\n        )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "from_db",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(graph: AgentGraph, for_export: bool = False)",
                                            "children": [
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "graph: AgentGraph",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "graph",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "AgentGraph",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "AgentGraph",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "typed_default_parameter",
                                                    "label": "for_export: bool = False",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "for_export",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "bool",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "bool",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "false",
                                                            "label": "False",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "return GraphModel(\n            id=graph.id,\n            user_id=graph.userId,\n            version=graph.version,\n            is_active=graph.isActive,\n            is_template=graph.isTemplate,\n            name=graph.name or \"\",\n            description=graph.description or \"\",\n            nodes=[\n                NodeModel.from_db(GraphModel._process_node(node, for_export))\n                for node in graph.AgentNodes or []\n            ],\n            links=list(\n                {\n                    Link.from_db(link)\n                    for node in graph.AgentNodes or []\n                    for link in (node.Input or []) + (node.Output or [])\n                }\n            ),\n        )",
                                            "children": [
                                                {
                                                    "type": "return_statement",
                                                    "label": "return GraphModel(\n            id=graph.id,\n            user_id=graph.userId,\n            version=graph.version,\n            is_active=graph.isActive,\n            is_template=graph.isTemplate,\n            name=graph.name or \"\",\n            description=graph.description or \"\",\n            nodes=[\n                NodeModel.from_db(GraphModel._process_node(node, for_export))\n                for node in graph.AgentNodes or []\n            ],\n            links=list(\n                {\n                    Link.from_db(link)\n                    for node in graph.AgentNodes or []\n                    for link in (node.Input or []) + (node.Output or [])\n                }\n            ),\n        )",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "GraphModel(\n            id=graph.id,\n            user_id=graph.userId,\n            version=graph.version,\n            is_active=graph.isActive,\n            is_template=graph.isTemplate,\n            name=graph.name or \"\",\n            description=graph.description or \"\",\n            nodes=[\n                NodeModel.from_db(GraphModel._process_node(node, for_export))\n                for node in graph.AgentNodes or []\n            ],\n            links=list(\n                {\n                    Link.from_db(link)\n                    for node in graph.AgentNodes or []\n                    for link in (node.Input or []) + (node.Output or [])\n                }\n            ),\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "GraphModel",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n            id=graph.id,\n            user_id=graph.userId,\n            version=graph.version,\n            is_active=graph.isActive,\n            is_template=graph.isTemplate,\n            name=graph.name or \"\",\n            description=graph.description or \"\",\n            nodes=[\n                NodeModel.from_db(GraphModel._process_node(node, for_export))\n                for node in graph.AgentNodes or []\n            ],\n            links=list(\n                {\n                    Link.from_db(link)\n                    for node in graph.AgentNodes or []\n                    for link in (node.Input or []) + (node.Output or [])\n                }\n            ),\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "id=graph.id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "graph.id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "graph",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "user_id=graph.userId",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "graph.userId",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "graph",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "userId",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "version=graph.version",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "version",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "graph.version",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "graph",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "version",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "is_active=graph.isActive",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "is_active",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "graph.isActive",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "graph",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "isActive",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "is_template=graph.isTemplate",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "is_template",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "graph.isTemplate",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "graph",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "isTemplate",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "name=graph.name or \"\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "name",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "boolean_operator",
                                                                                    "label": "graph.name or \"\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "graph.name",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "graph",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "name",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "description=graph.description or \"\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "description",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "boolean_operator",
                                                                                    "label": "graph.description or \"\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "graph.description",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "graph",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "description",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "nodes=[\n                NodeModel.from_db(GraphModel._process_node(node, for_export))\n                for node in graph.AgentNodes or []\n            ]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "nodes",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "list_comprehension",
                                                                                    "label": "[\n                NodeModel.from_db(GraphModel._process_node(node, for_export))\n                for node in graph.AgentNodes or []\n            ]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "NodeModel.from_db(GraphModel._process_node(node, for_export))",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "NodeModel.from_db",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "NodeModel",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "from_db",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(GraphModel._process_node(node, for_export))",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "call",
                                                                                                            "label": "GraphModel._process_node(node, for_export)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "attribute",
                                                                                                                    "label": "GraphModel._process_node",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "GraphModel",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "_process_node",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "argument_list",
                                                                                                                    "label": "(node, for_export)",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "node",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "for_export",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "for_in_clause",
                                                                                            "label": "for node in graph.AgentNodes or []",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "node",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "boolean_operator",
                                                                                                    "label": "graph.AgentNodes or []",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "graph.AgentNodes",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "graph",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "AgentNodes",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "list",
                                                                                                            "label": "[]",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "links=list(\n                {\n                    Link.from_db(link)\n                    for node in graph.AgentNodes or []\n                    for link in (node.Input or []) + (node.Output or [])\n                }\n            )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "links",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "list(\n                {\n                    Link.from_db(link)\n                    for node in graph.AgentNodes or []\n                    for link in (node.Input or []) + (node.Output or [])\n                }\n            )",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "list",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(\n                {\n                    Link.from_db(link)\n                    for node in graph.AgentNodes or []\n                    for link in (node.Input or []) + (node.Output or [])\n                }\n            )",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "set_comprehension",
                                                                                                    "label": "{\n                    Link.from_db(link)\n                    for node in graph.AgentNodes or []\n                    for link in (node.Input or []) + (node.Output or [])\n                }",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "call",
                                                                                                            "label": "Link.from_db(link)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "attribute",
                                                                                                                    "label": "Link.from_db",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "Link",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "from_db",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "argument_list",
                                                                                                                    "label": "(link)",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "link",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "for_in_clause",
                                                                                                            "label": "for node in graph.AgentNodes or []",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "node",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "boolean_operator",
                                                                                                                    "label": "graph.AgentNodes or []",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "attribute",
                                                                                                                            "label": "graph.AgentNodes",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "graph",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "AgentNodes",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "list",
                                                                                                                            "label": "[]",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "for_in_clause",
                                                                                                            "label": "for link in (node.Input or []) + (node.Output or [])",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "link",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "binary_operator",
                                                                                                                    "label": "(node.Input or []) + (node.Output or [])",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "parenthesized_expression",
                                                                                                                            "label": "(node.Input or [])",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "boolean_operator",
                                                                                                                                    "label": "node.Input or []",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "attribute",
                                                                                                                                            "label": "node.Input",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "node",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "Input",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "list",
                                                                                                                                            "label": "[]",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "parenthesized_expression",
                                                                                                                            "label": "(node.Output or [])",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "boolean_operator",
                                                                                                                                    "label": "node.Output or []",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "attribute",
                                                                                                                                            "label": "node.Output",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "node",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "identifier",
                                                                                                                                                    "label": "Output",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "list",
                                                                                                                                            "label": "[]",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "decorated_definition",
                            "label": "@staticmethod\n    def _process_node(node: AgentNode, for_export: bool) -> AgentNode:\n        if for_export:\n            # Remove credentials from node input\n            if node.constantInput:\n                constant_input = json.loads(\n                    node.constantInput, target_type=dict[str, Any]\n                )\n                constant_input = GraphModel._hide_node_input_credentials(constant_input)\n                node.constantInput = json.dumps(constant_input)\n\n            # Remove webhook info\n            node.webhookId = None\n            node.Webhook = None\n\n        return node",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@staticmethod",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "staticmethod",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "function_definition",
                                    "label": "def _process_node(node: AgentNode, for_export: bool) -> AgentNode:\n        if for_export:\n            # Remove credentials from node input\n            if node.constantInput:\n                constant_input = json.loads(\n                    node.constantInput, target_type=dict[str, Any]\n                )\n                constant_input = GraphModel._hide_node_input_credentials(constant_input)\n                node.constantInput = json.dumps(constant_input)\n\n            # Remove webhook info\n            node.webhookId = None\n            node.Webhook = None\n\n        return node",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "_process_node",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(node: AgentNode, for_export: bool)",
                                            "children": [
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "node: AgentNode",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "node",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "AgentNode",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "AgentNode",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "for_export: bool",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "for_export",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "bool",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "bool",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "AgentNode",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "AgentNode",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "if for_export:\n            # Remove credentials from node input\n            if node.constantInput:\n                constant_input = json.loads(\n                    node.constantInput, target_type=dict[str, Any]\n                )\n                constant_input = GraphModel._hide_node_input_credentials(constant_input)\n                node.constantInput = json.dumps(constant_input)\n\n            # Remove webhook info\n            node.webhookId = None\n            node.Webhook = None\n\n        return node",
                                            "children": [
                                                {
                                                    "type": "if_statement",
                                                    "label": "if for_export:\n            # Remove credentials from node input\n            if node.constantInput:\n                constant_input = json.loads(\n                    node.constantInput, target_type=dict[str, Any]\n                )\n                constant_input = GraphModel._hide_node_input_credentials(constant_input)\n                node.constantInput = json.dumps(constant_input)\n\n            # Remove webhook info\n            node.webhookId = None\n            node.Webhook = None",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "for_export",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "comment",
                                                            "label": "# Remove credentials from node input",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "if node.constantInput:\n                constant_input = json.loads(\n                    node.constantInput, target_type=dict[str, Any]\n                )\n                constant_input = GraphModel._hide_node_input_credentials(constant_input)\n                node.constantInput = json.dumps(constant_input)\n\n            # Remove webhook info\n            node.webhookId = None\n            node.Webhook = None",
                                                            "children": [
                                                                {
                                                                    "type": "if_statement",
                                                                    "label": "if node.constantInput:\n                constant_input = json.loads(\n                    node.constantInput, target_type=dict[str, Any]\n                )\n                constant_input = GraphModel._hide_node_input_credentials(constant_input)\n                node.constantInput = json.dumps(constant_input)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "node.constantInput",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "node",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "constantInput",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "block",
                                                                            "label": "constant_input = json.loads(\n                    node.constantInput, target_type=dict[str, Any]\n                )\n                constant_input = GraphModel._hide_node_input_credentials(constant_input)\n                node.constantInput = json.dumps(constant_input)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "expression_statement",
                                                                                    "label": "constant_input = json.loads(\n                    node.constantInput, target_type=dict[str, Any]\n                )",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "assignment",
                                                                                            "label": "constant_input = json.loads(\n                    node.constantInput, target_type=dict[str, Any]\n                )",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "constant_input",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "json.loads(\n                    node.constantInput, target_type=dict[str, Any]\n                )",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "json.loads",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "json",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "loads",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(\n                    node.constantInput, target_type=dict[str, Any]\n                )",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "attribute",
                                                                                                                    "label": "node.constantInput",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "node",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "constantInput",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "keyword_argument",
                                                                                                                    "label": "target_type=dict[str, Any]",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "target_type",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "subscript",
                                                                                                                            "label": "dict[str, Any]",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "dict",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "str",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "Any",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "expression_statement",
                                                                                    "label": "constant_input = GraphModel._hide_node_input_credentials(constant_input)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "assignment",
                                                                                            "label": "constant_input = GraphModel._hide_node_input_credentials(constant_input)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "constant_input",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "GraphModel._hide_node_input_credentials(constant_input)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "GraphModel._hide_node_input_credentials",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "GraphModel",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "_hide_node_input_credentials",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(constant_input)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "constant_input",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "expression_statement",
                                                                                    "label": "node.constantInput = json.dumps(constant_input)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "assignment",
                                                                                            "label": "node.constantInput = json.dumps(constant_input)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "node.constantInput",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "node",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "constantInput",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "json.dumps(constant_input)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "json.dumps",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "json",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "dumps",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(constant_input)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "constant_input",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "comment",
                                                                    "label": "# Remove webhook info",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "node.webhookId = None",
                                                                    "children": [
                                                                        {
                                                                            "type": "assignment",
                                                                            "label": "node.webhookId = None",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "node.webhookId",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "node",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "webhookId",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "none",
                                                                                    "label": "None",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "node.Webhook = None",
                                                                    "children": [
                                                                        {
                                                                            "type": "assignment",
                                                                            "label": "node.Webhook = None",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "node.Webhook",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "node",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "Webhook",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "none",
                                                                                    "label": "None",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "return_statement",
                                                    "label": "return node",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "node",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "decorated_definition",
                            "label": "@staticmethod\n    def _hide_node_input_credentials(input_data: dict[str, Any]) -> dict[str, Any]:\n        sensitive_keys = [\"credentials\", \"api_key\", \"password\", \"token\", \"secret\"]\n        result = {}\n        for key, value in input_data.items():\n            if isinstance(value, dict):\n                result[key] = GraphModel._hide_node_input_credentials(value)\n            elif isinstance(value, str) and any(\n                sensitive_key in key.lower() for sensitive_key in sensitive_keys\n            ):\n                # Skip this key-value pair in the result\n                continue\n            else:\n                result[key] = value\n        return result",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@staticmethod",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "staticmethod",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "function_definition",
                                    "label": "def _hide_node_input_credentials(input_data: dict[str, Any]) -> dict[str, Any]:\n        sensitive_keys = [\"credentials\", \"api_key\", \"password\", \"token\", \"secret\"]\n        result = {}\n        for key, value in input_data.items():\n            if isinstance(value, dict):\n                result[key] = GraphModel._hide_node_input_credentials(value)\n            elif isinstance(value, str) and any(\n                sensitive_key in key.lower() for sensitive_key in sensitive_keys\n            ):\n                # Skip this key-value pair in the result\n                continue\n            else:\n                result[key] = value\n        return result",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "_hide_node_input_credentials",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(input_data: dict[str, Any])",
                                            "children": [
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "input_data: dict[str, Any]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "input_data",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "dict[str, Any]",
                                                            "children": [
                                                                {
                                                                    "type": "generic_type",
                                                                    "label": "dict[str, Any]",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "dict",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "type_parameter",
                                                                            "label": "[str, Any]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "type",
                                                                                    "label": "str",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "str",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "type",
                                                                                    "label": "Any",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "Any",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "dict[str, Any]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "dict[str, Any]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "dict",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[str, Any]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "str",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "type",
                                                                    "label": "Any",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "Any",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "sensitive_keys = [\"credentials\", \"api_key\", \"password\", \"token\", \"secret\"]\n        result = {}\n        for key, value in input_data.items():\n            if isinstance(value, dict):\n                result[key] = GraphModel._hide_node_input_credentials(value)\n            elif isinstance(value, str) and any(\n                sensitive_key in key.lower() for sensitive_key in sensitive_keys\n            ):\n                # Skip this key-value pair in the result\n                continue\n            else:\n                result[key] = value\n        return result",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "sensitive_keys = [\"credentials\", \"api_key\", \"password\", \"token\", \"secret\"]",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "sensitive_keys = [\"credentials\", \"api_key\", \"password\", \"token\", \"secret\"]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "sensitive_keys",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "list",
                                                                    "label": "[\"credentials\", \"api_key\", \"password\", \"token\", \"secret\"]",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"credentials\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "credentials",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"api_key\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "api_key",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"password\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "password",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"token\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "token",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"secret\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "secret",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "result = {}",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "result = {}",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "result",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "dictionary",
                                                                    "label": "{}",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "for_statement",
                                                    "label": "for key, value in input_data.items():\n            if isinstance(value, dict):\n                result[key] = GraphModel._hide_node_input_credentials(value)\n            elif isinstance(value, str) and any(\n                sensitive_key in key.lower() for sensitive_key in sensitive_keys\n            ):\n                # Skip this key-value pair in the result\n                continue\n            else:\n                result[key] = value",
                                                    "children": [
                                                        {
                                                            "type": "pattern_list",
                                                            "label": "key, value",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "key",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "value",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "input_data.items()",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "input_data.items",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "input_data",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "items",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "if isinstance(value, dict):\n                result[key] = GraphModel._hide_node_input_credentials(value)\n            elif isinstance(value, str) and any(\n                sensitive_key in key.lower() for sensitive_key in sensitive_keys\n            ):\n                # Skip this key-value pair in the result\n                continue\n            else:\n                result[key] = value",
                                                            "children": [
                                                                {
                                                                    "type": "if_statement",
                                                                    "label": "if isinstance(value, dict):\n                result[key] = GraphModel._hide_node_input_credentials(value)\n            elif isinstance(value, str) and any(\n                sensitive_key in key.lower() for sensitive_key in sensitive_keys\n            ):\n                # Skip this key-value pair in the result\n                continue\n            else:\n                result[key] = value",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "isinstance(value, dict)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "isinstance",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(value, dict)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "value",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "dict",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "block",
                                                                            "label": "result[key] = GraphModel._hide_node_input_credentials(value)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "expression_statement",
                                                                                    "label": "result[key] = GraphModel._hide_node_input_credentials(value)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "assignment",
                                                                                            "label": "result[key] = GraphModel._hide_node_input_credentials(value)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "subscript",
                                                                                                    "label": "result[key]",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "result",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "key",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "GraphModel._hide_node_input_credentials(value)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "GraphModel._hide_node_input_credentials",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "GraphModel",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "_hide_node_input_credentials",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(value)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "value",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "elif_clause",
                                                                            "label": "elif isinstance(value, str) and any(\n                sensitive_key in key.lower() for sensitive_key in sensitive_keys\n            ):\n                # Skip this key-value pair in the result\n                continue",
                                                                            "children": [
                                                                                {
                                                                                    "type": "boolean_operator",
                                                                                    "label": "isinstance(value, str) and any(\n                sensitive_key in key.lower() for sensitive_key in sensitive_keys\n            )",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "isinstance(value, str)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "isinstance",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(value, str)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "value",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "str",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "any(\n                sensitive_key in key.lower() for sensitive_key in sensitive_keys\n            )",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "any",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "generator_expression",
                                                                                                    "label": "(\n                sensitive_key in key.lower() for sensitive_key in sensitive_keys\n            )",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "comparison_operator",
                                                                                                            "label": "sensitive_key in key.lower()",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "sensitive_key",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "call",
                                                                                                                    "label": "key.lower()",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "attribute",
                                                                                                                            "label": "key.lower",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "key",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "lower",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "argument_list",
                                                                                                                            "label": "()",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "for_in_clause",
                                                                                                            "label": "for sensitive_key in sensitive_keys",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "sensitive_key",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "sensitive_keys",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "comment",
                                                                                    "label": "# Skip this key-value pair in the result",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "block",
                                                                                    "label": "continue",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "continue_statement",
                                                                                            "label": "continue",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "else_clause",
                                                                            "label": "else:\n                result[key] = value",
                                                                            "children": [
                                                                                {
                                                                                    "type": "block",
                                                                                    "label": "result[key] = value",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "expression_statement",
                                                                                            "label": "result[key] = value",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "assignment",
                                                                                                    "label": "result[key] = value",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "subscript",
                                                                                                            "label": "result[key]",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "result",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "key",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "value",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "return_statement",
                                                    "label": "return result",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "result",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "comment",
            "label": "# --------------------- CRUD functions --------------------- #",
            "children": []
        },
        {
            "type": "function_definition",
            "label": "async def get_node(node_id: str) -> NodeModel:\n    node = await AgentNode.prisma().find_unique_or_raise(\n        where={\"id\": node_id},\n        include=AGENT_NODE_INCLUDE,\n    )\n    return NodeModel.from_db(node)",
            "children": [
                {
                    "type": "identifier",
                    "label": "get_node",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(node_id: str)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "node_id: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "node_id",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "NodeModel",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "NodeModel",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "node = await AgentNode.prisma().find_unique_or_raise(\n        where={\"id\": node_id},\n        include=AGENT_NODE_INCLUDE,\n    )\n    return NodeModel.from_db(node)",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "node = await AgentNode.prisma().find_unique_or_raise(\n        where={\"id\": node_id},\n        include=AGENT_NODE_INCLUDE,\n    )",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "node = await AgentNode.prisma().find_unique_or_raise(\n        where={\"id\": node_id},\n        include=AGENT_NODE_INCLUDE,\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "node",
                                            "children": []
                                        },
                                        {
                                            "type": "await",
                                            "label": "await AgentNode.prisma().find_unique_or_raise(\n        where={\"id\": node_id},\n        include=AGENT_NODE_INCLUDE,\n    )",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "AgentNode.prisma().find_unique_or_raise(\n        where={\"id\": node_id},\n        include=AGENT_NODE_INCLUDE,\n    )",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "AgentNode.prisma().find_unique_or_raise",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "AgentNode.prisma()",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "AgentNode.prisma",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "AgentNode",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "prisma",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "find_unique_or_raise",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n        where={\"id\": node_id},\n        include=AGENT_NODE_INCLUDE,\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "where={\"id\": node_id}",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "where",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "dictionary",
                                                                            "label": "{\"id\": node_id}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "pair",
                                                                                    "label": "\"id\": node_id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"id\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "id",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "node_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "include=AGENT_NODE_INCLUDE",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "include",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "AGENT_NODE_INCLUDE",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return NodeModel.from_db(node)",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "NodeModel.from_db(node)",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "NodeModel.from_db",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "NodeModel",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "from_db",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(node)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "node",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def set_node_webhook(node_id: str, webhook_id: str | None) -> NodeModel:\n    node = await AgentNode.prisma().update(\n        where={\"id\": node_id},\n        data=(\n            {\"Webhook\": {\"connect\": {\"id\": webhook_id}}}\n            if webhook_id\n            else {\"Webhook\": {\"disconnect\": True}}\n        ),\n        include=AGENT_NODE_INCLUDE,\n    )\n    if not node:\n        raise ValueError(f\"Node #{node_id} not found\")\n    return NodeModel.from_db(node)",
            "children": [
                {
                    "type": "identifier",
                    "label": "set_node_webhook",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(node_id: str, webhook_id: str | None)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "node_id: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "node_id",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "webhook_id: str | None",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "webhook_id",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str | None",
                                    "children": [
                                        {
                                            "type": "binary_operator",
                                            "label": "str | None",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                },
                                                {
                                                    "type": "none",
                                                    "label": "None",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "NodeModel",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "NodeModel",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "node = await AgentNode.prisma().update(\n        where={\"id\": node_id},\n        data=(\n            {\"Webhook\": {\"connect\": {\"id\": webhook_id}}}\n            if webhook_id\n            else {\"Webhook\": {\"disconnect\": True}}\n        ),\n        include=AGENT_NODE_INCLUDE,\n    )\n    if not node:\n        raise ValueError(f\"Node #{node_id} not found\")\n    return NodeModel.from_db(node)",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "node = await AgentNode.prisma().update(\n        where={\"id\": node_id},\n        data=(\n            {\"Webhook\": {\"connect\": {\"id\": webhook_id}}}\n            if webhook_id\n            else {\"Webhook\": {\"disconnect\": True}}\n        ),\n        include=AGENT_NODE_INCLUDE,\n    )",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "node = await AgentNode.prisma().update(\n        where={\"id\": node_id},\n        data=(\n            {\"Webhook\": {\"connect\": {\"id\": webhook_id}}}\n            if webhook_id\n            else {\"Webhook\": {\"disconnect\": True}}\n        ),\n        include=AGENT_NODE_INCLUDE,\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "node",
                                            "children": []
                                        },
                                        {
                                            "type": "await",
                                            "label": "await AgentNode.prisma().update(\n        where={\"id\": node_id},\n        data=(\n            {\"Webhook\": {\"connect\": {\"id\": webhook_id}}}\n            if webhook_id\n            else {\"Webhook\": {\"disconnect\": True}}\n        ),\n        include=AGENT_NODE_INCLUDE,\n    )",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "AgentNode.prisma().update(\n        where={\"id\": node_id},\n        data=(\n            {\"Webhook\": {\"connect\": {\"id\": webhook_id}}}\n            if webhook_id\n            else {\"Webhook\": {\"disconnect\": True}}\n        ),\n        include=AGENT_NODE_INCLUDE,\n    )",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "AgentNode.prisma().update",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "AgentNode.prisma()",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "AgentNode.prisma",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "AgentNode",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "prisma",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "update",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n        where={\"id\": node_id},\n        data=(\n            {\"Webhook\": {\"connect\": {\"id\": webhook_id}}}\n            if webhook_id\n            else {\"Webhook\": {\"disconnect\": True}}\n        ),\n        include=AGENT_NODE_INCLUDE,\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "where={\"id\": node_id}",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "where",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "dictionary",
                                                                            "label": "{\"id\": node_id}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "pair",
                                                                                    "label": "\"id\": node_id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"id\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "id",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "node_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "data=(\n            {\"Webhook\": {\"connect\": {\"id\": webhook_id}}}\n            if webhook_id\n            else {\"Webhook\": {\"disconnect\": True}}\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "data",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "parenthesized_expression",
                                                                            "label": "(\n            {\"Webhook\": {\"connect\": {\"id\": webhook_id}}}\n            if webhook_id\n            else {\"Webhook\": {\"disconnect\": True}}\n        )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "conditional_expression",
                                                                                    "label": "{\"Webhook\": {\"connect\": {\"id\": webhook_id}}}\n            if webhook_id\n            else {\"Webhook\": {\"disconnect\": True}}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "dictionary",
                                                                                            "label": "{\"Webhook\": {\"connect\": {\"id\": webhook_id}}}",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "pair",
                                                                                                    "label": "\"Webhook\": {\"connect\": {\"id\": webhook_id}}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"Webhook\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "Webhook",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "dictionary",
                                                                                                            "label": "{\"connect\": {\"id\": webhook_id}}",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "pair",
                                                                                                                    "label": "\"connect\": {\"id\": webhook_id}",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "string",
                                                                                                                            "label": "\"connect\"",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "string_start",
                                                                                                                                    "label": "\"",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "string_content",
                                                                                                                                    "label": "connect",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "string_end",
                                                                                                                                    "label": "\"",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "dictionary",
                                                                                                                            "label": "{\"id\": webhook_id}",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "pair",
                                                                                                                                    "label": "\"id\": webhook_id",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "string",
                                                                                                                                            "label": "\"id\"",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "string_start",
                                                                                                                                                    "label": "\"",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "string_content",
                                                                                                                                                    "label": "id",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "string_end",
                                                                                                                                                    "label": "\"",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "webhook_id",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "webhook_id",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "dictionary",
                                                                                            "label": "{\"Webhook\": {\"disconnect\": True}}",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "pair",
                                                                                                    "label": "\"Webhook\": {\"disconnect\": True}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"Webhook\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "Webhook",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "dictionary",
                                                                                                            "label": "{\"disconnect\": True}",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "pair",
                                                                                                                    "label": "\"disconnect\": True",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "string",
                                                                                                                            "label": "\"disconnect\"",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "string_start",
                                                                                                                                    "label": "\"",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "string_content",
                                                                                                                                    "label": "disconnect",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "string_end",
                                                                                                                                    "label": "\"",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "true",
                                                                                                                            "label": "True",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "include=AGENT_NODE_INCLUDE",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "include",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "AGENT_NODE_INCLUDE",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if not node:\n        raise ValueError(f\"Node #{node_id} not found\")",
                            "children": [
                                {
                                    "type": "not_operator",
                                    "label": "not node",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "node",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "raise ValueError(f\"Node #{node_id} not found\")",
                                    "children": [
                                        {
                                            "type": "raise_statement",
                                            "label": "raise ValueError(f\"Node #{node_id} not found\")",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "ValueError(f\"Node #{node_id} not found\")",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "ValueError",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(f\"Node #{node_id} not found\")",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "f\"Node #{node_id} not found\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "f\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "Node #",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{node_id}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "node_id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": " not found",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return NodeModel.from_db(node)",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "NodeModel.from_db(node)",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "NodeModel.from_db",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "NodeModel",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "from_db",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(node)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "node",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def get_graphs(\n    user_id: str,\n    filter_by: Literal[\"active\", \"template\"] | None = \"active\",\n) -> list[GraphModel]:\n    \"\"\"\n    Retrieves graph metadata objects.\n    Default behaviour is to get all currently active graphs.\n\n    Args:\n        filter_by: An optional filter to either select templates or active graphs.\n        user_id: The ID of the user that owns the graph.\n\n    Returns:\n        list[GraphModel]: A list of objects representing the retrieved graphs.\n    \"\"\"\n    where_clause: AgentGraphWhereInput = {\"userId\": user_id}\n\n    if filter_by == \"active\":\n        where_clause[\"isActive\"] = True\n    elif filter_by == \"template\":\n        where_clause[\"isTemplate\"] = True\n\n    graphs = await AgentGraph.prisma().find_many(\n        where=where_clause,\n        distinct=[\"id\"],\n        order={\"version\": \"desc\"},\n        include=AGENT_GRAPH_INCLUDE,\n    )\n\n    graph_models = []\n    for graph in graphs:\n        try:\n            graph_models.append(GraphModel.from_db(graph))\n        except Exception as e:\n            logger.error(f\"Error processing graph {graph.id}: {e}\")\n            continue\n\n    return graph_models",
            "children": [
                {
                    "type": "identifier",
                    "label": "get_graphs",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(\n    user_id: str,\n    filter_by: Literal[\"active\", \"template\"] | None = \"active\",\n)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "user_id: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "user_id",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_default_parameter",
                            "label": "filter_by: Literal[\"active\", \"template\"] | None = \"active\"",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "filter_by",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "Literal[\"active\", \"template\"] | None",
                                    "children": [
                                        {
                                            "type": "union_type",
                                            "label": "Literal[\"active\", \"template\"] | None",
                                            "children": [
                                                {
                                                    "type": "type",
                                                    "label": "Literal[\"active\", \"template\"]",
                                                    "children": [
                                                        {
                                                            "type": "generic_type",
                                                            "label": "Literal[\"active\", \"template\"]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Literal",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "type_parameter",
                                                                    "label": "[\"active\", \"template\"]",
                                                                    "children": [
                                                                        {
                                                                            "type": "type",
                                                                            "label": "\"active\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"active\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "active",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "type",
                                                                            "label": "\"template\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"template\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "template",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "None",
                                                    "children": [
                                                        {
                                                            "type": "none",
                                                            "label": "None",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "string",
                                    "label": "\"active\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "active",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "list[GraphModel]",
                    "children": [
                        {
                            "type": "generic_type",
                            "label": "list[GraphModel]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "list",
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "label": "[GraphModel]",
                                    "children": [
                                        {
                                            "type": "type",
                                            "label": "GraphModel",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "GraphModel",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    Retrieves graph metadata objects.\n    Default behaviour is to get all currently active graphs.\n\n    Args:\n        filter_by: An optional filter to either select templates or active graphs.\n        user_id: The ID of the user that owns the graph.\n\n    Returns:\n        list[GraphModel]: A list of objects representing the retrieved graphs.\n    \"\"\"\n    where_clause: AgentGraphWhereInput = {\"userId\": user_id}\n\n    if filter_by == \"active\":\n        where_clause[\"isActive\"] = True\n    elif filter_by == \"template\":\n        where_clause[\"isTemplate\"] = True\n\n    graphs = await AgentGraph.prisma().find_many(\n        where=where_clause,\n        distinct=[\"id\"],\n        order={\"version\": \"desc\"},\n        include=AGENT_GRAPH_INCLUDE,\n    )\n\n    graph_models = []\n    for graph in graphs:\n        try:\n            graph_models.append(GraphModel.from_db(graph))\n        except Exception as e:\n            logger.error(f\"Error processing graph {graph.id}: {e}\")\n            continue\n\n    return graph_models",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    Retrieves graph metadata objects.\n    Default behaviour is to get all currently active graphs.\n\n    Args:\n        filter_by: An optional filter to either select templates or active graphs.\n        user_id: The ID of the user that owns the graph.\n\n    Returns:\n        list[GraphModel]: A list of objects representing the retrieved graphs.\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    Retrieves graph metadata objects.\n    Default behaviour is to get all currently active graphs.\n\n    Args:\n        filter_by: An optional filter to either select templates or active graphs.\n        user_id: The ID of the user that owns the graph.\n\n    Returns:\n        list[GraphModel]: A list of objects representing the retrieved graphs.\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    Retrieves graph metadata objects.\n    Default behaviour is to get all currently active graphs.\n\n    Args:\n        filter_by: An optional filter to either select templates or active graphs.\n        user_id: The ID of the user that owns the graph.\n\n    Returns:\n        list[GraphModel]: A list of objects representing the retrieved graphs.\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "where_clause: AgentGraphWhereInput = {\"userId\": user_id}",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "where_clause: AgentGraphWhereInput = {\"userId\": user_id}",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "where_clause",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "AgentGraphWhereInput",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "AgentGraphWhereInput",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "dictionary",
                                            "label": "{\"userId\": user_id}",
                                            "children": [
                                                {
                                                    "type": "pair",
                                                    "label": "\"userId\": user_id",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"userId\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "userId",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "user_id",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if filter_by == \"active\":\n        where_clause[\"isActive\"] = True\n    elif filter_by == \"template\":\n        where_clause[\"isTemplate\"] = True",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "label": "filter_by == \"active\"",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "filter_by",
                                            "children": []
                                        },
                                        {
                                            "type": "string",
                                            "label": "\"active\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "active",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "where_clause[\"isActive\"] = True",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "where_clause[\"isActive\"] = True",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "where_clause[\"isActive\"] = True",
                                                    "children": [
                                                        {
                                                            "type": "subscript",
                                                            "label": "where_clause[\"isActive\"]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "where_clause",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"isActive\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "isActive",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "true",
                                                            "label": "True",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "elif_clause",
                                    "label": "elif filter_by == \"template\":\n        where_clause[\"isTemplate\"] = True",
                                    "children": [
                                        {
                                            "type": "comparison_operator",
                                            "label": "filter_by == \"template\"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "filter_by",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"template\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "template",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "where_clause[\"isTemplate\"] = True",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "where_clause[\"isTemplate\"] = True",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "where_clause[\"isTemplate\"] = True",
                                                            "children": [
                                                                {
                                                                    "type": "subscript",
                                                                    "label": "where_clause[\"isTemplate\"]",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "where_clause",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"isTemplate\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "isTemplate",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "true",
                                                                    "label": "True",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "graphs = await AgentGraph.prisma().find_many(\n        where=where_clause,\n        distinct=[\"id\"],\n        order={\"version\": \"desc\"},\n        include=AGENT_GRAPH_INCLUDE,\n    )",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "graphs = await AgentGraph.prisma().find_many(\n        where=where_clause,\n        distinct=[\"id\"],\n        order={\"version\": \"desc\"},\n        include=AGENT_GRAPH_INCLUDE,\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graphs",
                                            "children": []
                                        },
                                        {
                                            "type": "await",
                                            "label": "await AgentGraph.prisma().find_many(\n        where=where_clause,\n        distinct=[\"id\"],\n        order={\"version\": \"desc\"},\n        include=AGENT_GRAPH_INCLUDE,\n    )",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "AgentGraph.prisma().find_many(\n        where=where_clause,\n        distinct=[\"id\"],\n        order={\"version\": \"desc\"},\n        include=AGENT_GRAPH_INCLUDE,\n    )",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "AgentGraph.prisma().find_many",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "AgentGraph.prisma()",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "AgentGraph.prisma",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "AgentGraph",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "prisma",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "find_many",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n        where=where_clause,\n        distinct=[\"id\"],\n        order={\"version\": \"desc\"},\n        include=AGENT_GRAPH_INCLUDE,\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "where=where_clause",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "where",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "where_clause",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "distinct=[\"id\"]",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "distinct",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "list",
                                                                            "label": "[\"id\"]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"id\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "id",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "order={\"version\": \"desc\"}",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "order",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "dictionary",
                                                                            "label": "{\"version\": \"desc\"}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "pair",
                                                                                    "label": "\"version\": \"desc\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"version\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "version",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"desc\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "desc",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "include=AGENT_GRAPH_INCLUDE",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "include",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "AGENT_GRAPH_INCLUDE",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "graph_models = []",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "graph_models = []",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graph_models",
                                            "children": []
                                        },
                                        {
                                            "type": "list",
                                            "label": "[]",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "for_statement",
                            "label": "for graph in graphs:\n        try:\n            graph_models.append(GraphModel.from_db(graph))\n        except Exception as e:\n            logger.error(f\"Error processing graph {graph.id}: {e}\")\n            continue",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "graph",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "graphs",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "label": "try:\n            graph_models.append(GraphModel.from_db(graph))\n        except Exception as e:\n            logger.error(f\"Error processing graph {graph.id}: {e}\")\n            continue",
                                    "children": [
                                        {
                                            "type": "try_statement",
                                            "label": "try:\n            graph_models.append(GraphModel.from_db(graph))\n        except Exception as e:\n            logger.error(f\"Error processing graph {graph.id}: {e}\")\n            continue",
                                            "children": [
                                                {
                                                    "type": "block",
                                                    "label": "graph_models.append(GraphModel.from_db(graph))",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "graph_models.append(GraphModel.from_db(graph))",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "graph_models.append(GraphModel.from_db(graph))",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "graph_models.append",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "graph_models",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "append",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(GraphModel.from_db(graph))",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "GraphModel.from_db(graph)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "GraphModel.from_db",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "GraphModel",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "from_db",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(graph)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "graph",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "except_clause",
                                                    "label": "except Exception as e:\n            logger.error(f\"Error processing graph {graph.id}: {e}\")\n            continue",
                                                    "children": [
                                                        {
                                                            "type": "as_pattern",
                                                            "label": "Exception as e",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Exception",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "as_pattern_target",
                                                                    "label": "e",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "e",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "logger.error(f\"Error processing graph {graph.id}: {e}\")\n            continue",
                                                            "children": [
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "logger.error(f\"Error processing graph {graph.id}: {e}\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "logger.error(f\"Error processing graph {graph.id}: {e}\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "logger.error",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "logger",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "error",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(f\"Error processing graph {graph.id}: {e}\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "f\"Error processing graph {graph.id}: {e}\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "f\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "Error processing graph ",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{graph.id}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "graph.id",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "graph",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "id",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": ": ",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{e}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "e",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "continue_statement",
                                                                    "label": "continue",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return graph_models",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "graph_models",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def get_executions(user_id: str) -> list[GraphExecution]:\n    executions = await AgentGraphExecution.prisma().find_many(\n        where={\"userId\": user_id},\n        order={\"createdAt\": \"desc\"},\n    )\n    return [GraphExecution.from_db(execution) for execution in executions]",
            "children": [
                {
                    "type": "identifier",
                    "label": "get_executions",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(user_id: str)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "user_id: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "user_id",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "list[GraphExecution]",
                    "children": [
                        {
                            "type": "generic_type",
                            "label": "list[GraphExecution]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "list",
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "label": "[GraphExecution]",
                                    "children": [
                                        {
                                            "type": "type",
                                            "label": "GraphExecution",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "GraphExecution",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "executions = await AgentGraphExecution.prisma().find_many(\n        where={\"userId\": user_id},\n        order={\"createdAt\": \"desc\"},\n    )\n    return [GraphExecution.from_db(execution) for execution in executions]",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "executions = await AgentGraphExecution.prisma().find_many(\n        where={\"userId\": user_id},\n        order={\"createdAt\": \"desc\"},\n    )",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "executions = await AgentGraphExecution.prisma().find_many(\n        where={\"userId\": user_id},\n        order={\"createdAt\": \"desc\"},\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "executions",
                                            "children": []
                                        },
                                        {
                                            "type": "await",
                                            "label": "await AgentGraphExecution.prisma().find_many(\n        where={\"userId\": user_id},\n        order={\"createdAt\": \"desc\"},\n    )",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "AgentGraphExecution.prisma().find_many(\n        where={\"userId\": user_id},\n        order={\"createdAt\": \"desc\"},\n    )",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "AgentGraphExecution.prisma().find_many",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "AgentGraphExecution.prisma()",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "AgentGraphExecution.prisma",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "AgentGraphExecution",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "prisma",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "find_many",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n        where={\"userId\": user_id},\n        order={\"createdAt\": \"desc\"},\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "where={\"userId\": user_id}",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "where",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "dictionary",
                                                                            "label": "{\"userId\": user_id}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "pair",
                                                                                    "label": "\"userId\": user_id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"userId\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "userId",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "order={\"createdAt\": \"desc\"}",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "order",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "dictionary",
                                                                            "label": "{\"createdAt\": \"desc\"}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "pair",
                                                                                    "label": "\"createdAt\": \"desc\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"createdAt\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "createdAt",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"desc\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "desc",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return [GraphExecution.from_db(execution) for execution in executions]",
                            "children": [
                                {
                                    "type": "list_comprehension",
                                    "label": "[GraphExecution.from_db(execution) for execution in executions]",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "GraphExecution.from_db(execution)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "GraphExecution.from_db",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "GraphExecution",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "from_db",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(execution)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "execution",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "for_in_clause",
                                            "label": "for execution in executions",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "execution",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "executions",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def get_execution(user_id: str, execution_id: str) -> GraphExecution | None:\n    execution = await AgentGraphExecution.prisma().find_first(\n        where={\"id\": execution_id, \"userId\": user_id}\n    )\n    return GraphExecution.from_db(execution) if execution else None",
            "children": [
                {
                    "type": "identifier",
                    "label": "get_execution",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(user_id: str, execution_id: str)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "user_id: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "user_id",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "execution_id: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "execution_id",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "GraphExecution | None",
                    "children": [
                        {
                            "type": "binary_operator",
                            "label": "GraphExecution | None",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "GraphExecution",
                                    "children": []
                                },
                                {
                                    "type": "none",
                                    "label": "None",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "execution = await AgentGraphExecution.prisma().find_first(\n        where={\"id\": execution_id, \"userId\": user_id}\n    )\n    return GraphExecution.from_db(execution) if execution else None",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "execution = await AgentGraphExecution.prisma().find_first(\n        where={\"id\": execution_id, \"userId\": user_id}\n    )",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "execution = await AgentGraphExecution.prisma().find_first(\n        where={\"id\": execution_id, \"userId\": user_id}\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "execution",
                                            "children": []
                                        },
                                        {
                                            "type": "await",
                                            "label": "await AgentGraphExecution.prisma().find_first(\n        where={\"id\": execution_id, \"userId\": user_id}\n    )",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "AgentGraphExecution.prisma().find_first(\n        where={\"id\": execution_id, \"userId\": user_id}\n    )",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "AgentGraphExecution.prisma().find_first",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "AgentGraphExecution.prisma()",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "AgentGraphExecution.prisma",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "AgentGraphExecution",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "prisma",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "find_first",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n        where={\"id\": execution_id, \"userId\": user_id}\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "where={\"id\": execution_id, \"userId\": user_id}",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "where",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "dictionary",
                                                                            "label": "{\"id\": execution_id, \"userId\": user_id}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "pair",
                                                                                    "label": "\"id\": execution_id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"id\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "id",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "execution_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "pair",
                                                                                    "label": "\"userId\": user_id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"userId\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "userId",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return GraphExecution.from_db(execution) if execution else None",
                            "children": [
                                {
                                    "type": "conditional_expression",
                                    "label": "GraphExecution.from_db(execution) if execution else None",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "GraphExecution.from_db(execution)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "GraphExecution.from_db",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "GraphExecution",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "from_db",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(execution)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "execution",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "execution",
                                            "children": []
                                        },
                                        {
                                            "type": "none",
                                            "label": "None",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def get_graph(\n    graph_id: str,\n    version: int | None = None,\n    template: bool = False,\n    user_id: str | None = None,\n    for_export: bool = False,\n) -> GraphModel | None:\n    \"\"\"\n    Retrieves a graph from the DB.\n    Defaults to the version with `is_active` if `version` is not passed,\n    or the latest version with `is_template` if `template=True`.\n\n    Returns `None` if the record is not found.\n    \"\"\"\n    where_clause: AgentGraphWhereInput = {\n        \"id\": graph_id,\n    }\n    if version is not None:\n        where_clause[\"version\"] = version\n    elif not template:\n        where_clause[\"isActive\"] = True\n\n    # TODO: Fix hack workaround to get adding store agents to work\n    if user_id is not None and not template:\n        where_clause[\"userId\"] = user_id\n\n    graph = await AgentGraph.prisma().find_first(\n        where=where_clause,\n        include=AGENT_GRAPH_INCLUDE,\n        order={\"version\": \"desc\"},\n    )\n    return GraphModel.from_db(graph, for_export) if graph else None",
            "children": [
                {
                    "type": "identifier",
                    "label": "get_graph",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(\n    graph_id: str,\n    version: int | None = None,\n    template: bool = False,\n    user_id: str | None = None,\n    for_export: bool = False,\n)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "graph_id: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "graph_id",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_default_parameter",
                            "label": "version: int | None = None",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "version",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int | None",
                                    "children": [
                                        {
                                            "type": "binary_operator",
                                            "label": "int | None",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "int",
                                                    "children": []
                                                },
                                                {
                                                    "type": "none",
                                                    "label": "None",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "none",
                                    "label": "None",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "typed_default_parameter",
                            "label": "template: bool = False",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "template",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "bool",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "bool",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "false",
                                    "label": "False",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "typed_default_parameter",
                            "label": "user_id: str | None = None",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "user_id",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str | None",
                                    "children": [
                                        {
                                            "type": "binary_operator",
                                            "label": "str | None",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                },
                                                {
                                                    "type": "none",
                                                    "label": "None",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "none",
                                    "label": "None",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "typed_default_parameter",
                            "label": "for_export: bool = False",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "for_export",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "bool",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "bool",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "false",
                                    "label": "False",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "GraphModel | None",
                    "children": [
                        {
                            "type": "binary_operator",
                            "label": "GraphModel | None",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "GraphModel",
                                    "children": []
                                },
                                {
                                    "type": "none",
                                    "label": "None",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    Retrieves a graph from the DB.\n    Defaults to the version with `is_active` if `version` is not passed,\n    or the latest version with `is_template` if `template=True`.\n\n    Returns `None` if the record is not found.\n    \"\"\"\n    where_clause: AgentGraphWhereInput = {\n        \"id\": graph_id,\n    }\n    if version is not None:\n        where_clause[\"version\"] = version\n    elif not template:\n        where_clause[\"isActive\"] = True\n\n    # TODO: Fix hack workaround to get adding store agents to work\n    if user_id is not None and not template:\n        where_clause[\"userId\"] = user_id\n\n    graph = await AgentGraph.prisma().find_first(\n        where=where_clause,\n        include=AGENT_GRAPH_INCLUDE,\n        order={\"version\": \"desc\"},\n    )\n    return GraphModel.from_db(graph, for_export) if graph else None",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    Retrieves a graph from the DB.\n    Defaults to the version with `is_active` if `version` is not passed,\n    or the latest version with `is_template` if `template=True`.\n\n    Returns `None` if the record is not found.\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    Retrieves a graph from the DB.\n    Defaults to the version with `is_active` if `version` is not passed,\n    or the latest version with `is_template` if `template=True`.\n\n    Returns `None` if the record is not found.\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    Retrieves a graph from the DB.\n    Defaults to the version with `is_active` if `version` is not passed,\n    or the latest version with `is_template` if `template=True`.\n\n    Returns `None` if the record is not found.\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "where_clause: AgentGraphWhereInput = {\n        \"id\": graph_id,\n    }",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "where_clause: AgentGraphWhereInput = {\n        \"id\": graph_id,\n    }",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "where_clause",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "AgentGraphWhereInput",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "AgentGraphWhereInput",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "dictionary",
                                            "label": "{\n        \"id\": graph_id,\n    }",
                                            "children": [
                                                {
                                                    "type": "pair",
                                                    "label": "\"id\": graph_id",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"id\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "id",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "graph_id",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if version is not None:\n        where_clause[\"version\"] = version\n    elif not template:\n        where_clause[\"isActive\"] = True",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "label": "version is not None",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "version",
                                            "children": []
                                        },
                                        {
                                            "type": "none",
                                            "label": "None",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "where_clause[\"version\"] = version",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "where_clause[\"version\"] = version",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "where_clause[\"version\"] = version",
                                                    "children": [
                                                        {
                                                            "type": "subscript",
                                                            "label": "where_clause[\"version\"]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "where_clause",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"version\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "version",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "version",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "elif_clause",
                                    "label": "elif not template:\n        where_clause[\"isActive\"] = True",
                                    "children": [
                                        {
                                            "type": "not_operator",
                                            "label": "not template",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "template",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "where_clause[\"isActive\"] = True",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "where_clause[\"isActive\"] = True",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "where_clause[\"isActive\"] = True",
                                                            "children": [
                                                                {
                                                                    "type": "subscript",
                                                                    "label": "where_clause[\"isActive\"]",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "where_clause",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"isActive\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "isActive",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "true",
                                                                    "label": "True",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# TODO: Fix hack workaround to get adding store agents to work",
                            "children": []
                        },
                        {
                            "type": "if_statement",
                            "label": "if user_id is not None and not template:\n        where_clause[\"userId\"] = user_id",
                            "children": [
                                {
                                    "type": "boolean_operator",
                                    "label": "user_id is not None and not template",
                                    "children": [
                                        {
                                            "type": "comparison_operator",
                                            "label": "user_id is not None",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "user_id",
                                                    "children": []
                                                },
                                                {
                                                    "type": "none",
                                                    "label": "None",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "not_operator",
                                            "label": "not template",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "template",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "where_clause[\"userId\"] = user_id",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "where_clause[\"userId\"] = user_id",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "where_clause[\"userId\"] = user_id",
                                                    "children": [
                                                        {
                                                            "type": "subscript",
                                                            "label": "where_clause[\"userId\"]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "where_clause",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"userId\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "userId",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "user_id",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "graph = await AgentGraph.prisma().find_first(\n        where=where_clause,\n        include=AGENT_GRAPH_INCLUDE,\n        order={\"version\": \"desc\"},\n    )",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "graph = await AgentGraph.prisma().find_first(\n        where=where_clause,\n        include=AGENT_GRAPH_INCLUDE,\n        order={\"version\": \"desc\"},\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graph",
                                            "children": []
                                        },
                                        {
                                            "type": "await",
                                            "label": "await AgentGraph.prisma().find_first(\n        where=where_clause,\n        include=AGENT_GRAPH_INCLUDE,\n        order={\"version\": \"desc\"},\n    )",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "AgentGraph.prisma().find_first(\n        where=where_clause,\n        include=AGENT_GRAPH_INCLUDE,\n        order={\"version\": \"desc\"},\n    )",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "AgentGraph.prisma().find_first",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "AgentGraph.prisma()",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "AgentGraph.prisma",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "AgentGraph",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "prisma",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "find_first",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n        where=where_clause,\n        include=AGENT_GRAPH_INCLUDE,\n        order={\"version\": \"desc\"},\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "where=where_clause",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "where",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "where_clause",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "include=AGENT_GRAPH_INCLUDE",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "include",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "AGENT_GRAPH_INCLUDE",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "order={\"version\": \"desc\"}",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "order",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "dictionary",
                                                                            "label": "{\"version\": \"desc\"}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "pair",
                                                                                    "label": "\"version\": \"desc\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"version\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "version",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"desc\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "desc",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return GraphModel.from_db(graph, for_export) if graph else None",
                            "children": [
                                {
                                    "type": "conditional_expression",
                                    "label": "GraphModel.from_db(graph, for_export) if graph else None",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "GraphModel.from_db(graph, for_export)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "GraphModel.from_db",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "GraphModel",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "from_db",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(graph, for_export)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "graph",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "for_export",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "graph",
                                            "children": []
                                        },
                                        {
                                            "type": "none",
                                            "label": "None",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def set_graph_active_version(graph_id: str, version: int, user_id: str) -> None:\n    # Activate the requested version if it exists and is owned by the user.\n    updated_count = await AgentGraph.prisma().update_many(\n        data={\"isActive\": True},\n        where={\n            \"id\": graph_id,\n            \"version\": version,\n            \"userId\": user_id,\n        },\n    )\n    if updated_count == 0:\n        raise Exception(f\"Graph #{graph_id} v{version} not found or not owned by user\")\n\n    # Deactivate all other versions.\n    await AgentGraph.prisma().update_many(\n        data={\"isActive\": False},\n        where={\n            \"id\": graph_id,\n            \"version\": {\"not\": version},\n            \"userId\": user_id,\n            \"isActive\": True,\n        },\n    )",
            "children": [
                {
                    "type": "identifier",
                    "label": "set_graph_active_version",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(graph_id: str, version: int, user_id: str)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "graph_id: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "graph_id",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "version: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "version",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "user_id: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "user_id",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "None",
                    "children": [
                        {
                            "type": "none",
                            "label": "None",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "comment",
                    "label": "# Activate the requested version if it exists and is owned by the user.",
                    "children": []
                },
                {
                    "type": "block",
                    "label": "updated_count = await AgentGraph.prisma().update_many(\n        data={\"isActive\": True},\n        where={\n            \"id\": graph_id,\n            \"version\": version,\n            \"userId\": user_id,\n        },\n    )\n    if updated_count == 0:\n        raise Exception(f\"Graph #{graph_id} v{version} not found or not owned by user\")\n\n    # Deactivate all other versions.\n    await AgentGraph.prisma().update_many(\n        data={\"isActive\": False},\n        where={\n            \"id\": graph_id,\n            \"version\": {\"not\": version},\n            \"userId\": user_id,\n            \"isActive\": True,\n        },\n    )",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "updated_count = await AgentGraph.prisma().update_many(\n        data={\"isActive\": True},\n        where={\n            \"id\": graph_id,\n            \"version\": version,\n            \"userId\": user_id,\n        },\n    )",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "updated_count = await AgentGraph.prisma().update_many(\n        data={\"isActive\": True},\n        where={\n            \"id\": graph_id,\n            \"version\": version,\n            \"userId\": user_id,\n        },\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "updated_count",
                                            "children": []
                                        },
                                        {
                                            "type": "await",
                                            "label": "await AgentGraph.prisma().update_many(\n        data={\"isActive\": True},\n        where={\n            \"id\": graph_id,\n            \"version\": version,\n            \"userId\": user_id,\n        },\n    )",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "AgentGraph.prisma().update_many(\n        data={\"isActive\": True},\n        where={\n            \"id\": graph_id,\n            \"version\": version,\n            \"userId\": user_id,\n        },\n    )",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "AgentGraph.prisma().update_many",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "AgentGraph.prisma()",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "AgentGraph.prisma",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "AgentGraph",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "prisma",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "update_many",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n        data={\"isActive\": True},\n        where={\n            \"id\": graph_id,\n            \"version\": version,\n            \"userId\": user_id,\n        },\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "data={\"isActive\": True}",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "data",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "dictionary",
                                                                            "label": "{\"isActive\": True}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "pair",
                                                                                    "label": "\"isActive\": True",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"isActive\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "isActive",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "true",
                                                                                            "label": "True",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "where={\n            \"id\": graph_id,\n            \"version\": version,\n            \"userId\": user_id,\n        }",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "where",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "dictionary",
                                                                            "label": "{\n            \"id\": graph_id,\n            \"version\": version,\n            \"userId\": user_id,\n        }",
                                                                            "children": [
                                                                                {
                                                                                    "type": "pair",
                                                                                    "label": "\"id\": graph_id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"id\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "id",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "graph_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "pair",
                                                                                    "label": "\"version\": version",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"version\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "version",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "version",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "pair",
                                                                                    "label": "\"userId\": user_id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"userId\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "userId",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if updated_count == 0:\n        raise Exception(f\"Graph #{graph_id} v{version} not found or not owned by user\")",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "label": "updated_count == 0",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "updated_count",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "raise Exception(f\"Graph #{graph_id} v{version} not found or not owned by user\")",
                                    "children": [
                                        {
                                            "type": "raise_statement",
                                            "label": "raise Exception(f\"Graph #{graph_id} v{version} not found or not owned by user\")",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "Exception(f\"Graph #{graph_id} v{version} not found or not owned by user\")",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Exception",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(f\"Graph #{graph_id} v{version} not found or not owned by user\")",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "f\"Graph #{graph_id} v{version} not found or not owned by user\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "f\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "Graph #",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{graph_id}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "graph_id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": " v",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{version}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "version",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": " not found or not owned by user",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# Deactivate all other versions.",
                            "children": []
                        },
                        {
                            "type": "expression_statement",
                            "label": "await AgentGraph.prisma().update_many(\n        data={\"isActive\": False},\n        where={\n            \"id\": graph_id,\n            \"version\": {\"not\": version},\n            \"userId\": user_id,\n            \"isActive\": True,\n        },\n    )",
                            "children": [
                                {
                                    "type": "await",
                                    "label": "await AgentGraph.prisma().update_many(\n        data={\"isActive\": False},\n        where={\n            \"id\": graph_id,\n            \"version\": {\"not\": version},\n            \"userId\": user_id,\n            \"isActive\": True,\n        },\n    )",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "AgentGraph.prisma().update_many(\n        data={\"isActive\": False},\n        where={\n            \"id\": graph_id,\n            \"version\": {\"not\": version},\n            \"userId\": user_id,\n            \"isActive\": True,\n        },\n    )",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "AgentGraph.prisma().update_many",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "AgentGraph.prisma()",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "AgentGraph.prisma",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "AgentGraph",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "prisma",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "update_many",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(\n        data={\"isActive\": False},\n        where={\n            \"id\": graph_id,\n            \"version\": {\"not\": version},\n            \"userId\": user_id,\n            \"isActive\": True,\n        },\n    )",
                                                    "children": [
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "data={\"isActive\": False}",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "data",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "dictionary",
                                                                    "label": "{\"isActive\": False}",
                                                                    "children": [
                                                                        {
                                                                            "type": "pair",
                                                                            "label": "\"isActive\": False",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"isActive\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "isActive",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "false",
                                                                                    "label": "False",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "where={\n            \"id\": graph_id,\n            \"version\": {\"not\": version},\n            \"userId\": user_id,\n            \"isActive\": True,\n        }",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "where",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "dictionary",
                                                                    "label": "{\n            \"id\": graph_id,\n            \"version\": {\"not\": version},\n            \"userId\": user_id,\n            \"isActive\": True,\n        }",
                                                                    "children": [
                                                                        {
                                                                            "type": "pair",
                                                                            "label": "\"id\": graph_id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"id\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "id",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "graph_id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "pair",
                                                                            "label": "\"version\": {\"not\": version}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"version\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "version",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "dictionary",
                                                                                    "label": "{\"not\": version}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "pair",
                                                                                            "label": "\"not\": version",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"not\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "not",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "version",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "pair",
                                                                            "label": "\"userId\": user_id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"userId\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "userId",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "pair",
                                                                            "label": "\"isActive\": True",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"isActive\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "isActive",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "true",
                                                                                    "label": "True",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def get_graph_all_versions(graph_id: str, user_id: str) -> list[GraphModel]:\n    graph_versions = await AgentGraph.prisma().find_many(\n        where={\"id\": graph_id, \"userId\": user_id},\n        order={\"version\": \"desc\"},\n        include=AGENT_GRAPH_INCLUDE,\n    )\n\n    if not graph_versions:\n        return []\n\n    return [GraphModel.from_db(graph) for graph in graph_versions]",
            "children": [
                {
                    "type": "identifier",
                    "label": "get_graph_all_versions",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(graph_id: str, user_id: str)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "graph_id: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "graph_id",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "user_id: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "user_id",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "list[GraphModel]",
                    "children": [
                        {
                            "type": "generic_type",
                            "label": "list[GraphModel]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "list",
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "label": "[GraphModel]",
                                    "children": [
                                        {
                                            "type": "type",
                                            "label": "GraphModel",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "GraphModel",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "graph_versions = await AgentGraph.prisma().find_many(\n        where={\"id\": graph_id, \"userId\": user_id},\n        order={\"version\": \"desc\"},\n        include=AGENT_GRAPH_INCLUDE,\n    )\n\n    if not graph_versions:\n        return []\n\n    return [GraphModel.from_db(graph) for graph in graph_versions]",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "graph_versions = await AgentGraph.prisma().find_many(\n        where={\"id\": graph_id, \"userId\": user_id},\n        order={\"version\": \"desc\"},\n        include=AGENT_GRAPH_INCLUDE,\n    )",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "graph_versions = await AgentGraph.prisma().find_many(\n        where={\"id\": graph_id, \"userId\": user_id},\n        order={\"version\": \"desc\"},\n        include=AGENT_GRAPH_INCLUDE,\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graph_versions",
                                            "children": []
                                        },
                                        {
                                            "type": "await",
                                            "label": "await AgentGraph.prisma().find_many(\n        where={\"id\": graph_id, \"userId\": user_id},\n        order={\"version\": \"desc\"},\n        include=AGENT_GRAPH_INCLUDE,\n    )",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "AgentGraph.prisma().find_many(\n        where={\"id\": graph_id, \"userId\": user_id},\n        order={\"version\": \"desc\"},\n        include=AGENT_GRAPH_INCLUDE,\n    )",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "AgentGraph.prisma().find_many",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "AgentGraph.prisma()",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "AgentGraph.prisma",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "AgentGraph",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "prisma",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "find_many",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n        where={\"id\": graph_id, \"userId\": user_id},\n        order={\"version\": \"desc\"},\n        include=AGENT_GRAPH_INCLUDE,\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "where={\"id\": graph_id, \"userId\": user_id}",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "where",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "dictionary",
                                                                            "label": "{\"id\": graph_id, \"userId\": user_id}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "pair",
                                                                                    "label": "\"id\": graph_id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"id\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "id",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "graph_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "pair",
                                                                                    "label": "\"userId\": user_id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"userId\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "userId",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "order={\"version\": \"desc\"}",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "order",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "dictionary",
                                                                            "label": "{\"version\": \"desc\"}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "pair",
                                                                                    "label": "\"version\": \"desc\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"version\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "version",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"desc\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "desc",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "include=AGENT_GRAPH_INCLUDE",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "include",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "AGENT_GRAPH_INCLUDE",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if not graph_versions:\n        return []",
                            "children": [
                                {
                                    "type": "not_operator",
                                    "label": "not graph_versions",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "graph_versions",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "return []",
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "label": "return []",
                                            "children": [
                                                {
                                                    "type": "list",
                                                    "label": "[]",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return [GraphModel.from_db(graph) for graph in graph_versions]",
                            "children": [
                                {
                                    "type": "list_comprehension",
                                    "label": "[GraphModel.from_db(graph) for graph in graph_versions]",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "GraphModel.from_db(graph)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "GraphModel.from_db",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "GraphModel",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "from_db",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(graph)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "graph",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "for_in_clause",
                                            "label": "for graph in graph_versions",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "graph",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "graph_versions",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def delete_graph(graph_id: str, user_id: str) -> int:\n    entries_count = await AgentGraph.prisma().delete_many(\n        where={\"id\": graph_id, \"userId\": user_id}\n    )\n    if entries_count:\n        logger.info(f\"Deleted {entries_count} graph entries for Graph #{graph_id}\")\n    return entries_count",
            "children": [
                {
                    "type": "identifier",
                    "label": "delete_graph",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(graph_id: str, user_id: str)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "graph_id: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "graph_id",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "user_id: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "user_id",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "int",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "int",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "entries_count = await AgentGraph.prisma().delete_many(\n        where={\"id\": graph_id, \"userId\": user_id}\n    )\n    if entries_count:\n        logger.info(f\"Deleted {entries_count} graph entries for Graph #{graph_id}\")\n    return entries_count",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "entries_count = await AgentGraph.prisma().delete_many(\n        where={\"id\": graph_id, \"userId\": user_id}\n    )",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "entries_count = await AgentGraph.prisma().delete_many(\n        where={\"id\": graph_id, \"userId\": user_id}\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "entries_count",
                                            "children": []
                                        },
                                        {
                                            "type": "await",
                                            "label": "await AgentGraph.prisma().delete_many(\n        where={\"id\": graph_id, \"userId\": user_id}\n    )",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "AgentGraph.prisma().delete_many(\n        where={\"id\": graph_id, \"userId\": user_id}\n    )",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "AgentGraph.prisma().delete_many",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "AgentGraph.prisma()",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "AgentGraph.prisma",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "AgentGraph",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "prisma",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "delete_many",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n        where={\"id\": graph_id, \"userId\": user_id}\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "where={\"id\": graph_id, \"userId\": user_id}",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "where",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "dictionary",
                                                                            "label": "{\"id\": graph_id, \"userId\": user_id}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "pair",
                                                                                    "label": "\"id\": graph_id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"id\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "id",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "graph_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "pair",
                                                                                    "label": "\"userId\": user_id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"userId\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "userId",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if entries_count:\n        logger.info(f\"Deleted {entries_count} graph entries for Graph #{graph_id}\")",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "entries_count",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "label": "logger.info(f\"Deleted {entries_count} graph entries for Graph #{graph_id}\")",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "logger.info(f\"Deleted {entries_count} graph entries for Graph #{graph_id}\")",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "logger.info(f\"Deleted {entries_count} graph entries for Graph #{graph_id}\")",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "logger.info",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "logger",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "info",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(f\"Deleted {entries_count} graph entries for Graph #{graph_id}\")",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "f\"Deleted {entries_count} graph entries for Graph #{graph_id}\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "f\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "Deleted ",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{entries_count}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "entries_count",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": " graph entries for Graph #",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "interpolation",
                                                                            "label": "{graph_id}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "graph_id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return entries_count",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "entries_count",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def create_graph(graph: Graph, user_id: str) -> GraphModel:\n    async with transaction() as tx:\n        await __create_graph(tx, graph, user_id)\n\n    if created_graph := await get_graph(\n        graph.id, graph.version, graph.is_template, user_id=user_id\n    ):\n        return created_graph\n\n    raise ValueError(f\"Created graph {graph.id} v{graph.version} is not in DB\")",
            "children": [
                {
                    "type": "identifier",
                    "label": "create_graph",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(graph: Graph, user_id: str)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "graph: Graph",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "graph",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "Graph",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "Graph",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "user_id: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "user_id",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "GraphModel",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "GraphModel",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "async with transaction() as tx:\n        await __create_graph(tx, graph, user_id)\n\n    if created_graph := await get_graph(\n        graph.id, graph.version, graph.is_template, user_id=user_id\n    ):\n        return created_graph\n\n    raise ValueError(f\"Created graph {graph.id} v{graph.version} is not in DB\")",
                    "children": [
                        {
                            "type": "with_statement",
                            "label": "async with transaction() as tx:\n        await __create_graph(tx, graph, user_id)",
                            "children": [
                                {
                                    "type": "with_clause",
                                    "label": "transaction() as tx",
                                    "children": [
                                        {
                                            "type": "with_item",
                                            "label": "transaction() as tx",
                                            "children": [
                                                {
                                                    "type": "as_pattern",
                                                    "label": "transaction() as tx",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "transaction()",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "transaction",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "as_pattern_target",
                                                            "label": "tx",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "tx",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "await __create_graph(tx, graph, user_id)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "await __create_graph(tx, graph, user_id)",
                                            "children": [
                                                {
                                                    "type": "await",
                                                    "label": "await __create_graph(tx, graph, user_id)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "__create_graph(tx, graph, user_id)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "__create_graph",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(tx, graph, user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "tx",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "graph",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "user_id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if created_graph := await get_graph(\n        graph.id, graph.version, graph.is_template, user_id=user_id\n    ):\n        return created_graph",
                            "children": [
                                {
                                    "type": "named_expression",
                                    "label": "created_graph := await get_graph(\n        graph.id, graph.version, graph.is_template, user_id=user_id\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "created_graph",
                                            "children": []
                                        },
                                        {
                                            "type": "await",
                                            "label": "await get_graph(\n        graph.id, graph.version, graph.is_template, user_id=user_id\n    )",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "get_graph(\n        graph.id, graph.version, graph.is_template, user_id=user_id\n    )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "get_graph",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n        graph.id, graph.version, graph.is_template, user_id=user_id\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "graph.id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "graph",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "graph.version",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "graph",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "version",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "graph.is_template",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "graph",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "is_template",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "user_id=user_id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "user_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "user_id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "return created_graph",
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "label": "return created_graph",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "created_graph",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "raise_statement",
                            "label": "raise ValueError(f\"Created graph {graph.id} v{graph.version} is not in DB\")",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "ValueError(f\"Created graph {graph.id} v{graph.version} is not in DB\")",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "ValueError",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(f\"Created graph {graph.id} v{graph.version} is not in DB\")",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "f\"Created graph {graph.id} v{graph.version} is not in DB\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "f\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Created graph ",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "interpolation",
                                                            "label": "{graph.id}",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "graph.id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "graph",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": " v",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "interpolation",
                                                            "label": "{graph.version}",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "graph.version",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "graph",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "version",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": " is not in DB",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def __create_graph(tx, graph: Graph, user_id: str):\n    await AgentGraph.prisma(tx).create(\n        data={\n            \"id\": graph.id,\n            \"version\": graph.version,\n            \"name\": graph.name,\n            \"description\": graph.description,\n            \"isTemplate\": graph.is_template,\n            \"isActive\": graph.is_active,\n            \"userId\": user_id,\n        }\n    )\n\n    await asyncio.gather(\n        *[\n            AgentNode.prisma(tx).create(\n                {\n                    \"id\": node.id,\n                    \"agentBlockId\": node.block_id,\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"constantInput\": json.dumps(node.input_default),\n                    \"metadata\": json.dumps(node.metadata),\n                }\n            )\n            for node in graph.nodes\n        ]\n    )\n\n    await asyncio.gather(\n        *[\n            AgentNodeLink.prisma(tx).create(\n                {\n                    \"id\": str(uuid.uuid4()),\n                    \"sourceName\": link.source_name,\n                    \"sinkName\": link.sink_name,\n                    \"agentNodeSourceId\": link.source_id,\n                    \"agentNodeSinkId\": link.sink_id,\n                    \"isStatic\": link.is_static,\n                }\n            )\n            for link in graph.links\n        ]\n    )",
            "children": [
                {
                    "type": "identifier",
                    "label": "__create_graph",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(tx, graph: Graph, user_id: str)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "tx",
                            "children": []
                        },
                        {
                            "type": "typed_parameter",
                            "label": "graph: Graph",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "graph",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "Graph",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "Graph",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "user_id: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "user_id",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "await AgentGraph.prisma(tx).create(\n        data={\n            \"id\": graph.id,\n            \"version\": graph.version,\n            \"name\": graph.name,\n            \"description\": graph.description,\n            \"isTemplate\": graph.is_template,\n            \"isActive\": graph.is_active,\n            \"userId\": user_id,\n        }\n    )\n\n    await asyncio.gather(\n        *[\n            AgentNode.prisma(tx).create(\n                {\n                    \"id\": node.id,\n                    \"agentBlockId\": node.block_id,\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"constantInput\": json.dumps(node.input_default),\n                    \"metadata\": json.dumps(node.metadata),\n                }\n            )\n            for node in graph.nodes\n        ]\n    )\n\n    await asyncio.gather(\n        *[\n            AgentNodeLink.prisma(tx).create(\n                {\n                    \"id\": str(uuid.uuid4()),\n                    \"sourceName\": link.source_name,\n                    \"sinkName\": link.sink_name,\n                    \"agentNodeSourceId\": link.source_id,\n                    \"agentNodeSinkId\": link.sink_id,\n                    \"isStatic\": link.is_static,\n                }\n            )\n            for link in graph.links\n        ]\n    )",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "await AgentGraph.prisma(tx).create(\n        data={\n            \"id\": graph.id,\n            \"version\": graph.version,\n            \"name\": graph.name,\n            \"description\": graph.description,\n            \"isTemplate\": graph.is_template,\n            \"isActive\": graph.is_active,\n            \"userId\": user_id,\n        }\n    )",
                            "children": [
                                {
                                    "type": "await",
                                    "label": "await AgentGraph.prisma(tx).create(\n        data={\n            \"id\": graph.id,\n            \"version\": graph.version,\n            \"name\": graph.name,\n            \"description\": graph.description,\n            \"isTemplate\": graph.is_template,\n            \"isActive\": graph.is_active,\n            \"userId\": user_id,\n        }\n    )",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "AgentGraph.prisma(tx).create(\n        data={\n            \"id\": graph.id,\n            \"version\": graph.version,\n            \"name\": graph.name,\n            \"description\": graph.description,\n            \"isTemplate\": graph.is_template,\n            \"isActive\": graph.is_active,\n            \"userId\": user_id,\n        }\n    )",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "AgentGraph.prisma(tx).create",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "AgentGraph.prisma(tx)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "AgentGraph.prisma",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "AgentGraph",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "prisma",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(tx)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "tx",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "create",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(\n        data={\n            \"id\": graph.id,\n            \"version\": graph.version,\n            \"name\": graph.name,\n            \"description\": graph.description,\n            \"isTemplate\": graph.is_template,\n            \"isActive\": graph.is_active,\n            \"userId\": user_id,\n        }\n    )",
                                                    "children": [
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "data={\n            \"id\": graph.id,\n            \"version\": graph.version,\n            \"name\": graph.name,\n            \"description\": graph.description,\n            \"isTemplate\": graph.is_template,\n            \"isActive\": graph.is_active,\n            \"userId\": user_id,\n        }",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "data",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "dictionary",
                                                                    "label": "{\n            \"id\": graph.id,\n            \"version\": graph.version,\n            \"name\": graph.name,\n            \"description\": graph.description,\n            \"isTemplate\": graph.is_template,\n            \"isActive\": graph.is_active,\n            \"userId\": user_id,\n        }",
                                                                    "children": [
                                                                        {
                                                                            "type": "pair",
                                                                            "label": "\"id\": graph.id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"id\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "id",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "graph.id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "graph",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "pair",
                                                                            "label": "\"version\": graph.version",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"version\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "version",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "graph.version",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "graph",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "version",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "pair",
                                                                            "label": "\"name\": graph.name",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"name\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "name",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "graph.name",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "graph",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "name",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "pair",
                                                                            "label": "\"description\": graph.description",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"description\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "description",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "graph.description",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "graph",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "description",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "pair",
                                                                            "label": "\"isTemplate\": graph.is_template",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"isTemplate\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "isTemplate",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "graph.is_template",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "graph",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "is_template",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "pair",
                                                                            "label": "\"isActive\": graph.is_active",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"isActive\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "isActive",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "graph.is_active",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "graph",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "is_active",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "pair",
                                                                            "label": "\"userId\": user_id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"userId\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "userId",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "await asyncio.gather(\n        *[\n            AgentNode.prisma(tx).create(\n                {\n                    \"id\": node.id,\n                    \"agentBlockId\": node.block_id,\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"constantInput\": json.dumps(node.input_default),\n                    \"metadata\": json.dumps(node.metadata),\n                }\n            )\n            for node in graph.nodes\n        ]\n    )",
                            "children": [
                                {
                                    "type": "await",
                                    "label": "await asyncio.gather(\n        *[\n            AgentNode.prisma(tx).create(\n                {\n                    \"id\": node.id,\n                    \"agentBlockId\": node.block_id,\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"constantInput\": json.dumps(node.input_default),\n                    \"metadata\": json.dumps(node.metadata),\n                }\n            )\n            for node in graph.nodes\n        ]\n    )",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "asyncio.gather(\n        *[\n            AgentNode.prisma(tx).create(\n                {\n                    \"id\": node.id,\n                    \"agentBlockId\": node.block_id,\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"constantInput\": json.dumps(node.input_default),\n                    \"metadata\": json.dumps(node.metadata),\n                }\n            )\n            for node in graph.nodes\n        ]\n    )",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "asyncio.gather",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "asyncio",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "gather",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(\n        *[\n            AgentNode.prisma(tx).create(\n                {\n                    \"id\": node.id,\n                    \"agentBlockId\": node.block_id,\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"constantInput\": json.dumps(node.input_default),\n                    \"metadata\": json.dumps(node.metadata),\n                }\n            )\n            for node in graph.nodes\n        ]\n    )",
                                                    "children": [
                                                        {
                                                            "type": "list_splat",
                                                            "label": "*[\n            AgentNode.prisma(tx).create(\n                {\n                    \"id\": node.id,\n                    \"agentBlockId\": node.block_id,\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"constantInput\": json.dumps(node.input_default),\n                    \"metadata\": json.dumps(node.metadata),\n                }\n            )\n            for node in graph.nodes\n        ]",
                                                            "children": [
                                                                {
                                                                    "type": "list_comprehension",
                                                                    "label": "[\n            AgentNode.prisma(tx).create(\n                {\n                    \"id\": node.id,\n                    \"agentBlockId\": node.block_id,\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"constantInput\": json.dumps(node.input_default),\n                    \"metadata\": json.dumps(node.metadata),\n                }\n            )\n            for node in graph.nodes\n        ]",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "AgentNode.prisma(tx).create(\n                {\n                    \"id\": node.id,\n                    \"agentBlockId\": node.block_id,\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"constantInput\": json.dumps(node.input_default),\n                    \"metadata\": json.dumps(node.metadata),\n                }\n            )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "AgentNode.prisma(tx).create",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "AgentNode.prisma(tx)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "AgentNode.prisma",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "AgentNode",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "prisma",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(tx)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "tx",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "create",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(\n                {\n                    \"id\": node.id,\n                    \"agentBlockId\": node.block_id,\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"constantInput\": json.dumps(node.input_default),\n                    \"metadata\": json.dumps(node.metadata),\n                }\n            )",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "dictionary",
                                                                                            "label": "{\n                    \"id\": node.id,\n                    \"agentBlockId\": node.block_id,\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"constantInput\": json.dumps(node.input_default),\n                    \"metadata\": json.dumps(node.metadata),\n                }",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "pair",
                                                                                                    "label": "\"id\": node.id",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"id\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "id",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "node.id",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "node",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "id",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "pair",
                                                                                                    "label": "\"agentBlockId\": node.block_id",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"agentBlockId\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "agentBlockId",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "node.block_id",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "node",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "block_id",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "pair",
                                                                                                    "label": "\"agentGraphId\": graph.id",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"agentGraphId\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "agentGraphId",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "graph.id",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "graph",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "id",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "pair",
                                                                                                    "label": "\"agentGraphVersion\": graph.version",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"agentGraphVersion\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "agentGraphVersion",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "graph.version",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "graph",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "version",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "pair",
                                                                                                    "label": "\"constantInput\": json.dumps(node.input_default)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"constantInput\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "constantInput",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "call",
                                                                                                            "label": "json.dumps(node.input_default)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "attribute",
                                                                                                                    "label": "json.dumps",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "json",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "dumps",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "argument_list",
                                                                                                                    "label": "(node.input_default)",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "attribute",
                                                                                                                            "label": "node.input_default",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "node",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "input_default",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "pair",
                                                                                                    "label": "\"metadata\": json.dumps(node.metadata)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"metadata\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "metadata",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "call",
                                                                                                            "label": "json.dumps(node.metadata)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "attribute",
                                                                                                                    "label": "json.dumps",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "json",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "dumps",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "argument_list",
                                                                                                                    "label": "(node.metadata)",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "attribute",
                                                                                                                            "label": "node.metadata",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "node",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "metadata",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "for_in_clause",
                                                                            "label": "for node in graph.nodes",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "node",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "graph.nodes",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "graph",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "nodes",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "await asyncio.gather(\n        *[\n            AgentNodeLink.prisma(tx).create(\n                {\n                    \"id\": str(uuid.uuid4()),\n                    \"sourceName\": link.source_name,\n                    \"sinkName\": link.sink_name,\n                    \"agentNodeSourceId\": link.source_id,\n                    \"agentNodeSinkId\": link.sink_id,\n                    \"isStatic\": link.is_static,\n                }\n            )\n            for link in graph.links\n        ]\n    )",
                            "children": [
                                {
                                    "type": "await",
                                    "label": "await asyncio.gather(\n        *[\n            AgentNodeLink.prisma(tx).create(\n                {\n                    \"id\": str(uuid.uuid4()),\n                    \"sourceName\": link.source_name,\n                    \"sinkName\": link.sink_name,\n                    \"agentNodeSourceId\": link.source_id,\n                    \"agentNodeSinkId\": link.sink_id,\n                    \"isStatic\": link.is_static,\n                }\n            )\n            for link in graph.links\n        ]\n    )",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "asyncio.gather(\n        *[\n            AgentNodeLink.prisma(tx).create(\n                {\n                    \"id\": str(uuid.uuid4()),\n                    \"sourceName\": link.source_name,\n                    \"sinkName\": link.sink_name,\n                    \"agentNodeSourceId\": link.source_id,\n                    \"agentNodeSinkId\": link.sink_id,\n                    \"isStatic\": link.is_static,\n                }\n            )\n            for link in graph.links\n        ]\n    )",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "asyncio.gather",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "asyncio",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "gather",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(\n        *[\n            AgentNodeLink.prisma(tx).create(\n                {\n                    \"id\": str(uuid.uuid4()),\n                    \"sourceName\": link.source_name,\n                    \"sinkName\": link.sink_name,\n                    \"agentNodeSourceId\": link.source_id,\n                    \"agentNodeSinkId\": link.sink_id,\n                    \"isStatic\": link.is_static,\n                }\n            )\n            for link in graph.links\n        ]\n    )",
                                                    "children": [
                                                        {
                                                            "type": "list_splat",
                                                            "label": "*[\n            AgentNodeLink.prisma(tx).create(\n                {\n                    \"id\": str(uuid.uuid4()),\n                    \"sourceName\": link.source_name,\n                    \"sinkName\": link.sink_name,\n                    \"agentNodeSourceId\": link.source_id,\n                    \"agentNodeSinkId\": link.sink_id,\n                    \"isStatic\": link.is_static,\n                }\n            )\n            for link in graph.links\n        ]",
                                                            "children": [
                                                                {
                                                                    "type": "list_comprehension",
                                                                    "label": "[\n            AgentNodeLink.prisma(tx).create(\n                {\n                    \"id\": str(uuid.uuid4()),\n                    \"sourceName\": link.source_name,\n                    \"sinkName\": link.sink_name,\n                    \"agentNodeSourceId\": link.source_id,\n                    \"agentNodeSinkId\": link.sink_id,\n                    \"isStatic\": link.is_static,\n                }\n            )\n            for link in graph.links\n        ]",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "AgentNodeLink.prisma(tx).create(\n                {\n                    \"id\": str(uuid.uuid4()),\n                    \"sourceName\": link.source_name,\n                    \"sinkName\": link.sink_name,\n                    \"agentNodeSourceId\": link.source_id,\n                    \"agentNodeSinkId\": link.sink_id,\n                    \"isStatic\": link.is_static,\n                }\n            )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "AgentNodeLink.prisma(tx).create",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "AgentNodeLink.prisma(tx)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "AgentNodeLink.prisma",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "AgentNodeLink",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "prisma",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(tx)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "tx",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "create",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(\n                {\n                    \"id\": str(uuid.uuid4()),\n                    \"sourceName\": link.source_name,\n                    \"sinkName\": link.sink_name,\n                    \"agentNodeSourceId\": link.source_id,\n                    \"agentNodeSinkId\": link.sink_id,\n                    \"isStatic\": link.is_static,\n                }\n            )",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "dictionary",
                                                                                            "label": "{\n                    \"id\": str(uuid.uuid4()),\n                    \"sourceName\": link.source_name,\n                    \"sinkName\": link.sink_name,\n                    \"agentNodeSourceId\": link.source_id,\n                    \"agentNodeSinkId\": link.sink_id,\n                    \"isStatic\": link.is_static,\n                }",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "pair",
                                                                                                    "label": "\"id\": str(uuid.uuid4())",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"id\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "id",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "call",
                                                                                                            "label": "str(uuid.uuid4())",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "str",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "argument_list",
                                                                                                                    "label": "(uuid.uuid4())",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "call",
                                                                                                                            "label": "uuid.uuid4()",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "attribute",
                                                                                                                                    "label": "uuid.uuid4",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "uuid",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "uuid4",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "argument_list",
                                                                                                                                    "label": "()",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "pair",
                                                                                                    "label": "\"sourceName\": link.source_name",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"sourceName\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "sourceName",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "link.source_name",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "link",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "source_name",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "pair",
                                                                                                    "label": "\"sinkName\": link.sink_name",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"sinkName\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "sinkName",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "link.sink_name",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "link",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "sink_name",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "pair",
                                                                                                    "label": "\"agentNodeSourceId\": link.source_id",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"agentNodeSourceId\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "agentNodeSourceId",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "link.source_id",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "link",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "source_id",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "pair",
                                                                                                    "label": "\"agentNodeSinkId\": link.sink_id",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"agentNodeSinkId\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "agentNodeSinkId",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "link.sink_id",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "link",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "sink_id",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "pair",
                                                                                                    "label": "\"isStatic\": link.is_static",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"isStatic\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "isStatic",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "link.is_static",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "link",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "is_static",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "for_in_clause",
                                                                            "label": "for link in graph.links",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "link",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "graph.links",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "graph",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "links",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "comment",
            "label": "# ------------------------ UTILITIES ------------------------ #",
            "children": []
        },
        {
            "type": "function_definition",
            "label": "def make_graph_model(creatable_graph: Graph, user_id: str) -> GraphModel:\n    \"\"\"\n    Convert a Graph to a GraphModel, setting graph_id and graph_version on all nodes.\n\n    Args:\n        creatable_graph (Graph): The creatable graph to convert.\n        user_id (str): The ID of the user creating the graph.\n\n    Returns:\n        GraphModel: The converted Graph object.\n    \"\"\"\n    # Create a new Graph object, inheriting properties from CreatableGraph\n    return GraphModel(\n        **creatable_graph.model_dump(exclude={\"nodes\"}),\n        user_id=user_id,\n        nodes=[\n            NodeModel(\n                **creatable_node.model_dump(),\n                graph_id=creatable_graph.id,\n                graph_version=creatable_graph.version,\n            )\n            for creatable_node in creatable_graph.nodes\n        ],\n    )",
            "children": [
                {
                    "type": "identifier",
                    "label": "make_graph_model",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(creatable_graph: Graph, user_id: str)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "creatable_graph: Graph",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "creatable_graph",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "Graph",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "Graph",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "user_id: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "user_id",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "GraphModel",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "GraphModel",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "\"\"\"\n    Convert a Graph to a GraphModel, setting graph_id and graph_version on all nodes.\n\n    Args:\n        creatable_graph (Graph): The creatable graph to convert.\n        user_id (str): The ID of the user creating the graph.\n\n    Returns:\n        GraphModel: The converted Graph object.\n    \"\"\"\n    # Create a new Graph object, inheriting properties from CreatableGraph\n    return GraphModel(\n        **creatable_graph.model_dump(exclude={\"nodes\"}),\n        user_id=user_id,\n        nodes=[\n            NodeModel(\n                **creatable_node.model_dump(),\n                graph_id=creatable_graph.id,\n                graph_version=creatable_graph.version,\n            )\n            for creatable_node in creatable_graph.nodes\n        ],\n    )",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"\n    Convert a Graph to a GraphModel, setting graph_id and graph_version on all nodes.\n\n    Args:\n        creatable_graph (Graph): The creatable graph to convert.\n        user_id (str): The ID of the user creating the graph.\n\n    Returns:\n        GraphModel: The converted Graph object.\n    \"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"\n    Convert a Graph to a GraphModel, setting graph_id and graph_version on all nodes.\n\n    Args:\n        creatable_graph (Graph): The creatable graph to convert.\n        user_id (str): The ID of the user creating the graph.\n\n    Returns:\n        GraphModel: The converted Graph object.\n    \"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "\n    Convert a Graph to a GraphModel, setting graph_id and graph_version on all nodes.\n\n    Args:\n        creatable_graph (Graph): The creatable graph to convert.\n        user_id (str): The ID of the user creating the graph.\n\n    Returns:\n        GraphModel: The converted Graph object.\n    ",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# Create a new Graph object, inheriting properties from CreatableGraph",
                            "children": []
                        },
                        {
                            "type": "return_statement",
                            "label": "return GraphModel(\n        **creatable_graph.model_dump(exclude={\"nodes\"}),\n        user_id=user_id,\n        nodes=[\n            NodeModel(\n                **creatable_node.model_dump(),\n                graph_id=creatable_graph.id,\n                graph_version=creatable_graph.version,\n            )\n            for creatable_node in creatable_graph.nodes\n        ],\n    )",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "GraphModel(\n        **creatable_graph.model_dump(exclude={\"nodes\"}),\n        user_id=user_id,\n        nodes=[\n            NodeModel(\n                **creatable_node.model_dump(),\n                graph_id=creatable_graph.id,\n                graph_version=creatable_graph.version,\n            )\n            for creatable_node in creatable_graph.nodes\n        ],\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "GraphModel",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(\n        **creatable_graph.model_dump(exclude={\"nodes\"}),\n        user_id=user_id,\n        nodes=[\n            NodeModel(\n                **creatable_node.model_dump(),\n                graph_id=creatable_graph.id,\n                graph_version=creatable_graph.version,\n            )\n            for creatable_node in creatable_graph.nodes\n        ],\n    )",
                                            "children": [
                                                {
                                                    "type": "dictionary_splat",
                                                    "label": "**creatable_graph.model_dump(exclude={\"nodes\"})",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "creatable_graph.model_dump(exclude={\"nodes\"})",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "creatable_graph.model_dump",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "creatable_graph",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "model_dump",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(exclude={\"nodes\"})",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "exclude={\"nodes\"}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "exclude",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "set",
                                                                                    "label": "{\"nodes\"}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"nodes\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "nodes",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "keyword_argument",
                                                    "label": "user_id=user_id",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "user_id",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "user_id",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "keyword_argument",
                                                    "label": "nodes=[\n            NodeModel(\n                **creatable_node.model_dump(),\n                graph_id=creatable_graph.id,\n                graph_version=creatable_graph.version,\n            )\n            for creatable_node in creatable_graph.nodes\n        ]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "nodes",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "list_comprehension",
                                                            "label": "[\n            NodeModel(\n                **creatable_node.model_dump(),\n                graph_id=creatable_graph.id,\n                graph_version=creatable_graph.version,\n            )\n            for creatable_node in creatable_graph.nodes\n        ]",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "NodeModel(\n                **creatable_node.model_dump(),\n                graph_id=creatable_graph.id,\n                graph_version=creatable_graph.version,\n            )",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "NodeModel",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(\n                **creatable_node.model_dump(),\n                graph_id=creatable_graph.id,\n                graph_version=creatable_graph.version,\n            )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "dictionary_splat",
                                                                                    "label": "**creatable_node.model_dump()",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "creatable_node.model_dump()",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "creatable_node.model_dump",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "creatable_node",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "model_dump",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "()",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "graph_id=creatable_graph.id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "graph_id",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "creatable_graph.id",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "creatable_graph",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "graph_version=creatable_graph.version",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "graph_version",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "creatable_graph.version",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "creatable_graph",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "version",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "for_in_clause",
                                                                    "label": "for creatable_node in creatable_graph.nodes",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "creatable_node",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "creatable_graph.nodes",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "creatable_graph",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "nodes",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def fix_llm_provider_credentials():\n    \"\"\"Fix node credentials with provider `llm`\"\"\"\n    from backend.integrations.credentials_store import IntegrationCredentialsStore\n\n    from .user import get_user_integrations\n\n    store = IntegrationCredentialsStore()\n\n    broken_nodes = await prisma.get_client().query_raw(\n        \"\"\"\n        SELECT    graph.\"userId\"       user_id,\n                  node.id              node_id,\n                  node.\"constantInput\" node_preset_input\n        FROM      platform.\"AgentNode\"  node\n        LEFT JOIN platform.\"AgentGraph\" graph\n        ON        node.\"agentGraphId\" = graph.id\n        WHERE     node.\"constantInput\"::jsonb->'credentials'->>'provider' = 'llm'\n        ORDER BY  graph.\"userId\";\n        \"\"\"\n    )\n    logger.info(f\"Fixing LLM credential inputs on {len(broken_nodes)} nodes\")\n\n    user_id: str = \"\"\n    user_integrations = None\n    for node in broken_nodes:\n        if node[\"user_id\"] != user_id:\n            # Save queries by only fetching once per user\n            user_id = node[\"user_id\"]\n            user_integrations = await get_user_integrations(user_id)\n        elif not user_integrations:\n            raise RuntimeError(f\"Impossible state while processing node {node}\")\n\n        node_id: str = node[\"node_id\"]\n        node_preset_input: dict = json.loads(node[\"node_preset_input\"])\n        credentials_meta: dict = node_preset_input[\"credentials\"]\n\n        credentials = next(\n            (\n                c\n                for c in user_integrations.credentials\n                if c.id == credentials_meta[\"id\"]\n            ),\n            None,\n        )\n        if not credentials:\n            continue\n        if credentials.type != \"api_key\":\n            logger.warning(\n                f\"User {user_id} credentials {credentials.id} with provider 'llm' \"\n                f\"has invalid type '{credentials.type}'\"\n            )\n            continue\n\n        api_key = credentials.api_key.get_secret_value()\n        if api_key.startswith(\"sk-ant-api03-\"):\n            credentials.provider = credentials_meta[\"provider\"] = \"anthropic\"\n        elif api_key.startswith(\"sk-\"):\n            credentials.provider = credentials_meta[\"provider\"] = \"openai\"\n        elif api_key.startswith(\"gsk_\"):\n            credentials.provider = credentials_meta[\"provider\"] = \"groq\"\n        else:\n            logger.warning(\n                f\"Could not identify provider from key prefix {api_key[:13]}*****\"\n            )\n            continue\n\n        store.update_creds(user_id, credentials)\n        await AgentNode.prisma().update(\n            where={\"id\": node_id},\n            data={\"constantInput\": json.dumps(node_preset_input)},\n        )",
            "children": [
                {
                    "type": "identifier",
                    "label": "fix_llm_provider_credentials",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "()",
                    "children": []
                },
                {
                    "type": "block",
                    "label": "\"\"\"Fix node credentials with provider `llm`\"\"\"\n    from backend.integrations.credentials_store import IntegrationCredentialsStore\n\n    from .user import get_user_integrations\n\n    store = IntegrationCredentialsStore()\n\n    broken_nodes = await prisma.get_client().query_raw(\n        \"\"\"\n        SELECT    graph.\"userId\"       user_id,\n                  node.id              node_id,\n                  node.\"constantInput\" node_preset_input\n        FROM      platform.\"AgentNode\"  node\n        LEFT JOIN platform.\"AgentGraph\" graph\n        ON        node.\"agentGraphId\" = graph.id\n        WHERE     node.\"constantInput\"::jsonb->'credentials'->>'provider' = 'llm'\n        ORDER BY  graph.\"userId\";\n        \"\"\"\n    )\n    logger.info(f\"Fixing LLM credential inputs on {len(broken_nodes)} nodes\")\n\n    user_id: str = \"\"\n    user_integrations = None\n    for node in broken_nodes:\n        if node[\"user_id\"] != user_id:\n            # Save queries by only fetching once per user\n            user_id = node[\"user_id\"]\n            user_integrations = await get_user_integrations(user_id)\n        elif not user_integrations:\n            raise RuntimeError(f\"Impossible state while processing node {node}\")\n\n        node_id: str = node[\"node_id\"]\n        node_preset_input: dict = json.loads(node[\"node_preset_input\"])\n        credentials_meta: dict = node_preset_input[\"credentials\"]\n\n        credentials = next(\n            (\n                c\n                for c in user_integrations.credentials\n                if c.id == credentials_meta[\"id\"]\n            ),\n            None,\n        )\n        if not credentials:\n            continue\n        if credentials.type != \"api_key\":\n            logger.warning(\n                f\"User {user_id} credentials {credentials.id} with provider 'llm' \"\n                f\"has invalid type '{credentials.type}'\"\n            )\n            continue\n\n        api_key = credentials.api_key.get_secret_value()\n        if api_key.startswith(\"sk-ant-api03-\"):\n            credentials.provider = credentials_meta[\"provider\"] = \"anthropic\"\n        elif api_key.startswith(\"sk-\"):\n            credentials.provider = credentials_meta[\"provider\"] = \"openai\"\n        elif api_key.startswith(\"gsk_\"):\n            credentials.provider = credentials_meta[\"provider\"] = \"groq\"\n        else:\n            logger.warning(\n                f\"Could not identify provider from key prefix {api_key[:13]}*****\"\n            )\n            continue\n\n        store.update_creds(user_id, credentials)\n        await AgentNode.prisma().update(\n            where={\"id\": node_id},\n            data={\"constantInput\": json.dumps(node_preset_input)},\n        )",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"Fix node credentials with provider `llm`\"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"Fix node credentials with provider `llm`\"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "Fix node credentials with provider `llm`",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "import_from_statement",
                            "label": "from backend.integrations.credentials_store import IntegrationCredentialsStore",
                            "children": [
                                {
                                    "type": "dotted_name",
                                    "label": "backend.integrations.credentials_store",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "backend",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "integrations",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "credentials_store",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "dotted_name",
                                    "label": "IntegrationCredentialsStore",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "IntegrationCredentialsStore",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "import_from_statement",
                            "label": "from .user import get_user_integrations",
                            "children": [
                                {
                                    "type": "relative_import",
                                    "label": ".user",
                                    "children": [
                                        {
                                            "type": "import_prefix",
                                            "label": ".",
                                            "children": []
                                        },
                                        {
                                            "type": "dotted_name",
                                            "label": "user",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "user",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "dotted_name",
                                    "label": "get_user_integrations",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "get_user_integrations",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "store = IntegrationCredentialsStore()",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "store = IntegrationCredentialsStore()",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "store",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "IntegrationCredentialsStore()",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "IntegrationCredentialsStore",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "()",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "broken_nodes = await prisma.get_client().query_raw(\n        \"\"\"\n        SELECT    graph.\"userId\"       user_id,\n                  node.id              node_id,\n                  node.\"constantInput\" node_preset_input\n        FROM      platform.\"AgentNode\"  node\n        LEFT JOIN platform.\"AgentGraph\" graph\n        ON        node.\"agentGraphId\" = graph.id\n        WHERE     node.\"constantInput\"::jsonb->'credentials'->>'provider' = 'llm'\n        ORDER BY  graph.\"userId\";\n        \"\"\"\n    )",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "broken_nodes = await prisma.get_client().query_raw(\n        \"\"\"\n        SELECT    graph.\"userId\"       user_id,\n                  node.id              node_id,\n                  node.\"constantInput\" node_preset_input\n        FROM      platform.\"AgentNode\"  node\n        LEFT JOIN platform.\"AgentGraph\" graph\n        ON        node.\"agentGraphId\" = graph.id\n        WHERE     node.\"constantInput\"::jsonb->'credentials'->>'provider' = 'llm'\n        ORDER BY  graph.\"userId\";\n        \"\"\"\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "broken_nodes",
                                            "children": []
                                        },
                                        {
                                            "type": "await",
                                            "label": "await prisma.get_client().query_raw(\n        \"\"\"\n        SELECT    graph.\"userId\"       user_id,\n                  node.id              node_id,\n                  node.\"constantInput\" node_preset_input\n        FROM      platform.\"AgentNode\"  node\n        LEFT JOIN platform.\"AgentGraph\" graph\n        ON        node.\"agentGraphId\" = graph.id\n        WHERE     node.\"constantInput\"::jsonb->'credentials'->>'provider' = 'llm'\n        ORDER BY  graph.\"userId\";\n        \"\"\"\n    )",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "prisma.get_client().query_raw(\n        \"\"\"\n        SELECT    graph.\"userId\"       user_id,\n                  node.id              node_id,\n                  node.\"constantInput\" node_preset_input\n        FROM      platform.\"AgentNode\"  node\n        LEFT JOIN platform.\"AgentGraph\" graph\n        ON        node.\"agentGraphId\" = graph.id\n        WHERE     node.\"constantInput\"::jsonb->'credentials'->>'provider' = 'llm'\n        ORDER BY  graph.\"userId\";\n        \"\"\"\n    )",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "prisma.get_client().query_raw",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "prisma.get_client()",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "prisma.get_client",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "prisma",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "get_client",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "query_raw",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n        \"\"\"\n        SELECT    graph.\"userId\"       user_id,\n                  node.id              node_id,\n                  node.\"constantInput\" node_preset_input\n        FROM      platform.\"AgentNode\"  node\n        LEFT JOIN platform.\"AgentGraph\" graph\n        ON        node.\"agentGraphId\" = graph.id\n        WHERE     node.\"constantInput\"::jsonb->'credentials'->>'provider' = 'llm'\n        ORDER BY  graph.\"userId\";\n        \"\"\"\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"\"\"\n        SELECT    graph.\"userId\"       user_id,\n                  node.id              node_id,\n                  node.\"constantInput\" node_preset_input\n        FROM      platform.\"AgentNode\"  node\n        LEFT JOIN platform.\"AgentGraph\" graph\n        ON        node.\"agentGraphId\" = graph.id\n        WHERE     node.\"constantInput\"::jsonb->'credentials'->>'provider' = 'llm'\n        ORDER BY  graph.\"userId\";\n        \"\"\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"\"\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "\n        SELECT    graph.\"userId\"       user_id,\n                  node.id              node_id,\n                  node.\"constantInput\" node_preset_input\n        FROM      platform.\"AgentNode\"  node\n        LEFT JOIN platform.\"AgentGraph\" graph\n        ON        node.\"agentGraphId\" = graph.id\n        WHERE     node.\"constantInput\"::jsonb->'credentials'->>'provider' = 'llm'\n        ORDER BY  graph.\"userId\";\n        ",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"\"\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "logger.info(f\"Fixing LLM credential inputs on {len(broken_nodes)} nodes\")",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "logger.info(f\"Fixing LLM credential inputs on {len(broken_nodes)} nodes\")",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "logger.info",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "logger",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "info",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(f\"Fixing LLM credential inputs on {len(broken_nodes)} nodes\")",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "f\"Fixing LLM credential inputs on {len(broken_nodes)} nodes\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "f\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Fixing LLM credential inputs on ",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "interpolation",
                                                            "label": "{len(broken_nodes)}",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "len(broken_nodes)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "len",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(broken_nodes)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "broken_nodes",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": " nodes",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "user_id: str = \"\"",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "user_id: str = \"\"",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "string",
                                            "label": "\"\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "user_integrations = None",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "user_integrations = None",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_integrations",
                                            "children": []
                                        },
                                        {
                                            "type": "none",
                                            "label": "None",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "for_statement",
                            "label": "for node in broken_nodes:\n        if node[\"user_id\"] != user_id:\n            # Save queries by only fetching once per user\n            user_id = node[\"user_id\"]\n            user_integrations = await get_user_integrations(user_id)\n        elif not user_integrations:\n            raise RuntimeError(f\"Impossible state while processing node {node}\")\n\n        node_id: str = node[\"node_id\"]\n        node_preset_input: dict = json.loads(node[\"node_preset_input\"])\n        credentials_meta: dict = node_preset_input[\"credentials\"]\n\n        credentials = next(\n            (\n                c\n                for c in user_integrations.credentials\n                if c.id == credentials_meta[\"id\"]\n            ),\n            None,\n        )\n        if not credentials:\n            continue\n        if credentials.type != \"api_key\":\n            logger.warning(\n                f\"User {user_id} credentials {credentials.id} with provider 'llm' \"\n                f\"has invalid type '{credentials.type}'\"\n            )\n            continue\n\n        api_key = credentials.api_key.get_secret_value()\n        if api_key.startswith(\"sk-ant-api03-\"):\n            credentials.provider = credentials_meta[\"provider\"] = \"anthropic\"\n        elif api_key.startswith(\"sk-\"):\n            credentials.provider = credentials_meta[\"provider\"] = \"openai\"\n        elif api_key.startswith(\"gsk_\"):\n            credentials.provider = credentials_meta[\"provider\"] = \"groq\"\n        else:\n            logger.warning(\n                f\"Could not identify provider from key prefix {api_key[:13]}*****\"\n            )\n            continue\n\n        store.update_creds(user_id, credentials)\n        await AgentNode.prisma().update(\n            where={\"id\": node_id},\n            data={\"constantInput\": json.dumps(node_preset_input)},\n        )",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "node",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "broken_nodes",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "label": "if node[\"user_id\"] != user_id:\n            # Save queries by only fetching once per user\n            user_id = node[\"user_id\"]\n            user_integrations = await get_user_integrations(user_id)\n        elif not user_integrations:\n            raise RuntimeError(f\"Impossible state while processing node {node}\")\n\n        node_id: str = node[\"node_id\"]\n        node_preset_input: dict = json.loads(node[\"node_preset_input\"])\n        credentials_meta: dict = node_preset_input[\"credentials\"]\n\n        credentials = next(\n            (\n                c\n                for c in user_integrations.credentials\n                if c.id == credentials_meta[\"id\"]\n            ),\n            None,\n        )\n        if not credentials:\n            continue\n        if credentials.type != \"api_key\":\n            logger.warning(\n                f\"User {user_id} credentials {credentials.id} with provider 'llm' \"\n                f\"has invalid type '{credentials.type}'\"\n            )\n            continue\n\n        api_key = credentials.api_key.get_secret_value()\n        if api_key.startswith(\"sk-ant-api03-\"):\n            credentials.provider = credentials_meta[\"provider\"] = \"anthropic\"\n        elif api_key.startswith(\"sk-\"):\n            credentials.provider = credentials_meta[\"provider\"] = \"openai\"\n        elif api_key.startswith(\"gsk_\"):\n            credentials.provider = credentials_meta[\"provider\"] = \"groq\"\n        else:\n            logger.warning(\n                f\"Could not identify provider from key prefix {api_key[:13]}*****\"\n            )\n            continue\n\n        store.update_creds(user_id, credentials)\n        await AgentNode.prisma().update(\n            where={\"id\": node_id},\n            data={\"constantInput\": json.dumps(node_preset_input)},\n        )",
                                    "children": [
                                        {
                                            "type": "if_statement",
                                            "label": "if node[\"user_id\"] != user_id:\n            # Save queries by only fetching once per user\n            user_id = node[\"user_id\"]\n            user_integrations = await get_user_integrations(user_id)\n        elif not user_integrations:\n            raise RuntimeError(f\"Impossible state while processing node {node}\")",
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "label": "node[\"user_id\"] != user_id",
                                                    "children": [
                                                        {
                                                            "type": "subscript",
                                                            "label": "node[\"user_id\"]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "node",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"user_id\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "user_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "user_id",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "comment",
                                                    "label": "# Save queries by only fetching once per user",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "user_id = node[\"user_id\"]\n            user_integrations = await get_user_integrations(user_id)",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "user_id = node[\"user_id\"]",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "user_id = node[\"user_id\"]",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "user_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "subscript",
                                                                            "label": "node[\"user_id\"]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "node",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"user_id\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "user_id",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "user_integrations = await get_user_integrations(user_id)",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "user_integrations = await get_user_integrations(user_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "user_integrations",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "await",
                                                                            "label": "await get_user_integrations(user_id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "get_user_integrations(user_id)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "get_user_integrations",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(user_id)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "user_id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "elif_clause",
                                                    "label": "elif not user_integrations:\n            raise RuntimeError(f\"Impossible state while processing node {node}\")",
                                                    "children": [
                                                        {
                                                            "type": "not_operator",
                                                            "label": "not user_integrations",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "user_integrations",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "raise RuntimeError(f\"Impossible state while processing node {node}\")",
                                                            "children": [
                                                                {
                                                                    "type": "raise_statement",
                                                                    "label": "raise RuntimeError(f\"Impossible state while processing node {node}\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "RuntimeError(f\"Impossible state while processing node {node}\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "RuntimeError",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(f\"Impossible state while processing node {node}\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "f\"Impossible state while processing node {node}\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "f\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "Impossible state while processing node ",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{node}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "node",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "node_id: str = node[\"node_id\"]",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "node_id: str = node[\"node_id\"]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "node_id",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "subscript",
                                                            "label": "node[\"node_id\"]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "node",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"node_id\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "node_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "node_preset_input: dict = json.loads(node[\"node_preset_input\"])",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "node_preset_input: dict = json.loads(node[\"node_preset_input\"])",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "node_preset_input",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "dict",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "dict",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "json.loads(node[\"node_preset_input\"])",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "json.loads",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "json",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "loads",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(node[\"node_preset_input\"])",
                                                                    "children": [
                                                                        {
                                                                            "type": "subscript",
                                                                            "label": "node[\"node_preset_input\"]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "node",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"node_preset_input\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "node_preset_input",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "credentials_meta: dict = node_preset_input[\"credentials\"]",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "credentials_meta: dict = node_preset_input[\"credentials\"]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "credentials_meta",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "dict",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "dict",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "subscript",
                                                            "label": "node_preset_input[\"credentials\"]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "node_preset_input",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"credentials\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "credentials",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "credentials = next(\n            (\n                c\n                for c in user_integrations.credentials\n                if c.id == credentials_meta[\"id\"]\n            ),\n            None,\n        )",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "credentials = next(\n            (\n                c\n                for c in user_integrations.credentials\n                if c.id == credentials_meta[\"id\"]\n            ),\n            None,\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "credentials",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "next(\n            (\n                c\n                for c in user_integrations.credentials\n                if c.id == credentials_meta[\"id\"]\n            ),\n            None,\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "next",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n            (\n                c\n                for c in user_integrations.credentials\n                if c.id == credentials_meta[\"id\"]\n            ),\n            None,\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "generator_expression",
                                                                            "label": "(\n                c\n                for c in user_integrations.credentials\n                if c.id == credentials_meta[\"id\"]\n            )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "c",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "for_in_clause",
                                                                                    "label": "for c in user_integrations.credentials",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "c",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "user_integrations.credentials",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "user_integrations",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "credentials",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "if_clause",
                                                                                    "label": "if c.id == credentials_meta[\"id\"]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "comparison_operator",
                                                                                            "label": "c.id == credentials_meta[\"id\"]",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "c.id",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "c",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "id",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "subscript",
                                                                                                    "label": "credentials_meta[\"id\"]",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "credentials_meta",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"id\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "id",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "none",
                                                                            "label": "None",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if not credentials:\n            continue",
                                            "children": [
                                                {
                                                    "type": "not_operator",
                                                    "label": "not credentials",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "credentials",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "continue",
                                                    "children": [
                                                        {
                                                            "type": "continue_statement",
                                                            "label": "continue",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if credentials.type != \"api_key\":\n            logger.warning(\n                f\"User {user_id} credentials {credentials.id} with provider 'llm' \"\n                f\"has invalid type '{credentials.type}'\"\n            )\n            continue",
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "label": "credentials.type != \"api_key\"",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "credentials.type",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "credentials",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "type",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "label": "\"api_key\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "api_key",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "logger.warning(\n                f\"User {user_id} credentials {credentials.id} with provider 'llm' \"\n                f\"has invalid type '{credentials.type}'\"\n            )\n            continue",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "logger.warning(\n                f\"User {user_id} credentials {credentials.id} with provider 'llm' \"\n                f\"has invalid type '{credentials.type}'\"\n            )",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "logger.warning(\n                f\"User {user_id} credentials {credentials.id} with provider 'llm' \"\n                f\"has invalid type '{credentials.type}'\"\n            )",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "logger.warning",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "logger",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "warning",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(\n                f\"User {user_id} credentials {credentials.id} with provider 'llm' \"\n                f\"has invalid type '{credentials.type}'\"\n            )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "concatenated_string",
                                                                                    "label": "f\"User {user_id} credentials {credentials.id} with provider 'llm' \"\n                f\"has invalid type '{credentials.type}'\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "f\"User {user_id} credentials {credentials.id} with provider 'llm' \"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "f\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "User ",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{user_id}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "user_id",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": " credentials ",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{credentials.id}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "credentials.id",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "credentials",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "id",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": " with provider 'llm' ",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "f\"has invalid type '{credentials.type}'\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "f\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "has invalid type '",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{credentials.type}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "credentials.type",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "credentials",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "type",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "'",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "continue_statement",
                                                            "label": "continue",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "api_key = credentials.api_key.get_secret_value()",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "api_key = credentials.api_key.get_secret_value()",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "api_key",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "credentials.api_key.get_secret_value()",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "credentials.api_key.get_secret_value",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "credentials.api_key",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "credentials",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "api_key",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "get_secret_value",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if api_key.startswith(\"sk-ant-api03-\"):\n            credentials.provider = credentials_meta[\"provider\"] = \"anthropic\"\n        elif api_key.startswith(\"sk-\"):\n            credentials.provider = credentials_meta[\"provider\"] = \"openai\"\n        elif api_key.startswith(\"gsk_\"):\n            credentials.provider = credentials_meta[\"provider\"] = \"groq\"\n        else:\n            logger.warning(\n                f\"Could not identify provider from key prefix {api_key[:13]}*****\"\n            )\n            continue",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "api_key.startswith(\"sk-ant-api03-\")",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "api_key.startswith",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "api_key",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "startswith",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\"sk-ant-api03-\")",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"sk-ant-api03-\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "sk-ant-api03-",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "credentials.provider = credentials_meta[\"provider\"] = \"anthropic\"",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "credentials.provider = credentials_meta[\"provider\"] = \"anthropic\"",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "credentials.provider = credentials_meta[\"provider\"] = \"anthropic\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "credentials.provider",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "credentials",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "provider",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "assignment",
                                                                            "label": "credentials_meta[\"provider\"] = \"anthropic\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "subscript",
                                                                                    "label": "credentials_meta[\"provider\"]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "credentials_meta",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"provider\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "provider",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"anthropic\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "anthropic",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "elif_clause",
                                                    "label": "elif api_key.startswith(\"sk-\"):\n            credentials.provider = credentials_meta[\"provider\"] = \"openai\"",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "api_key.startswith(\"sk-\")",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "api_key.startswith",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "api_key",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "startswith",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\"sk-\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"sk-\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "sk-",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "credentials.provider = credentials_meta[\"provider\"] = \"openai\"",
                                                            "children": [
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "credentials.provider = credentials_meta[\"provider\"] = \"openai\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "assignment",
                                                                            "label": "credentials.provider = credentials_meta[\"provider\"] = \"openai\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "credentials.provider",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "credentials",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "provider",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "assignment",
                                                                                    "label": "credentials_meta[\"provider\"] = \"openai\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "subscript",
                                                                                            "label": "credentials_meta[\"provider\"]",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "credentials_meta",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"provider\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "provider",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"openai\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "openai",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "elif_clause",
                                                    "label": "elif api_key.startswith(\"gsk_\"):\n            credentials.provider = credentials_meta[\"provider\"] = \"groq\"",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "api_key.startswith(\"gsk_\")",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "api_key.startswith",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "api_key",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "startswith",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\"gsk_\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"gsk_\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "gsk_",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "credentials.provider = credentials_meta[\"provider\"] = \"groq\"",
                                                            "children": [
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "credentials.provider = credentials_meta[\"provider\"] = \"groq\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "assignment",
                                                                            "label": "credentials.provider = credentials_meta[\"provider\"] = \"groq\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "credentials.provider",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "credentials",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "provider",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "assignment",
                                                                                    "label": "credentials_meta[\"provider\"] = \"groq\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "subscript",
                                                                                            "label": "credentials_meta[\"provider\"]",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "credentials_meta",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"provider\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "provider",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"groq\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "groq",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "else_clause",
                                                    "label": "else:\n            logger.warning(\n                f\"Could not identify provider from key prefix {api_key[:13]}*****\"\n            )\n            continue",
                                                    "children": [
                                                        {
                                                            "type": "block",
                                                            "label": "logger.warning(\n                f\"Could not identify provider from key prefix {api_key[:13]}*****\"\n            )\n            continue",
                                                            "children": [
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "logger.warning(\n                f\"Could not identify provider from key prefix {api_key[:13]}*****\"\n            )",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "logger.warning(\n                f\"Could not identify provider from key prefix {api_key[:13]}*****\"\n            )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "logger.warning",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "logger",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "warning",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(\n                f\"Could not identify provider from key prefix {api_key[:13]}*****\"\n            )",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "f\"Could not identify provider from key prefix {api_key[:13]}*****\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "f\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "Could not identify provider from key prefix ",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{api_key[:13]}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "subscript",
                                                                                                            "label": "api_key[:13]",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "api_key",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "slice",
                                                                                                                    "label": ":13",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "integer",
                                                                                                                            "label": "13",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "*****",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "continue_statement",
                                                                    "label": "continue",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "store.update_creds(user_id, credentials)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "store.update_creds(user_id, credentials)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "store.update_creds",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "store",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "update_creds",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(user_id, credentials)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "user_id",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "credentials",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "await AgentNode.prisma().update(\n            where={\"id\": node_id},\n            data={\"constantInput\": json.dumps(node_preset_input)},\n        )",
                                            "children": [
                                                {
                                                    "type": "await",
                                                    "label": "await AgentNode.prisma().update(\n            where={\"id\": node_id},\n            data={\"constantInput\": json.dumps(node_preset_input)},\n        )",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "AgentNode.prisma().update(\n            where={\"id\": node_id},\n            data={\"constantInput\": json.dumps(node_preset_input)},\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "AgentNode.prisma().update",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "AgentNode.prisma()",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "AgentNode.prisma",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "AgentNode",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "prisma",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "()",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "update",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n            where={\"id\": node_id},\n            data={\"constantInput\": json.dumps(node_preset_input)},\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "where={\"id\": node_id}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "where",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "dictionary",
                                                                                    "label": "{\"id\": node_id}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "pair",
                                                                                            "label": "\"id\": node_id",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"id\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "id",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "node_id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "data={\"constantInput\": json.dumps(node_preset_input)}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "data",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "dictionary",
                                                                                    "label": "{\"constantInput\": json.dumps(node_preset_input)}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "pair",
                                                                                            "label": "\"constantInput\": json.dumps(node_preset_input)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"constantInput\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "constantInput",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "json.dumps(node_preset_input)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "json.dumps",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "json",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "dumps",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(node_preset_input)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "node_preset_input",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}